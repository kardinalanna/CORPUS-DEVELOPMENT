<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpaceClaim.Api.V23</name>
    </assembly>
    <members>
        <member name="T:SpaceClaim.Api.V23.Extensibility.AddIn">
            <summary>
            Defines the base class for add-ins.
            </summary>
            <remarks>
            All add-ins must derive from this base class.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.AddIn.OnSetDefaultTool">
            <summary>
            Called when the active tool is being set to the default tool (eg: when Escape key is pressed)
            </summary>
            <returns><b>true</b> if the default behavior was overridden by this method; otherwise <b>false.</b></returns>
            <example>
            The following code will set the CustomTool as the default tool if the SampleAddIn's ribbon tab is active. 
            <code>
            protected override bool OnSetDefaultTool() {
            	if (Command.GetCommand("SampleAddIn.C#.V23.RibbonTab").TabIsActive) {
            		Window.ActiveWindow.SetTool(new CustomTool());
            			return true;
            	}
            	return false;
            }
            
            </code>
            </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.AddIn.ExecuteWindowsFormsCode(System.Threading.ThreadStart)">
            <summary>
            Executes code that uses Windows Forms, so that it runs in a single-threaded apartment.
            </summary>
            <param name="task">The code to execute.</param>
            
            
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.AddIn.GetInstance``1">
            <summary>
            Gets the instance of a specific add-in.
            </summary>
            <typeparam name="T">Type of add-in.</typeparam>
            <returns>Add-in instance.</returns>
            <remarks>
            This method allows an add-in to extend the SpaceClaim API.
            <para/>
            For example, the add-in might provide a <c>CreateBlock</c> method.
            Let's imagine that this creates a block by extruding a profile
            defined by 4 trimmed curves, and then creates a <see cref="T:SpaceClaim.Api.V23.DesignBody"/> for this <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> and
            sets its name and color.
            Other add-ins or standalone clients can call the <c>CreateBlock</c> method.
            For a client in another process, this can reduce the cost of IPC calls,
            since the add-in providing the <c>CreateBlock</c> method lives in the SpaceClaim process.
            <para/>
            This method returns the add-in object, which is currently being used by SpaceClaim.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.CustomHelper">
            <exclude/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.LightweightCustomHelper">
            <exclude/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.CommandCapsule">
            <summary>
            A base class for command implementations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.#ctor(System.String)">
            <summary>
            Creates a command capsule.
            </summary>
            <param name="name">The name of the command.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.#ctor(System.String,System.String)">
            <summary>
            Creates a command capsule.
            </summary>
            <param name="name">The name of the command.</param>
            <param name="text">The text to be displayed for the command.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.#ctor(System.String,System.String,System.Drawing.Image,System.String)">
            <summary>
            Creates a command capsule.
            </summary>
            <param name="name">The name of the command.</param>
            <param name="text">The text to be displayed for the command.</param>
            <param name="image">The image to be displayed for the command.</param>
            <param name="hint">The tooltip text for the command.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.CommandCapsule.Command">
            <summary>
            Gets the command.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.Initialize">
            <summary>
            Initializes the command capsule.
            </summary>
            <remarks>
            This method creates the command and sets it properties and event handlers.
            <para/>
            To perform further initialization, the <see cref="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.OnInitialize(SpaceClaim.Api.V23.Command)"/> method can be overridden.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.OnInitialize(SpaceClaim.Api.V23.Command)">
            <summary>
            Called after the command has been created.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.OnUpdate(SpaceClaim.Api.V23.Command)">
            <summary>
            Called when the command is updating.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.OnExecute(SpaceClaim.Api.V23.Command,SpaceClaim.Api.V23.ExecutionContext,System.Drawing.Rectangle)">
            <summary>
            Called when the command is executing.
            </summary>
            <param name="command">The command.</param>
            <param name="context">The context in which execution is taking place.</param>
            <param name="buttonRect">The button rectangle.</param>
            <remarks>
            The <paramref name="buttonRect"/> is empty (<see cref="P:System.Drawing.Rectangle.IsEmpty"/> is <b>true</b>) if the command
            was not executed by pressing a button.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.IVersionedScriptExtensibility">
            <summary>
            This interface defines which namespaces/assemblies that are automatically imported into the SpaceClaim scripting environment.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.IScriptExtensibility">
            <summary>
            This interface defines which namespaces/assemblies that are automatically imported into the SpaceClaim scripting environment.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.IScriptExtensibility.AddinScriptNamespace">
            <summary>
            Gets the Python alias used when importing the CommandNamespace.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.IScriptExtensibility.CommandNamespace">
            <summary>
            Gets the namespace to automatically import into the SpaceClaim scripting environment.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.IScriptExtensibility.CommandAssemblies">
            <summary>
            Gets the collection of assemblies to reference from the scripting environment.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.IScriptedCommand">
            <summary>
            This interface should be implemented by CommandCapsules to enable script record
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.IScriptedCommand.CommandStarted(SpaceClaim.Api.V23.Unsupported.IScriptEnvironment)">
            <summary>
            Called before the command executes.  Important to record and store any selections the
            command may delete.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.IScriptedCommand.CommandComplete(SpaceClaim.Api.V23.Unsupported.IScriptEnvironment)">
            <summary>
            Called when command finished, return script to record.
            </summary>
            <param name="environment"></param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.IScriptedCommand.FeatureTrackImage">
            <summary>
            Get the image to use in feature tracking.  Return null for the default image.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Extensibility.IScriptedCommand.FeatureTrackText">
            <summary>
            Get the image to use in feature tracking.  Return null to use command name.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.UndoActionCapsule.GetRedoAction">
            <summary>
            Gets an action that will reverse the affect of this action.
            If this action represents an undo action, then the action returned is a redo action.
            If this action represents a redo action, then the action returned is an undo action.
            </summary>
            <returns></returns>
            <remarks>
            This method is likely to use the current state of the session to record information required for
            the redo action. Therefore it must be called before the <see cref="M:SpaceClaim.Api.V23.Extensibility.UndoActionCapsule.Apply"/> method is called.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.UndoActionCapsule.Apply">
            <summary>
            Applies the action, performing the undo.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.UndoActionCapsule.Initialize">
            <summary>
            Initializes the undo action and logs in the current undo step.  This method can only be called from within a command
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.IExtensibility">
            <summary>
            This interface is required for all add-ins.
            </summary>
            <remarks>
            A SpaceClaim add-in must implement at a minimum the IExtensibility interface.
            This interface provides the entry point for the add-in and allows the add-in 
            to perform any initialization.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.IExtensibility.Connect">
            <summary>
            This method is called by SpaceClaim to allow the add-in to perform any initialization.  
            </summary>
            <returns>
            Return true if the intialization is successful; otherwise false to cancel loading of the add-in.
            </returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.IExtensibility.Disconnect">
            <summary>
            When SpaceClaim is shut down this method is called to allow the add-in to
            perform any internal cleanup.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility">
             <summary>
             Allows commands to be created or modified when an add-in starts up.
             </summary>	
             <remarks>	
             During startup SpaceClaim calls the <see cref="M:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility.Initialize"/> method 
             and the add-in then adds or modifies commands using methods on the Command class.
             <para/>
             Each UI object in SpaceClaim must be associated with a <see cref="T:SpaceClaim.Api.V23.Command"/>.
             The connection between UI objects and commands is described in the ribbon XML
             returned from <see cref="M:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility.GetCustomUI"/>.
             </remarks>
             <example>
             <code>
             <![CDATA[
             using SpaceClaim.Api.V23;
            	using SpaceClaim.Api.V23.Extensibility;
             
            	namespace YourCompany {
            		public class YourAddIn : AddIn, IExtensibility, ICommandExtensibility  {
            
            			#region ICommandExtensibility Members
            
            			public void Initialize() {
            				Command command = Command.Create("YourAddIn.YourCommand");
            				command.Text = Properties.Resources.YourCommandCommandText;
            				command.Hint = Properties.Resources.YourCommandCommandHint;
            				command.Image = Resources..YourCommandImage;
            				command.Updating += CreateGear_Updating;
            				command.Executing += CreateGear_Executing;
            			}
            
            			#endregion
            		}
            	}
             ]]>
             </code>
             </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility.Initialize">
            <summary>
            Called during startup to allow the add-in to create or modify Commands. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility">
             <summary>
             Allows the Ribbon bar to be customized when an add-in starts up.
             </summary>
             <remarks>	
             When SpaceClaim is started it calls the add-in’s <see cref="M:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility.GetCustomUI"/> method, 
             and the add-in returns a string that contains an XML description of the changes to be made to the Ribbon.
             The add-in can add new UI objects to the Ribbon or change existing ones.
             <para/>
             The add-in must also implement the <see cref="T:SpaceClaim.Api.V23.Extensibility.IExtensibility"/> and <see cref="T:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility"/>
             interfaces in addition to <see cref="T:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility"/>.
             In the <see cref="M:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility.Initialize"/> method the add-in will create the commands that 
             will be associated with the UI components in the Ribbon.
             <para/>
             The Ribbon XML schema file "SpaceClaimCustomUI.xsd" can be found in the SpaceClaim installation folder.
             </remarks>
             <example>
             <code>
             <![CDATA[
             using SpaceClaim.Api.V23;
            	using SpaceClaim.Api.V23.Extensibility;
             
            	namespace YourCompany {
            		public class YourAddIn : AddIn, IExtensibility, ICommandExtensibility, IRibbonExtensibility  {
            
            			#region IRibbonExtensibility Members
            
            			public string GetCustomUI() {
            				return Properties.Resources.RibbonXml;
            			}
            
            			#endregion
            		}
            }
             ]]>
             </code>
             </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility.GetCustomUI">
            <summary>
            The add-in returns a string that contains an XML description of the changes to be made to the Ribbon.
            </summary>
            <returns>The XML string for the add-in's Ribbon customization.</returns>
            <example>
            <para>
            Example Ribbon XML:
            </para>
            <code>
            <![CDATA[
            <?xml version="1.0" encoding="utf-8" ?> 
            <customUI xmlns="http://schemas.spaceclaim.com/customui">
                <ribbon>
                    <tabs>
                        <tab id="MyAddIn.MyAddinRibbonTab" label=”My Add-In”>
                            <group id="MyAddIn.MyAddInRibbonGroup" label=”My Add-In Group” layoutOrientation="horizontal">
                                <button id="MyAddIn.MyAddInButton" command="MyAddIn.YourCommand"/>
                            </group>
                        </tab>
                    </tabs>
                </ribbon>
            </customUI>
            ]]>
            </code>
            </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.ApplyLoop.Complete">
            <summary>
            Completes an apply loop.
            </summary>
            <returns><b>true</b> if the apply loop created an undo step; otherwise <b>false</b>.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.NativeCommand">
            <summary>
            A native (built-in) command.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.NativeCommand.Delete">
            <summary>
            The Delete command.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.NativeCommand.ShowAll">
            <summary>
            The Show All command.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CommandFilter">
            <summary>
            A command filter.
            </summary>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.Application.AddCommandFilter(SpaceClaim.Api.V23.NativeCommand,SpaceClaim.Api.V23.CommandFilter)"/> for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Application.AddCommandFilter(SpaceClaim.Api.V23.NativeCommand,SpaceClaim.Api.V23.CommandFilter)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CommandFilter.Apply(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Applies the command filter.
            </summary>
            <param name="objects">Objects to which the command is being applied.</param>
            <returns>Remaining or additional objects to be processed by the native command.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.ComboBoxState">
            <summary>
            Describes the state of a combo box control.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ComboBoxState.CreateEditable(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Creates data for an editable combo box.
            </summary>
            <param name="items">Items to show in the drop list.</param>
            <param name="text">Text to show in the edit field.</param>
            <returns>A combo box state.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.ComboBoxState.CreateFixed(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Creates data for a fixed combo box.
            </summary>
            <param name="items">Items to show in the drop list.</param>
            <param name="selectedIndex">Index of the selected item in the list, or -1 if no item is to be selected.</param>
            <returns>A combo box state.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.ComboBoxState.IsEditable">
            <summary>
            Gets whether the combo box has an edit field.
            </summary>
            <remarks>
            If the combo box has an edit field (<see cref="P:SpaceClaim.Api.V23.ComboBoxState.IsEditable"/> is <b>true</b>),
            the user can enter values other than those listed as its <see cref="P:SpaceClaim.Api.V23.ComboBoxState.Items"/>.
            If the value entered matches an item in the list, the <see cref="P:SpaceClaim.Api.V23.ComboBoxState.SelectedIndex"/> gives the index of that item,
            otherwise the index is returned as -1.
            The match is case sensitive.
            <para/>
            If the combo box is fixed (<see cref="P:SpaceClaim.Api.V23.ComboBoxState.IsEditable"/> is <b>false</b>),
            only values in the list of <see cref="P:SpaceClaim.Api.V23.ComboBoxState.Items"/> can be chosen, and <see cref="P:SpaceClaim.Api.V23.ComboBoxState.SelectedIndex"/> gives the index of the current value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ComboBoxState.Items">
            <summary>
            Gets the list of items in the drop-down list.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ComboBoxState.Text">
            <summary>
            Gets the text currently shown.
            </summary>
            <remarks>
            If the combo box is editable, the text in the edit field is returned.
            Otherwise the text of the selected item is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ComboBoxState.SelectedIndex">
            <summary>
            Get the index of the selected item.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.ComboBoxState.IsEditable"/>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CommandData`1">
            <summary>
            A base class for storing command data as an XML string.
            </summary>
            <typeparam name="T">The type of the derived class.</typeparam>
        </member>
        <member name="M:SpaceClaim.Api.V23.CommandData`1.ToString">
            <summary>
            Converts the public properties of the class into an XML string.
            </summary>
            <returns>An XML string.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.CommandData`1.FromString(System.String)">
            <summary>
            Converts an XML string into an object of type <typeparamref name="T"/>.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.ControlState">
            <summary>
            Describes the state of a UI control.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.GalleryState">
            <summary>
            Describes the state of a gallery control
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.GalleryState.Create(System.Collections.Generic.IEnumerable{SpaceClaim.Api.V23.Command})">
            <summary>
            Creates data for a gallery.
            </summary>
            <param name="commands">Commands in the gallery, to be displayed as buttons</param>
            <returns>A gallery state.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.GalleryState.Commands">
            <summary>
            Gets the list of commands in the gallery.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SliderState">
            <summary>
            Describes the state of a slider control.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SliderState.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates data for a slider.
            </summary>
            <param name="value">The current value</param>
            <param name="minValue">The minimum value</param>
            <param name="maxValue">The maximum value</param>
            <param name="stepSize">The step size.</param>
            <returns>A spin box state.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SliderState.Create(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates data for a slider.
            </summary>
            <param name="value">The current value</param>
            <param name="minValue">The minimum value</param>
            <param name="maxValue">The maximum value</param>
            <returns>A spin box state.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.SliderState.Value">
            <summary>
            Gets the current value
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SliderState.MinimumValue">
            <summary>
            Gets the minimum value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SliderState.MaximumValue">
            <summary>
            Gets the maximum value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SliderState.StepSize">
            <summary>
            Gets the step size.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SpinBoxState">
            <summary>
            Describes the state of a spin box control.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SpinBoxState.Create(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Creates data for a spin box.
            </summary>
            <param name="value">The current value</param>
            <param name="minValue">The minimum value</param>
            <param name="maxValue">The maximum value</param>
            <param name="stepSize">The step size.</param>
            <param name="decimalPlaces">The number of decimal places to display.</param>
            <returns>A spin box state.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SpinBoxState.Create(System.Double,System.Double,System.Double)">
            <summary>
            Creates data for a spin box.
            </summary>
            <param name="value">The current value</param>
            <param name="minValue">The minimum value</param>
            <param name="maxValue">The maximum value</param>
            <returns>A spin box state.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpinBoxState.Value">
            <summary>
            Gets the current value
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpinBoxState.MinimumValue">
            <summary>
            Gets the minimum value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpinBoxState.MaximumValue">
            <summary>
            Gets the maximum value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpinBoxState.StepSize">
            <summary>
            Gets the step size.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpinBoxState.DecimalPlaces">
            <summary>
            Gets the number of decimal places.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ValueChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value of the changed property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ValueChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value of the changed property.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WriteBlockOptions">
            <exclude/>
        </member>
        <member name="T:SpaceClaim.Api.V23.WriteBlock">
            <summary>
            Provides methods for executing code within a write block.
            </summary>
            <remarks>
            Code executed within a write block is allowed to make changes to documents.
            Any changes made within the write block are presented to the user as an undo step.
            If no changes are made, this is harmless, and no undo step is created.
            <para/>
            Code executed inside the <see cref="E:SpaceClaim.Api.V23.Command.Executing"/> event handler of a <see cref="T:SpaceClaim.Api.V23.Command"/>
            (or the <see cref="M:SpaceClaim.Api.V23.Extensibility.CommandCapsule.OnExecute(SpaceClaim.Api.V23.Command,SpaceClaim.Api.V23.ExecutionContext,System.Drawing.Rectangle)"/> method of a <see cref="T:SpaceClaim.Api.V23.Extensibility.CommandCapsule"/>)
            is automatically executed inside a write block, unless <see cref="P:SpaceClaim.Api.V23.Command.IsWriteBlock"/> is set to <b>false</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.WriteBlock.IsAvailable">
            <summary>
            Determines whether SpaceClaim is currently executing an interactive process such as dragging.
            </summary>
            <remarks>
            Entering a WriteBlock to change the data model while SpaceClaim is performing an interaction
            like dragging, will cause that interaction to terminate. By checking the <b>IsAvailable</b> property,
            an add-in can prevent that from happening.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.WriteBlock.ExecuteTask(System.String,SpaceClaim.Api.V23.Task)">
            <summary>
            Executes code within a write block.
            </summary>
            <param name="text">The text to appear in the undo drop list.</param>
            <param name="task">The code to execute.</param>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.WriteBlock"/>
            <p/>
            The entire operation will be rolled back if a <see cref="T:SpaceClaim.Api.V23.CommandException"/> is thrown, or if interrupted by the user. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.WriteBlock.AppendTask(SpaceClaim.Api.V23.Task)">
            <summary>
            Executes code within a write block, but appends to the last undo step.
            </summary>
            <param name="task">The code to execute.</param>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.WriteBlock"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.WriteBlock.IsActive">
            <summary>
            Gets whether the calling code is currently inside a write block.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WriteBlock.IsInterrupted">
            <summary>
            Gets whether the current operation has been interrupted.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnalysisAspect">
            <summary>
            The analysis aspect of a part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisAspect.SharedFaceGroups">
            <summary>
            Gets groups of shared faces.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisAspect.SharedEdgeGroups">
            <summary>
            Gets groups of shared edges.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisAspect.SharedEdgeBeamGroups">
            <summary>
            Gets shared information related to edges and beams.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisAspect.BeamVertexConnections">
            <summary>
            Gets shared information related to beam vertices.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.AnalysisAspect.IsBafflePair(SpaceClaim.Api.V23.IDesignBody,SpaceClaim.Api.V23.IDesignBody,System.Double)">
            <summary>
            Gets whether bodies form a baffle system.
            </summary>
            <param name="desBodyA">The first body.</param>
            <param name="desBodyB">The second body.</param>
            <param name="tolerance">The tolerance value.</param>
            <remarks>
            The tolerance is in meters.
            <para/>
            Only baffle systems with solid-surface connections are recognized. 
            </remarks>
            <returns><b>true</b> if the bodies form a baffle system; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.AnalysisAspect.GetBafflesAndExternalShells(System.Collections.Generic.IList{SpaceClaim.Api.V23.IDesignBody},System.Collections.Generic.IList{SpaceClaim.Api.V23.IDesignBody},System.Double,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.IDesignBody,System.Collections.Generic.IList{SpaceClaim.Api.V23.IDesignBody}}@,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.IDesignBody,System.Collections.Generic.IList{SpaceClaim.Api.V23.IDesignBody}}@)">
            <summary>
            Returns baffle systems and external shells.
            </summary>
            <param name="solidBodies">Solid bodies in the part.</param>
            <param name="surfaceBodies">surface bodies in the part.</param>
            <param name="tolerance">The tolerance value.</param>
            <param name="solidBodyToBaffles"></param>
            <param name="solidBodyToExternalShells"></param>
            <remarks>
            The tolerance is in meters.
            <para/>
            Baffle systems and external shells with solid-surface connections are recognized. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.AnalysisAspect.IsInternalBafflePair(SpaceClaim.Api.V23.IDesignBody,SpaceClaim.Api.V23.IDesignBody,System.Double)">
            <summary>
            Gets whether bodies form a internal baffle system.
            </summary>
            <param name="desBodyA">The first body.</param>
            <param name="desBodyB">The second body.</param>
            <param name="tolerance">The tolerance value.</param>
            <remarks>
            The tolerance is in meters.
            <para/>
            Only baffle systems with solid-surface connections are recognized. 
            </remarks>
            <returns><b>true</b> if the bodies form a internal baffle system; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.EdgeSizeControl.SpaceClaim#Api#V23#Analysis#IEdgeSizeControl#Edges">
            <inheritdoc cref="P:SpaceClaim.Api.V23.Analysis.IEdgeSizeControl.Edges"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.IEdgeSizeControl.Parent">
            <summary>
            Gets the parent part. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.IFaceSizeControl.Parent">
            <summary>
            Gets the parent part. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Analysis.HexaBlocking.ProcessCommand(System.String)">
            <summary>
            Execute given Hexa command string 
            if failed the command will return false;
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Analysis.HexaBlocking.ProcessCommand(System.String,System.String@)">
            <summary>
            Execute given Hexa command string and return error message if failed
            if failed the command will return false;
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.SuperNodeCount">
            <summary>
             Gets the number of super nodes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.SuperEdgeCount">
            <summary>
             Gets the number of super edges.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.SuperFaceCount">
            <summary>
             Gets the number of super faces.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.CornerNodeCount">
            <summary>
             Gets the number of corner nodes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.ElementCount">
            <summary>
             Gets the number of elements.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.MappedBlockCount">
            <summary>
             Gets the number of mapped blocks.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.SweptBlockCount">
            <summary>
             Gets the number of swept blocks.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.FreeBlockCount">
            <summary>
             Gets the number of swept blocks.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.HexaBlocking.MinElementQuality">
            <summary>
             Gets the minimum element quality.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Analysis.MeshBodySettings.Create(SpaceClaim.Api.V23.DesignBody)">
            <summary>
            Creates Mesh Settings Object on a given body
            </summary>
            <returns>The newly created Mesh Settings object</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Analysis.MeshBodySettings.Create(SpaceClaim.Api.V23.IDesignBody)">
            <summary>
            Creates Mesh Settings Object on a given body
            </summary>
            <returns>The newly created Mesh Settings object</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.IRegionMeshInfo">
            <exclude />
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.IRegionMeshInfo`1">
            <exclude />
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.RegionMeshInfoBase`1">
            <exclude />
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.BodyMesh">
            <summary>
            A body mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.NodeCount">
            <summary>
             Gets the node count.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.ElementCount">
            <summary>
             Gets the element count.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.Nodes">
            <summary>
             Gets the nodes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.VolumeElements">
            <summary>
            Gets volume elements.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.FaceElements">
            <summary>
             Gets face elements.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.BodyMesh.EdgeElements">
            <summary>
            Gets edge elements.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.FaceElement">
            <summary>
            A face mesh element.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.FaceElement.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.FaceElement.Type">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.EdgeElement">
            <summary>
            An edge mesh element.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.EdgeElement.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.EdgeElement.Type">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.MeshNode">
            <summary>
            A mesh node.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.MeshNode.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.MeshNode.Point">
            <summary>
            Gets the location.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.PartMesh">
            <summary>
            A part mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.PartMesh.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.PartMesh.NodeCount">
            <summary>
            Gets the total number of nodes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.PartMesh.ElementCount">
            <summary>
            Gets the total number of elements.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.PartMesh.BodyMeshes">
            <summary>
             Gets the body meshes. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Analysis.MeshMethodsStatic.InitializeDelayedLoadedMeshing">
            <summary>
            Initializes meshing for the current document in the event that delay loading is enabled.  This in any wrapper method that
            executes a meshing command.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.AssemblyMesh">
            <summary>
            An assembly mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.AssemblyMesh.NodeCount">
            <summary>
            Gets the total number of nodes. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.AssemblyMesh.ElementCount">
            <summary>
            Gets the total number of elements. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.AssemblyMesh.PartMeshes">
            <summary>
            Gets the part meshes. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Analysis.VolumeElement">
            <summary>
            A volume mesh element
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.VolumeElement.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Analysis.VolumeElement.Type">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.Master">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.AnnotationPlane">
            <summary>
            Gets the plane in which annotation lies.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.Notes">
            <summary>
            Gets the notes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.Barcodes">
            <summary>
            Gets the barcodes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.Tables">
            <summary>
            Gets the tables.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.DatumFeatureSymbols">
            <summary>
            Gets the datum feature symbols.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParent.SymbolInserts">
            <summary>
            Gets the symbol inserts.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParentMaster.Notes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParentMaster.DatumFeatureSymbols">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAnnotationParentMaster.SymbolInserts">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnnotationSpace">
            <summary>
            The annotation space of an object.
            </summary>
            <remarks>
            For a <see cref="T:SpaceClaim.Api.V23.Note"/> or <see cref="T:SpaceClaim.Api.V23.Symbol"/> that lives in a part,
            the annotation space affects where the object is displayed, and how the size of the object is interpreted.
            If the note or symbol lives in a drawing sheet, the annotation space has no effect.
            <para/>
            If the annotation space is <see cref="F:SpaceClaim.Api.V23.AnnotationSpace.View"/> then:
            <list type="bullet">
            <item>
            	The note or symbol is only seen in that part, and not when the part appears as a component in an assembly,
            	or in a drawing view on a drawing sheet.
            </item>
            <item>
            	The size of the note or symbol is such that it will be the correct size after the view scale of the part has been applied.
            </item>
            </list>
            If the annotation space is <see cref="F:SpaceClaim.Api.V23.AnnotationSpace.Model"/> then the note or symbol is seen everywhere the part is seen,
            and its size correct in model-space.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnnotationSpace.Model">
            <summary>
            The object size is defined in model-space.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnnotationSpace.View">
            <summary>
            The object size is defined in view-space.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.None">
            <summary>
            No check digit calculation is performed
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Standard">
            <summary>
            Standard check digit of barcode type will be used
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10">
            <summary>
            Modulo 10 (usually used with Interleaved 2of5)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod43">
            <summary>
            Modulo 43 (suggested for Code39 and Logmars, consist of 1 digit) 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod47_2">
            <summary>
            Modulo 47 (2 digits)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.DPLeit">
            <summary>
            DP Leitcode
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.DPIdent">
            <summary>
            DP Identcode 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Code11_1">
            <summary>
            Code11 (1 digit)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Code11_2">
            <summary>
            Code11 (2 digits)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.USPSPostnet">
            <summary>
            USPS PostNet
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.MSI_1">
            <summary>
            MSI (Modulo 10, 1 digit)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.MSI_2">
            <summary>
            MSI (Modulo 10, 2 digits)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Plessey">
            <summary>
            Plessey
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.EAN8">
            <summary>
            EAN 8
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.EAN13">
            <summary>
            EAN 13
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.UPCA">
            <summary>
            UPC A
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.UPCE">
            <summary>
            UPC E
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.EAN128">
            <summary>
            EAN 128 internal method (Modulo 103) 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Code128">
            <summary>
            Code 128 internal method (Modulo 103)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.RM4SCC">
            <summary>
            Royal Mail 4 State
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.PZN">
            <summary>
            Mod 11 Method for PZN
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod11W7">
            <summary>
            Mod 11 (using maximum weight 7)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.EAN14">
            <summary>
            EAN 14
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10Kor">
            <summary>
            Korean Postal Authority (Modulo 10 based)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10Pla">
            <summary>
            Planet (Modulo 10 based)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10ItlPst25">
            <summary>
            Italian Postal 2/5 (Modulo 10 based)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod36">
            <summary>
            Mod 36 (ISO/IES 7064) for DPD Barcode
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod16">
            <summary>
            Mod 16 for Codabar Barcode
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10Luhn">
            <summary>
            Mod 10 with Luhn algorithm
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.VIN">
            <summary>
            VIN (North America)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10LuhnRev">
            <summary>
            Mod 10 with reverse Luhn algorithm
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod23PPSN">
            <summary>
            Mod 23 for PPSN
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod10IMPackage">
            <summary>
            Mod 10 for Intelligent Mail Package Barcode
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod11W10">
            <summary>
            Mod 11 (using maximum weight 10)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.SwedishPostal">
            <summary>
            Method for Swedish Postal Shipment Item ID (Modulo 11 based)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.UPU">
            <summary>
            Mod 11 used for postal codes (UPU - Universal Postal Union)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod11W9">
            <summary>
            Mod 11 (using maximum weight 9)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CheckDigitType.Mod37WP2">
            <summary>
            Mod 37,2 (ISO 7064, using maximum weight of 2^9)
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BarcodeCodePage">
            <summary>
            Barcode code page (character encoding)
            </summary> 
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.ANSI">
            <summary>
            ANSI 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Windows1252">
            <summary>
            Windows-1252 (1252)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Latin_I">
            <summary>
            ISO 8859-1 Latin I (28591)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.ASCIIExt_437">
            <summary>
            ASCII Extended (437)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.UTF8">
            <summary>
            UTF-8
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Korean">
            <summary>
            Korean (949)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Japanese_Shift_JIS">
            <summary>
            Japanese / Shift-JIS (932)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Simplified_Chinese">
            <summary>
            Simplified Chinese (936)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.Traditional_Chinese_Big5">
            <summary>
            Traditional Chinese (950)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.ANSI_Cyrillic">
            <summary>
            ANSI - Cyrillic (1251)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeCodePage.KOI8_R">
            <summary>
            Russian KOI8-R (20866)
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.QRCodeErrorCorrectionLevel">
            <summary>
            Data matrix barcode size
            </summary> 
        </member>
        <member name="F:SpaceClaim.Api.V23.QRCodeErrorCorrectionLevel.Low">
            <summary>
            Lowest level. Data recovery capacity is approximately up to 7%.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.QRCodeErrorCorrectionLevel.Medium">
            <summary>
            Default level. Up to 15%
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.QRCodeErrorCorrectionLevel.Quartil">
            <summary>
            Up to 25%
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.QRCodeErrorCorrectionLevel.High">
            <summary>
            Highest level. Up to 30%
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.QRCodeBarcodeProperties.ErrorCorrection">
            <summary>
            Gets or sets the error correction level. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.QRCodeBarcodeProperties.CodePage">
            <summary>
            Gets or sets the code page (character encoding)
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DataMatrixBarcodeProperties.Size">
            <summary>
            Gets or sets the data matrix size.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeGeneral.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Barcode">
            <summary>
            A barcode master.
            </summary>
            <remarks>
            Barcodes support <see cref="T:SpaceClaim.Api.V23.IHasLayer"/>, which means they belong to layers,
            but they do not support <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>, so the visibility of the layer cannot be overridden for individual barcodes.
            Instead, if the parent is a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>, the visibility of the datum plane controls the visibility of any annotations it contains.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.BarcodeType,System.String)">
            <summary>
            Creates a barcode.
            </summary>
            <param name="parent">The parent in which the barcode should be created.</param>
            <param name="anchorLocation">The anchor location in the UV space of the plane of the parent.</param>
            <param name="type">The barcode type.</param>
            <param name="data">The barcode data.</param>
            <returns>A barcode.</returns>
            <remarks>
            If the <paramref name="data"/> is not valid for the <paramref name="type"/>, 
            then <see cref="P:SpaceClaim.Api.V23.IBarcode.IsValid"/> will be <b>false</b> for the created barcode.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.Create(SpaceClaim.Api.V23.DatumPlane,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.BarcodeType,System.String)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Barcode.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.BarcodeType,System.String)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.Create(SpaceClaim.Api.V23.IDatumPlane,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.BarcodeType,System.String)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Barcode.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.BarcodeType,System.String)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBarcode.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.AnnotationSpace">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Data">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.ShowText">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.IsValid">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Bars">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Properties">
            <summary>
            Gets type-specific properties
            </summary>
            <remarks>
            Returns a class derived from <see cref="T:SpaceClaim.Api.V23.BarcodeProperties"/> if type-specific properties are available.
            <para/>
            Returns null if there are no type-specific properties
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.Copy">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IBarcode.Copy"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetLocation(SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.SetLocation(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.AnchorPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.ModuleWidth">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.CheckDigitType">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Text">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.TextOutline">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetTextPolylines(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Barcode.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Bold">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Italic">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Underline">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.Strikethrough">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.FontName">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.Barcode.FontSize">
            <inheritdoc />
        </member>
        <member name="T:SpaceClaim.Api.V23.IBarcode">
            <summary>
            A barcode.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBarcode.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBarcode.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBarcode.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.AnnotationSpace">
            <summary>
            Gets or sets the annotation space for the barcode.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.AnnotationSpace"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.Type">
            <summary>
            Gets or sets the barcode type.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBarcode.Data"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.Data">
            <summary>
            Gets or sets the barcode data.
            </summary>
            <remarks>
            Different barcode types have different rules about what constitutes a valid data string.
            <see cref="P:SpaceClaim.Api.V23.IBarcode.IsValid"/> tells you if the <see cref="P:SpaceClaim.Api.V23.IBarcode.Data"/> is valid for the <see cref="P:SpaceClaim.Api.V23.IBarcode.Type"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.ShowText">
            <summary>
            Gets or sets whether to show the text along with the barcode.
            </summary>
            <remarks>
            Matrix barcodes typically do not show text.
            If the <see cref="P:SpaceClaim.Api.V23.IBarcode.Type"/> is a matrix barcode, <see cref="P:SpaceClaim.Api.V23.IBarcode.ShowText"/> is ignored.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.IsValid">
            <summary>
            Gets whether the barcode is valid.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBarcode.Data"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.Bars">
            <summary>
            Gets the bars of the barcode.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.ModuleWidth">
            <summary>
            Gets or sets the module width.
            </summary>
            <remarks>
            The module width is in meters.
            <para/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBarcode.CheckDigitType">
            <summary>
            Gets or sets the barcode check digit calculation type.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBarcode.Copy">
            <summary>
            Creates a copy of the barcode.
            </summary>
            <returns>A copy of the barcode.</returns>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code25">
            <summary>
            Code 25 (also known as Code 2 of 5, or Code 25 Industrial).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code25Interleaved">
            <summary>
            Code 25 Interleaved (also known as Code 2 of 5 Interleaved).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code39">
            <summary>
            Code 39 (also known as Code 3 of 9).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Codabar2">
            <summary>
            Codabar (2 widths).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code93">
            <summary>
            Code 93.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code11">
            <summary>
            Code 11.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code128A">
            <summary>
            Code 128A.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code128B">
            <summary>
            Code 128B.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Code128C">
            <summary>
            Code 128C.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Ean8">
            <summary>
            EAN-8.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Ean13">
            <summary>
            EAN-13.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Ean14">
            <summary>
            EAN-14.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Ean128">
            <summary>
            EAN-128 (also known as GS1-128, UCC-128).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.UpcA">
            <summary>
            UPC-A.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.UpcE">
            <summary>
            UPC-E.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Isbn">
            <summary>
            ISBN (International Standard Book Number).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Ismn">
            <summary>
            ISMN (International Standard Music Number).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Issn">
            <summary>
            ISSN (International Standard Serial Number).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Logmars">
            <summary>
            LOGMARS (Logistics Applications of Automated Marking and Reading Symbols).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Vin">
            <summary>
            VIN (Vehicle Identification Number).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.DataMatrix">
            <summary>
            Data Matrix.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Pdf417">
            <summary>
            PDF417.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.QRCode">
            <summary>
            QR Code (Quick Response Code).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BarcodeType.Aztec">
            <summary>
            Aztec Code.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DataMatrixBarcodeSize">
            <summary>
            Data matrix barcode size
            </summary> 
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.AutomaticSquare">
            <summary>
            Compute size of square symbol automatically
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.AutomaticRectangular">
            <summary>
            Compute size of rectangular symbol automatically
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square10x10">
            <summary>
            Fixed square symbol - 10 x  10
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square12x12">
            <summary>
            Fixed square symbol - 12 x  12
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square14x14">
            <summary>
            Fixed square symbol - 14 x  14
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square16x16">
            <summary>
            Fixed square symbol - 16 x  16
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square18x18">
            <summary>
            Fixed square symbol - 18 x  18
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square20x20">
            <summary>
            Fixed square symbol - 20 x  20
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square22x22">
            <summary>
            Fixed square symbol - 22 x  22
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square24x24">
            <summary>
            Fixed square symbol - 24 x  24
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square26x26">
            <summary>
            Fixed square symbol - 26 x  26
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square32x32">
            <summary>
            Fixed square symbol - 32 x  32
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square36x36">
            <summary>
            Fixed square symbol - 36 x  36
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square40x40">
            <summary>
            Fixed square symbol - 40 x  40
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square44x44">
            <summary>
            Fixed square symbol - 44 x  44
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square48x48">
            <summary>
            Fixed square symbol - 48 x  48
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square52x52">
            <summary>
            Fixed square symbol - 52 x  52
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square64x64">
            <summary>
            Fixed square symbol - 64 x  64
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square72x72">
            <summary>
            Fixed square symbol - 72 x  72
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square80x80">
            <summary>
            Fixed square symbol - 80 x  80
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square88x88">
            <summary>
            Fixed square symbol - 88 x  88
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square96x96">
            <summary>
            Fixed square symbol - 96 x  96
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square104x104">
            <summary>
            Fixed square symbol-size 104 x 104
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square120x120">
            <summary>
            Fixed square symbol-size 120 x 120
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square132x132">
            <summary>
            Fixed square symbol-size 132 x 132
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Square144x144">
            <summary>
            Fixed square symbol-size 144 x 144
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular8x18">
            <summary>
            Fixed rectangular symbol -  8 x 18
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular8x32">
            <summary>
            Fixed rectangular symbol -  8 x 32
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular12x26">
            <summary>
            Fixed rectangular symbol - 12 x 26
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular12x36">
            <summary>
            Fixed rectangular symbol - 12 x 36
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular16x36">
            <summary>
            Fixed rectangular symbol - 16 x 36
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.Rectangular16x48">
            <summary>
            Fixed rectangular symbol - 16 x 48
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension8x48">
            <summary>
            Fixed DMRE rectangular extension symbol - 8 x 48
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension8x64">
            <summary>
            Fixed DMRE rectangular extension symbol - 8 x 64
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension12x64">
            <summary>
            Fixed DMRE rectangular extension symbol - 12 x 64
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension16x64">
            <summary>
            Fixed DMRE rectangular extension symbol - 16 x 64
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension24x32">
            <summary>
            Fixed DMRE rectangular extension symbol - 24 x 32
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension24x36">
            <summary>
            Fixed DMRE rectangular extension symbol - 24 x 36
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension24x48">
            <summary>
            Fixed DMRE rectangular extension symbol - 24 x 48
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension24x64">
            <summary>
            Fixed DMRE rectangular extension symbol - 24 x 64
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension26x32">
            <summary>
            Fixed DMRE rectangular extension symbol - 26 x 32
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension26x40">
            <summary>
            Fixed DMRE rectangular extension symbol - 26 x 40
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension26x48">
            <summary>
            Fixed DMRE rectangular extension symbol - 26 x 48
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DataMatrixBarcodeSize.RectangularExtension26x64">
            <summary>
            Fixed DMRE rectangular extension symbol - 26 x 64
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CountCallout">
            <summary>
            A count callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CountCallout.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumFeatureCallout">
            <summary>
            A datum feature callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumFeatureCallout.Symbol">
            <summary>
            Gets the datum feature symbol.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DimensionCallout">
            <summary>
            A dimension callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimensionCallout.Type">
            <summary>
            Gets the dimension type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimensionCallout.Value">
            <summary>
            Gets the value of the dimension.
            </summary>
            <remarks>
            The value is returned in system units, which are SI Units (meters, kilograms, seconds) with angles in radians.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimensionCallout.UpperTolerance">
            <summary>
            Gets the upper tolerance for the dimension.
            </summary>
            <remarks>
            The upper tolerance is typically a positive value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimensionCallout.LowerTolerance">
            <summary>
            Gets the lower tolerance for the dimension.
            </summary>
            <remarks>
            The lower tolerance is typically a negative value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimensionCallout.ToleranceFormat">
            <summary>
            Gets the format in which the tolerance is displayed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ToleranceFormat">
            <summary>
            A tolerance format for a dimension.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.None">
            <summary>
            No tolerance is displayed.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.Basic">
            <summary>
            No tolerance is displayed, and the dimension is a basic dimension.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.StackedLimits">
            <summary>
            The maximum and minimum dimension limits are displayed stacked.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.StackedTolerances">
            <summary>
            The upper and lower tolerance values are displayed stacked.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.PlusMinus">
            <summary>
            The tolerance is symmetric and displayed with a ± symbol.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.Minimum">
            <summary>
            Only the maximum limit is displayed.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ToleranceFormat.Maximum">
            <summary>
            Only the minimum limit is displayed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.GeometricCharacteristic">
            <summary>
            The geometric characteristic of a geometric tolerance.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MaterialCondition">
            <summary>
            Specifies a material condition.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialCondition.MMC">
            <summary>
            Maximum material condition.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialCondition.LMC">
            <summary>
            Least material condition.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialCondition.RFS">
            <summary>
            Regardless of feature size.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.GeometricToleranceCallout">
            <summary>
            A geometric tolerance callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.GeometricToleranceCallout.IsComposite">
            <summary>
            Gets whether this is a composite feature control frame.
            </summary>
            <remarks>
            If <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.IsComposite"/> is <b>true</b>, then <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.FrameB"/> gives the additional tolerance and datum requirement.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.GeometricToleranceCallout.FrameA">
            <summary>
            Gets the first feature control frame.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.GeometricToleranceCallout.FrameB">
            <summary>
            Gets the second feature control frame, if present.
            </summary>
            <remarks>
            If <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.IsComposite"/> is <b>true</b>, then <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.FrameB"/> will not be <b>null</b>.
            <para/>
            If <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.IsComposite"/> is <b>false</b>, then <see cref="P:SpaceClaim.Api.V23.GeometricToleranceCallout.FrameB"/> might not be <b>null</b>,
            which simply means that two single-segment feature control frames are present.
            This facility is used to vertically align the compartments of the two feature control frames.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FeatureControlFrame">
            <summary>
            A feature control frame for a geometric tolerance.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FeatureControlFrame.Characteristic">
            <summary>
            Gets the geometric characteristic of the frame.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FeatureControlFrame.ToleranceText">
            <summary>
            Gets the text in the tolerance compartment.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseTolerance(System.Boolean@,System.Double@,System.Nullable{SpaceClaim.Api.V23.MaterialCondition}@,System.Double@)"/> can be used to parse the tolerance text.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseTolerance(System.Boolean@,System.Double@,System.Nullable{SpaceClaim.Api.V23.MaterialCondition}@,System.Double@)">
            <summary>
            Converts the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.ToleranceText"/> into its equivalent data, if possible.
            </summary>
            <param name="diametric"><b>true</b> if the tolerance zone is diametric; otherwise <b>false</b>.</param>
            <param name="tolerance">The tolerance value.</param>
            <param name="materialCondition">The material condition, if specified.</param>
            <param name="projectedZone">The projected tolerance zone.</param>
            <returns><b>true</b> if it was possible to parse the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.ToleranceText"/>; otherwise <b>false</b>.</returns>
            <remarks>
            If no material condition symbol is specified, <paramref name="materialCondition"/> is set to <b>null</b>.
            <para/>
            If no projected tolerance zone is specified, <paramref name="projectedZone"/> is set to 0.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FeatureControlFrame.PrimaryDatumText">
            <summary>
            Gets the text in the primary datum compartment.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParsePrimaryDatum(SpaceClaim.Api.V23.DatumReference@,SpaceClaim.Api.V23.DatumReference@)"/> can be used to parse the primary datum text.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParsePrimaryDatum(SpaceClaim.Api.V23.DatumReference@,SpaceClaim.Api.V23.DatumReference@)">
            <summary>
            Converts the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.PrimaryDatumText"/> into a <see cref="T:SpaceClaim.Api.V23.DatumReference"/>, if possible.
            </summary>
            <param name="datum">The datum reference.</param>
            <param name="combinedDatum">An additional datum reference, if the datum is established by two features, else <b>null</b>.</param>
            <returns><b>true</b> if it was possible to parse the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.PrimaryDatumText"/>; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.FeatureControlFrame.SecondaryDatumText">
            <summary>
            Gets the text in the secondary datum compartment.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseSecondaryDatum(SpaceClaim.Api.V23.DatumReference@)"/> can be used to parse the secondary datum text.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseSecondaryDatum(SpaceClaim.Api.V23.DatumReference@)">
            <summary>
            Converts the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.SecondaryDatumText"/> into a <see cref="T:SpaceClaim.Api.V23.DatumReference"/>, if possible.
            </summary>
            <param name="datum">The datum reference.</param>
            <returns><b>true</b> if it was possible to parse the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.SecondaryDatumText"/>; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.FeatureControlFrame.TertiaryDatumText">
            <summary>
            Gets the text in the tertiary datum compartment.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseTertiaryDatum(SpaceClaim.Api.V23.DatumReference@)"/> can be used to parse the tertiary datum text.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FeatureControlFrame.TryParseTertiaryDatum(SpaceClaim.Api.V23.DatumReference@)">
            <summary>
            Converts the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.TertiaryDatumText"/> into a <see cref="T:SpaceClaim.Api.V23.DatumReference"/>, if possible.
            </summary>
            <param name="datum">The datum reference.</param>
            <returns><b>true</b> if it was possible to parse the <see cref="P:SpaceClaim.Api.V23.FeatureControlFrame.TertiaryDatumText"/>; otherwise <b>false</b>.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumReference">
            <summary>
            A datum reference.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumReference.#ctor(System.String,System.Nullable{SpaceClaim.Api.V23.MaterialCondition})">
            <summary>
            Constructs a datum reference.
            </summary>
            <param name="symbol">The datum symbol.</param>
            <param name="matCondition">An optional material condition.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumReference.Symbol">
            <summary>
            Gets the datum symbol.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumReference.MaterialCondition">
            <summary>
            Gets the optional material condition.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimensionGeneral.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimensionGeneral.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimensionGeneral.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Dimension">
            <summary>
            A Dimension master.
            </summary>
            <remarks>
            Dimensions support <see cref="T:SpaceClaim.Api.V23.IHasLayer"/>, which means they belong to layers,
            but they do not support <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>, so the visibility of the layer cannot be overridden for individual Dimensions.
            Instead, if the parent is a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>, the visibility of the datum plane controls the visibility of any annotations it contains.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Dimension.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Dimension.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Dimension.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Dimension.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDimension.Parent"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDimension">
            <summary>
            A Dimension.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDimension.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDimension.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDimension.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDimension.Parent">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.HorizontalAlignment">
            <summary>
            Specifies how text should be aligned horizontally.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HorizontalAlignment.Left">
            <summary>
            Text is aligned to the left margin.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HorizontalAlignment.Center">
            <summary>
            Text is centered between the left and right margins.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HorizontalAlignment.Right">
            <summary>
            Text is aligned to the right margin.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBlockAnnotation">
            <summary>
            An annotation object that has rectangular shape, with width and height, and an anchor point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockAnnotation.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
            <remarks>
            The width is in meters.
            <para/>
            For a <see cref="T:SpaceClaim.Api.V23.Note"/>, the affect of changing the width depends on the <see cref="T:SpaceClaim.Api.V23.TextFit"/>,
            and in some cases setting the width will have no effect.
            <para/>
            For a <see cref="T:SpaceClaim.Api.V23.Barcode"/>, if the <see cref="P:SpaceClaim.Api.V23.IBarcode.Type"/> is a matrix code, the barcode will typically be square,
            so setting the <see cref="P:SpaceClaim.Api.V23.IBlockAnnotation.Width"/> will also set the <see cref="P:SpaceClaim.Api.V23.IBlockAnnotation.Height"/>, and vice versa.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockAnnotation.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
            <remarks>
            The height is in meters.
            <para/>
            For a <see cref="T:SpaceClaim.Api.V23.Note"/>, the affect of changing the height depends on the <see cref="T:SpaceClaim.Api.V23.TextFit"/>,
            and in some cases setting the height will have no effect.
            <para/>
            For a <see cref="T:SpaceClaim.Api.V23.Barcode"/>, if the <see cref="P:SpaceClaim.Api.V23.IBarcode.Type"/> is a matrix code, the barcode will typically be square,
            so setting the <see cref="P:SpaceClaim.Api.V23.IBlockAnnotation.Height"/> will also set the <see cref="P:SpaceClaim.Api.V23.IBlockAnnotation.Width"/>, and vice versa. <br/>
            When setting this property, an <see cref="T:System.InvalidOperationException"/> may be thrown if the given height does not result in a valid barcode.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBlockAnnotation.GetLocation(SpaceClaim.Api.V23.LocationPoint)">
            <summary>
            Gets the location of the specified location point.
            </summary>
            <param name="locationPoint">The location point whose location is sought.</param>
            <returns>The location in UV space.</returns>
            <remarks>
            The location is in the UV space of the plane of the <see cref="T:SpaceClaim.Api.V23.IAnnotationParent"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IBlockAnnotation.SetLocation(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint)">
            <summary>
            Sets the location and anchor point of the object.
            </summary>
            <param name="anchorLocation">The location for the anchor point.</param>
            <param name="anchorPoint">The meaning of the anchor point.</param>
            <remarks>
            The location is in the UV space of the plane of the <see cref="T:SpaceClaim.Api.V23.IAnnotationParent"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockAnnotation.AnchorPoint">
            <summary>
            Gets or sets the anchor point of the object.
            </summary>
            <remarks>
            The anchor point of the note is the location that remains fixed when the note is edited.
            <para/>
            Changing the anchor point does not reposition the note.
            Instead, <see cref="M:SpaceClaim.Api.V23.IBlockAnnotation.SetLocation(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint)"/> can be used to reposition the note.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockAnnotation.Angle">
            <summary>
            Gets or sets the orientation angle of the object.
            </summary>
            <remarks>
            The angle is in radians.
            The angle specifies the clockwise rotation about the normal of the plane of the <see cref="T:SpaceClaim.Api.V23.IAnnotationParent"/>
            (i.e. a counterclockwise rotation as seen looking down onto the plane), measured from the local 
            <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/> of the plane.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ITextFormattingAttributes">
            <summary>
            This interface contains basic text formatting attributes for various annotation classes.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.Bold">
            <summary>
            Gets or sets whether the text is in bold.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.Italic">
            <summary>
            Gets or sets whether the text is italic.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.Strikethrough">
            <summary>
            Gets or sets whether the text is in strikethrough style.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.Underline">
            <summary>
            Gets or sets whether the text is underlined.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
            <remarks>
            The font size is specified in meters
            (1 pt = 1/72 inch, 1 inch = 25.4 mm).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITextFormattingAttributes.FontName">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IRichText">
            <summary>
            An object with structured and formatted text.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRichText.Callouts">
            <summary>
            Gets the callouts in the text.
            </summary>
            <remarks>
            A note contains a list of callouts.
            There are various subclasses of <see cref="T:SpaceClaim.Api.V23.Callout"/>, e.g. <see cref="T:SpaceClaim.Api.V23.TextCallout"/> and <see cref="T:SpaceClaim.Api.V23.DimensionCallout"/>.
            <para/>
            Various methods, such as <see cref="M:SpaceClaim.Api.V23.IRichText.SetBold(System.Boolean,System.Int32,System.Int32)"/> and <see cref="M:SpaceClaim.Api.V23.IRichText.InsertText(System.Int32,System.String)"/>,
            describe a position within the note as an index.
            The index can be thought of as a cursor position.
            The start of the note has an index of 0, and the end of the note has an index of <see cref="P:SpaceClaim.Api.V23.IRichText.EndIndex"/>.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.TextCallout"/> contains a text string, and the cursor can be positioned anywhere in the string.
            With all other callouts, the cursor can only be positioned before or after the entire callout, and not within it.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.TextCallout"/> does not include newline characters.
            If there is a line break in the text, the text is split into two text callouts.
            The line break itself has a before index and an after index,
            since the cursor can be positioned at the end of the line, or at the start of the next line.
            <para/>
            A callout has style information, such as <see cref="P:SpaceClaim.Api.V23.Callout.Color"/> and <see cref="P:SpaceClaim.Api.V23.Callout.Italic"/>, which apply to the entire callout.
            If there is a change of style within a line of text, then there is more than one <see cref="T:SpaceClaim.Api.V23.TextCallout"/> in the line.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRichText.EndIndex">
            <summary>
            Gets the position index for the end of the text.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRichText.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.DeleteText(System.Int32,System.Int32)">
            <summary>
            Deletes the specified range of text.
            </summary>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.InsertText(System.Int32,System.String)">
            <summary>
            Inserts text before the specified character index.
            </summary>
            <param name="index">The insertion point within the existing text.</param>
            <param name="text">The new text to insert.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.ReplaceText(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified range of text with new text.
            </summary>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <param name="text">The new text to replace with.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.ReplaceText(System.String)">
            <summary>
            Replaces all the note text with the new text.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetFontName(System.String)">
            <summary>
            Sets the font name for the entire text.
            </summary>
            <param name="fontName">The font name to be applied.</param>
            <exception cref="T:System.ArgumentException">The font name is empty or <b>null</b>.</exception>
            <remarks>
            If the specified font is not found, the Windows default system font is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetFontName(System.String,System.Int32,System.Int32)">
            <summary>
            Sets the font name for the specified text range.
            </summary>
            <param name="fontName">The font name to be applied.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <exception cref="T:System.ArgumentException">The font name is empty or <b>null</b>.</exception>
            <remarks>
            If the specified font is not found, the Windows default system font is used.
            </remarks>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetFontSize(System.Double)">
            <summary>
            Sets the font size for the entire text.
            </summary>
            <param name="fontSize">The font size to be applied.</param>
            <exception cref="T:System.ArgumentException">The font size is zero or negative.</exception>
            <remarks>
            The font size is specified in meters
            (1 pt = 1/72 inch, 1 inch = 25.4 mm).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetFontSize(System.Double,System.Int32,System.Int32)">
            <summary>
            Sets the font size for the specified text range.
            </summary>
            <param name="fontSize">The font size to be applied.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <exception cref="T:System.ArgumentException">The font size is zero or negative.</exception>
            <remarks>
            The font size is specified in meters
            (1 pt = 1/72 inch, 1 inch = 25.4 mm).
            </remarks>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetBold(System.Boolean)">
            <summary>
            Sets the bold property for the entire text.
            </summary>
            <param name="bold">Whether to turn bold on or off.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetBold(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the bold property for the specified text range.
            </summary>
            <param name="bold">Whether to turn bold on or off.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetItalic(System.Boolean)">
            <summary>
            Sets the italic property for the entire text.
            </summary>
            <param name="italic">Whether to turn italic on or off.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetItalic(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the italic property for the specified text range.
            </summary>
            <param name="italic">Whether to turn italic on or off.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetUnderline(System.Boolean)">
            <summary>
            Sets the underline property for the entire text.
            </summary>
            <param name="underline">Whether to turn underline on or off.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetUnderline(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the underline property for the specified text range.
            </summary>
            <param name="underline">Whether to turn underline on or off.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetStrikethrough(System.Boolean)">
            <summary>
            Sets the strikethrough property for the entire text.
            </summary>
            <param name="strikethrough">Whether to turn strikethrough on or off.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetStrikethrough(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the strikethrough property for the specified text range.
            </summary>
            <param name="strikethrough">Whether to turn strikethrough on or off.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetCharacterSpacing(System.Double)">
            <summary>
            Sets the character spacing for the entire text.
            </summary>
            <param name="spacing">The character spacing.</param>
            <remarks>
            The spacing is given as a proportion of the character width, and may be negative.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetCharacterSpacing(System.Double,System.Int32,System.Int32)">
            <summary>
            Sets the character spacing for the specified text range.
            </summary>
            <param name="spacing">The character spacing.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            The spacing is given as a proportion of the character width, and may be negative.
            <para/>
            <para/>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetWidthFactor(System.Double)">
            <summary>
            Sets the font width for the entire text.
            </summary>
            <param name="width">The font width.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IRichText.SetWidthFactor(System.Double,System.Int32,System.Int32)">
            <summary>
            Sets the font width for the entire text.
            </summary>
            <param name="width">The font width.</param>
            <param name="index">The index of the start of the range.</param>
            <param name="length">The number of characters in the range.</param>
            <remarks>
            <para/>
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IRichText.Callouts"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.NoteCurvature">
            <summary>
            Specifies details for a note that is bent around an arc.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteCurvature.#ctor(SpaceClaim.Api.V23.Geometry.CircularSense,System.Double,System.Double)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.NoteCurvature"/> object.
            </summary>
            <param name="sense">The direction of the arc.</param>
            <param name="radius">The radius of the arc.</param>
            <param name="angle">The text rotation angle.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.NoteCurvature.Sense">
            <summary>
            Gets the direction of the arc.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.NoteCurvature.Radius">
            <summary>
            Gets the radius of the arc.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.NoteCurvature.Angle">
            <summary>
            Gets the text rotation angle.
            </summary>
            <remarks>
            The angle is specified in a clockwise direction, from the top of the circle. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumFeature">
            <summary>
            A datum feature master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumFeature.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDatumFeature.Parent"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDatumFeature">
            <summary>
            A datum feature.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumFeature.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumFeature.Label">
            <summary>
            Gets the datum label.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumFeature.Faces">
            <summary>
            Gets the faces used to define the datum feature.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumFeatureSymbol">
            <summary>
            A datum feature symbol master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumFeatureSymbol.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDatumFeatureSymbol.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumFeatureSymbol.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumFeatureSymbol.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumFeatureSymbol.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumFeatureSymbol.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDatumFeatureSymbol">
            <summary>
            A datum feature symbol.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumFeatureSymbol.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumFeatureSymbol.Feature">
            <summary>
            Gets the datum feature.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Image">
            <summary>
            An image master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Image.Create(SpaceClaim.Api.V23.IImageParentMaster,SpaceClaim.Api.V23.ImageAttachment,System.Double,System.Double,System.String)">
            <summary>
            Creates an image.
            </summary>
            <param name="parent">The <see cref="T:SpaceClaim.Api.V23.Part"/> or <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> in which to create the image.</param>
            <param name="attachment">The attachment for the image.</param>
            <param name="width">The width of the image in model-space, or zero.</param>
            <param name="height">The height of the image in model-space, or zero.</param>
            <param name="source">The path of the image source file.</param>
            <returns>A new image.</returns>
            <exception cref="T:System.ArgumentException">At least one of 'width' and 'height' must be specified.</exception>
            <remarks>
            The <paramref name="source"/> is the full path to an image or video file.
            <para/>
            You can specify a zero <paramref name="width"/> or <paramref name="height"/> (but not both)
            in order to maintain the true aspect ratio of the image source.
            <para/>
            The placement of the image is specified by the <paramref name="attachment"/>.
            <see cref="T:SpaceClaim.Api.V23.ImageAttachment"/> is an abstract class.
            You can use <see cref="T:SpaceClaim.Api.V23.AttachToPlane"/> to position the image on a plane in space,
            or <see cref="T:SpaceClaim.Api.V23.AttachToFace"/> to apply the image to a design face.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Lock">
            <summary>
            Gets or sets the aspects of the image that are locked.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Attachment">
            <summary>
            Gets or sets the attachment for the image.
            </summary>
            <remarks>
            <see cref="T:SpaceClaim.Api.V23.ImageAttachment"/> is an abstract class.
            You can use <see cref="T:SpaceClaim.Api.V23.AttachToPlane"/> to position the image on a plane in space,
            or <see cref="T:SpaceClaim.Api.V23.AttachToFace"/> to apply the image to a design face.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Bitmap">
            <summary>
            Get the bitmap of the image.
            </summary>
            <remarks>
            The bitmap can be used to access pixels in the image.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Source">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.TrueAspectRatio">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Opacity">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Image.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Image.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Image.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Image.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IImage">
            <summary>
            An image on a plane in space, or applied to a design face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImage.Source">
            <summary>
            Gets or sets the image source.
            </summary>
            <remarks>
            When the source is changed, the <see cref="P:SpaceClaim.Api.V23.IImage.Width"/> and <see cref="P:SpaceClaim.Api.V23.IImage.Height"/> are not changed.
            If the new source has a different aspect ratio, the new <see cref="P:SpaceClaim.Api.V23.IImage.TrueAspectRatio"/> can be
            queried and the <see cref="P:SpaceClaim.Api.V23.IImage.Width"/> or <see cref="P:SpaceClaim.Api.V23.IImage.Height"/> can be set accordingly.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImage.Width">
            <summary>
            Gets or sets the width of the image in model-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImage.Height">
            <summary>
            Gets or sets the height of the image in model-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImage.TrueAspectRatio">
            <summary>
            Gets the true aspect ratio of the image.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImage.Opacity">
            <summary>
            Gets or sets the opacity of the image.
            </summary>
            <remarks>
            The opacity is a value in the range [0, 1], where 0 is completely transparent, and 1 is completely opaque.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImageParent.Master">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImageParent.Images">
            <summary>
            Gets the child images.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IImageParentMaster.Images">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImageAttachment">
            <summary>
            Specifies the attachment of an image.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Image.Attachment"/> is passed by value, i.e. it is a snapshot of the data used to attach the image.  
            If properties of the returned object are set, this will not affect the image until the <see cref="P:SpaceClaim.Api.V23.Image.Attachment"/> is set to the new value.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.AttachToPlane">
            <summary>
            Specifies the attachment of an image to a plane.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.ImageAttachment"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.AttachToPlane.#ctor(SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Constructs an AttachToPlane object.
            </summary>
            <param name="plane">The plane to use.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.AttachToPlane.Plane">
            <summary>
            Gets or sets the plane for the image.
            </summary>
            <remarks>
            The image is positioned in the plane.
            The center of the image is located at the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.Origin"/> of the plane,
            and the upright direction is the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirY"/> direction of the plane.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.AttachToFace">
            <summary>
            Specifies the attachment of an image to a design face.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.ImageAttachment"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.AttachToFace.#ctor(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.PointUV,System.Boolean)">
            <summary>
            Constructs an AttachToFace object.
            </summary>
            <param name="desFace">The face to which to attach the image.</param>
            <param name="location">The location in the surface of the face.</param>
            <param name="reversed">Whether the image is reversed.</param>
            <remarks>
            The <paramref name="location"/> is the center of the image in the parameter space of the surface of the face.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.AttachToFace.IsReversed"/> for a description of the <paramref name="reversed"/> argument.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.AttachToFace.Face">
            <summary>
            Gets the design face to which the image is attached.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AttachToFace.Location">
            <summary>
            Gets or sets the location of the center of the image in the parameter space of the surface of the face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AttachToFace.Angle">
            <summary>
            Gets or sets the orientation angle of the image.
            </summary>
            <remarks>
            The angle is in radians.
            The angle specifies the clockwise rotation about the normal of the surface of the face,
            (i.e. a counterclockwise rotation as seen looking down onto the surface), measured from the local 
            U direction.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.AttachToFace.IsReversed">
            <summary>
            Gets or sets whether the image is reversed.
            </summary>
            <remarks>
            If the image is not reversed, then the front of the image is in the direction of the surface normal.
            If it is reversed, then the back of the image is in the direction of the surface normal.
            <para/>
            To create an image on a design face, so that the front of the image is visible when looking at the face,
            you can set this property to be equal to the <see cref="P:SpaceClaim.Api.V23.Modeler.Face.IsReversed"/> property of
            the <see cref="P:SpaceClaim.Api.V23.DesignFace.Shape"/> of the design face.
            <para/>
            <code lang="C#">
            IDesignFace desFace = ...
            Face shape = desFace.Shape;
            
            AttachToFace attachment = new AttachToFace();
            attachment.Face = desFace;
            attachment.IsReversed = shape.IsReversed;
            attachment.Location = shape.BoxUV.Center;
            
            image.Attachment = attachment;
            </code>
            <para/>
            The sense of the <see cref="P:SpaceClaim.Api.V23.AttachToFace.Angle"/> is not affected by whether the image is reversed,
            i.e. the image is reversed left-to-right <i>after</i> rotating by the <see cref="P:SpaceClaim.Api.V23.AttachToFace.Angle"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImageLock">
            <summary>
            Represents the aspects of an image that are locked.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ImageHelper.ToStream(System.Drawing.Image)">
            <summary>
            Converts an image to a memory stream.
            </summary>
            <param name="image"></param>
            <returns></returns>
            <remarks>
            The caller is responsible for disposing the returned memory stream.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ImageHelper.FromStream(System.IO.MemoryStream)">
            <summary>
            Constructs an image from a memory stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <remarks>
            According to the help, "you must keep the stream open for the lifetime of the Image".
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.TextInfo">
            <summary>
            Text location and dimensions.
            </summary>
            <remarks>
            <img src="../images/TextInfo-diagram.png" />
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.Location">
            <summary>
            Gets the text baseline location.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.BaselineCurve">
            <summary>
            Gets the text baseline curve.
            </summary>
            <remarks>The curve will be a line (linear text) or an arc (circular text). </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.LineHeight">
            <summary>
            Gets the overall height
            </summary>
            <remarks>
            This is the sum of <see cref="P:SpaceClaim.Api.V23.TextInfo.AscentHeight"/>, <see cref="P:SpaceClaim.Api.V23.TextInfo.DescentHeight"/>, and <see cref="P:SpaceClaim.Api.V23.TextInfo.LineGap"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.LineGap">
            <summary>
            Gets the spacing between lines.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.CapHeight">
            <summary>
            Gets the height of capital letters above the baseline. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.AscentHeight">
            <summary>
            Gets the height of the text above the baseline. 
            </summary>
            <remarks>
            This measurement includes the height of ascenders which may extend beyond the height of capital letters.  
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.DescentHeight">
            <summary>
            Gets the height of the text below the baseline.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.CharacterSpacing">
            <summary>
            Gets the additional spacing between characters.
            </summary>
            <remarks>
            The spacing is expressed as a proportion of the character width, and may be negative.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextInfo.WidthFactor">
            <summary>
            Gets the character width factor.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextCallout.TextInfo">
            <summary>
            Gets text location and dimensions
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinishGeneral.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinishGeneral.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinishGeneral.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SurfaceFinish">
            <summary>
            A surface finish master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinish.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinish.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SurfaceFinish.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceFinish.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISurfaceFinish.Parent" />
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceFinish.Type">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceFinish.Parameters">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISurfaceFinish">
            <summary>
            A surface finish.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISurfaceFinish.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISurfaceFinish.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc />
        </member>
        <member name="M:SpaceClaim.Api.V23.ISurfaceFinish.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc />
        </member>
        <member name="P:SpaceClaim.Api.V23.ISurfaceFinish.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISurfaceFinish.Type">
            <summary>
            Gets a value that describes how the surface is to be finished.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISurfaceFinish.Parameters">
            <summary>
            Gets the parameters that define the surface finish.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SurfaceFinishType">
            <summary>
            Describes how the surface is to be finished.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishType.MaterialRemovalUndefined">
            <summary>
            Surface material can be finished by any method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishType.MaterialRemovalRequired">
            <summary>
            Material removal is required by machining.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishType.MaterialRemovalProhibited">
            <summary>
            Surface material removal is prohibited by machining and must be accomplished by some other method.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SurfaceFinishParameterType">
            <summary>
            Type for a surface finish removal parameter.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.Unknown">
            <summary>
            The parameter type is unknown.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.RoughnessValue">
            <summary>
            Roughness average (R<sub>a</sub>).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.MinimumRoughnessValue">
            <summary>
            Minimum roughness value.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.MinimumMaterialRemoval">
            <summary>
            Minimum material removal requirement.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.ProductionMethod">
            <summary>
            Production method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.AlternateRoughnessValue">
            <summary>
            Roughness parameter other than R<sub>a</sub>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.AlternateRoughnessValue2">
            <summary>
            Alternate roughness value 2.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.AlternateRoughnessValue3">
            <summary>
            Alternate roughness value 3.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SurfaceFinishParameterType.DirectionOfLay">
            <summary>
            Direction of lay.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SurfaceFinishParameter">
            <summary>
            Represents a surface finish parameter type and value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceFinishParameter.Type">
            <summary>
            Gets the type of the parameter.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceFinishParameter.Value">
            <summary>
            Gets or sets the value of the parameter. May be null or empty.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Symbol">
            <summary>
            A symbol master.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Symbol"/> is a root object, i.e. its <see cref="P:SpaceClaim.Api.V23.Symbol.Parent"/> is <b>null</b>
            and its <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> is itself.
            In contrast, a <see cref="T:SpaceClaim.Api.V23.ISymbol"/> may not be a root object, because it might be an occurrence,
            in which case its <see cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/> will be a <see cref="T:SpaceClaim.Api.V23.ISymbolInsert"/>.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.ISymbol"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Symbol.Create(SpaceClaim.Api.V23.Document)">
            <summary>
            Creates a symbol in the document.
            </summary>
            <param name="doc">The document in which to create the symbol.</param>
            <returns>A symbol.</returns>
            <remarks>
            The symbol is created empty.
            You can supply the symbol as the parent when creating a <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> or <see cref="T:SpaceClaim.Api.V23.Note"/>.
            All children of the symbol should lie in the XY plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.NominalHeight">
            <summary>
            Gets or sets the nominal height of the symbol.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Parent">
            <summary>
            Gets the parent of the symbol.
            </summary>
            <remarks>
            Since a <see cref="T:SpaceClaim.Api.V23.Symbol"/> is a root object, its parent is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.AnnotationSpace">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Notes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Barcodes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Tables">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.DatumFeatureSymbols">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.SymbolInserts">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.AnnotationPlane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Curves">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.CurveGroups">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Symbol.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISymbol">
            <summary>
            A 2D symbol, defined in the XY plane.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Symbol"/> contains <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> and <see cref="T:SpaceClaim.Api.V23.Note"/> children, which lie in the XY plane.
            This master is a root object, i.e. its <see cref="P:SpaceClaim.Api.V23.ISymbol.Parent"/> is <b>null</b> and its <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> is itself.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Document.Symbols"/> property of the <see cref="T:SpaceClaim.Api.V23.Document"/> can be used to get all the symbols in the document.
            <para/>
            Symbol masters are not descendants of a part or drawing sheet, so they do not get displayed.
            A <see cref="T:SpaceClaim.Api.V23.SymbolInsert"/> is used to display the symbol.
            A symbol insert is a child of a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/> or <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/>.
            It is an instance of a <see cref="P:SpaceClaim.Api.V23.SymbolInsert.Template"/> symbol,
            and its <see cref="P:SpaceClaim.Api.V23.SymbolInsert.Content"/> is a <see cref="T:SpaceClaim.Api.V23.ISymbol"/> occurrence,
            placed onto the plane of the datum plane or drawing sheet.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbol.AnnotationSpace">
            <summary>
            Gets or sets the annotation space for the symbol.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.ISymbol.AnnotationSpace"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbol.Height">
            <summary>
            Gets the height of the symbol.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.ISymbol.Height"/> of the symbol can be set using the <see cref="P:SpaceClaim.Api.V23.Symbol.NominalHeight"/> property.
            If the nominal height has not been set (it is <b>null</b>), then the height of the bounding
            box of all the design curves and notes in the symbol is used.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SymbolInsert">
            <summary>
            A symbol insert master.
            </summary>
            <remarks>
            Symbol inserts support <see cref="T:SpaceClaim.Api.V23.IHasLayer"/>, which means they belong to layers,
            but they do not support <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>, so the visibility of the layer cannot be overridden for individual symbol inserts.
            Instead, if the parent is a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>, the visibility of the datum plane controls the visibility of any annotations it contains.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.ISymbol"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.ISymbol"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SymbolInsert.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Symbol,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a symbol insert.
            </summary>
            <param name="parent">The parent drawing sheet.</param>
            <param name="template">The symbol master to instantiate.</param>
            <param name="location">The location for the contained symbol within the plane of the drawing sheet.</param>
            <returns>A symbol insert.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SymbolInsert.Create(SpaceClaim.Api.V23.DatumPlane,SpaceClaim.Api.V23.Symbol,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a symbol insert.
            </summary>
            <param name="parent">The parent datum plane.</param>
            <param name="template">The symbol master to instantiate.</param>
            <param name="location">The location for the contained symbol within the plane of the datum plane.</param>
            <returns>A symbol insert.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Size">
            <summary>
            Gets or sets the size of the symbol insert.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISymbolInsert.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Template">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.AnnotationSpace">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.UseSymbolStyle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Scale">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.IsReversed">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolInsert.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SymbolInsert.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SymbolInsert.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISymbolInsert">
            <summary>
            An instance of a symbol.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.ISymbol"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.Parent">
            <summary>
            Gets the parent of the symbol insert.
            </summary>
            <remarks>
            Nested symbols are not supported, so even though ISymbol inherits from IAnnotationParent,
            the parent will not be a symbol.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.Content">
            <summary>
            Gets the symbol occurrence contained by the symbol insert.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.AnnotationSpace">
            <summary>
            Gets or sets the annotation space for the symbol.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.AnnotationSpace"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.UseSymbolStyle">
            <summary>
            Gets or sets whether the style should be taken from the symbol instead of the layer.
            </summary>
            <remarks>
            If <b>true</b> then the colors and line widths of the symbol are used.
            If <b>false</b> then the layer style is used, although the layer color can be overridden using <see cref="M:SpaceClaim.Api.V23.SymbolInsert.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.Location">
            <summary>
            Gets or sets the location of the symbol insert within the plane of its parent.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.Angle">
            <summary>
            Gets or sets the angle of the contained symbol.
            </summary>
            <remarks>
            The angle is in radians.
            The angle specifies the clockwise rotation about the normal of the plane of the <see cref="T:SpaceClaim.Api.V23.IAnnotationParent"/>
            (i.e. a counterclockwise rotation as seen looking down onto the plane), measured from the local 
            <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/> of the plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.Scale">
            <summary>
            Gets the scale of the contained symbol, compared to the symbol master.
            </summary>
            <remarks>
            The scale is determined by the <see cref="P:SpaceClaim.Api.V23.SymbolInsert.Size"/> property of the <see cref="T:SpaceClaim.Api.V23.SymbolInsert"/> master.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISymbolInsert.IsReversed">
            <summary>
            Gets or sets whether the symbol is reversed, so that it is back to front.
            </summary>
            <remarks>
            The sense of the <see cref="P:SpaceClaim.Api.V23.ISymbolInsert.Angle"/> is not affected by whether the symbol is reversed,
            i.e. the symbol is reversed left-to-right <i>after</i> rotating by the <see cref="P:SpaceClaim.Api.V23.ISymbolInsert.Angle"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SymbolSize">
            <summary>
            Specifies the size for a symbol insert.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolSize.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SymbolSize.Type">
            <summary>
            Gets or sets the meaning for the size.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SymbolSize.#ctor(System.Double,SpaceClaim.Api.V23.SymbolSizeType)">
            <summary>
            Creates a symbol size object.
            </summary>
            <param name="size"></param>
            <param name="type"></param>
        </member>
        <member name="T:SpaceClaim.Api.V23.SymbolSizeType">
            <summary>
            Specifies the meaning for a symbol size.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SymbolSizeType.Scale">
            <summary>
            The size is the scale factor.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SymbolSizeType.Height">
            <summary>
            The size is the symbol height.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TableCellChangedEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Table.CellValueChanged"/> event.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCellChangedEventArgs.Row">
            <summary>
            The changed cell's row.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCellChangedEventArgs.Column">
            <summary>
            The changed cell's column.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Table">
            <summary>
            A table master.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Table.CellValueChanged">
            <summary>
            Occurs when the value of a table cell is modified. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.Double,System.Double,System.String[0:,0:])">
            <summary>
            Creates a table.
            </summary>
            <param name="parent">The parent in which the table should be created.</param>
            <param name="anchorLocation">The anchor location in the UV space of the plane of the parent.</param>
            <param name="anchorPoint">The anchor point.</param>
            <param name="rowHeight">The height of each row.</param>
            <param name="columnWidth">The width of each column.</param>
            <param name="fontSize">The font size in meters.</param>
            <param name="text">Text for the cells in the table.</param>
            <returns>A table.</returns>
            <remarks>
            The number of rows and columns is determined by the dimensions of the <paramref name="text"/> matrix.
            The matrix is in row major order, i.e. cells are indexed as <c>text[row, column]</c>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.Create(SpaceClaim.Api.V23.DatumPlane,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.Double,System.Double,System.String[0:,0:])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Table.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.Double,System.Double,System.String[0:,0:])"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.Create(SpaceClaim.Api.V23.IDatumPlane,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.Double,System.Double,System.String[0:,0:])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Table.Create(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.Double,System.Double,System.String[0:,0:])"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ITable.Parent"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetCell(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Rows">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Columns">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.InsertRow(System.Int32,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.InsertColumn(System.Int32,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.MergeCells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetLocation(SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.SetLocation(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.AnchorPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Table.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Table.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableGeneral.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableGeneral.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableGeneral.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ITable">
            <summary>
            A table.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITable.Parent">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the table cell at the specified location in the table.
            </summary>
            <param name="row">The row index.</param>
            <param name="column">The column index.</param>
            <returns>The table cell at the specified location.</returns>
            <remarks>
            Row indices start at zero for the top row, and advance downwards.
            <para/>
            Column indices start at zero for the left column, and advance to the right.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITable.Rows">
            <summary>
            Gets the rows in the table.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ITable.Columns">
            <summary>
            Gets the columns in the table.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.InsertRow(System.Int32,System.Double)">
            <summary>
            Inserts a row at the specified index.
            </summary>
            <param name="index">The zero-based index at which the row should be inserted.</param>
            <param name="height">The height of the row.</param>
            <returns>A new row.</returns>
            <remarks>
            Row indices start at zero for the top row, and advance downwards.
            <para/>
            If <paramref name="index"/> is equal to the number of rows, the new row is added to the bottom of the table.
            <para/>
            The new row will have an <see cref="P:SpaceClaim.Api.V23.TableRow.Index"/> equal to <paramref name="index"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.InsertColumn(System.Int32,System.Double)">
            <summary>
            Inserts a column at the specified index.
            </summary>
            <param name="index">The zero-based index at which the column should be inserted.</param>
            <param name="width">The width of the column.</param>
            <returns>A new column.</returns>
            <remarks>
            Column indices start at zero for the left column, and advance to the right.
            <para/>
            If <paramref name="index"/> is equal to the number of columns, the new column is added to the right of the table.
            <para/>
            The new column will have an <see cref="P:SpaceClaim.Api.V23.TableColumn.Index"/> equal to <paramref name="index"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITable.MergeCells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Merges a cell.
            </summary>
            <param name="row">The row index of the cell to merge.</param>
            <param name="column">The column index of the cell to merge.</param>
            <param name="spanAcross">The number of cells to merge across to the right.</param>
            <param name="spanDown">The number of cells to merge downwards.</param>
            <returns><b>true</b> is successful; otherwise <b>false</b>.</returns>
            <remarks>
            This method can fail if some of the cells involved are already merged,
            in which case <b>false</b> is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.TableCell">
            <summary>
            A table cell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.Row">
            <summary>
            Gets the row in which the cell lives.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.Column">
            <summary>
            Gets the column in which the cell lives.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the cell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.Margin">
            <summary>
            Gets or sets the margin of the cell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.Callouts">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableCell.EndIndex">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.DeleteText(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.InsertText(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.ReplaceText(System.Int32,System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.ReplaceText(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetFontName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetFontName(System.String,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetFontSize(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetFontSize(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetBold(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetBold(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetItalic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetItalic(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetUnderline(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetUnderline(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetStrikethrough(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetStrikethrough(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetCharacterSpacing(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetCharacterSpacing(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetWidthFactor(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableCell.SetWidthFactor(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.TableColumn">
            <summary>
            A table column.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableColumn.Index">
            <summary>
            Gets the index of the column within the table.
            </summary>
            <remarks>
            Column indices start at zero for the left column, and advance to the right.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableColumn.Cells">
            <summary>
            Gets the cells in the column.
            </summary>
            <remarks>
            The cells are listed in order down the column.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableColumn.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableColumn.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.TableRow">
            <summary>
            A table row.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableRow.Index">
            <summary>
            Gets the index of the row within the table.
            </summary>
            <remarks>
            Row indices start at zero for the top row, and advance downwards.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableRow.Height">
            <summary>
            Gets or sets the height of the row.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableRow.Cells">
            <summary>
            Gets the cells in the row.
            </summary>
            <remarks>
            The cells are listed in left-to-right order across the row.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.TableRow.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.TableRow.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasText">
            <summary>
            The type implementing this interface has text.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasText.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasText.Plane">
            <summary>
            Gets the plane of the text.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasText.TextOutline">
            <summary>
            Gets the outline of the text as trimmed curves.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasText.GetTextPolylines(System.Double,System.Double)">
            <summary>
            Gets the outline of the text as polylines.
            </summary>
            <param name="curveDeviation">The maximum deviation from the true curve position, or zero if not specified.</param>
            <param name="angleDeviation">The maximum deviation from the true curve tangent, or zero if not specified.</param>
            <returns>One or more polylines.</returns>
            <remarks>
            Both <paramref name="curveDeviation"/> and <paramref name="angleDeviation"/> can be zero,
            indicating that they are not specified.
            <para/>
            TrueType fonts use characters defined by glyphs, which are described by closed contours,
            containing straight line segments and quadratic Bezier splines.
            <para/>
            Supplying zero for both values gives rise to the least accurate polyline,
            where two line segments are produced for each quadratic Bezier spline,
            and in practice this produces a fairly good outline.
            <para/>
            If the text is very large, or it will be viewed zoomed in to appear large,
            then <paramref name="curveDeviation"/> or <paramref name="angleDeviation"/> (or both)
            can be supplied to create a finer polyline.
            <para/>
            The value for <paramref name="curveDeviation"/> will need to be around 1/100 of the text height
            or less to have any affect for most fonts.
            <para/>
            Supplying a value for <paramref name="angleDeviation"/> has an effect, which is independent of
            the height of the text, and a value of 10 degrees (specified in radians) produces a very smooth result.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.VerticalAlignment">
            <summary>
            Specifies how text should be aligned vertically.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VerticalAlignment.Top">
            <summary>
            Text is aligned to the top margin.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VerticalAlignment.Center">
            <summary>
            Text is centered between the top and bottom margins.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VerticalAlignment.Bottom">
            <summary>
            Text is aligned to the bottom margin.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TextFit">
            <summary>
            Specifies how text is formatted to the width and height of its box.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.TextFit.None">
            <summary>
            The text is not wrapped.
            The width and height cannot be set, since they are determined by the text.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.TextFit.Wrap">
            <summary>
            The text is wrapped to the width.
            If the width is too small, words may need to be split.
            The height cannot be set, since this is determined by the wrapped lines of text.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.TextFit.Scale">
            <summary>
            The text is scaled to fit inside the box specified by the width and height.
            Text may be wrapped, but words are not split.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.TextFit.Stretch">
            <summary>
            The text is not wrapped.
            The text is stretched horizontally to fit the width.
            The height cannot be set, since this is determined by the lines of text.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Callout">
            <summary>
            A callout within a note.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.IsStartOfLine">
            <summary>
            Gets whether the callout is the start of a line.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Text">
            <summary>
            Gets the text of the callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Color">
            <summary>
            Gets or sets the color of the callout.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.FontName">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.FontSize">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Bold">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Italic">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Underline">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Callout.Strikethrough">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Component">
            <summary>
            A component master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Component.CreateFromFile(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.ImportOptions)">
            <summary>
            Creates an assembly component from an external file.
            </summary>
            <param name="parent">The parent part master.</param>
            <param name="path">The path of the component part file.</param>
            <param name="options">Import options to use, or <b>null</b> to use the current user options.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <exception cref="T:System.ArgumentException">Unrecognized file format.</exception>
            <remarks>
            The component will be placed in its default orientation, unless there is a selected object. In that case, the component will be oriented to that. 
            <para/>
            This method can also be used to import a component of another CAD format.
            <para><br/>The SpaceClaim option to save the imported component to a file is ignored.</para>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Component.ReplaceFromFile(System.String)">
            <summary>
            Replaces the <see cref="P:SpaceClaim.Api.V23.Component.Template"/> of the component with the part loaded from the specified path.
            </summary>
            <param name="path">The path of the new part to use.</param>
            <remarks>
            If the new part is already loaded, the in-memory document will be used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Component.Create(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.Part)">
            <summary>
            Creates an assembly component.
            </summary>
            <param name="parent">The parent part master.</param>
            <param name="template">The part master to instantiate.</param>
            <returns>The created component master.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IComponent.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Content">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IComponent.Content"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Components">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Template">
            <inheritdoc cref="P:SpaceClaim.Api.V23.Instance.Template"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Placement">
            <summary>
            Gets or sets the placement matrix for the component.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Component.Template"/> object is transformed by the placement matrix, 
            giving rise to occurrences of the template and its children, recursively.
            <para/>
            The matrix can contain rotation and translation, but not scale.
            </remarks>
            <exception cref="T:System.ArgumentException">The matrix has a scale component.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Component.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">The matrix has a scale component.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Component.Name">
            <summary>
            Gets or sets the name of this component.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CoordinateSystem">
            <summary>
            A coordinate system master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Creates a coordinate system.
            </summary>
            <param name="parent">The part in which the coordinate system should be created.</param>
            <param name="name">The name of the coordinate system.</param>
            <param name="frame">The frame of the coordinate system.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.Create(SpaceClaim.Api.V23.IPart,System.String,SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Creates a coordinate system.
            </summary>
            <param name="parent">The part in which the coordinate system should be created.</param>
            <param name="name">The name of the coordinate system.</param>
            <param name="frame">The frame of the coordinate system.</param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.Axes">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.GetAxis(SpaceClaim.Api.V23.AxisType)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.IsLeftHanded">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CoordinateSystem.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateSystem.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICoordinateSystem">
            <summary>
            A coordinate system.
            </summary>
            <remarks>
            A coordinate system is a <see cref="T:SpaceClaim.Api.V23.IDocObject"/> that has a local origin and local XYZ axes,
            which are described by its <see cref="T:SpaceClaim.Api.V23.Geometry.Frame"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICoordinateSystem.IsReadOnly">
            <summary>
            Gets whether the coordinate system is read-only.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.IPart"/> always has a coordinate system representing its coordinate space.
            This coordinate system is read-only, because you cannot transform it, or set its visibility.
            It does not appear in the structure panel, and its visibility is controlled by whether the
            world coordinate system is displayed in the user interface.
            <para/>
            If you attempt to modify a read-only coordinate system, an <see cref="T:System.InvalidOperationException"/> is thrown.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICoordinateSystem.Axes">
            <summary>
            Gets the three axes of the coordinate system.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ICoordinateSystem.GetAxis(SpaceClaim.Api.V23.AxisType)">
            <summary>
            Gets a specific axes (X, Y, or Z) of the coordinate system.
            </summary>
            <param name="axisType">The required axis.</param>
            <returns>The axis.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICoordinateSystem.IsLeftHanded">
            <summary>
            Gets or sets whether the Z axis should be reversed when the coordinate system is displayed.
            </summary>
            <remarks>
            If this value is <b>true</b>, the Z axis is reversed when the coordinate system is displayed.
            This creates the illusion of a left-handed system, although the right-handed <see cref="P:SpaceClaim.Api.V23.Geometry.IHasFrame.Frame"/> of the system is unchanged.
            Code can test whether the system is left-handed and compensate accordingly.
            <para/>
            This facility is provided for API clients.
            Left-handed coordinate systems are not created in the base SpaceClaim application.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FilletWeld">
            <summary>
            A fillet weld master.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IFilletWeld">
            <summary>
            A fillet weld.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Part">
            <summary>
            A part master.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Part"/> is a root object, i.e. its <see cref="P:SpaceClaim.Api.V23.Part.Parent"/> is <b>null</b>
            and its <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> is itself.
            In contrast, a <see cref="T:SpaceClaim.Api.V23.IPart"/> may not be a root object, because it might be an occurrence,
            in which case its <see cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/> will be a <see cref="T:SpaceClaim.Api.V23.IComponent"/> or <see cref="T:SpaceClaim.Api.V23.IDrawingView"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Images">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.CustomObjects">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)">
            <summary>
            Exports the part in a particular CAD file format.
            </summary>
            <param name="format">The file format to use.</param>
            <param name="path">The path of the file to write to.</param>
            <param name="deepExport"><b>true</b> to export components too; otherwise <b>false</b>.</param>
            <param name="options">Export options to use, or <b>null</b> to use the current user options.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            A standard file extension will be applied according to the file type specified.
            <para/>
            If the part does not contain any design bodies, i.e. there would be nothing to export,
            an <see cref="T:System.InvalidOperationException"/> is thrown.
            <para/>
            When exporting to an ACIS or Parasolid file, if any design bodies, design faces, or design edges have
            text attributes with the name, "@id", and non-null values, these are written as <i>id</i> attributes applied to 
            resulting ACIS or Parasolid entities.
            <para/>
            An ACIS <i>id</i> attribute is a "named attribute" (ATTRIB_GEN_NAME) with the attribute name, "ATTRIB_XACIS_ID".
            <para/>
            A Parasolid <i>id</i> attribute has the name, "ATTRIB_XPARASOLID_ID", and has an attribute definition as follows:
            <code lang="C++">
            <![CDATA[
            static PK_ATTDEF_t Create_ATTRIB_XPARASOLID_ID() {
            	PK_ATTDEF_sf_t descriptor;
                descriptor.name = "ATTRIB_XPARASOLID_ID";
            	descriptor.attdef_class = PK_ATTDEF_class_06_c;
            
            	descriptor.n_owner_types = 6;
            	PK_CLASS_t owner_types[6] = {
            		PK_CLASS_assembly,
            		PK_CLASS_instance,
            		PK_CLASS_body,
            		PK_CLASS_face,
            		PK_CLASS_edge,
            		PK_CLASS_vertex
            	};
            	descriptor.owner_types = owner_types;
            
            	descriptor.n_fields = 1;
            	PK_ATTRIB_field_t field_types[1] = {
            		PK_ATTRIB_field_string_c
            	};
            	descriptor.field_types = field_types;
            
            	PK_ATTDEF_t attDef = PK_ENTITY_null;
            	PK_ERROR_code_t errorCode = PK_ATTDEF_create(&descriptor, &attDef);
            	if (errorCode != PK_ERROR_no_errors)
            		return PK_ENTITY_null;
            
            	return attDef;
            }
            ]]>
            </code>
            <para/>
            See <see cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/> for additional export possibilities.
            <para/>
            To import a file, use the <see cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/> method.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/>
            <seealso cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.ShareTopology">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.ShareTopology"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.CreateBeamProfile(SpaceClaim.Api.V23.Document,System.String,SpaceClaim.Api.V23.Geometry.Profile)">
            <summary>
            Creates a new beam profile part.
            </summary>
            <param name="doc">The document in which the part should live.</param>
            <param name="name">The name for the part.</param>
            <param name="profile">A closed profile.</param>
            <returns>A beam profile part.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.SpaceClaim#Api#V23#IPart#SheetMetal">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.SheetMetal">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.SheetMetal"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.IsSheetMetalSuspended">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.FlatPattern">
            <summary>
            Gets the flat pattern aspect of the part.
            </summary>
            <remarks>
            If this part is not a flat pattern part, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.ConvertToSheetMetal">
            <summary>
            Converts the part into a sheet metal part.
            </summary>
            <exception cref="T:System.InvalidOperationException">The part cannot be converted to a sheet metal part.</exception>
            <remarks>
            If the part is already a sheet metal part, or it is a flat pattern, an <see cref="T:System.InvalidOperationException"/> is thrown.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.ConvertToSheetMetal(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignFace})">
            <summary>
            Converts the part into a sheet metal part.
            </summary>
            <param name="desFaces">The seed faces, one per body.</param>
            <exception cref="T:System.InvalidOperationException">The part cannot be converted to a sheet metal part.</exception>
            <remarks>
            If the part is already a sheet metal part, the bodies have different thicknesses, or it is a flat pattern, an <see cref="T:System.InvalidOperationException"/> is thrown.
            <para/>
            The seed faces indicate the sides of the bodies which are fixed when changing the thickness. 
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Meshes">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.Meshes"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.GetDesignCurvesInPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IPart.GetDesignCurvesInPlane(SpaceClaim.Api.V23.Geometry.Plane)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.IsSketchCurve(SpaceClaim.Api.V23.DesignCurve)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IPart.IsSketchCurve(SpaceClaim.Api.V23.IDesignCurve)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.SetSketchCurve(SpaceClaim.Api.V23.DesignCurve,System.Boolean)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IPart.SetSketchCurve(SpaceClaim.Api.V23.IDesignCurve,System.Boolean)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Curves">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.CurveGroups">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.DatumPlanes">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.DatumPlanes"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.DatumLines">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.DatumLines"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.DatumPoints">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.DatumPoints"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.DatumFeatures">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.DatumFeatures"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.CoordinateSystems">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.CoordinateSystems"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.SpotWeldJoints">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.SpotWeldJoints"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Beams">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.Beams"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Bolts">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.Bolts"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.MatingConditions">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.MatingConditions"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.AppearanceStates">
            <summary>
            Gets the appearance states contained by the part.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.Create(SpaceClaim.Api.V23.Document,System.String)">
            <summary>
            Creates a new part.
            </summary>
            <param name="doc">The document in which the part should live.</param>
            <param name="name">The name for the part.</param>
            <returns>A part.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Type">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.TryGetCollision(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignFace},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignFace},SpaceClaim.Api.V23.IDesignFace@,SpaceClaim.Api.V23.IDesignFace@)">
            <summary>
            Tests whether there is a collision between two sets of design faces.
            </summary>
            <param name="desFacesA">First set of design faces.</param>
            <param name="desFacesB">Second set of design faces.</param>
            <param name="desFaceA">First colliding design face.</param>
            <param name="desFaceB">Second colliding design face.</param>
            <returns><b>true</b> if a collision was found; otherwise <b>false</b>.</returns>
            <remarks>
            If a collision is found between a face in <paramref name="desFacesA"/> and a face in <paramref name="desFacesB"/>,
            then the method returns <b>true</b>, and the output arguments <paramref name="desFaceA"/> and <paramref name="desFaceB"/>
            are set to the pair of colliding faces.
            If there are many collisions, only the first pair discovered is returned.
            <para/>
            The nature of the collision is not determined.
            The faces might intersect, they might be coincident, or they might touch along an edge or at a single point.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.DisplayName">
            <summary>
            Gets the display name for the part.
            </summary>
            <remarks>
            The display name is used in the Structure panel and on window tabs.
            <para/>
            For the <see cref="P:SpaceClaim.Api.V23.Document.MainPart"/>, the <see cref="P:SpaceClaim.Api.V23.Document.MainPartDisplaysFileName"/> setting controls how the display name is determined.
            For other parts in the document, the <see cref="P:SpaceClaim.Api.V23.Part.Name"/> of the part is used as the display name.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Parent">
            <summary>
            Gets the parent of the part.
            </summary>
            <remarks>
            Since a <see cref="T:SpaceClaim.Api.V23.Part"/> is a root object, its parent is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Components">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.Components"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Bodies">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.Bodies"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.IsEmpty">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IPart.IsEmpty"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.CustomProperties">
            <summary>
            Gets the collection of custom properties for the part.
            </summary>
            <remarks>
            This property provides access to 'Component Properties' in the Properties panel. 
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Material">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Part.Name">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Part.Delete">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IPart">
            <summary>
            A piece part or assembly.
            </summary>
            <remarks>
            There is no compile-time distinction between a piece part and an assembly.
            If a part contains one or more <see cref="T:SpaceClaim.Api.V23.IComponent"/> objects, it might be considered an assembly.
            If it contains one or more <see cref="T:SpaceClaim.Api.V23.IDesignBody"/> objects, it might be considered a piece part.
            It can contain both <see cref="T:SpaceClaim.Api.V23.IComponent"/> objects and <see cref="T:SpaceClaim.Api.V23.IDesignBody"/> objects.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.ShareTopology">
            <summary>
            Gets or sets how topology should be shared when transferring this part to analysis.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.SheetMetal">
            <summary>
            Gets the sheet metal aspect of the part.
            </summary>
            <remarks>
            If this part is not a sheet metal part, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.IsSheetMetalSuspended">
            <summary>
            Gets or sets whether sheet metal behavior is suspended. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Meshes">
            <summary>
            Gets the design meshes contained by the part.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IPart.GetDesignCurvesInPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Gets the design curves that lie in the specified plane.
            </summary>
            <param name="plane">The plane in which design curves are sought.</param>
            <returns>Design curves that lie in the specified plane.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.IPart.IsSketchCurve(SpaceClaim.Api.V23.IDesignCurve)">
            <summary>
            Gets whether the design curve is a sketch curve.
            </summary>
            <param name="desCurve">The design curve to test.</param>
            <returns><b>true</b> if the design curves is a sketch curve; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException">The design curve does not belong to this part.</exception>
            <remarks>
            When the user finishes sketching a profile, design curves in the sketch plane
            get automatically converted into a planar design body ready for 3D tools.
            <para/>
            Design curves created using the <see cref="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParent,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)"/> method
            do not get automatically converted in this way unless <see cref="M:SpaceClaim.Api.V23.IPart.SetSketchCurve(SpaceClaim.Api.V23.IDesignCurve,System.Boolean)"/> is used to set
            the design curve to be a <i>sketch curve</i>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IPart.SetSketchCurve(SpaceClaim.Api.V23.IDesignCurve,System.Boolean)">
            <summary>
            Sets a design curve to be a sketch curve.
            </summary>
            <param name="desCurve">The design curve.</param>
            <param name="isSketchCurve"><b>true</b> to set the design curve to be a sketch curve; otherwise <b>false</b>.</param>
            <exception cref="T:System.ArgumentException">The design curve does not belong to this part.</exception>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.IPart.IsSketchCurve(SpaceClaim.Api.V23.IDesignCurve)"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.DatumPlanes">
            <summary>
            Gets the datum planes contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.DatumLines">
            <summary>
            Gets the datum lines contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.DatumPoints">
            <summary>
            Gets the datum points contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.DatumFeatures">
            <summary>
            Gets the datum features contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.CoordinateSystems">
            <summary>
            Gets the coordinate systems contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.SpotWeldJoints">
            <summary>
            Gets the spot weld joints contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.FilletWelds">
            <summary>
            Gets all fillet welds contained in the part
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Beams">
            <summary>
            Gets the beams contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Bolts">
            <summary>
            Gets the bolts contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.MatingConditions">
            <summary>
            Gets the mating conditions contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Type">
            <summary>
            Gets the part type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Components">
            <summary>
            Gets the components contains by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.Bodies">
            <summary>
            Gets the design bodies contained by the part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPart.IsEmpty">
            <summary>
            Gets whether the part is empty.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Geometry">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.SequenceId">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Size1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Size2">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Volume">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Mass">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.Time">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.RodLength">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.IsIntermittent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.WeldGeneral.IntermittentParameters">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IWeld.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Geometry">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.SequenceId">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Size1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Size2">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Volume">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Mass">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.Time">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.RodLength">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.IsIntermittent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Weld.IntermittentParameters">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IWeld">
            <summary>
            A weld.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IWeld.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IWeld.Geometry">
            <summary>
            Gets the weld geometry.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IWeld.DisplayName">
            <summary>
            Gets the feature name.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WeldIntermittentParameters">
            <summary>
            Intermittent parameters of a weld.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WeldParameters">
            <summary>
            Common weld parameters.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockEdge.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockEdge.EdgeSplitPoints">
            <summary>
            Gets the edge split points
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockEdgePoint.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockFace.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Blocking">
            <summary>
            A blocking master
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.Parent">
            <summary>
            Gets the parent part of the blocking
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.BlockVertices">
            <summary>
            Gets the block vertices of the blocking
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.BlockEdges">
            <summary>
            Gets the block edges of the blocking
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.BlockMaterials">
            <summary>
            Gets the block materials of the blocking
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.BlockVolumes">
            <summary>
            Gets the block volumes of the blocking
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.BlockFaces">
            <summary>
            Gets the block faces of the blocking
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Blocking.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Blocking.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Blocking.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Blocking.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlocking.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockMeshAnalysis.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockVertex.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockVolume.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SketchConstraintType">
            <summary>
            The state of a sheet metal form in the flat pattern.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SketchConstraint">
            <summary>
            A sketch constraint master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SketchConstraint.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISketchConstraint.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SketchConstraint.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SketchConstraint.Curves">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISketchConstraint">
            <summary>
            A sketch constraint.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISketchConstraint.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISketchConstraint.Type">
            <summary>
            Gets the constraint type.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Animator">
            <summary>
            The abstract base class for an animator.
            </summary>
            <remarks>
            An animator is supplied to the <see cref="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})"/> method of the <see cref="T:SpaceClaim.Api.V23.Animation"/> class.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animator.Advance(System.Int32)">
            <summary>
            Advances to the next frame in the animation.
            </summary>
            <param name="frame">The frame number.</param>
            <returns>The expected final frame number.</returns>
            <remarks>
            The first call to <see cref="M:SpaceClaim.Api.V23.Animator.Advance(System.Int32)"/> will have a <paramref name="frame"/> number of 1.
            <para/>
            This method should be overridden to set up the next animation frame, and return the expected number of frames.
            <para/>
            If the return value is greater than <paramref name="frame"/>, this indicates that there are more frames to follow,
            otherwise this frame will be the final frame in the animation sequence.
            <para/>
            This method is not called from inside a write block.
            Animation frames can either be created using an apply loop, in which case the apply loop will manage its own write blocks,
            or by calling <see cref="M:SpaceClaim.Api.V23.WriteBlock.ExecuteTask(System.String,SpaceClaim.Api.V23.Task)"/> and <see cref="M:SpaceClaim.Api.V23.WriteBlock.AppendTask(SpaceClaim.Api.V23.Task)"/>, which execute code within write blocks.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Animator.Completed">
            <summary>
            Occurs when the animation has completed.
            </summary>
            <remarks>
            When the <see cref="T:SpaceClaim.Api.V23.Animation"/> is completed, <see cref="P:SpaceClaim.Api.V23.Animation.IsAnimating"/> is <b>false</b>.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.AnimationCompletedEventArgs.Result"/> property of the <see cref="T:SpaceClaim.Api.V23.AnimationCompletedEventArgs"/>
            tells you how the animation completed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animator.OnCompleted(SpaceClaim.Api.V23.AnimationCompletedEventArgs)">
            <summary>
            Called when the animation has completed.
            </summary>
            <param name="args">The event arguments.</param>
            <remarks>
            If you override this method, remember to call the base method at the end, since this raises the <see cref="E:SpaceClaim.Api.V23.Animator.Completed"/> event.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnimationCompletedEventArgs">
            <summary>
            Provides data for the <see cref="E:SpaceClaim.Api.V23.Animator.Completed"/> event.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.AnimationCompletedEventArgs.#ctor(SpaceClaim.Api.V23.AnimationResult)">
            <summary>
            Constructs the event arguments.
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnimationCompletedEventArgs.Result">
            <summary>
            Gets the reason why the animation completed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnimationResult">
            <summary>
            The reason why an animation completed.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnimationResult.Exhausted">
            <summary>
            The sequence of animation frames was exhausted.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnimationResult.Stopped">
            <summary>
            The animation was stopped by pressing the Enter key or by calling <see cref="M:SpaceClaim.Api.V23.Animation.Stop"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnimationResult.Canceled">
            <summary>
            The animation was canceled by pressing the Escape key or by calling <see cref="M:SpaceClaim.Api.V23.Animation.Cancel"/>.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Animation">
            <summary>
            Provides members to control an animation.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,SpaceClaim.Api.V23.Command[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})">
            <summary>
            Starts an animation.
            </summary>
            <param name="message">The message to display in the status bar.</param>
            <param name="animator">An animator to provide animation frames.</param>
            <param name="allowedCommands">Commands that are enabled during the animation.</param>
            <remarks>
            This methods starts an animation.
            The animation is asynchronous, so the method returns immediately.
            <para/>
            The <see cref="M:SpaceClaim.Api.V23.Animator.Advance(System.Int32)"/> method of the <paramref name="animator"/> provides the animation frames,
            and the <see cref="E:SpaceClaim.Api.V23.Animator.Completed"/> event of the <paramref name="animator"/> explains how the animation completed.
            <para/>
            When an animation is in progress (when <see cref="P:SpaceClaim.Api.V23.Animation.IsAnimating"/> is <b>true</b>),
            most commands are disabled, except for viewing commands.
            You can supply additional commands in <paramref name="allowedCommands"/>, which are also enabled during the animation.
            For example, if you display a Pause button, this would need to be enabled during the animation.
            <para/>
            The progress bar will be shown. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Boolean,SpaceClaim.Api.V23.Command[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Boolean,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Start(System.String,SpaceClaim.Api.V23.Animator,System.Boolean,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})">
            <summary>
            Starts an animation with control over whether the progress bar is shown.
            </summary>
            <param name="message">The message to display in the status bar.</param>
            <param name="animator">An animator to provide animation frames.</param>
            <param name="allowedCommands">Commands that are enabled during the animation.</param>
            <param name="showProgress">Whether to show progress bar</param>
            <remarks>
            This methods starts an animation.
            The animation is asynchronous, so the method returns immediately.
            <para/>
            The <see cref="M:SpaceClaim.Api.V23.Animator.Advance(System.Int32)"/> method of the <paramref name="animator"/> provides the animation frames,
            and the <see cref="E:SpaceClaim.Api.V23.Animator.Completed"/> event of the <paramref name="animator"/> explains how the animation completed.
            <para/>
            When an animation is in progress (when <see cref="P:SpaceClaim.Api.V23.Animation.IsAnimating"/> is <b>true</b>),
            most commands are disabled, except for viewing commands.
            You can supply additional commands in <paramref name="allowedCommands"/>, which are also enabled during the animation.
            For example, if you display a Pause button, this would need to be enabled during the animation.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Cancel">
            <summary>
            Cancels the animation.
            </summary>
            <returns><b>true</b> if an animation was in progress; otherwise <b>false</b>.</returns>
            <remarks>
            Pressing the Escape key also cancels the animation.
            <para/>
            When the animation is canceled, the <see cref="M:SpaceClaim.Api.V23.Animator.OnCompleted(SpaceClaim.Api.V23.AnimationCompletedEventArgs)"/> method is called
            and the <see cref="P:SpaceClaim.Api.V23.AnimationCompletedEventArgs.Result"/> is <see cref="F:SpaceClaim.Api.V23.AnimationResult.Canceled"/>.
            The animator should revert to the original state, if possible.
            <para/>
            See also <see cref="M:SpaceClaim.Api.V23.Animation.Stop"/>.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Animation.Stop"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Animation.Stop">
            <summary>
            Stops the animation.
            </summary>
            <returns><b>true</b> if an animation was in progress; otherwise <b>false</b>.</returns>
            <remarks>
            Pressing the Enter key also stops the animation.
            <para/>
            When the animation is stopped, the <see cref="M:SpaceClaim.Api.V23.Animator.OnCompleted(SpaceClaim.Api.V23.AnimationCompletedEventArgs)"/> method is called
            and the <see cref="P:SpaceClaim.Api.V23.AnimationCompletedEventArgs.Result"/> is <see cref="F:SpaceClaim.Api.V23.AnimationResult.Stopped"/>.
            The animator should keep the current state, if possible.
            <para/>
            See also <see cref="M:SpaceClaim.Api.V23.Animation.Cancel"/>.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Animation.Cancel"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Animation.IsPaused">
            <summary>
            Gets or sets whether the animation is paused.
            </summary>
            <exception cref="T:System.InvalidOperationException">Cannot set IsPaused when IsAnimating is false.</exception>
            <remarks>
            Pressing the Space bar also pauses or resumes the animation.
            <para/>
            When the animation is paused, <see cref="P:SpaceClaim.Api.V23.Animation.IsAnimating"/> is still <b>true</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Animation.IsAnimating">
            <summary>
            Gets whether an animation is in progress.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.VideoCapture">
            <summary>
            Specifies the target for video capture.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VideoCapture.Window">
            <summary>
            The active window should be captured.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VideoCapture.Application">
            <summary>
            The application window should be captured.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.VideoCapture.Screen">
            <summary>
            The entire screen should be captured.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PixelDepth">
            <summary>
            The pixel depth for a video capture.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PixelDepth.Depth16">
            <summary>
            16 bit depth.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PixelDepth.Depth24">
            <summary>
            24 bit depth.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PixelDepth.Depth32">
            <summary>
            32 bit depth.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.VideoCodec.Codec">
            <summary>
            Gets the FourCC id of the codec.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.VideoCodec.Name">
            <summary>
            Gets the name of the codec.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.VideoCodec.Description">
            <summary>
            Gets the description of the codec.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Application">
            <summary>
            Provides application level methods and properties for SpaceClaim. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.VideoCodecs">
            <summary>
            Gets the video codecs found on this computer.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.StartVideo(System.String,SpaceClaim.Api.V23.VideoCapture,System.Int32,SpaceClaim.Api.V23.PixelDepth,System.Boolean)">
            <summary>
            Starts a video capture using the specified codec.
            </summary>
            <param name="path">The full path of the AVI file to create.</param>
            <param name="capture">What to capture.</param>
            <param name="codec">The codec to use.</param>
            <param name="pixelDepth">The pixel depth.</param>
            <param name="compressed">Whether the video should be compressed.</param>
            <remarks>
            The <paramref name="codec"/> is the FourCC id of the codec.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Application.VideoCodecs"/> property can be used to list installed video codecs.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A video recording is already in progress.</exception>
            <exception cref="T:System.InvalidOperationException">The specified video codec was not found.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to start video recording.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.StopVideo">
            <summary>
            Stops the current video capture.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.ExitProposed">
            <summary>
            Occurs when it is proposed that the application should exit.
            </summary>
            <remarks>
            An event handler can cancel the operation by calling <see cref="M:SpaceClaim.Api.V23.CancelStatus.Cancel"/>.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.ExitAgreed">
            <summary>
            Occurs when the application is about to exit.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.ContextMenuOpening">
            <summary>
            Occurs when the context menu is about to be shown.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.RadialMenuOpening">
            <summary>
            Occurs when the radial menu is about to be shown.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.SessionRolled">
            <summary>
            Occurs when undo or redo has taken place.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.SessionRolledIncremental">
            <summary>
            Occurs when undo or redo has taken place. This event is fired for each undo step in a multi-step undo. 
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Application.SessionChanged">
            <summary>
            Occurs when a command has been executed which modified one or more documents.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.AllowRemoteAccess">
            <summary>
            Gets or sets whether this session allows remote access.
            </summary>
            <remarks>
            If remote access is allowed, then clients on other machines on the network can attach to this session.
            <para/>
            Setting this property to <b>true</b> may cause Windows Firewall messages to be displayed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.UndoSteps">
            <summary>
            Gets the list of undo steps.
            </summary>
            <remarks>
            Each entry in the list contains the command text that appears on the undo drop-list.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.RedoSteps">
            <summary>
            Gets the list of redo steps.
            </summary>
            <remarks>
            Each entry in the list contains the command text that appears on the redo drop-list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.Undo(System.Int32)">
            <summary>
            Performs an undo of the specified number of steps.
            </summary>
            <param name="nSteps">The number of undo steps to perform.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The argument is out of range.</exception>
            <remarks>
            If <paramref name="nSteps"/> is negative, a <see cref="M:SpaceClaim.Api.V23.Application.Redo(System.Int32)"/> is performed.
            <para/>
            <see cref="P:SpaceClaim.Api.V23.Application.UndoSteps"/> and <see cref="P:SpaceClaim.Api.V23.Application.RedoSteps"/> can be used to check the number of steps available.
            <para/>
            This method cannot be called from inside the execution of a command.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.Redo(System.Int32)">
            <summary>
            Performs a redo of the specified number of steps.
            </summary>
            <param name="nSteps">The number of redo steps to perform.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The argument is out of range.</exception>
            <remarks>
            If <paramref name="nSteps"/> is negative, an <see cref="M:SpaceClaim.Api.V23.Application.Undo(System.Int32)"/> is performed.
            <para/>
            <see cref="P:SpaceClaim.Api.V23.Application.UndoSteps"/> and <see cref="P:SpaceClaim.Api.V23.Application.RedoSteps"/> can be used to check the number of steps available.
            <para/>
            This method cannot be called from inside the execution of a command.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.PurgeUndo(System.Int32)">
            <summary>
            Purges the undo history.
            </summary>
            <param name="nStepsToKeep">The number of undo steps to keep.</param>
            <remarks>
            The <paramref name="nStepsToKeep"/> argument specifies the number of undo steps to keep.
            It is harmless to supply a value greater than the current number of undo steps.
            To purge all undo history and free internal memory caches you can supply a value of zero. 
            <para/>
            This method cannot be called from inside the execution of a command.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.Exit">
            <summary>
            Exits the SpaceClaim session to which the API is attached.
            </summary>
            <remarks>
            The API is attached to a SpaceClaim <see cref="T:SpaceClaim.Api.V23.Session"/> using <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/>.
            <para/>
            To stop a different instance of SpaceClaim, <see cref="M:SpaceClaim.Api.V23.Session.Stop"/> can be used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.MainWindow">
            <summary>
            Gets a window that can be supplied as the owner window when displaying modal dialogs.
            </summary>
            <remarks>
            For example, the returned window can be supplied as the <i>owner</i> argument to <see cref="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)"/>
            or <see cref="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.BringToFront">
            <summary>
            Moves the application in front of all other windows.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.IsVisible">
            <summary>
            Gets or sets whether the application is visible.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.IsRibbonMinimized">
            <summary>
            Gets or sets whether the application ribbon is minimized.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.ReportStatus(System.String,SpaceClaim.Api.V23.StatusMessageType,SpaceClaim.Api.V23.Task)">
            <summary>
            Displays a message in the SpaceClaim status log.
            </summary>
            <param name="message">Message to display.</param>
            <param name="messageType">Type of message.</param>
            <param name="messageHandler">Code to execute if the user clicks on the message; or <b>null</b>.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.CheckLicense(System.String)">
            <summary>
            Checks for the existence of a SpaceClaim license.
            </summary>
            <param name="name">The name of the license to check.</param>
            <returns>Returns <b>true</b> if the license exists; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.Version">
            <summary>
            Gets the version of SpaceClaim that is running.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.UserOptions">
            <summary>
            Gets or sets the current user options.
            </summary>
            <remarks>
            The returned <see cref="T:SpaceClaim.Api.V23.Options"/> object contains a snapshot of the current user options.
            Changes to option properties will not affect the user options until the <see cref="P:SpaceClaim.Api.V23.Application.UserOptions"/>
            property is set to the new options value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.TitleBarPrefix">
            <summary>
            Gets or sets the title bar prefix.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Application.TitleBarSuffix">
            <summary>
            Gets or sets the title bar suffix.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddPropertyDisplay(SpaceClaim.Api.V23.PropertyDisplay)">
            <summary>
            Adds a property display to the properties panel in the user interface.
            </summary>
            <param name="display">The property display to be added.</param>
            <remarks>
            See remarks in <see cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddPanelContent(SpaceClaim.Api.V23.Command,System.Windows.Forms.Control,SpaceClaim.Api.V23.Panel)">
            <summary>
            Adds custom content that can be displayed in a built-in panel, replacing the standard content.
            </summary>
            <param name="command">A command to control the visibility of the custom content.</param>
            <param name="content">The custom content to display.</param>
            <param name="panel">The panel whose content is to be replaced.</param>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> property of the <paramref name="command"/> controls whether the
            built-in panel has its content replaced.  If <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> is <b>true</b>, the
            replacement <paramref name="content"/> is shown, otherwise the standard content is shown.
            <para/>
            This facility can be used to customize built-in panels when a custom window tab is activated.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.ShowPanel(SpaceClaim.Api.V23.Panel,System.Boolean)">
            <summary>
            Shows or hides a built-in panel.
            </summary>
            <param name="panel">The panel to show or hide.</param>
            <param name="show"><b>true</b> to show and activate the panel; otherwise <b>false</b>.</param>
            <remarks>
            If <paramref name="show"/> is <b>false</b>, the panel is hidden.
            <para/>
            If <paramref name="show"/> is <b>true</b>, the panel is shown and brought to the front of its tab group.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.ShowPanel(SpaceClaim.Api.V23.Panel,System.Boolean,System.Boolean)">
            <summary>
            Shows or hides a built-in panel, allowing control over whether the panel is made active.
            </summary>
            <param name="panel">The panel to show or hide.</param>
            <param name="show"><b>true</b> to show the panel; otherwise <b>false</b>.</param>
            <param name="activate"><b>true</b> to activate the panel; otherwise <b>false</b>.</param>
            <remarks>
            If <paramref name="show"/> is <b>false</b>, the panel is hidden.
            <para/>
            If <paramref name="show"/> and <paramref name="activate"/> are <b>true</b>, the panel is brought to the front of its tab group.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.SetAllowPanelActivation(SpaceClaim.Api.V23.Panel,System.Boolean)">
            <summary>
            Sets whether a panel can be automatically made visible and activated. 
            </summary>
            <param name="panel">The panel.</param>
            <param name="allowActivation"><b>true</b> to allow automatic activation; otherwise <b>false</b>.</param>
            <remarks>
            An example of a panel which can be automatically activated is the Properties panel (by selecting a note). 
            If <i>allowActivation</i> is set to false, then the panel will not be activated.
            <para/>
            The default value is true. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.GetAllowPanelActivation(SpaceClaim.Api.V23.Panel)">
            <summary>
            Gets whether a panel can be automatically made visible and activated. 
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddOptionsPage(SpaceClaim.Api.V23.OptionsPage)">
            <summary>
            Adds a page to the options dialog.
            </summary>
            <param name="page">The options page to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddFileHandler(SpaceClaim.Api.V23.FileOpenHandler)">
            <summary>
            Adds a handler for a file filter to the File Open dialog.
            </summary>
            <param name="handler">The handler to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddFileHandler(SpaceClaim.Api.V23.FileSaveHandler)">
            <summary>
            Adds a handler for a file filter to the File Save dialog.
            </summary>
            <param name="handler">The handler to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddSheetMetalFormHandler(SpaceClaim.Api.V23.Command,SpaceClaim.Api.V23.SheetMetalFormHandler)">
            <summary>
            Adds a handler for a custom sheet metal form.
            </summary>
            <param name="command">A command to use for the button in the Forms Gallery.</param>
            <param name="handler">A handler for the custom form.</param>
            <remarks>
            The <paramref name="command"/> is used for the appearance of the button in the Forms Gallery.
            The Forms Gallery will take care of the operation of the button when it is pressed, and the <paramref name="handler"/> will be called.
            You should not attempt to handle the <see cref="E:SpaceClaim.Api.V23.Command.Executing"/> event of the command yourself,
            since this may interfere with the correct operation of the Forms Gallery.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddSheetMetalBendHandler(SpaceClaim.Api.V23.SheetMetalBendHandler)">
            <summary>
            Adds a handler for a custom sheet metal form.
            </summary>
            <param name="handler">A handler for the custom bend.</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddMoveToolHandler(SpaceClaim.Api.V23.MoveToolHandler)">
            <summary>
            Adds a handler for the Move Tool.
            </summary>
            <param name="handler">A handler.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddBarcodeToolHandler(SpaceClaim.Api.V23.BarcodeToolHandler)">
            <summary>
            Adds a handler for the Barcode Tool.
            </summary>
            <param name="handler">A handler.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddSelectionHandler``1(SpaceClaim.Api.V23.SelectionHandler{``0})">
            <summary>
            Adds a handler for custom selection behavior.
            </summary>
            <typeparam name="TDocObject">The type of object to which this handler is bound.</typeparam>
            <param name="handler">The handler to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddCommandFilter(SpaceClaim.Api.V23.NativeCommand,SpaceClaim.Api.V23.CommandFilter)">
            <summary>
            Adds a command filter for a native (built-in) command.
            </summary>
            <param name="command">The native command to which the filter applies.</param>
            <param name="filter">A command filter to use for the native command.</param>
            <remarks>
            When the native command is executed, the <see cref="M:SpaceClaim.Api.V23.CommandFilter.Apply(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/> method
            is called, giving the filter first chance to handle the command.
            Any remaining or additional objects returned from the <see cref="M:SpaceClaim.Api.V23.CommandFilter.Apply(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/> method are then processed by the native command.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.AddRecentFile(System.String)">
            <summary>
            Adds a file to the recently used files list.
            </summary>
            <param name="path">The full path of the file.</param>
            <remarks>
            This methods adds a file to the Recent Documents list on the File menu.
            <para/>
            When the user opens or saves files using the user interface, these files are automatically
            added to the Recent Documents list on the File menu.
            In contrast, when the API is used to open or save files, e.g. using <see cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/>
            or <see cref="M:SpaceClaim.Api.V23.Document.Save"/> methods, no files are added to the Recent Documents list,
            because the API might be loading files from a library location unknown to the user.
            To add a file to the Recent Documents list, you can call <see cref="M:SpaceClaim.Api.V23.Application.AddRecentFile(System.String)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.ExecuteOnMainThread(SpaceClaim.Api.V23.Task)">
            <summary>
            Executes code asynchronously on the main application thread.
            </summary>
            <param name="task">The code to execute</param>
            <remarks>This method can be used instead of the following method of running code on the main thread:
            <code>
            <![CDATA[
            System.Windows.Forms.Application.OpenForms[0].BeginInvoke(new Task(() => {
            	// Code to be executed
            }));
            ]]>
            </code>
            The above code, which calls <i>BeginInvoke</i> directly, had limitations in that it would not work if the <b>host</b> attribute 
            in the add-in manifest was set to <i>NewAppDomain</i>. This method has no such limitation.  
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.OpenInKeyShot(System.String)">
            <summary>
            Opens the specified .bip file in KeyShot.
            </summary>
            <param name="bipFilename">The KeyShot .bip file to open.</param>
            <returns>Returns <b>true</b> if KeyShot was started with the requested file; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.RunScript(System.String)">
            <summary>
            Runs a script file (*.scscript or *.py).
            </summary>
            <param name="filename">The path to the script file. The script file can have either be an <i>.scscript</i> or a <i>.py</i> extension.</param>
            <returns>Returns <b>true</b> if the script file was found and was able to be run; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.RunScript(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             Runs a script file (*.scscript or *.py).
             </summary>
             <param name="filename">The path to the script file. The script file can have either be an <i>.scscript</i> or a <i>.py</i> extension.</param>
             <param name="argDictionary">The argument dictionary of named value pairs.</param>
             <returns>Returns <b>true</b> if the script file was found and was able to be run; otherwise <b>false</b>.</returns>
             <example>
             
             Example usage:
             
             <code>
             var scriptParams = new Dictionary&lt;string, object&gt;();
             scriptParams.Add("Name", "Testing");
             Application.RunScript(@"c:\Test.py", scriptParams);
             </code>
             
             Then to access the argument named "Name" in the Python script:
             <code>
             value = argsDict["Name"]
            </code>
             </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.RunScript(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Object@)">
             <summary>
             Runs a script file (*.scscript or *.py).
             </summary>
             <param name="filename">The path to the script file. The script file can have either be an <i>.scscript</i> or a <i>.py</i> extension.</param>
             <param name="argDictionary">The argument dictionary of named value pairs.</param>
             <param name="result">The result out parameter.</param>
             <returns>Returns <b>true</b> if the script file was found and was able to be run; otherwise <b>false</b>.</returns>
             <example>
             
             Example usage:
             
             <code>
             var scriptParams = new Dictionary&lt;string, object&gt;();
             scriptParams.Add("Name", "Testing");
             Application.RunScript(@"c:\Test.py", scriptParams);
             </code>
             
             Then to access the argument named "Name" in the Python script:
             <code>
             value = argsDict["Name"] 
            </code>
             </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.RunScriptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Action{System.Boolean,System.Object})">
             <summary>
             Runs a script file on a background thread (*.scscript or *.py).
             </summary>
             <param name="filename">The path to the script file. The script file can have either be an <i>.scscript</i> or a <i>.py</i> extension.</param>
             <param name="argDictionary">The argument dictionary of named value pairs.</param>
             <param name="onScriptComplete">The action to perform after script completes. The first argument specifies if the script passes, the second argument is a result that can be set in the script.</param>
             <returns>Returns <b>true</b> if the script file was found and was able to be run; otherwise <b>false</b>.</returns>
             <example>
             
             Example usage:
             
             <code>
             var scriptParams = new Dictionary&lt;string, object&gt;();
             scriptParams.Add("Name", "Testing");
             Application.RunScriptAsync(@"c:\Test.py", scriptParams, (pass, result) => {
            		if (pass)
            			MessageBox.Show(result.ToString())
             });
             </code>
             
             Then to access the argument named "Name" in the Python script:
             <code>
             value = argsDict["Name"] 
            </code>
             
             To specify a result for the "onScriptComplete" action, set a "result" variable in the script:
             <code>
             result = "Hello World" 
            </code>
             </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Application.RunPerformanceTest(System.Boolean,System.Int32)">
            <summary>
            Runs a graphics performance test.
            </summary>
            <param name="showReport">Whether to show the performance report window.</param>
            <param name="numRotations">The number of times to rotate the model. Each rotation is 36 frames.</param>
            <returns>The frame rate (fps)</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Bounds`1">
            <summary>
            Start and end values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bounds`1.#ctor(`0,`0)">
            <summary>
            Constructs a bounds object.
            </summary>
            <param name="start">The start of the bounds.</param>
            <param name="end">The end of the bounds.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bounds`1.Start">
            <summary>
            Gets or sets the start of the bounds.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bounds`1.End">
            <summary>
            Gets or sets the end of the bounds.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Document">
            <summary>
            A SpaceClaim document.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Document"/> contains a hierarchy of <see cref="T:SpaceClaim.Api.V23.DocObject"/> objects.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Symbols">
            <summary>
            Gets the symbols in this document.
            </summary>
            <remarks>
            A symbol is a definition of the design curves and notes, which lie in the XY plane.
            Instances of the symbol are represented by <see cref="T:SpaceClaim.Api.V23.SymbolInsert"/> objects.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.DrawingSheets">
            <summary>
            Gets the drawing sheets in this document.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Layers">
            <summary>
            Gets the layers in this document.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.GetLayer(System.String)">
            <summary>
            Gets the layer that has the specified name.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The layer with the specified name, or <b>null</b> if no such layer exists.</returns>
            <remarks>
            Layer names are case sensitive.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.DefaultLayer">
            <summary>
            Gets the default layer for the document.
            </summary>
            <remarks>
            When a layer is deleted, all its objects are automatically moved to the default layer.
            It is not possible to delete the default layer.
            <para/>
            The default layer cannot be renamed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Units">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)">
            <summary>
            Opens a <see cref="T:SpaceClaim.Api.V23.Document"/> and restores its <see cref="T:SpaceClaim.Api.V23.Window"/> objects.
            </summary>
            <param name="path">The path of the document file to open.</param>
            <param name="options">Import options to use, or <b>null</b> to use the current user options.</param>
            <returns>The opened document.</returns>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <exception cref="T:System.ArgumentException">Unrecognized file format.</exception>
            <remarks>
            This method can also be used to import a file of another CAD format.
            To export a file, use the <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/> method.
            <para/>
            When importing an ACIS or Parasolid file, if any bodies, faces, or edges have <i>id</i> attributes,
            these are converted to text attributes on the resulting design bodies, design faces, or design edges,
            with the name "@id".
            <para/>
            <i>Id</i> attributes have string values.
            Null values are ignored, but empty values are not.
            <para/>
            See <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/> for details of <i>id</i> attributes in ACIS and Parasolid.
            <para/>
            To get a list of windows opened with the document, use <see cref="M:SpaceClaim.Api.V23.Window.GetWindows(SpaceClaim.Api.V23.Document)"/>
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>
            <seealso cref="M:SpaceClaim.Api.V23.Window.GetWindows(SpaceClaim.Api.V23.Document)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.Load(System.String)">
            <summary>
            Loads a document, without displaying any windows.
            </summary>
            <param name="path">The path of the document file to open.</param>
            <returns>The loaded document.</returns>
            <remarks>
            Unlike <see cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/>, this method only loads SpaceClaim documents.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.Save">
            <summary>
            Saves the document.
            </summary>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <remarks>
            If the document has never been saved, the user is prompted to provide a path.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.SaveAs(System.String)">
            <summary>
            Saves the document to the specified path.
            </summary>
            <param name="path">The path of the file to write to.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.SaveAsSnapshot(System.String)">
            <summary>
            Saves the document to the specified path, without changing the current document name or clearing the modified flag.
            </summary>
            <param name="path">The path of the file to write to.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.ReplayParameterIds">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.GetReplayParameterById(System.String)">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.ApplyReplayParameters">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.GetFeatureTrackState">
            <exclude/>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentAdded">
            <summary>
            Occurs when a document is added, i.e. loaded.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document that was added.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentRemoved">
            <summary>
            Occurs when a document is removed, i.e. unloaded.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document that was removed.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentCompleted">
            <summary>
            Occurs when a document is completed, i.e. when it ceases to be lightweight.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document that was completed.
            <para/>
            This event is called on a background thread.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.Document.IsComplete"/> for more information.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Document.IsComplete"/>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveProposed">
            <summary>
            Occurs when it is proposed that a document should be deep-saved.
            </summary>
            <remarks>
            When the user saves the document shown in a window, this starts a deep-save operation
            where the main document and any modified referenced documents are saved.
            <para/>
            <see cref="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveProposed"/> is raised only for the main document, and not for the referenced documents.
            An event handler can cancel the operation by calling <see cref="M:SpaceClaim.Api.V23.CancelStatus.Cancel"/>.
            <para/>
            If the event was not canceled, <see cref="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveAgreed"/> is raised, indicating that the deep-save is about to proceed.
            <para/>
            After the deep-save is finished, <see cref="E:SpaceClaim.Api.V23.Document.DocumentDeepSaved"/> is raised.
            <para/>
            For each document to be saved, including the main document itself,
            <see cref="E:SpaceClaim.Api.V23.Document.DocumentSaving"/> and <see cref="E:SpaceClaim.Api.V23.Document.DocumentSaved"/> are raised before and after the save.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveAgreed">
            <summary>
            Occurs when it is agreed that a document will be deep-saved.
            </summary>
            <remarks>
            <inheritdoc cref="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveProposed"/>
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentDeepSaved">
            <summary>
            Occurs when a document has been deep-saved.
            </summary>
            <remarks>
            <inheritdoc cref="E:SpaceClaim.Api.V23.Document.DocumentDeepSaveProposed"/>
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentSaving">
            <summary>
            Occurs when a document is about to be saved.
            </summary>
            <remarks>
            If any related data is held external to SpaceClaim, this event signals that it is time to store that data.
            <para/>
            External data can be stored in some external location,
            or it can be stored in a <see cref="T:SpaceClaim.Api.V23.CustomProperty"/> of the document,
            or as custom attributes of doc objects (e.g. <see cref="M:SpaceClaim.Api.V23.DocObject.SetTextAttribute(System.String,System.String)"/>).
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentSaved">
            <summary>
            Occurs when a document is saved.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentOpened">
            <summary>
            Occurs when a document is opened. 
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document that was opened.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentCloseProposed">
            <summary>
            Occurs when it is proposed that a document should close.
            </summary>
            <remarks>
            This event is fired when a document is closed by a user or the last window of a document is closed 
            by <see cref="M:SpaceClaim.Api.V23.Window.Close">Window.Close</see>.
            <para/>
            <para/>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document to be closed.
            <para/>
            An event handler can cancel the operation by calling <see cref="M:SpaceClaim.Api.V23.CancelStatus.Cancel"/>.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentCloseAgreed">
            <summary>
            Occurs when a document is about to be closed.
            </summary>
            <remarks>
            A document is closed when the last window of the document is closed. This event asserts that
            you agreed programmatically (by either not handling the <see cref="E:SpaceClaim.Api.V23.Document.DocumentCloseProposed"/>
            event or by handling the event and not calling <see cref="M:SpaceClaim.CancelStatus.Cancel"/>) to allow
            the user to decide whether to close the document.
            <para/>
            <para/>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document to be closed.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentClosed">
            <summary>
            Occurs when a document is closed.
            </summary>
            <remarks>
            A document is closed when the last window of the document is closed.
            <para/>
            <para/>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the document that was closed. 
            <para/>
            Note that the document has already been deleted at this time.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.DocumentChanged">
            <summary>
            Occurs when a document is changed.
            </summary>
            <remarks>
            Raised when any <see cref="T:SpaceClaim.Api.V23.DocObject">DocObjects</see> are added, deleted, or changed. Note that only <see cref="T:SpaceClaim.Api.V23.DocObject">DocObjects</see> which 
            implement <see cref="T:SpaceClaim.Api.V23.IHasLayer">IHasLayer</see> are considered.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Document.CustomPropertiesChanged">
            <summary>
            Occurs when custom properties have changed.
            </summary>
            <remarks>
            Raised when any <see cref="T:SpaceClaim.Api.V23.CustomProperty">CustomProperty</see> is added, deleted, or changed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.Create">
            <summary>
            Creates a new <see cref="T:SpaceClaim.Api.V23.Document"/>, and a <see cref="T:SpaceClaim.Api.V23.Window"/> showing the new empty design.
            </summary>
            <returns>The new document created.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.GetReferencedDocuments(System.Boolean)">
            <summary>
            Gets documents referenced by this document.
            </summary>
            <param name="recursive"><b>true</b> for the recursive collection; otherwise <b>false</b>.</param>
            <returns>Referenced documents.</returns>
            <remarks>
            The result contains no duplicates, and does not contain this document.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.IsModified">
            <summary>
            Gets or sets whether the document needs saving.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.IsComplete">
            <summary>
            Gets whether the document is complete, i.e. not lightweight.
            </summary>
            <remarks>
            If the background loading user option is <i>on</i>, when a document is initially loaded, it is 
            loaded in a <i>lightweight</i> state, in which product structure is present, but bodies and their 
            geometry are not.  In this state, <see cref="P:SpaceClaim.Api.V23.Document.IsComplete"/> returns <b>false</b>.
            Later, when document loading completes on a background thread, the <see cref="E:SpaceClaim.Api.V23.Document.DocumentCompleted"/> event
            is raised, and then <see cref="P:SpaceClaim.Api.V23.Document.IsComplete"/> returns <b>true</b>.
            <para/>
            If background loading is <i>off</i>, the document is loaded in a complete state straight
            away, and <see cref="E:SpaceClaim.Api.V23.Document.DocumentCompleted"/> will not be raised.
            <para/>
            If a document is incomplete, an exception is thrown if an attempt is made to modify it.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.IsRemoved">
            <summary>
            Gets whether the document has been removed from the session.
            </summary>
            <remarks>
            The document is removed when it is no longer used in the session.
            This happens when the user closes the last window that shows the document, directly or indirectly.
            <para/>
            Undo can resurrect a document, so the <see cref="P:SpaceClaim.Api.V23.Document.IsRemoved"/> state is not necessarily permanent.
            The <see cref="E:SpaceClaim.Api.V23.Document.DocumentAdded"/> and <see cref="E:SpaceClaim.Api.V23.Document.DocumentRemoved"/> events can be used to monitor when documents are added or removed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Path">
            <summary>
            Gets or sets the full path of the document on disk.
            </summary>
            <exception cref="T:System.ArgumentException">Another document is already loaded with the specified path.</exception>
            <remarks>
            Returns <see cref="F:System.String.Empty"/> if the <see cref="T:SpaceClaim.Api.V23.Document"/> does not yet have a path,
            i.e. if it has never been saved.
            <para/>
            The path of a newly created document can be set so that the user is not prompted when <see cref="M:SpaceClaim.Api.V23.Document.Save"/> is called.
            The path provided must not match the path of another loaded document.
            <para/>
            Setting a new path has no affect on the value of <see cref="P:SpaceClaim.Api.V23.Document.IsModified"/>.
            To make sure the document needs to be saved to the new path, <see cref="P:SpaceClaim.Api.V23.Document.IsModified"/> should be set to <b>true</b>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.GetDocument(System.String)">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.Document"/> that has the specified path on disk.
            </summary>
            <param name="path">The path of the file on disk.</param>
            <returns>The document with that path, or <b>null</b> if no such document is loaded.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Parts">
            <summary>
            Gets the parts in this document.
            </summary>
            <remarks>
            A document has a <see cref="P:SpaceClaim.Api.V23.Document.MainPart"/>, which is the root of its assembly structure.
            If it has internal components (components whose parts live in the same document), then it will have other parts too.
            The <see cref="P:SpaceClaim.Api.V23.Document.Parts"/> property returns all the parts in the document, including the <see cref="P:SpaceClaim.Api.V23.Document.MainPart"/>.
            <para/>
            A "3D Markup" document has no parts of its own, so an empty collection will be returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.MainPart">
            <summary>
            Gets the main part for this document.
            </summary>
            <remarks>
            See comments in <see cref="P:SpaceClaim.Api.V23.Document.Parts"/>.
            <para/>
            A "3D Markup" document has no main part, so <b>null</b> will be returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.MainPartDisplaysFileName">
            <summary>
            Gets or sets whether the main part should use the file name as its display name.
            </summary>
            <remarks>
            This setting controls how the <see cref="P:SpaceClaim.Api.V23.Part.DisplayName"/> of the <see cref="P:SpaceClaim.Api.V23.Document.MainPart"/> is determined.
            The display name is used in the Structure panel and on window tabs.
            <para/>
            If the value is <b>false</b>, then the <see cref="P:SpaceClaim.Api.V23.Part.Name"/> of the part is used as the display name.
            <para/>
            If the value is <b>true</b> and the document has been saved (its <see cref="P:SpaceClaim.Api.V23.Document.Path"/> is not <see cref="F:System.String.Empty"/>)
            then the file name is used as the display name; otherwise the <see cref="P:SpaceClaim.Api.V23.Part.Name"/> of the part is used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.CoreProperties">
            <summary>
            Gets the core properties of the document.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.CustomProperties">
            <summary>
            Gets the collection of custom properties for the document.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.ImportData">
            <summary>
            Gets information about imported geometry, if available
            </summary>
            <remarks>Returns null if the document is not based on imported geometry.</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.Materials">
            <summary>
            Gets the collection of materials for the document.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.DeleteObjects``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Deletes a collection of objects.
            </summary>
            <param name="objects">The objects to delete.</param>
            <remarks>
            This method is more efficient than calling <see cref="M:SpaceClaim.Api.V23.DocObject.Delete"/> many times.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.IsLocked">
            <summary>
            Gets or sets whether the document is locked.
            </summary>
            <remarks>
            If a document is locked, then its doc objects cannot be modified, since a <see cref="T:SpaceClaim.Api.V23.LockedException"/> will be thrown.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.InternalizeParts(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Part},System.Boolean)">
            <summary>
            Makes internal copies of instantiated external parts.
            </summary>
            <param name="parts">Parts to internalize.</param>
            <param name="deep">Whether to internalize the entire assembly structure.</param>
            <returns>The mapping from external part to internal part.</returns>
            <remarks>
            External parts (parts in other documents) are copied into this document
            and <see cref="T:SpaceClaim.Api.V23.Instance"/> templates in this document are modified to use the internal part instead.
            Modified instances include <see cref="T:SpaceClaim.Api.V23.Component"/> and <see cref="T:SpaceClaim.Api.V23.DrawingView"/> objects.
            <para/>
            A dictionary is returned mapping each original external part to the corresponding internal part.
            Any <paramref name="parts"/> that are not directly referenced as templates of instances in this document
            are ignored and are not included as keys in the dictionary returned.
            <para/>
            If <paramref name="deep"/> is <b>true</b>, the entire assembly structure of the external part is internalized,
            which may involve parts from many documents.
            If <paramref name="deep"/> is <b>false</b>, the external part itself, along with any internal parts in that document, are internalized.
            In both cases, any parts implicitly internalized are also listed in the dictionary returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.ExternalizeParts(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Part},System.String)">
            <summary>
            Externalize parts to separate files. 
            </summary>
            <param name="parts">Parts to externalize.</param>
            <param name="directory">Output directory.</param>
            <returns>The mapping from internal part to external part.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Document.PurgeUndo(System.Int32)">
            <summary>
            Purges the undo history for the document.
            </summary>
            <param name="nStepsToKeep">The number of undo steps to keep.</param>
            <remarks>The nStepsToKeep argument specifies the number of undo steps to keep. It is harmless to supply a value greater than the current number of undo steps. To purge all undo history and free internal memory caches you can supply a value of zero. 
            <br/><br/>This method cannot be called from inside the execution of a command.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Document.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.InnerDocument.WorldOrientation">
            <summary>
            Gets the orientation of the document world axes when seen in trimetric projection
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MoveToolHandler">
            <summary>
            Abstract base class to control Barcode Tool default values.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImportData">
            <summary>
            Imported geometry information
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportData.Path">
            <summary>
            Gets the original geometry file path
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportData.Date">
            <summary>
            Gets the modified date of the original geometry file
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomPartProperty">
            <summary>
            A custom property of a part.
            </summary>
            <remarks>
            <see cref="P:SpaceClaim.Api.V23.Part.CustomProperties"/> returns the collection of custom properties for a part.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomPartProperty.Create(SpaceClaim.Api.V23.Part,System.String,System.String)">
            <summary>
            Creates a custom property with a <see cref="T:System.String"/> value.
            </summary>
            <param name="part">The part in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomPartProperty.Create(SpaceClaim.Api.V23.Part,System.String,System.Boolean)">
            <summary>
            Creates a custom property with a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="part">The part in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomPartProperty.Create(SpaceClaim.Api.V23.Part,System.String,System.Double)">
            <summary>
            Creates a custom property with a <see cref="T:System.Double"/> value.
            </summary>
            <param name="part">The part in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomPartProperty.Create(SpaceClaim.Api.V23.Part,System.String,System.DateTime)">
            <summary>
            Creates a custom property with a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="part">The part in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomPartProperty.Name">
            <summary>
            Gets the name of the custom property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomPartProperty.Value">
            <summary>
            Gets or sets the value of the custom property.
            </summary>
            <exception cref="T:System.InvalidCastException">Attempt to change the value type.</exception>
            <remarks>
            The value type of the custom property is cannot be changed.
            For example, if you create a custom property with a <b>bool</b> value, you cannot later assign a <b>string</b> value to it.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomPartProperty.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomPartProperty.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomPartPropertyDictionary">
            <summary>
            A dictionary mapping names to <see cref="T:SpaceClaim.Api.V23.CustomPartProperty"/> objects.
            </summary>
            <remarks>
            You can access a custom property of a specific name by looking it up using the indexer or the <see cref="M:SpaceClaim.Api.V23.CustomPartPropertyDictionary.TryGetValue(System.String,SpaceClaim.Api.V23.CustomPartProperty@)"/> method.
            Names are case sensitive.
            <para/>
            The collection of custom properties can be accessed using the <see cref="P:SpaceClaim.Api.V23.CustomPartPropertyDictionary.Values"/> property.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.GridSettings">
            <summary>
            Settings for the grid, which is displayed when the user works in a cross section.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.GridSettings.CreateFromMajorSize(System.Double,System.Int32)">
            <summary>
            Creates grid settings by specifying the major grid size, and the number of minor divisions per major grid square.
            </summary>
            <param name="majorGridSize">The size of the major grid square in system units (meters).</param>
            <param name="minorsPerMajor">The number of minor divisions per major grid square.</param>
            <returns>The grid settings.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.GridSettings.CreateFromMinorSize(System.Double,System.Int32)">
            <summary>
            Creates grid settings by specifying the minor grid size, and the number of minor divisions per major grid square.
            </summary>
            <param name="minorGridSize">The size of the minor grid square in system units (meters).</param>
            <param name="minorsPerMajor">The number of minor divisions per major grid square.</param>
            <returns>The grid settings.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.GridSettings.MajorGridSize">
            <summary>
            Gets the size of the major grid square in system units (meters).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.GridSettings.MinorGridSize">
            <summary>
            Gets the size of the minor grid square in system units (meters).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.GridSettings.MinorsPerMajor">
            <summary>
            Gets the number of minor divisions per major grid square.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FileLoadResolver">
            <summary>
            Abstract base class for resolving subassembly files at load time. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileLoadResolver.Force">
            <summary>
            Indicates whether <see cref="M:SpaceClaim.Api.V23.FileLoadResolver.ResolvePath(System.String,System.String)">ResolvePath</see> should be called regardless of whether the file was found or not. 
            </summary>
            <remarks>
            If not overridden, the default is <b>false</b>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FileLoadResolver.ResolvePath(System.String,System.String)">
            <summary>
            Provides a location of a subassembly file.
            </summary>
            <param name="topLevelDocumentPath">The file path of the top-level document being loaded.</param>
            <param name="documentPath">The file path of the subassembly file being loaded.</param>
            <returns>The desired location of the subassembly file.</returns>
            <remarks>
            A return value of null will prevent the file from being loaded, creating a stub component in the design. 
            Also, the dialog which normally prompts the user for the file location will not be shown.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SelectionResult">
            <summary>
            Describes a selection result which appears in the Selection panel. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SelectionResult.Create(System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates data for a selection result. <see cref="M:SpaceClaim.Api.V23.SelectionHandler`1.CreateSelectionResults(`0)"/>. 
            </summary>
            <param name="label">Text to show in the result.</param>
            <param name="items">A list of items to include in the result.</param>
            <returns>A selection result.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.SelectionHandler`1">
            <summary>
            Abstract base class for a selection handler. 
            </summary>
            <typeparam name="TDocObject">The type of object to which this handler is bound.</typeparam>
            <remarks>
            This handler can be used to modify selection behavior for a type of object, specified using
            <typeparamref name="TDocObject"/>. 
            
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SelectionHandler`1.CreateSelectionResults(`0)">
            <summary>
            Creates additional results for display in the Selection panel. 
            </summary>
            <param name="selectedObject">The object to be used as a seed for the results.</param>
            <returns>A collection of <see cref="T:SpaceClaim.Api.V23.SelectionResult"/> results. Collection may be empty.</returns>
            <remarks>
            The code within this method may be executed in a separate worker thread, so it should only read data and not modify. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SelectionHandler`1.GetToolbarLayout(System.Collections.Generic.ICollection{`0})">
            <summary>
            Gets the mini-toolbar to be shown when objects of a type are selected
            </summary>
            <param name="selectedObjects"></param>
            <returns></returns>
            <remarks>The toolbar layout is only available in SpaceClaim. Overriding this method does not anything in Discovery.</remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SelectionHandler`1.ActivateToolOnSelection(`0)">
            <summary>
            Controls whether an object-specific tool is activated on selection.
            </summary>
            <param name="selectedObject"></param>
            <returns></returns>
            <remarks>
            An example of a tool that may be started automatically is the Notes Edit Tool.
            <br/>
            If this method is not overridden, the default value is true. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SelectionHandler`1.GetToolOnFullEdit(`0)">
            <summary>
            Determines the tool to set when full edit mode is enabled for an object of type <typeparamref name="TDocObject"/>.
            </summary>
            <param name="selectedObject">The object for which full edit mode has been enabled.</param>
            <returns>The tool to be set.</returns>
            <remarks>Full edit mode is only available in Discovery. Overriding this method does not do anything in SpaceClaim.</remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.BarcodeToolHandler">
            <summary>
            Abstract base class to control Barcode Tool default values.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.BarcodeToolHandler.Type">
            <summary>
            Gets the default barcode type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.BarcodeToolHandler.Data">
            <summary>
            Gets the default barcode data.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.BarcodeToolHandler.ModuleWidth">
            <summary>
            Gets the default barcode module width
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BarcodeToolHandler.TryGetSize(SpaceClaim.Api.V23.BarcodeType,System.Nullable{System.Double}@,System.Nullable{System.Double}@,System.Nullable{System.Double}@,System.Nullable{System.Double}@)">
            <summary>
            Gets the default barcode size for the given type.
            </summary>
            <param name="type">The barcode type.</param>
            <param name="moduleWidth">The module width. </param>
            <param name="width">The overall barcode width.</param>
            <param name="height">The overall barcode height.</param>
            <param name="fontSize">The font size.</param>
            <returns><b>true</b> if the size values should be used; otherwise <b>false</b></returns>
            <remarks>Either the module width <i>or</i> the overall size can be specified.
            <br/><br/>
            To specify module width, provide a value for <i>moduleWidth</i> and set <i>width</i> and <i>height</i> to null.
            <br/>
            To specify overall size, provide a value for <i>width</i> and <i>height</i> and set <i>moduleWidth</i> to null. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.INumericPresentation">
            <summary>
            Methods for formatting and parsing numeric values as strings.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.INumericPresentation.Format(System.Double)">
            <summary>
            Formats a value for display as a string.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string format for the value.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.INumericPresentation.TryParse(System.String,System.Double@)">
            <summary>
            Parses a string to obtain a value.
            </summary>
            <param name="text">The string to parse.</param>
            <param name="value">The value obtained.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.MeasurementUnit">
            <summary>
            A unit of measurement.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeasurementUnit.System">
            <summary>
            Gets a measurement unit for system units.
            </summary>
            <remarks>
            The system measurement unit has a <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/> of 1 and an empty <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.Symbol"/> string.
            <para/>
            The <see cref="M:SpaceClaim.Api.V23.MeasurementUnit.TryParse(System.String,System.Double@)"/> method also handles expressions, e.g. "(1 + 2) * 3 ^ (3/3 + 3)" = 243.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor">
            <summary>
            Gets the conversion factor from system units to user units for this unit of measurement.
            </summary>
            <remarks>
            Internally SpaceClaim works in SI Units (meters, kilograms, seconds) and angles are in radians.
            <see cref="M:SpaceClaim.Api.V23.MeasurementUnit.Format(System.Double)"/> can be used to convert a system value to a string in user units,
            and <see cref="M:SpaceClaim.Api.V23.MeasurementUnit.TryParse(System.String,System.Double@)"/> can be used to convert back again.
            <para/>
            You can also use <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/> to convert to and from user units.
            <para/>
            <i>user length</i> = <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/> * <i>system length</i>.
            <para/>
            For example, if the user is working in centimeters, <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/> would be 100.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeasurementUnit.Symbol">
            <summary>
            Gets the symbol for this unit of measurement.
            </summary>
            <remarks>
            For example: "mm" for millimeters, "cm" for centimeters, or "in" for inches.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MeasurementUnit.Format(System.Double)">
            <summary>
            Converts a system value into a string in user units.
            </summary>
            <param name="systemValue">Value in system units.</param>
            <returns>Formatted output string in user units.</returns>
            <remarks>
            As well as performing units conversion (see <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/>),
            this method also formats the output string according to whether the user is working in decimals or fractions.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MeasurementUnit.TryParse(System.String,System.Double@)">
            <summary>
            Attempts to parse a string that is in user units.
            </summary>
            <param name="text">User value to parse.</param>
            <param name="systemValue">Value in system units.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            As well as performing units conversion (see <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.ConversionFactor"/>),
            this method also handles expressions (e.g. "(1 + 2) * 3 ^ (3/3 + 3)" = 243)
            and values with explicit units stated (e.g. "1cm + 1 1/2 mm" = 0.0115).
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ContextSubMenu">
            <summary>
            A context sub menu.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextSubMenu.Create">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.ContextSubMenu"/>.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextSubMenu.Create(SpaceClaim.Api.V23.Command[])">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.ContextSubMenu"/> with the specified commands.
            </summary>
            <param name="commands">Commands to be included in the submenu.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextSubMenu.AddGroup(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})">
            <summary>
            Adds the specified commands. A separator is added at the end. 
            </summary>
            <param name="commands">Commands to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextSubMenu.AddItem(SpaceClaim.Api.V23.Command)">
            <summary>
            Adds the specified command.
            </summary>
            <param name="command">Command to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextSubMenu.AddSeparator">
            <summary>
            Adds a separator.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ScriptObjectHelper">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ScriptObjectHelper.GetTypeMap">
            <summary>
            Gets the type map.
            This method is used (by reflection) in the SpaceClaim.Commands.Scripting.Helpers.APIHelper class.
            It is used by intellisense in scripting to (for Smart Variables) to convert form SpaceClaim type to
            API type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.MetricLengthUnit">
            <summary>
            Metric length units.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricLengthUnit.Meters">
            <summary>
            Meters.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricLengthUnit.Centimeters">
            <summary>
            Centimeters.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricLengthUnit.Millimeters">
            <summary>
            Millimeters.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricLengthUnit.Micrometers">
            <summary>
            Micrometers.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricLengthUnit.Nanometers">
            <summary>
            Nanometers.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MetricMassUnit">
            <summary>
            Metric mass units.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricMassUnit.Kilograms">
            <summary>
            Kilograms.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MetricMassUnit.Grams">
            <summary>
            Grams.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImperialLengthUnit">
            <summary>
            Imperial length units.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialLengthUnit.Feet">
            <summary>
            Feet.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialLengthUnit.Inches">
            <summary>
            Inches.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialLengthUnit.FeetAndInches">
            <summary>
            Feet and inches.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialLengthUnit.Mils">
            <summary>
            Mils.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImperialMassUnit">
            <summary>
            Imperial mass units.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialMassUnit.Pounds">
            <summary>
            Pounds.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImperialMassUnit.Ounces">
            <summary>
            Ounces.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.UnitsSystemType">
            <summary>
            Specifies the type of units system.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.UnitsSystemType.Metric">
            <summary>
            The metric units system.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.UnitsSystemType.Imperial">
            <summary>
            The imperial units system.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.UnitsSystem">
            <summary>
            A units system.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.UnitsSystem.Type">
            <summary>
            The units system type.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MetricUnits">
            <summary>
            A metric units system.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.MetricUnits.#ctor(SpaceClaim.Api.V23.MetricLengthUnit,SpaceClaim.Api.V23.MetricMassUnit,SpaceClaim.Api.V23.AngleUnit)">
            <summary>
            Constructs a metric units system.
            </summary>
            <param name="length">The length unit.</param>
            <param name="mass">The mass unit.</param>
            <param name="angle">The angle unit.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.MetricUnits.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.MetricUnits.Length">
            <summary>
            Gets the length unit.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MetricUnits.Mass">
            <summary>
            Gets the mass unit.
            </summary>
            <exception cref="T:System.NotSupportedException">Mass units in SpaceClaim are not metric.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.MetricUnits.Angle">
            <summary>
            Gets the angle unit.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImperialUnits">
            <summary>
            An imperial units system.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ImperialUnits.#ctor(SpaceClaim.Api.V23.ImperialLengthUnit,SpaceClaim.Api.V23.ImperialMassUnit,SpaceClaim.Api.V23.AngleUnit)">
            <summary>
            Constructs an imperial units system.
            </summary>
            <param name="length">The length unit.</param>
            <param name="mass">The mass unit.</param>
            <param name="angle">The angle unit.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImperialUnits.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImperialUnits.Length">
            <summary>
            Gets the length unit.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImperialUnits.Mass">
            <summary>
            Gets the mass unit.
            </summary>
            <exception cref="T:System.NotSupportedException">Mass units in SpaceClaim are not imperial.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImperialUnits.Angle">
            <summary>
            Gets the angle unit.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasSuppressState">
            <summary>
            The object implementing this interface can be suppressed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasSuppressState.CanSuppress">
            <summary>
            Gets whether the object can be suppressed.
            </summary>
            <remarks>
            There are certain derived types or implicit objects that cannot be suppressed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasSuppressState.IsSuppressed">
            <summary>
            Gets or sets whether the object is suppressed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AngleUnit">
            <summary>
            Angular units.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AngleUnit.Radians">
            <summary>
            Radians.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AngleUnit.Degrees">
            <summary>
            Degrees.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AngleUnit.DegreesMinutes">
            <summary>
            Degrees/Minutes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AngleUnit.DegreesMinutesSeconds">
            <summary>
            Degrees/Minutes/Seconds.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.BlockMaterial.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockMaterial.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBlockMaterial.Name">
            <summary>
            Gets the name of the material.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Bolt">
            <inheritdoc cref="T:SpaceClaim.Api.V23.IBolt"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.Create(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignFace},SpaceClaim.Api.V23.BoltProperties,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignEdge},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignEdge},System.Boolean,System.String,System.String)">
            <summary>
            Creates a bolt.
            </summary>
            <param name="designFaces">Bolt hole faces.</param>
            <param name="boltProperties">Bolt properties.</param>
            <param name="head">Bolt head point.</param>
            <param name="tail">Bolt tail point.</param>
            <param name="headEdgeLoop">Bolt tail point.</param>
            <param name="tailEdgeLoop">Bolt tail point.</param>
            <param name="isBlind">Indicates whether the bolt is on a blind hole or through hole.</param>
            <param name="name">The bolt name.</param>
            <param name="boltSourceName">The bolt source part name.</param>
            <returns>A bolt.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.BoltSource">
            <summary>
            Gets the object that defines the bolt.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.Locations">
            <summary>
            Gets the bolt hole faces.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.BoltProperties">
            <summary>
            Gets the bolt properties.
            </summary>
            <remarks>
            Returns <b>null</b> if the bolt does not have a source part.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBolt.Parent"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bolt.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bolt.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBolt">
            <summary>
            A bolt.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBolt.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBolt.BoltProperties">
            <summary>
            Gets the bolt properties.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBolt.BoltSource">
            <summary>
            Gets the objects that determine the <see cref="P:SpaceClaim.Api.V23.IBolt.BoltProperties"/> of the bolt.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBolt.Locations">
            <summary>
            Gets the bolt hole faces.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BoltHeadShape">
            <summary>
            The bolt head shape types.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BoltProperties">
            <summary>
            Bolt properties.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BoltProperties.#ctor(SpaceClaim.Api.V23.BoltHeadShape,System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>
            Constructs a bolt properties object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignBody">
            <summary>
            A design body master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.MidSurface">
            <summary>
            Gets the mid-surface aspect of the design body.
            </summary>
            <remarks>
            If this design body is not a mid-surface body, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.VolumeExtraction">
            <summary>
            Gets the volume extraction aspect of the design body.
            </summary>
            <remarks>
            If this design body is not a volume extraction body, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Enclosure">
            <summary>
            Gets the enclosure aspect of the design body.
            </summary>
            <remarks>
            If this design body is not enclosure body, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})">
            <summary>
            Gets a faceted representation of the faces of the design body.
            </summary>
            <param name="faces">The faces in this design body whose tessellation is sought; else <b>null</b> for all faces.</param>
            <returns>Face tessellations for each face.</returns>
            <remarks>
            Unlike the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)"/> method on <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/>,
            which calculates a tessellation to a desired accuracy,
            this method returns the tessellation already being used to display the design body, if it exists.
            If the design body has only just been created using the API, it will not have been displayed yet,
            so this method will return <b>null</b>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetTessellationBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Gets the bounding box, using the faceted representation of the design body for higher performance. 
            </summary>
            <param name="trans">The transformation to be applied to the object.</param>
            <param name="tight">Whether the bounding box is required to fit tightly around the object.</param>
            <returns>The bounding box.</returns>
            <remarks>
            If <paramref name="tight"/> is <b>true</b>, the bounding box will fit tightly around the object.
            This calculation is typically more expensive, so it should only be used if necessary.
            <para/>
            If <paramref name="tight"/> is <b>false</b>, the bounding box is guaranteed to enclose the object.
            It may not fit tightly around the object, although it often does.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetEdgeTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Edge})">
            <summary>
            Gets the tessellated version of the edges of the design body.
            </summary>
            <param name="edges">The edges in this design body whose tessellation is sought; else <b>null</b> for all edges.</param>
            <returns>Edge tessellations for each edge.</returns>
            <remarks>
            This method returns the tessellation already being used to display the design body, if it exists. If the design body has only just been created
            using the API, it will not have been displayed yet, so this method will return <b>null</b>. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.IdentifyHoles(SpaceClaim.Api.V23.IdentifyHoleOptions)">
            <summary>
            Identifies holes on the DesignBody using the specified options.
            </summary>
            <param name="options">Options for limiting the types of holes to be found. See <see cref="T:SpaceClaim.Api.V23.IdentifyHoleOptions"/>.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">All the holes were not able to be identified.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Modeler.Body)">
            <summary>
            Creates a design body master with the specified modeler body as its shape.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name of the design body.</param>
            <param name="modelerBody">The shape of the design body.</param>
            <returns>The newly created design body.</returns>
            <exception cref="T:System.ArgumentException">The modeler body is already used by a design body.</exception>
            <exception cref="T:System.ArgumentException">The modeler body is disjoint.</exception>
            <exception cref="T:System.ArgumentException">The modeler body is non-manifold.</exception>
            <exception cref="T:System.ArgumentException">The modeler body is not an open or closed solid.</exception>
            <remarks>
            Only planar bodies are allowed to be disjoint.
            Planar bodies are flat bodies entirely in one plane, such as those created using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">CreatePlanarBody</see>.
            In all other cases, if the modeler body is disjoint (it has separate pieces),
            it must be separated first using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.IsLocked">
            <summary>
            Gets or sets whether the design body is locked.
            </summary>
            <remarks>
            If the design body is locked, any attempt to modify it will throw a <see cref="T:SpaceClaim.Api.V23.LockedException"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.Save(SpaceClaim.Api.V23.Modeler.BodySaveFormat,System.String)">
            <summary>
            Saves the body to a file in the format of the modeler.
            </summary>
            <param name="format">Whether to use text or binary format.</param>
            <param name="path">The full path of the file to create.</param>
            <remarks>
            This method is similar to the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Save(SpaceClaim.Api.V23.Modeler.BodySaveFormat,System.String)"/> method on the <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> type,
            except that <i>name</i> attributes are attached to faces and edges in the file to indicate
            which <see cref="T:SpaceClaim.Api.V23.DesignFace"/> or <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> they came from.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IHasExportIdentifier.ExportIdentifier"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.Save(SpaceClaim.Api.V23.Modeler.BodySaveFormat,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves the body to a file in the format of the modeler.
            </summary>
            <param name="format">Whether to use text or binary format.</param>
            <param name="path">The full path of the file to create.</param> 
            <param name="majorVersion">Modeler major version</param>
            <param name="minorVersion">Modeler minor version</param>
            <param name="pointVersion">Modeler point version</param>
            <remarks>
            This method is similar to the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Save(SpaceClaim.Api.V23.Modeler.BodySaveFormat,System.String)"/> method on the <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> type,
            except that <i>name</i> attributes are attached to faces and edges in the file to indicate
            which <see cref="T:SpaceClaim.Api.V23.DesignFace"/> or <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> they came from.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IHasExportIdentifier.ExportIdentifier"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignBody.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Faces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignBody.Faces"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Edges">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignBody.Edges"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetDesignFace(SpaceClaim.Api.V23.Modeler.Face)">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.DesignFace"/> that has the given <see cref="T:SpaceClaim.Api.V23.Modeler.Face"/> as its <see cref="P:SpaceClaim.Api.V23.DesignFace.Shape"/>.
            </summary>
            <param name="modelerFace">The face whose design face master is sought.</param>
            <returns>The design face master whose shape is the given face.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetDesignEdge(SpaceClaim.Api.V23.Modeler.Edge)">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> that has the given <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/> as its <see cref="P:SpaceClaim.Api.V23.DesignEdge.Shape"/>.
            </summary>
            <param name="modelerEdge">The edge whose design edge master is sought.</param>
            <returns>The design edge master whose shape is the given edge.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.DesignBody"/> that has the given <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> as its <see cref="P:SpaceClaim.Api.V23.DesignBody.Shape"/>.
            </summary>
            <param name="modelerBody">The body whose design body master is sought.</param>
            <returns>The design body master whose shape is the given body; else <b>null</b> if the body is not used by a design body.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Style">
            <summary>
            Gets or sets the display style of the design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Material">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignBody.Scale(SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.Shape">
            <inheritdoc cref="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedSpace.Shape"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.SurfaceMaterial">
            <summary>
            Gets the surface material of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.MassProperties">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHasMassProperties.MassProperties"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignBody.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignBody.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignBody.Faces">
            <summary>
            Gets the design faces in the design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignBody.Edges">
            <summary>
            Gets the design edges in the design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignBody.Style">
            <summary>
            Gets the display style of the design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignBody.Name">
            <summary>
            Gets the name of the design body.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignCurveGroup">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveGroup.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveGroup.Type">
            <summary>
            Gets the type of the group.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveGroup.Curves">
            <summary>
            Gets the design curves in the group.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDesignCurveGroup.ReplaceCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignCurve})">
            <summary>
            Replaces the curves with a new set. 
            </summary>
            <param name="desCurves"></param>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignCurveGroupGeneral">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroupGeneral.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroupGeneral.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroupGeneral.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroupGeneral.Name">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroupGeneral.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ITransformable.Transform(SpaceClaim.Api.V23.Geometry.Matrix)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroupGeneral.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroupGeneral.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignCurveGroup">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.Create(System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignCurve})">
            <summary>
            Creates a design curve group.
            </summary>
            <param name="name">The name of the curve group.</param>
            <param name="desCurves">The curves to be included in the group.</param>
            <returns>The new design curve group.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.Create(System.String,SpaceClaim.Api.V23.DesignCurveGroupType,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignCurve})">
            <summary>
            Creates a design curve group.
            </summary>
            <param name="name">The name of the curve group.</param>
            <param name="type">The type of the curve group.</param>
            <param name="desCurves">The curves to be included in the group.</param>
            <returns>The new design curve group.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignMesh.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.Type">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignCurveGroup.Type"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.Curves">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignCurveGroup.Curves"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.SpaceClaim#Api#V23#IDesignCurveGroup#Curves">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignCurveGroup.Curves"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurveGroup.Name">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGroup.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ITransformable.Transform(SpaceClaim.Api.V23.Geometry.Matrix)"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignFace">
            <summary>
            A design face master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignFace.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignFace.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignFace.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.Edges">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignFace.Edges"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.AdjacentFaces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignFace.AdjacentFaces"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.Shape">
            <summary>
            Gets the shape of the object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.ExportIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.Perimeter">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignFace.SurfaceMaterial">
            <summary>
            Gets the surface material of the face.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FacePoint">
            <summary>
            A curve point master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FacePoint.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IFacePoint.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.FacePoint.Position">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.FacePoint.ExportIdentifier">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IFacePoint">
            <summary>
            A curve point.
            </summary>
            <remarks>
            A curve point is an implicit doc object, which means you cannot create or delete one. 
            Its parent is a <see cref="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve"/> and the curve point represents an endpoint of that curve. If the parent is deleted, 
            the curve point will report that <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/> is <b>true</b>.
            <para/>
            The parent may be a <see cref="T:SpaceClaim.Api.V23.IDesignEdge"/>, <see cref="T:SpaceClaim.Api.V23.IDesignCurve"/>, or <see cref="T:SpaceClaim.Api.V23.IBeam"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IFacePoint.Parent">
            <summary>
            Gets the parent design edge.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IFacePoint.Position">
            <summary>
            Gets the position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IFacePoint.Type">
            <summary>
            Gets the face point type
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FacePointType">
            <summary>
            Specifies the type of face point
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FacePointType.ConeApex">
            <summary>
            Cone apex
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FacePointType.SphereCenter">
            <summary>
            Sphere center
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FacePointType.SkewConeApex">
            <summary>
            Skew Cone Apex
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.WireCurve.CreateConnectionTable(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IWireCurve})">
            <summary>
            Creates a connection table for a collection of design curves.
            </summary>
            <param name="wireCurves">Collection of design curves.</param>
            <returns>A connection table for the design curves.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurve.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.CircularSense">
            <summary>
            Specifies the circular sense.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.CircularSense.Clockwise">
            <summary>
            Clockwise direction.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.CircularSense.CounterClockwise">
            <summary>
            Counter-clockwise direction.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Helix">
            <summary>
            A helix.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV">
            <summary>
            Represents the evaluation of a UV curve at some parameter value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Param">
            <summary>
            Gets the parameter at which the evaluation was performed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Point">
            <summary>
            The point on the curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Tangent">
            <summary>
            The tangent direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Derivative">
            <summary>
            The first derivative.
            </summary>
            <remarks>
            The first derivative is in the direction of the <see cref="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Tangent"/>
            and has a magnitude equal to the velocity (rate of change of position) at that point.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Derivative2">
            <summary>
            The second derivative.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluationUV.Curvature">
            <summary>
            The curvature.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.NurbsCurveUV">
            <summary>
            A NURBS (Non-Uniform Rational B-Spline) curve in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurveUV.IsRational">
            <summary>
            Gets whether the spline curve is rational.
            </summary>
            <remarks>
            If the spline curve is rational, then the <see cref="P:SpaceClaim.Api.V23.Geometry.ControlPointUV.Weight"/> of each <see cref="T:SpaceClaim.Api.V23.Geometry.ControlPointUV"/>
            is significant; otherwise the weights are all the same, and their value is 1.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurveUV.Data">
            <summary>
            Gets data describing the spline curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurveUV.ControlPoints">
            <summary>
            Gets the control points for the spline curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurveUV.Evaluate(System.Double)">
            <summary>
            Evaluates the curve at the given parameter.
            </summary>
            <param name="t">The parameter at which to evaluate.</param>
            <returns>The evaluation of the curve.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Polygon">
            <summary>
            A regular polygon.
            </summary>
            <remarks>
            The axis of the polygon is in the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> direction of its <see cref="P:SpaceClaim.Api.V23.Geometry.Polygon.Frame"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.Points">
            <summary>
            Gets the vertices.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.InnerRadius">
            <summary>
            Gets the inner radius.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.SideCount">
            <summary>
            Gets the number of sides. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Polygon.Axis">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Polygon.AsSpline(SpaceClaim.Api.V23.Geometry.Interval)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.FitMethod">
            <summary>
            Curve-fitting method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.Lines">
            <summary>
            Fit lines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.Arcs">
            <summary>
            Fit arcs.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.Splines">
            <summary>
            Fit splines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.LinesAndArcs">
            <summary>
            Fit lines and arcs.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.LinesAndSplines">
            <summary>
            Fit lines and splines. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.FitMethod.LinesAndArcsTangentize">
            <summary>
            Fit tangent lines and arcs.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.LineSegment">
            <summary>
            A line segment.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IArrow">
            <summary>
            A planar profile in the shape of an arrow.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IArrow.HeadLength">
            <summary>
            Gets the length of the arrowhead.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IArrow.HeadWidth">
            <summary>
            Gets the width of the arrowhead.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IArrow.ShaftLength">
            <summary>
            Gets the length of the shaft of the arrow.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IArrow.ShaftWidth">
            <summary>
            Gets the width of the shaft of the arrow.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IArrow.Overlap">
            <summary>
            Gets how far the shaft penetrates the back of the arrowhead.
            </summary>
            <remarks>
            A positive overlap produces an arrowhead with swept back wings.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ArrowProfile">
            <summary>
            A planar profile in the shape of an arrow.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ArrowProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of an arrow.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="headLength">The length of the arrowhead.</param>
            <param name="headWidth">The width of the arrowhead.</param>
            <param name="shaftLength">The length of the shaft.</param>
            <param name="shaftWidth">The width of the shaft.</param>
            <param name="overlap">How far the shaft penetrates the back of the arrowhead.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            A positive <paramref name="overlap"/> produces an arrowhead with swept back wings.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.HeadLength">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.HeadWidth">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.ShaftLength">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.ShaftWidth">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ArrowProfile.Overlap">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasPlanarPlacement">
            <summary>
            An object that has location and angle within the UV space of a plane.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasPlanarPlacement.Location">
            <summary>
            Gets the location within the plane.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasPlanarPlacement.Angle">
            <summary>
            Gets the rotation angle.
            </summary>
            <remarks>
            The angle is in radians.
            <para/>
            The angle specifies the clockwise rotation about the normal of the plane
            (counterclockwise rotation as seen looking down onto the plane).
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IPolygon">
            <summary>
            A planar profile, which is a polygon.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IPolygon.Points">
            <summary>
            Gets the points of the polygon.
            </summary>
            <remarks>
            The first point is the start of the first segment of the <see cref="P:SpaceClaim.Api.V23.Geometry.IProfile.Boundary"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IPolygon.PointsUV">
            <summary>
            Gets the points of the polygon in the UV space of the plane.
            </summary>
            <remarks>
            The first point is the start of the first segment of the <see cref="P:SpaceClaim.Api.V23.Geometry.IProfile.Boundary"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.PolygonProfile">
            <summary>
            A planar profile, which is a polygon.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolygonProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point})">
            <summary>
            Constructs a polygon profile passing through the specified points.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="points">The points of the polygon.</param>
            <exception cref="T:System.ArgumentException">Must have at least 3 points.</exception>
            <exception cref="T:System.ArgumentException">Points are not coplanar.</exception>
            <exception cref="T:System.ArgumentException">The points are coplanar but do not lie on the specified plane.</exception>
            <remarks>
            The points are absolute 3D points and are not affected by the orientation of the plane. The points must lie in the plane.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolygonProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.PointUV})">
            <summary>
            Constructs a polygon profile passing through the specified points.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="pointsUV">The points of the polygon.</param>
            <remarks>
            The points are in the UV space of the plane. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolygonProfile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolygonProfile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolygonProfile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolygonProfile.BoxUV">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolygonProfile.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolygonProfile.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolygonProfile.Points">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolygonProfile.PointsUV">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasRotationalSymmetry">
            <summary>
            An object with rotational symmetry.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasRotationalSymmetry.Order">
            <summary>
            Gets the order of the rotational symmetry.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IRegularPolygon">
            <summary>
            A planar profile in the shape of a regular polygon.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IRegularPolygon.InnerRadius">
            <summary>
            Get the inner radius of the polygon.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IRegularPolygon.OuterRadius">
            <summary>
            Gets the outer radius of the polygon.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IRegularPolygon.Side">
            <summary>
            Gets the side length.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile">
            <summary>
            A planar profile in the shape of a regular polygon.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Int32,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of a regular polygon.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="order">The order of the polygon.</param>
            <param name="outerRadius">The outer radius of the polygon.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.OuterRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.Side">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RegularPolygonProfile.Order">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IStar">
            <summary>
            A planar profile in the shape of a star.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IStar.InnerRadius">
            <summary>
            Gets the inner radius of the star.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IStar.OuterRadius">
            <summary>
            Gets the outer radius of the star.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.StarProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Int32,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of a star.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="order">The order of the star.</param>
            <param name="innerRadius">The inner radius of the star.</param>
            <param name="outerRadius">The outer radius of the star.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            The star is centered at the <paramref name="location"/> supplied.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.StarProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.StarProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.StarProfile.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.StarProfile.OuterRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.StarProfile.Order">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.PolylineOptions">
            <summary>
            Specifies options used with the <see cref="M:SpaceClaim.Api.V23.Geometry.Curve.GetPolyline(SpaceClaim.Api.V23.Geometry.Interval,SpaceClaim.Api.V23.Geometry.PolylineOptions)"/> method.
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.Geometry.Curve.GetPolyline(SpaceClaim.Api.V23.Geometry.Interval,SpaceClaim.Api.V23.Geometry.PolylineOptions)"/>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.PolylineOptions.Default">
            <summary>
            A default set of polyline options.
            </summary>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Geometry.PolylineOptions.#ctor"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.CurveDeviation">
            <summary>
            Gets the maximum deviation from the true curve position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.AngleDeviation">
            <summary>
            Gets the maximum deviation from the true curve tangent.
            </summary>
            <remarks>
            The value is in radians.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.MaximumChordLength">
            <summary>
            Gets the maximum chord length, or zero if not specified.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolylineOptions.#ctor">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Geometry.PolylineOptions"/> with a default set of options.
            </summary>
            <remarks>
            The default options are:
            <list type="bullet">
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.CurveDeviation"/> = 0.00075 (0.75 mm)
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.AngleDeviation"/> = 10° (in radians)
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Geometry.PolylineOptions.MaximumChordLength"/> = 0 (unspecified)
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolylineOptions.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Geometry.PolylineOptions"/> object.
            </summary>
            <param name="curveDeviation">The maximum deviation from the true curve position.</param>
            <param name="angleDeviation">The maximum deviation from the true curve tangent.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PolylineOptions.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Geometry.PolylineOptions"/> object.
            </summary>
            <param name="curveDeviation">The maximum deviation from the true curve position.</param>
            <param name="angleDeviation">The maximum deviation from the true curve tangent.</param>
            <param name="maxChordLength">The maximum chord length, or zero if not specified.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IProfile">
            <summary>
            A planar profile.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IProfile.Boundary">
            <summary>
            Gets the boundary of the profile.
            </summary>
            <remarks>
            For profiles with implicit boundaries, such as <see cref="T:SpaceClaim.Api.V23.Geometry.IRegularPolygon"/> or <see cref="T:SpaceClaim.Api.V23.Geometry.IStar"/>,
            the segments are in clockwise order about the plane normal (counter-clockwise as seen looking down onto
            the plane), and the first segment starts on or crosses over the X-axis of the plane.
            <para/>
            If the profile has an explicit boundary, created using the <see cref="M:SpaceClaim.Api.V23.Geometry.Profile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})"/>
            constructor, no such ordering is required.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Profile">
            <summary>
            A planar profile.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Constructs a planar profile with a specified boundary.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="boundary">The boundary segments.</param>
            <remarks>
            The boundary segments should lie in the plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Profile.Boundary">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Profile.Plane">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Profile.BoxUV">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Profile.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Profile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Profile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ICircle">
            <summary>
            A planar profile in the shape of a circle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ICircle.Radius">
            <summary>
            Gets the radius of the circle.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.CircleProfile">
            <summary>
            A planar profile in the shape of a circle.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CircleProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of a circle.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            The circle is centered at the <paramref name="location"/> supplied.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.Radius">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CircleProfile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CircleProfile.BoxUV">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CircleProfile.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IOblong">
            <summary>
            A planar profile in the shape of an oblong.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IOblong.Width">
            <summary>
            Gets the width of the oblong.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IOblong.Height">
            <summary>
            Gets the height of the oblong.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.OblongProfile">
            <summary>
            Specifies details for an oblong form.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.OblongProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of an oblong.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="width">The width of the oblong.</param>
            <param name="height">The height of the oblong.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            The oblong is centered at the <paramref name="location"/> supplied.
            The width is measured along the X-axis of the plane,
            and the height is measured along the Y-axis of the plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Height">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.OblongProfile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.OblongProfile.BoxUV">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IRectangle">
            <summary>
            A planar profile in the shape of a rectangle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IRectangle.Width">
            <summary>
            Gets the width of the rectangle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IRectangle.Height">
            <summary>
            Gets the height of the rectangle.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.RectangleProfile">
            <summary>
            A planar profile in the shape of a rectangle.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.RectangleProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of a rectangle.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            The rectangle is centered at the <paramref name="location"/> supplied.
            The width is measured along the X-axis of the plane,
            and the height is measured along the Y-axis of the plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Height">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.RectangleProfile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.RectangleProfile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ISquare">
            <summary>
            A planar profile in the shape of a square.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.SquareProfile">
            <summary>
            A planar profile in the shape of a square.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.SquareProfile.#ctor(SpaceClaim.Api.V23.Geometry.Plane,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Constructs a planar profile in the shape of a square.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="side">The side length.</param>
            <param name="location">The location within the plane.</param>
            <param name="angle">The rotation angle.</param>
            <remarks>
            The square is centered at the <paramref name="location"/> supplied.
            and oriented with the X and Y axes of the plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SquareProfile.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SquareProfile.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SquareProfile.Side">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.SquareProfile.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SquareProfile.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SquareProfile.Perimeter">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.PlacementUV">
            <summary>
            A location and orientation within the UV space of a plane.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.PlacementUV.#ctor(SpaceClaim.Api.V23.Geometry.PointUV,System.Double)">
            <summary>
            Creates a placement.
            </summary>
            <param name="location">The location in UV space.</param>
            <param name="angle">The angle from the U direction.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PlacementUV.Location">
            <summary>
            Gets the location in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.PlacementUV.Angle">
            <summary>
            Gets the angle from the U direction.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ParamForm">
            <summary>
            The parameterization form.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.ParamForm.Open">
            <summary>
            The parameterization is open.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.ParamForm.Closed">
            <summary>
            The parameterization is closed.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.ParamForm.Periodic">
            <summary>
            The parameterization is periodic.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Transformations">
            <summary>
            A bit field specifying transformations.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.None">
            <summary>
            No transformations.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.TranslateX">
            <summary>
            Translate along X.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.TranslateY">
            <summary>
            Translate along Y.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.TranslateZ">
            <summary>
            Translate along Z.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.RotateX">
            <summary>
            Rotate about X.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.RotateY">
            <summary>
            Rotate about Y.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.RotateZ">
            <summary>
            Rotate about Z.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Transformations.All">
            <summary>
            All transformations.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasCurveShape`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.IHasCurveShape"/>
            <typeparam name="TCurve">The type of curve.</typeparam>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasCurveShape">
            <summary>
            The object implementing this interface has curve shape.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ICurveShape`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.ICurveShape"/>
            <typeparam name="TCurve">The type of curve.</typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ICurveShape`1.Geometry">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ICurveShape">
            <summary>
            The object implementing this interface has a curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ICurveShape.Geometry">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasSurfaceShape`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.IHasSurfaceShape"/>
            <typeparam name="TSurface">The type of surface.</typeparam>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasSurfaceShape">
            <summary>
            The object implementing this interface has surface shape.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ISurfaceShape`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.ISurfaceShape"/>
            <typeparam name="TSurface">The type of surface.</typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ISurfaceShape`1.Geometry">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ISurfaceShape">
            <summary>
            The object implementing this interface has a surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ISurfaceShape.Geometry">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.DirectionUV">
            <summary>
            A 2D direction in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.DirectionUV.IsZero">
            <summary>
            Gets whether the direction is indeterminate.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.DirectionUV.UnitVector">
            <summary>
            Gets a unit vector for the direction.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Parameterization">
            <summary>
            The parameterization of a curve, or of the U or V direction of a surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Parameterization.Form">
            <summary>
            Gets parameterization form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Parameterization.Bounds">
            <summary>
            Gets the parameterization bounds.
            </summary>
            <remarks>
            If the start or end is <b>null</b>, then the parameterization is infinite in that direction.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.PointCurve">
            <summary>
            A curve existing only at a point.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Geometry.PointCurve"/> is a degenerate curve, existing only at a point.
            Conceptually it can be thought of as a <see cref="T:SpaceClaim.Api.V23.Geometry.Circle"/> with a zero <see cref="P:SpaceClaim.Api.V23.Geometry.Circle.Radius"/>.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.Geometry.PointCurve"/> has no direction so its <see cref="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Tangent"/> is <see cref="F:SpaceClaim.Api.V23.Geometry.Direction.Zero"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ISpaceShape">
            <summary>
            The object implementing this interface has space geometry.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ISpaceShape.Geometry">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Space">
            <summary>
            A 3D space.
            </summary>
            <remarks>
            A space represents unbounded 3D space.
            <see cref="M:SpaceClaim.Api.V23.Geometry.ISpatial.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)"/> returns the same point,
            and <see cref="M:SpaceClaim.Api.V23.Geometry.ISpatial.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)"/> returns <b>true</b>.
            <para/>
            Any two spaces are considered equal, e.g. <see cref="M:SpaceClaim.Api.V23.Geometry.Geometry.IsCoincident(SpaceClaim.Api.V23.Geometry.Geometry)"/> returns <b>true</b>.
            <para/>
            This class only exists to complete the classification of geometry types, and is of no particular use.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Space.Create">
            <summary>
            Creates a space.
            </summary>
            <returns>A space.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Space.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Space)">
            <summary>
            Transforms a space.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="space">The space to be transformed.</param>
            <returns>A transformed copy of the space.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedGeometry.Shape">
            <summary>
            Gets the shape of the object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedGeometry.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <summary>
            Get the closest separation between two objects.
            </summary>
            <param name="other">The other object.</param>
            <returns>The closest separation between the two objects.</returns>
            <remarks>
            In the returned <see cref="T:SpaceClaim.Api.V23.Geometry.Separation"/>, <see cref="P:SpaceClaim.Api.V23.Geometry.Separation.PointA"/> is a point on this object,
            and <see cref="P:SpaceClaim.Api.V23.Geometry.Separation.PointB"/> is a point on the <paramref name="other"/> object.
            <para/>
            If this method is used with two <see cref="T:SpaceClaim.Api.V23.Geometry.ITrimmedSpace"/> objects (e.g. two <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> objects),
            and one object is entirely inside the other, the separation returned is zero, since the separation is
            between the trimmed spaces, and not their surface boundaries.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Separation">
            <summary>
            The separation between two objects.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Separation.PointA">
            <summary>
            The point on the first object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Separation.PointB">
            <summary>
            The point on the second object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Separation.Distance">
            <summary>
            The separation distance.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.VectorUV">
            <summary>
            A 2D displacement vector in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.VectorUV.Direction">
            <summary>
            Gets the direction of the vector.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.VectorUV.Magnitude">
            <summary>
            Gets the magnitude of the vector.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Accuracy">
            <summary>
            The Accuracy class provides a safe way to compare length, angles, areas, and volumes. Due to the
            slight inaccuracies in representing calculated values digitally, comparisons are made using well-defined
            tolerances that account for this slight inaccuracy.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution">
            <summary>
            Gets the linear resolution.
            </summary>
            <remarks>
            Two lengths are considered equal if their difference is less than the <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/>.
            To compare two lengths, use the <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualLengths(System.Double,System.Double)"/> method.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution">
            <summary>
            Gets the angular resolution.
            </summary>
            <remarks>
            Two angles are considered equal if their difference is less than the <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution"/>.
            To compare two angles, use the <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualAngles(System.Double,System.Double)"/> method.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualLengths(System.Double,System.Double)">
            <summary>
            Compares two length values to see if they are equal.
            </summary>
            <param name="lengthA">The first length value.</param>
            <param name="lengthB">The second length value.</param>
            <returns>Returns <b>true</b> if the values are within <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualAreas(System.Double,System.Double)">
            <summary>
            Compares two area values to see if they are equal within a predefined tolerance based 
            on <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/>.
            </summary>
            <param name="areaA">The first area value.</param>
            <param name="areaB">The second area value.</param>
            <returns>Returns <b>true</b> if the values are within the tolerance.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualVolumes(System.Double,System.Double)">
            <summary>
            Compares two volume values to see if they are equal within a predefined tolerance
            based on <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/>.
            </summary>
            <param name="volumeA">The first volume value.</param>
            <param name="volumeB">The second volume value.</param>
            <returns>Returns <b>true</b> if the values are within the tolerance.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualAngles(System.Double,System.Double)">
            <summary>
            Compares two angular values to see if they are equal.
            </summary>
            <param name="angleA">The first angular value.</param>
            <param name="angleB">The second angular value.</param>
            <returns>Returns <b>true</b> if the values are within <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution"/></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.LengthIsNegative(System.Double)">
            <summary>
            Determines if the length value is negative.
            </summary>
            <param name="length">Length value to check</param>
            <returns>Returns <b>true</b> if the length value is less than -<see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.LengthIsPositive(System.Double)">
            <summary>
            Determines if the length value is positive.
            </summary>
            <param name="length">Length value to check</param>
            <returns>Returns <b>true</b> if the length value is greater than <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.LengthIsZero(System.Double)">
            <summary>
            Determines if the length value is zero (between plus and minus <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/> inclusive).
            </summary>
            <param name="length">Length value to check</param>
            <returns>Returns <b>true</b> if the length value is effectively zero.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.AngleIsNegative(System.Double)">
            <summary>
            Determines if the angle value is negative.
            </summary>
            <param name="angle">Length value to check</param>
            <returns>Returns <b>true</b> if the angle value is less than -<see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution"/>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.AngleIsPositive(System.Double)">
            <summary>
            Determines if the angle value is positive.
            </summary>
            <param name="angle">Length value to check</param>
            <returns>Returns <b>true</b> if the angle value is greater than <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution"/>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.AngleIsZero(System.Double)">
            <summary>
            Determines if the angle value is zero (between plus and minus <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.AngularResolution"/> inclusive).
            </summary>
            <param name="angle">Length value to check</param>
            <returns>Returns <b>true</b> if the angle value is effectively zero.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.CompareLengths(System.Double,System.Double)">
            <summary>
            Compares two length values.
            </summary>
            <param name="lengthA">The first length value to compare.</param>
            <param name="lengthB">The second length value to compare.</param>
            <returns>
            <b>-1</b> if <i>lengthA</i> is less than <i>lengthB</i>.<br/>
            <b>&#8196;0</b>  if <i>lengthA</i> is equal to <i>lengthB</i> (see Remarks).<br/>
            <b>&#8196;1</b> if <i>lengthA</i> is greater than <i>lengthB</i>.<br/>
            </returns>
            <remarks>
            CompareLengths first checks if the two lengths are equal (see <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualLengths(System.Double,System.Double)"/>). 
            If they are not equal, they are compared directly to each other to determine which is 
            the smaller or larger of the two.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.CompareAngles(System.Double,System.Double)">
            <summary>
            Compares two angle values.
            </summary>
            <param name="angleA">The first angle value to compare.</param>
            <param name="angleB">The second angle value to compare.</param>
            <returns>
            <b>-1</b> if <i>angleA</i> is less than <i>angleB</i>.<br/>
            <b>&#8196;0</b>  if <i>angleA</i> is equal to <i>angleB</i> (see Remarks).<br/>
            <b>&#8196;1</b> if <i>angleA</i> is greater than <i>angleB</i>.<br/>
            </returns>
            <remarks>
            CompareAngles first checks if the two angles are equal (see <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualAngles(System.Double,System.Double)"/>). 
            If they are not equal, they are compared directly to each other to determine which is 
            the smaller or larger of the two.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.CompareAreas(System.Double,System.Double)">
            <summary>
            Compares two area values.
            </summary>
            <param name="areaA">The first area value to compare.</param>
            <param name="areaB">The second area value to compare.</param>
            <returns>
            <b>-1</b> if <i>areaA</i> is less than <i>areaB</i>.<br/>
            <b>&#8196;0</b>  if <i>areaA</i> is equal to <i>areaB</i> (see Remarks).<br/>
            <b>&#8196;1</b> if <i>areaA</i> is greater than <i>areaB</i>.<br/>
            </returns>
            <remarks>
            CompareAreas first checks if the two lengths are equal (see <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualAreas(System.Double,System.Double)"/>). 
            If they are not equal, they are compared directly to each other to determine which is 
            the smaller or larger of the two.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Accuracy.CompareVolumes(System.Double,System.Double)">
            <summary>
            Compares two volume values.
            </summary>
            <param name="volumeA">The first volume value to compare.</param>
            <param name="volumeB">The second volume value to compare.</param>
            <returns>
            <b>-1</b> if <i>volumeA</i> is less than <i>volumeB</i>.<br/>
            <b>&#8196;0</b>  if <i>volumeA</i> is equal to <i>volumeB</i> (see Remarks).<br/>
            <b>&#8196;1</b> if <i>volumeA</i> is greater than <i>volumeB</i>.<br/>
            </returns>
            <remarks>
            CompareVolumes first checks if the two volumes are equal (see <see cref="M:SpaceClaim.Api.V23.Geometry.Accuracy.EqualVolumes(System.Double,System.Double)"/>). 
            If they are not equal, they are compared directly to each other to determine which is 
            the smaller or larger of the two.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IBounded">
            <summary>
            The object implementing this interface is bounded in nature.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.IBounded.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <summary>
            Gets the bounding box of the object under the given transformation.
            </summary>
            <param name="trans">The transformation to be applied to the object.</param>
            <returns>The bounding box.</returns>
            <remarks>
            The bounding box is guaranteed to enclose the object.
            It may not fit tightly around the object, although it often does.
            The overload <see cref="M:SpaceClaim.Api.V23.Geometry.IBounded.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)"/> can be used to obtain a tight box.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.IBounded.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Gets the bounding box of the object under the given transformation.
            </summary>
            <param name="trans">The transformation to be applied to the object.</param>
            <param name="tight">Whether the bounding box is required to fit tightly around the object.</param>
            <returns>The bounding box.</returns>
            <remarks>
            If <paramref name="tight"/> is <b>true</b>, the bounding box will fit tightly around the object.
            This calculation is typically more expensive, so it should only be used if necessary.
            <para/>
            If <paramref name="tight"/> is <b>false</b>, the bounding box is guaranteed to enclose the object.
            It may not fit tightly around the object, although it often does.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.IBounded.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Gets the extreme point of the object.
            </summary>
            <param name="dirA">The first direction.</param>
            <param name="dirB">The second direction.</param>
            <param name="dirC">The third direction.</param>
            <returns>The extreme point.</returns>
            <remarks>
            The three directions must be mutually perpendicular, but they do not need to be right-handed.
            <para/>
            The extreme point in direction <paramref name="dirA"/> is returned.
            If the extreme in that direction is not a single point, then <paramref name="dirB"/> is used.
            If the extreme is still not a single point, then <paramref name="dirC"/> is used.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Box.Empty">
            <summary>
            An empty box.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.Create(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a box of zero size located at a specified point.
            </summary>
            <param name="point">The location of the box.</param>
            <returns>The created box.</returns>
            <remarks>
            A box of zero size has a <see cref="P:SpaceClaim.Api.V23.Geometry.Box.Size"/> of <see cref="F:SpaceClaim.Api.V23.Geometry.Vector.Zero"/>,
            but it is not empty (<see cref="P:SpaceClaim.Api.V23.Geometry.Box.IsEmpty"/> returns false).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.Create(SpaceClaim.Api.V23.Geometry.Point[])">
            <summary>
            Creates a box that contains a list of points.
            </summary>
            <param name="points">Zero or more points to be contained by the box.</param>
            <returns>The created box.</returns>
            <remarks>
            If no points are supplied, an empty box is created.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.Create(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.Point})">
            <summary>
            Creates a box that contains a collection of points.
            </summary>
            <param name="points">Points to be contained by the box.</param>
            <returns>The created box.</returns>
            <remarks>
            If the collection of points is empty, an empty box is created.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.IsEmpty">
            <summary>
            Gets whether the box is empty.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.Center">
            <summary>
            Gets the center of the box.
            </summary>
            <exception cref="T:System.InvalidOperationException">The box is empty.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.Size">
            <summary>
            Gets the size of the box.
            </summary>
            <remarks>
            The size is the vector from the <see cref="P:SpaceClaim.Api.V23.Geometry.Box.MinCorner"/> to the <see cref="P:SpaceClaim.Api.V23.Geometry.Box.MaxCorner"/>.
            If the box is empty, a <see cref="F:SpaceClaim.Api.V23.Geometry.Vector.Zero"/> size is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.MinCorner">
            <summary>
            Gets the minimum corner of the box.
            </summary>
            <exception cref="T:System.InvalidOperationException">The box is empty.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.MaxCorner">
            <summary>
            Gets the maximum corner of the box.
            </summary>
            <exception cref="T:System.InvalidOperationException">The box is empty.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Box.Corners">
            <summary>
            Gets all corners of the box.
            </summary>
            <exception cref="T:System.InvalidOperationException">The box is empty.</exception>
            <remarks>
            The corners returned are distinct, i.e. duplicates are removed.
            The number of points returned could be zero, one, two, four, or eight.
            An empty box returns zero corners.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Gets whether the box contains a point.
            </summary>
            <param name="point">The point to test.</param>
            <returns><b>true</b> if the box contains the point; otherwise <b>false</b>.</returns>
            <remarks>
            A point on the boundary of the box is considered contained by it.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.IntersectsPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Gets whether the box intersects a plane.
            </summary>
            <param name="plane">The plane to test.</param>
            <returns><b>true</b> if the box and the plane intersect; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.Inflate(System.Double)">
            <summary>
            Inflates the box all around by a specified amount.
            </summary>
            <param name="extent">The amount to inflate.</param>
            <returns>An inflated box.</returns>
            <exception cref="T:System.InvalidOperationException">The box is empty.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.op_BitwiseOr(SpaceClaim.Api.V23.Geometry.Box,SpaceClaim.Api.V23.Geometry.Box)">
            <summary>
            Unites two boxes.
            </summary>
            <param name="first">The first box to unite.</param>
            <param name="second">The second box to unite.</param>
            <returns>The union of the two boxes.</returns>
            <remarks>
            If one of the boxes is empty, the other box is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Box.op_BitwiseAnd(SpaceClaim.Api.V23.Geometry.Box,SpaceClaim.Api.V23.Geometry.Box)">
            <summary>
            Intersects two boxes.
            </summary>
            <param name="first">The first box to intersect.</param>
            <param name="second">The second box to intersect.</param>
            <returns>The intersection of the two boxes.</returns>
            <remarks>
            If either box is empty, or the boxes do not intersect, an empty box is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.BoxUV">
            <summary>
            A box in UV-space.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.BoxUV.Empty">
            <summary>
            An empty box.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.BoxUV.IsEmpty">
            <summary>
            Gets whether the box is empty.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.BoxUV.op_BitwiseOr(SpaceClaim.Api.V23.Geometry.BoxUV,SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Unites two boxes.
            </summary>
            <param name="first">The first box to unite.</param>
            <param name="second">The second box to unite.</param>
            <returns>The union of the two boxes.</returns>
            <remarks>
            If one of the boxes is empty, the other box is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.BoxUV.op_BitwiseAnd(SpaceClaim.Api.V23.Geometry.BoxUV,SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Intersects two boxes.
            </summary>
            <param name="first">The first box to intersect.</param>
            <param name="second">The second box to intersect.</param>
            <returns>The intersection of the two boxes.</returns>
            <remarks>
            If either box is empty, or the boxes do not intersect, an empty box is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Circle">
            <summary>
            A circle.
            </summary>
            <remarks>
            The axis of the circle is in the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> direction of its <see cref="P:SpaceClaim.Api.V23.Geometry.Circle.Frame"/>.
            <para/>
            The parameter specifies the clockwise angle around the axis (right hand corkscrew law),
            with a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Curve.Parameterization"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.Create(SpaceClaim.Api.V23.Geometry.Frame,System.Double)">
            <summary>
            Creates a circle.
            </summary>
            <param name="frame">The position and orientation of the circle.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>A circle.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateThroughPoints(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a circle passing through three points.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="thruPoint1">Point to pass through.</param>
            <param name="thruPoint2">Point to pass through.</param>
            <param name="thruPoint3">Point to pass through.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToThree(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam)">
            <summary>
            Creates a circle tangent to three curves.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent1">Help point on tangent curve.</param>
            <param name="tangent2">Help point on tangent curve.</param>
            <param name="tangent3">Help point on tangent curve.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToTwo(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a circle tangent to two curves, passing through a point.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent1">Help point on tangent curve.</param>
            <param name="tangent2">Help point on tangent curve.</param>
            <param name="thruPoint">Point to pass through.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToTwo(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam,System.Double)">
            <summary>
            Creates a circle tangent to two curves, with a given radius.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent1">Help point on tangent curve.</param>
            <param name="tangent2">Help point on tangent curve.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToOne(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a circle tangent to a curve, passing through two points.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent">Help point on tangent curve.</param>
            <param name="thruPoint1">Point to pass through.</param>
            <param name="thruPoint2">Point to pass through.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToOne(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Point,System.Double)">
            <summary>
            Creates a circle tangent to a curve, passing through a point, with a given radius.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent">Help point on tangent curve.</param>
            <param name="thruPoint">Point to pass through.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.CreateTangentToOne(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a circle tangent to a curve, centered on a curve, passing through a point.
            </summary>
            <param name="plane">The plane of the circle.</param>
            <param name="tangent">Help point on tangent curve.</param>
            <param name="center">Help point on curve on which the center should lie.</param>
            <param name="thruPoint">Point to pass through.</param>
            <returns>A circle if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Circle.Radius">
            <summary>
            Gets the radius of the circle.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Circle.TryOffsetParam(System.Double,System.Double,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Circle.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Circle.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Circle.Axis">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Cone">
            <summary>
            A cone.
            </summary>
            <remarks>
            The axis of the cone is in the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> direction of its <see cref="P:SpaceClaim.Api.V23.Geometry.Cone.Frame"/>.
            <para/>
            The U parameter specifies the clockwise angle around the axis (right hand corkscrew law),
            with a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            <para/>
            The V parameter specifies the distance along the axis,
            with a zero parameter at the XY plane of the <see cref="P:SpaceClaim.Api.V23.Geometry.Cone.Frame"/> of the cone.
            <para/>
            A cone has the given <see cref="P:SpaceClaim.Api.V23.Geometry.Cone.Radius"/> in the XY plane of its <see cref="P:SpaceClaim.Api.V23.Geometry.Cone.Frame"/>,
            and increases in radius in the direction of <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cone.Radius">
            <summary>
            The radius of the cone in the XY plane of its frame.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cone.HalfAngle">
            <summary>
            The half angle of the cone.
            </summary>
            <remarks>
            The cone increases in radius in the direction of <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cone.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cone.Axis">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Curve">
            <summary>
            A 3D curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.Evaluate(System.Double)">
            <summary>
            Evaluates the curve at the given parameter.
            </summary>
            <param name="t">The parameter at which to evaluate.</param>
            <returns>The evaluation of the curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a point to the curve, returning the evaluation at the closest point.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The evaluation at the closest point.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Transforms a curve.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="curve">The curve to be transformed.</param>
            <returns>A transformed copy of the curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.GetLength(SpaceClaim.Api.V23.Geometry.Interval)">
            <summary>
            Gets the length of an interval of the curve.
            </summary>
            <param name="interval">The parametric interval of the curve.</param>
            <returns>The length of the interval of the curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.GetPolyline(SpaceClaim.Api.V23.Geometry.Interval,SpaceClaim.Api.V23.Geometry.PolylineOptions)">
            <summary>
            Gets a polyline approximation of an interval of the curve.
            </summary>
            <param name="interval">The parametric interval of the curve.</param>
            <param name="options">Polyline options.</param>
            <returns>A list of points describing the polyline.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.TryOffsetParam(System.Double,System.Double,System.Double@)">
            <summary>
            Offsets a parameter along the curve.
            </summary>
            <param name="start">The parameter to offset.</param>
            <param name="distance">The distance to offset, which can be negative.</param>
            <param name="result">The resulting parameter.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            For a bounded non-periodic curve, this method will fail (i.e. return <b>false</b>)
            if the offset would result in a parameter outside the parametric
            <see cref="P:SpaceClaim.Api.V23.Geometry.Parameterization.Bounds"/> of the curve.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.ContainsParam(System.Double)">
            <summary>
            Tests whether a parameter is within the parametric range of the curve.
            </summary>
            <param name="param">The parameter to test.</param>
            <returns><b>true</b> if within the parametric range of the curve; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.IntersectCurve(SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Gets the intersections between this curve and another curve.
            </summary>
            <param name="curve">The other curve to intersect.</param>
            <returns>Zero or more intersection points.</returns>
            <remarks>
            For each intersection point, <see cref="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationA"/> is on this curve,
            and <see cref="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationB"/> is on the other curve.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Curve.AsSpline(SpaceClaim.Api.V23.Geometry.Interval)">
            <summary>
            Gets a NURBS approximation for the curve.
            </summary>
            <param name="region">The region of interest.</param>
            <returns>The spline approximation; else <b>null</b> if not possible.</returns>
            <remarks>
            A spline curve is returned that covers at least the specified region.
            The parameterization of the spline curve is not the same as the original curve.
            <para/>
            When dealing with the curve of an <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/>,
            the <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.Bounds"/> of the edge can be supplied as the region.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IntPoint`2">
            <summary>
            An intersection point.
            </summary>
            <typeparam name="TEvaluationA">The first evaluation type.</typeparam>
            <typeparam name="TEvaluationB">The second evaluation type.</typeparam>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.IntPoint`2.#ctor(`0,`1,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Constructs an intersection point.
            </summary>
            <param name="evalA">The first evaluation.</param>
            <param name="evalB">The second evaluation</param>
            <param name="point">The intersection point.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.Point">
            <summary>
            Gets the intersection point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationA">
            <summary>
            Gets the first evaluation.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationB">
            <summary>
            Gets the second evaluation.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.CurveEvaluation">
            <summary>
            Represents the evaluation of a curve at some parameter value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Param">
            <summary>
            Gets the parameter at which the evaluation was performed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Point">
            <summary>
            The point on the curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Tangent">
            <summary>
            The tangent direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Derivative">
            <summary>
            The first derivative.
            </summary>
            <remarks>
            The first derivative is in the direction of the <see cref="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Tangent"/>
            and has a magnitude equal to the velocity (rate of change of position) at that point.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Derivative2">
            <summary>
            The second derivative.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveEvaluation.Curvature">
            <summary>
            The curvature.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.CurveParam">
            <summary>
            A parameter on a curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveParam.#ctor(SpaceClaim.Api.V23.Geometry.Curve,System.Double)">
            <summary>
            Creates a curve point.
            </summary>
            <param name="curve">A curve.</param>
            <param name="param">A parameter on the <paramref name="curve"/>.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveParam.Curve">
            <summary>
            Gets the curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveParam.Param">
            <summary>
            Gets the parameter on the curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Create(SpaceClaim.Api.V23.Geometry.Curve,SpaceClaim.Api.V23.Geometry.Interval)">
            <overloads>
            <summary>
            Creates a curve segment.
            </summary>
            </overloads>
            
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> from an unbounded <see cref="T:SpaceClaim.Api.V23.Geometry.Curve"/> and parameter <see cref="T:SpaceClaim.Api.V23.Geometry.Interval"/>.
            </summary>
            <param name="curve">The underlying unbounded curve.</param>
            <param name="bounds">The parameter bounds.</param>
            <returns>A segment of the curve.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="curve"/> is a null reference.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Create(SpaceClaim.Api.V23.Geometry.Curve,SpaceClaim.Api.V23.Geometry.Interval,System.Boolean)">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> from an unbounded <see cref="T:SpaceClaim.Api.V23.Geometry.Curve"/> and parameter <see cref="T:SpaceClaim.Api.V23.Geometry.Interval"/>.
            </summary>
            <param name="curve">The underlying unbounded curve.</param>
            <param name="bounds">The parameter bounds.</param>
            <param name="reversed">Whether the curve segment has reversed sense.</param>
            <returns>A segment of the curve.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="curve"/> is a null reference.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Create(SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> for the entirety of a curve.
            </summary>
            <param name="curve">The underlying unbounded curve.</param>
            <returns>A segment of the curve.</returns>
            <remarks>
            This method is useful for creating a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> for a complete circle or ellipse,
            since there is no need to supply a parametric interval.
            <para/>
            The <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> must have a finite parametric range.
            An exception is thrown if the parametric range of the curve is infinite.
            For example, this will happen if a <see cref="T:SpaceClaim.Api.V23.Geometry.Line"/> is supplied as the <paramref name="curve"/>.
            </remarks>
            <exception cref="T:System.ArgumentException">The curve has infinite parameterization.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a line segment between the specified points.
            </summary>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
            <returns>The line segment, or <b>null</b> if the <paramref name="start"/> and <paramref name="end"/> points are coincident.</returns>
            <remarks>
            Creates a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> whose <see cref="P:SpaceClaim.Api.V23.Geometry.CurveSegment.Geometry"/> is a <see cref="T:SpaceClaim.Api.V23.Geometry.Line"/>.
            The <paramref name="start"/> point has a parameter value of 0, and
            the <paramref name="end"/> point has a parameter value equal to the length of the line segment.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Create(SpaceClaim.Api.V23.Geometry.LineSegment)">
            <summary>
            Create a line segment.
            </summary>
            <param name="segment">The line segment.</param>
            <returns>The line segment, or <b>null</b> if the length of <paramref name="segment"/> is zero.</returns>
            <remarks>
            Creates a <see cref="T:SpaceClaim.Api.V23.Geometry.CurveSegment"/> whose <see cref="P:SpaceClaim.Api.V23.Geometry.CurveSegment.Geometry"/> is a <see cref="T:SpaceClaim.Api.V23.Geometry.Line"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.CreateArc(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates an arc.
            </summary>
            <param name="center">The center point.</param>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
            <param name="axis">The axis of the arc.</param>
            <returns>An arc.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.CreateHelix(SpaceClaim.Api.V23.Geometry.Line,SpaceClaim.Api.V23.Geometry.Point,System.Double,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.CircularSense)">
            <summary>
            Creates a helix.
            </summary>
            <param name="axis">The axis.</param>
            <param name="startPoint">The starting point.</param>
            <param name="height">The height.</param>
            <param name="pitch">The distances between rotations.</param>
            <param name="taperAngle">The taper angle. A negative angle tapers inwards.</param>
            <param name="sense">The sense, looking along the axis from the origin.</param>
            <returns>A helical curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.Bounds">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.StartPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.EndPoint">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.IntersectCurve(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Offset(SpaceClaim.Api.V23.Geometry.Plane,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.Offset(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.ApproximateChain(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.FitMethod)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.SelectFragment(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetPolyline(SpaceClaim.Api.V23.Geometry.PolylineOptions)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.IsCoincident(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.ProjectToPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.Geometry">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetGeometry``1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.CurveSegment.IsReversed">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.CurveSegment.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Cylinder">
            <summary>
            A cylinder.
            </summary>
            <remarks>
            The axis of the cylinder is in the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> direction of its <see cref="P:SpaceClaim.Api.V23.Geometry.Cylinder.Frame"/>.
            <para/>
            The U parameter specifies the clockwise angle around the axis (right hand corkscrew law),
            with a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            <para/>
            The V parameter specifies the distance along the axis,
            with a zero parameter at the XY plane of the <see cref="P:SpaceClaim.Api.V23.Geometry.Cylinder.Frame"/> of the cylinder.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Surface.Parameterization"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cylinder.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Cylinder.Axis">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Direction">
            <summary>
            A 3D direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Direction.IsZero">
            <summary>
            Gets whether the direction is indeterminate.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Direction.UnitVector">
            <summary>
            Gets a unit vector in this direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Direction.ArbitraryPerpendicular">
            <summary>
            Gets an arbitrary perpendicular direction.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Direction.Cross(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Calculates the cross product of two directions.
            </summary>
            <remarks>
            If the two directions are parallel, no exception is thrown, but a zero direction is returned (<see cref="P:SpaceClaim.Api.V23.Geometry.Direction.IsZero"/> is true).
            </remarks>
            <param name="dirA">The first direction.</param>
            <param name="dirB">The second direction.</param>
            <returns>The resulting direction.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Ellipse">
            <summary>
            An ellipse.
            </summary>
            <remarks>
            The axis of the ellipse is in the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> direction of its <see cref="P:SpaceClaim.Api.V23.Geometry.Ellipse.Frame"/>.
            <para/>
            The parameter specifies the clockwise angle around the axis (right hand corkscrew law),
            with a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Curve.Parameterization"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Ellipse.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Ellipse.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Ellipse.Axis">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Frame">
            <summary>
            A local coordinate system.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Frame.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a frame from its X and Y directions.
            </summary>
            <param name="origin">The origin of the frame.</param>
            <param name="dirX">The X direction of the frame.</param>
            <param name="dirY">The Y direction of the frame.</param>
            <returns>A frame.</returns>
            <remarks>
            A frame uses a right-handed system of mutually perpendicular XYZ axes.
            It is not necessary to supply the Z direction, since this is defined by
            <c><i>dirZ</i> = Direction.<see cref="M:SpaceClaim.Api.V23.Geometry.Direction.Cross(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)"/>(<paramref name="dirX"/>, <paramref name="dirY"/>)</c>.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Geometry.Frame.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Frame.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a frame using arbitrary X and Y directions.
            </summary>
            <param name="origin">The origin of the frame.</param>
            <param name="dirZ">The Z direction of the frame.</param>
            <returns>A frame.</returns>
            <remarks>
            A frame uses a right-handed system of mutually perpendicular XYZ axes.
            This overload creates arbitrary X and Y directions such that 
            <c><paramref name="dirZ"/> = Direction.<see cref="M:SpaceClaim.Api.V23.Geometry.Direction.Cross(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)"/>(<i>dirX</i>, <i>dirY</i>)</c>.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Geometry.Frame.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasFrame">
            <summary>
            The object implementing this interface has a frame.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasFrame.Frame">
            <summary>
            Gets the frame of the object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Geometry.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Geometry)">
            <summary>
            Transforms a geometry object.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="geometry">The geometry object to be transformed.</param>
            <returns>The transformed geometry object.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Geometry.IsCoincident(SpaceClaim.Api.V23.Geometry.Geometry)">
            <summary>
            Compares two geometry objects to see if they are coincident.
            </summary>
            <param name="other">Geometry to compare to.</param>
            <returns><b>true</b> if the geometries are coincident; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Geometry.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Geometry.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IShape">
            <summary>
            The object implementing this interface has geometry.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IShape.Geometry">
            <summary>
            Gets the geometry of the object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.IShape.GetGeometry``1">
            <summary>
            Filters the geometry based on the <typeparamref name="TFilter"/> specified.
            Returns null if the geometry is not of that type.
            </summary>
            <typeparam name="TFilter">The type of geometry sought.</typeparam>
            <returns>The geometry of that type, or null if the geometry is not of that type.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed">
            <summary>
            Gets whether the sense of the object is opposite to the sense of its geometry.
            </summary>
            <remarks>
            For example, <see cref="T:SpaceClaim.Api.V23.Modeler.Face"/> implements <see cref="T:SpaceClaim.Api.V23.Geometry.ISurfaceShape"/>.
            A hole and a boss are both examples of a <see cref="T:SpaceClaim.Api.V23.Modeler.Face"/> with a <see cref="T:SpaceClaim.Api.V23.Geometry.Cylinder"/> as its geometry.
            With a cylinder, the surface normal always points away from the axis of the cylinder.
            For a hole, the face normal points towards the axis, so <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/> is true,
            whereas for a boss, the face normal points away from the axis, so <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/> is false.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Interval">
            <summary>
            A parametric interval.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Interval.Start">
            <summary>
            Gets the start parameter of the interval.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Interval.End">
            <summary>
            Gets the end parameter of the interval.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Interval.Span">
            <summary>
            Gets the span of the interval.
            </summary>
            <remarks>
            The span is the difference between the <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Start"/> and <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.End"/> parameters.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Interval.Contains(System.Double)">
            <summary>
            Gets whether the interval contains the specified parameter.
            </summary>
            <param name="param">The parameter to test.</param>
            <returns><b>true</b> if the parameter is contained in the interval; otherwise <b>false</b>.</returns>
            <remarks>
            The parameters, <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Start"/> and <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.End"/>, are contained within the interval.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Interval.GetProportion(System.Double)">
            <summary>
            Gets the proportion of the interval that the specified parameter represents.
            </summary>
            <param name="param">The parameter for which the proportion is sought.</param>
            <returns>The proportion along the interval at the specified parameter.</returns>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Start"/> parameter has a proportion of 0,
            and the <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.End"/> parameter has a proportion of 1.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Interval.GetParameter(System.Double)">
            <summary>
            Gets the parameter at the specified proportion along the interval.
            </summary>
            <param name="proportion">The proportion along the interval.</param>
            <returns>The parameter at the specified proportion.</returns>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Item(System.Double)"/> indexer is equivalent to this method.
            <para/>
            <c>GetParameter(0)</c> is equivalent to <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Start"/>, and
            <c>GetParameter(1)</c> is equivalent to <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.End"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Interval.Item(System.Double)">
            <summary>
            Gets the parameter at the specified proportion along the interval.
            </summary>
            <param name="proportion">The proportion along the interval.</param>
            <returns>The parameter at the specified proportion.</returns>
            <remarks>
            This indexer is equivalent to <see cref="M:SpaceClaim.Api.V23.Geometry.Interval.GetParameter(System.Double)"/>.
            <para/>
            <c>interval[0]</c> is equivalent to <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.Start"/>, and
            <c>interval[1]</c> is equivalent to <see cref="P:SpaceClaim.Api.V23.Geometry.Interval.End"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Line">
            <summary>
            A line.
            </summary>
            <remarks>
            The parameter specifies the distance from the <see cref="P:SpaceClaim.Api.V23.Geometry.Line.Origin"/> in the direction of <see cref="P:SpaceClaim.Api.V23.Geometry.Line.Direction"/>.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Curve.Parameterization"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.Create(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a line.
            </summary>
            <param name="origin">A point through which the line passes.</param>
            <param name="dir">The direction of the line.</param>
            <returns>A line.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.CreateThroughPoints(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a line passing through two points.
            </summary>
            <param name="thruPoint1">Point to pass through.</param>
            <param name="thruPoint2">Point to pass through.</param>
            <returns>A line if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.CreateTangentToTwo(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.CurveParam)">
            <summary>
            Creates a line tangent to two curves.
            </summary>
            <param name="plane">The plane in which the line should lie.</param>
            <param name="tangent1">Help point on tangent curve.</param>
            <param name="tangent2">Help point on tangent curve.</param>
            <returns>A line if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.CreateTangentToOne(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a line tangent to a curve, and passing through a point.
            </summary>
            <param name="plane">The plane in which the line should lie.</param>
            <param name="tangent">Help point on tangent curve.</param>
            <param name="thruPoint">Point to pass through.</param>
            <returns>A line if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.CreateTangentToOne(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a line tangent to a curve, with a given direction.
            </summary>
            <param name="plane">The plane in which the line should lie.</param>
            <param name="tangent">Help point on tangent curve.</param>
            <param name="dir">The direction of the line.</param>
            <returns>A line if successful; otherwise <b>null</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Line.Origin">
            <summary>
            Gets the origin of the line.
            </summary>
            <remarks>
            The origin is the point on the line with a parameter value of zero.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Line.Direction">
            <summary>
            Gets the direction of the line.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Line.TryOffsetParam(System.Double,System.Double,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasAxis">
            <summary>
            The object implementing this interface has an axis.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasAxis.Axis">
            <summary>
            Gets the axis of the object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.NurbsData">
            <summary>
            Data for a NURBS (Non-Uniform Rational B-Spline) curve or surface.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsData.#ctor(System.Int32,System.Boolean,System.Boolean,SpaceClaim.Api.V23.Geometry.Knot[])">
            <summary>
            Creates data for a NURBS curve or surface.
            </summary>
            <param name="order">The order of the NURBS curve or surface.</param>
            <param name="closed">Whether the NURBS curve or surface is closed.</param>
            <param name="periodic">Whether the NURBS curve or surface is periodic.</param>
            <param name="knots">The knot vector for the NURBS curve or surface.</param>
            <exception cref="T:System.ArgumentException">The geometry can only be period if it is also closed.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsData.Order">
            <summary>
            Gets the order of the NURBS curve or surface.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.NurbsData.Degree"/> is one less than the <see cref="P:SpaceClaim.Api.V23.Geometry.NurbsData.Order"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsData.Degree">
            <summary>
            Gets the degree of the NURBS curve or surface.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.NurbsData.Degree"/> is one less than the <see cref="P:SpaceClaim.Api.V23.Geometry.NurbsData.Order"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsData.IsClosed">
            <summary>
            Gets whether the NURBS curve or surface is closed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsData.IsPeriodic">
            <summary>
            Gets whether the NURBS curve or surface is periodic.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsData.Knots">
            <summary>
            Gets the knot vector for the NURBS curve or surface.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Knot">
            <summary>
            A knot within the knot vector of a NURBS curve or surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Knot.Parameter">
            <summary>
            Gets the parametric location of the knot.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Knot.Multiplicity">
            <summary>
            Gets the number of times the knot parameter is used.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ControlPoint">
            <summary>
            A control point for a NURBS curve or surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Position">
            <summary>
            Gets the position of the control point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Weight">
            <summary>
            Gets the weight applied to the control point.
            </summary>
            <remarks>
            If the spline is rational, then the <see cref="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Weight"/> of each <see cref="T:SpaceClaim.Api.V23.Geometry.ControlPoint"/>
            is significant; otherwise the weights are all the same, and their value is 1.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ControlPointUV">
            <summary>
            A control point for a NURBS curve in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ControlPointUV.Position">
            <summary>
            Gets the position of the control point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ControlPointUV.Weight">
            <summary>
            Gets the weight applied to the control point.
            </summary>
            <remarks>
            If the spline is rational, then the <see cref="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Weight"/> of each <see cref="T:SpaceClaim.Api.V23.Geometry.ControlPoint"/>
            is significant; otherwise the weights are all the same, and their value is 1.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.PointUV">
            <summary>
            A 2D point in UV space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Plane.PlaneXY">
            <summary>
            The X-Y plane.
            </summary>
            <remarks>
            This is equivalent to calling:
            <code>
            Plane.Create(Frame.Create(Point.Origin, Direction.DirX, Direction.DirY))
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Plane.PlaneYZ">
            <summary>
            The Y-Z plane.
            </summary>
            <remarks>
            This is equivalent to calling:
            <code>
            Plane.Create(Frame.Create(Point.Origin, Direction.DirY, Direction.DirZ))
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Plane.PlaneZX">
            <summary>
            The Z-X plane.
            </summary>
            <remarks>
            This is equivalent to calling:
            <code>
            Plane.Create(Frame.Create(Point.Origin, Direction.DirZ, Direction.DirX))
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Plane.Frame">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ProceduralCurve">
            <summary>
            A procedural curve.
            </summary>
            <remarks>
            A procedural curve is a curve that is defined in terms of other objects.
            Examples include: intersection curves, offset curves, etc.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ProceduralSurface">
            <summary>
            A procedural surface.
            </summary>
            <remarks>
            A procedural surface is a surface that is defined in terms of other objects.
            Examples include: fillet surfaces, offset surfaces, swept surfaces, ruled surfaces, etc.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ProceduralSurface.AsSpline(SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Gets a NURBS approximation for the procedural surface.
            </summary>
            <param name="region">The region of interest.</param>
            <returns>The spline approximation; else <b>null</b> if not possible.</returns>
            <remarks>
            A spline surface is returned that covers at least the specified region.
            The parameterization of the spline surface is not the same as the procedural surface.
            <para/>
            When dealing with the surface of a <see cref="T:SpaceClaim.Api.V23.Modeler.Face"/>,
            the <see cref="P:SpaceClaim.Api.V23.Modeler.Face.BoxUV"/> of the face can be supplied as the region.
            Passing a smaller region may or may not produce in a smaller spline surface.
            Passing a larger region may fail to produce a spline surface, in which case <b>null</b> is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ISpatial">
            <summary>
            The object implementing this interface is spatial in nature.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ISpatial.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a point to the object, returning the closest point on the object,
            or the original point if that is already contained by the object.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The projected point.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ISpatial.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Gets whether the point is contained by the object, either within it, or on its boundary.
            </summary>
            <param name="point">The point to test.</param>
            <returns>Whether the point is contained by the object.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Sphere">
            <summary>
            A sphere.
            </summary>
            <remarks>
            Imagine a sphere with <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> of its <see cref="P:SpaceClaim.Api.V23.Geometry.Sphere.Frame"/> pointing North:
            <para/>
            The U parameter specifies the longitude angle, increasing clockwise (East) about <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> (right hand corkscrew law).
            It has a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            <para/>
            The V parameter specifies the latitude, increasing North, with a zero parameter at the equator,
            and a range of [-pi/2, pi/2].
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Surface.Parameterization"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Sphere.Frame">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.NurbsCurve">
            <summary>
            A NURBS (Non-Uniform Rational B-Spline) curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.CreateFromControlPoints(SpaceClaim.Api.V23.Geometry.NurbsData,SpaceClaim.Api.V23.Geometry.ControlPoint[])">
            <summary>
            Creates a NURBS curve from control points.
            </summary>
            <param name="data">The NURBS data.</param>
            <param name="controlPoints">The control points for the curve.</param>
            <returns>The created NURBS curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.CreateFromKnotPoints(System.Boolean,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Nullable{SpaceClaim.Api.V23.Geometry.Vector},System.Nullable{SpaceClaim.Api.V23.Geometry.Vector})">
            <summary>
            Creates a NURBS curve from a list of knot points.
            </summary>
            <param name="periodic">Whether the NURBS curve is periodic.</param>
            <param name="points">A list of knot points to pass through.</param>
            <param name="startDerivative">Start derivative; else <b>null</b> for natural.</param>
            <param name="endDerivative">End derivative; else <b>null</b> for natural.</param>
            <returns>The created NURBS curve.</returns>
            <remarks>
            The NURBS curve created has order 4.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.CreateFromKnotPoints(System.Boolean,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point})">
            <summary>
            Creates a NURBS curve from a list of knot points.
            </summary>
            <param name="periodic">Whether the NURBS curve is periodic.</param>
            <param name="points">A list of knot points to pass through.</param>
            <returns>The created NURBS curve.</returns>
            <remarks>
            The NURBS curve created has order 4.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.CreateThroughPoints(System.Boolean,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Double,System.Nullable{SpaceClaim.Api.V23.Geometry.Vector},System.Nullable{SpaceClaim.Api.V23.Geometry.Vector})">
            <summary>
            Creates a NURBS curve that fits through a list of points.
            </summary>
            <param name="periodic">Whether the NURBS curve is periodic.</param>
            <param name="points">A list of points to pass through.</param>
            <param name="fitTolerance">The fit tolerance.</param>
            <param name="startDerivative">Start derivative; else <b>null</b> for natural.</param>
            <param name="endDerivative">End derivative; else <b>null</b> for natural.</param>
            <returns>The created NURBS curve.</returns>
            <remarks>
            The NURBS curve created has order 4.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.CreateThroughPoints(System.Boolean,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Double)">
            <summary>
            Creates a NURBS curve that fits through a list of points.
            </summary>
            <param name="periodic">Whether the NURBS curve is periodic.</param>
            <param name="points">A list of points to pass through.</param>
            <param name="fitTolerance">The fit tolerance.</param>
            <returns>The created NURBS curve.</returns>
            <remarks>
            The NURBS curve created has order 4.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurve.IsRational">
            <summary>
            Gets whether the spline curve is rational.
            </summary>
            <remarks>
            If the spline curve is rational, then the <see cref="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Weight"/> of each <see cref="T:SpaceClaim.Api.V23.Geometry.ControlPoint"/>
            is significant; otherwise the weights are all the same, and their value is 1.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurve.Data">
            <summary>
            Gets data describing the spline curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsCurve.ControlPoints">
            <summary>
            Gets the control points for the spline curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsCurve.Extend(SpaceClaim.Api.V23.Geometry.Interval)">
            <summary>
            Creates a new extended curve based on the supplied interval.
            </summary>
            <param name="interval">The parametric extent of the new curve to create.</param>
            <returns>A new NURBS curve if successful; otherwise <b>null</b>.</returns>
            <remarks>
            The curve is extended naturally so that the extension is C2 continuous.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.NurbsSurface">
            <summary>
            A NURBS (Non-Uniform Rational B-Spline) surface.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsSurface.Create(SpaceClaim.Api.V23.Geometry.NurbsData,SpaceClaim.Api.V23.Geometry.NurbsData,SpaceClaim.Api.V23.Geometry.ControlPoint[0:,0:])">
            <summary>
            Creates a NURBS surface.
            </summary>
            <param name="dataU">The NURBS data in the U direction.</param>
            <param name="dataV">The NURBS data in the V direction.</param>
            <param name="controlPoints">The control points for the surface.</param>
            <returns>The created NURBS surface.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsSurface.IsRational">
            <summary>
            Gets whether the spline surface is rational.
            </summary>
            <remarks>
            If the spline surface is rational, then the <see cref="P:SpaceClaim.Api.V23.Geometry.ControlPoint.Weight"/> of each <see cref="T:SpaceClaim.Api.V23.Geometry.ControlPoint"/>
            is significant; otherwise the weights are all the same, and their value is 1.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsSurface.DataU">
            <summary>
            Gets data describing the spline surface in the U direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsSurface.DataV">
            <summary>
            Gets data describing the spline surface in the V direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.NurbsSurface.ControlPoints">
            <summary>
            Gets the control points for the spline surface.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.NurbsSurface.Trim(SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Creates a new trimmed <b>NurbsSurface</b> based on the supplied <see cref="T:SpaceClaim.Api.V23.Geometry.BoxUV"></see>.
            </summary>
            <param name="boxUV">Specifies how to trim the surface.</param>
            <returns>A <i>new</i> NurbsSurface trimmed to the desired range.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><i>boxUV</i> has an invalid range. End must be greater than Start.</exception>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Surface">
            <summary>
            A 3D surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Surface.IsRuled">
            <summary>
            Gets whether the surface is straight in the U and V parameter directions.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Surface.IsSingular">
            <summary>
            Gets whether there is a parametric singularity at the Start or End of the U or V range.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.Evaluate(SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Evaluates the surface at the given parameter.
            </summary>
            <param name="param">The parameter at which to evaluate.</param>
            <returns>The evaluation of the surface.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a point to the surface, returning the evaluation at the closest point.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The evaluation at the closest point on the surface.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Surface)">
            <summary>
            Transforms a surface.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="surface">The surface to be transformed.</param>
            <returns>A transformed copy of the surface.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.GetLength(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Gets the length in the surface between two parameters in UV space.
            </summary>
            <param name="paramA">The first parameter.</param>
            <param name="paramB">The second parameter.</param>
            <returns>The length in the surface.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.TryOffsetParam(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.Geometry.DirectionUV,System.Double,SpaceClaim.Api.V23.Geometry.PointUV@)">
            <summary>
            Offsets a point in UV space within the surface.
            </summary>
            <param name="start">The UV point to offset.</param>
            <param name="dir">The direction in which to offset.</param>
            <param name="distance">The distance to offset within the surface.</param>
            <param name="result">The resulting UV point.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            The method will fail (i.e. return <b>false</b>) if the offset would result in a UV point outside
            the parametric <see cref="P:SpaceClaim.Api.V23.Geometry.Parameterization.Bounds"/> of the surface.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Tests whether a parameter is within the parametric range of the surface.
            </summary>
            <param name="param">The parameter to test.</param>
            <returns><b>true</b> if within the parametric range of the surface; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Surface.IntersectCurve(SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Gets the intersections between the surface and a curve.
            </summary>
            <param name="curve">The curve to intersect.</param>
            <returns>Zero or more intersection points.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.UV`1">
            <summary>
            U and V values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.UV`1.#ctor(`0,`0)">
            <summary>
            Constructs a UV object.
            </summary>
            <param name="u">The <i>u</i> value.</param>
            <param name="v">The <i>v</i> value.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.UV`1.U">
            <summary>
            Gets or sets the <i>u</i> value;
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.UV`1.V">
            <summary>
            Gets or sets the <i>v</i> value;
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.Param">
            <summary>
            Gets the parameter at which the evaluation was performed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.Point">
            <summary>
            Gets the point on the surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.Normal">
            <summary>
            Gets the normal to the surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.DerivativeU">
            <summary>
            The first derivative with respect to U.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.DerivativeV">
            <summary>
            The first derivative with respect to V.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.DerivativeUU">
            <summary>
            The second derivative with respect to U.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.DerivativeUV">
            <summary>
            The second derivative with respect to U and V.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.DerivativeVV">
            <summary>
            The second derivative with respect to V.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MaxCurvature">
            <summary>
            The maximum curvature.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MinCurvature">
            <summary>
            The minimum curvature.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MaxCurvatureDirection">
            <summary>
            The direction of maximum curvature.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MaxCurvatureDirection"/> and <see cref="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MinCurvatureDirection"/> are perpendicular
            and both directions lie in the surface.
            <para/>
            If the curvature is the same in all directions in the surface at this position,
            the two directions are arbitrary, but still perpendicular.
            This also applies if the curvature is zero, e.g. the surface is a <see cref="T:SpaceClaim.Api.V23.Geometry.Plane"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MinCurvatureDirection">
            <summary>
            The direction of maximum curvature.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.MaxCurvatureDirection"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.GetTangent(SpaceClaim.Api.V23.Geometry.DirectionUV)">
            <summary>
            Gets the 3D tangent direction in the specified UV direction.
            </summary>
            <param name="dir">The UV direction in which the tangent is sought.</param>
            <returns>The 3D tangent direction.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.ProjectDirection(SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Projects a 3D direction onto the surface to give a UV direction in the surface.
            </summary>
            <param name="dir">The 3D direction to project.</param>
            <returns>The UV direction in the surface.</returns>
            <remarks>
            If the 3D <paramref name="dir"/> is zero or parallel to the <see cref="P:SpaceClaim.Api.V23.Geometry.SurfaceEvaluation.Normal"/>, a zero UV direction is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Torus">
            <summary>
            A torus.
            </summary>
            <remarks>
            Imagine a torus with its axis (<see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirZ"/> of its <see cref="P:SpaceClaim.Api.V23.Geometry.Torus.Frame"/>) pointing North.
            <para/>
            The U parameter specifies the longitude, increasing clockwise (East) about the axis (right hand corkscrew law).
            It has a zero parameter at <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/>, and a period of 2*pi.
            <para/>
            The V parameter specifies the latitude, increasing North, with a zero parameter at the equator.
            For a donut, where the <see cref="P:SpaceClaim.Api.V23.Geometry.Torus.MajorRadius"/> is greater than the <see cref="P:SpaceClaim.Api.V23.Geometry.Torus.MinorRadius"/>,
            the range is [-pi, pi] and the parameterization is periodic.
            For a degenerate torus, the range is restricted accordingly and the parameterization is non-periodic.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Surface.Parameterization"/> property can be used to obtain the parameterization in the U and V directions.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Surface.Parameterization"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Torus.Frame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Torus.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Torus.Axis">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve"/>
            <typeparam name="TCurve">The type of curve.</typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve`1.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve">
            <summary>
            The object implementing this interface has a shape represented by a trimmed curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ITrimmedCurve`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.ITrimmedCurve"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ITrimmedCurve">
            <summary>
            A trimmed curve, i.e. a curve with parametric bounds.
            </summary>
            <remarks>
            Curves are unbounded in nature, e.g. a <see cref="T:SpaceClaim.Api.V23.Geometry.Line"/> is infinite, and a <see cref="T:SpaceClaim.Api.V23.Geometry.Circle"/> is complete.
            A trimmed curve places parameter bounds on a the curve, e.g. a line segment or an arc, respectively.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a point to the trimmed curve, returning the evaluation at the closest point.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The evaluation at the closest point.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.Bounds">
            <summary>
            Gets the parametric bounds of the trimmed curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.Length">
            <summary>
            Gets the length of the trimmed curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.StartPoint">
            <summary>
            Gets the start point of the trimmed curve.
            </summary>
            <remarks>
            The start point is equivalent to <c>Geometry.Evaluate(Bounds.Start).Point</c>
            and is not affected by the value of <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/>.
            <para/>
            For example, <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/> implements <see cref="T:SpaceClaim.Api.V23.Geometry.ITrimmedCurve"/>.
            <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/> also has properties, <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/>,
            which are in terms of the direction of the edge.
            If <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/> is true, then the direction of the edge is opposite to the
            direction of the curve, so the <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> will be at the <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.EndPoint"/>,
            and the <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> will be at the <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.StartPoint"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.EndPoint">
            <summary>
            Gets the end point of the trimmed curve.
            </summary>
            <remarks>
            The end point is equivalent to <c>Geometry.Evaluate(Bounds.End).Point</c>
            and is not affected by the value of <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/>.
            <para/>
            For example, <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/> implements <see cref="T:SpaceClaim.Api.V23.Geometry.ITrimmedCurve"/>.
            <see cref="T:SpaceClaim.Api.V23.Modeler.Edge"/> also has properties, <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/>,
            which are in terms of the direction of the edge.
            If <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/> is true, then the direction of the edge is opposite to the
            direction of the curve, so the <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> will be at the <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.EndPoint"/>,
            and the <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> will be at the <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.StartPoint"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.IntersectCurve(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <summary>
            Gets the intersections between this trimmed curve and another trimmed curve.
            </summary>
            <param name="segment">The other trimmed curve to intersect.</param>
            <returns>Zero or more intersection points.</returns>
            <remarks>
            For each intersection point, <see cref="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationA"/> is on this trimmed curve,
            and <see cref="P:SpaceClaim.Api.V23.Geometry.IntPoint`2.EvaluationB"/> is on the other trimmed curve.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.Offset(SpaceClaim.Api.V23.Geometry.Plane,System.Double)">
            <summary>
            Offsets the trimmed curve by a distance.
            </summary>
            <param name="plane">Plane in which to offset.</param>
            <param name="distance">Distance to offset.</param>
            <returns>Zero or more trimmed curves.</returns>
            <remarks>
            The trimmed curve is offset so that no portion of the result is closer to the original than the offset distance.
            This may involve splitting and trimming such that more than one trimmed curve results.
            <para/>
            The offset direction is "to the right" of this trimmed curve, as seen looking down onto the plane.
            That is, the offset direction is:
            <para/>
            <c>Direction.<see cref="M:SpaceClaim.Api.V23.Geometry.Direction.Cross(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)"/>(<i>curve tangent direction</i>, plane.DirZ)</c>.
            <para/>
            The direction of the curve is used, so the offset direction is not affected by the value of <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.Offset(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam)">
            <summary>
            Offsets the trimmed curve so as to be tangent to a curve.
            </summary>
            <param name="plane">Plane in which to offset.</param>
            <param name="helpPoint">A point on a curve near the tangency position.</param>
            <returns>Zero or more trimmed curves.</returns>
            <remarks>
            The offset direction and distance is determined by the condition that the trimmed curve should be tangent to
            the <paramref name="helpPoint"/> curve near the help point specified.
            <para/>
            The trimmed curve is offset so that no portion of the result is closer to the original than the offset distance.
            This may involve splitting and trimming such that more than one trimmed curve results.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <summary>
            Offsets a chain of trimmed curves by a distance.
            </summary>
            <param name="plane">Plane in which to offset.</param>
            <param name="distance">Distance to offset.</param>
            <param name="others">Other trimmed curves in the chain.</param>
            <param name="cornerType">Type of external corners to produce.</param>
            <returns>Zero or more trimmed curves.</returns>
            <remarks>
            The chain of trimmed curves is offset so that no portion of the result is closer to the original than the offset distance.
            This may involve splitting and trimming of individual offset curves.
            <para/>
            The offset direction is "to the right" of this trimmed curve, as seen looking down onto the plane.
            That is, the offset direction is:
            <para/>
            <c>Direction.<see cref="M:SpaceClaim.Api.V23.Geometry.Direction.Cross(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)"/>(<i>curve tangent direction</i>, plane.DirZ)</c>.
            <para/>
            The direction of the curve is used, so the offset direction is not affected by the value of <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/>.
            <para/>
            If the trimmed curves do not form a single chain, an attempt is made to offset chains in a consistent direction.
            <para/>
            For external corners, the offset trimmed curves will not meet,
            and then <paramref name="cornerType"/> specifies how they should be connected.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <summary>
            Offsets a chain of trimmed curves.
            </summary>
            <param name="plane">Plane in which to offset.</param>
            <param name="helpPoint">A point on a curve near the tangency position.</param>
            <param name="others">Other trimmed curves in the chain.</param>
            <param name="cornerType">Type of external corners to produce.</param>
            <returns>Zero or more trimmed curves.</returns>
            <remarks>
            The offset direction and distance is determined by the condition that the trimmed curve should be tangent to
            the <paramref name="helpPoint"/> curve near the help point specified.
            <para/>
            The chain of trimmed curves is offset so that no portion of the result is closer to the original than the offset distance.
            This may involve splitting and trimming of individual offset curves.
            <para/>
            If the trimmed curves do not form a single chain, an attempt is made to offset chains in a consistent direction.
            <para/>
            For external corners, the offset trimmed curves will not meet,
            and then <paramref name="cornerType"/> specifies how they should be connected.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.SelectFragment(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Selects a fragment of the trimmed curve.
            </summary>
            <param name="param">Parameter identifying the fragment to select.</param>
            <param name="cuts">Other trimmed curves which may intersect with this trimmed curve so as to fragment it.</param>
            <returns>A results object describing the selected fragment; or <b>null</b> if no fragment results.</returns>
            <exception cref="T:System.ArgumentException">Parameter is outside the bounds of the trimmed curve.</exception>
            <remarks>
            The <paramref name="cuts"/> are intersected with the trimmed curve to define fragments along it.
            The fragment containing the specified <paramref name="param"/> is returned as <see cref="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.SelectedFragment"/>,
            and one or two remaining fragments are returned in <see cref="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.OtherFragments"/>.
            <para/>
            If there are no intersection points, then <b>null</b> is returned.
            Also, if one intersection point is produced, but the trimmed curve is periodic, then <b>null</b> is returned.
            <para/>
            If the selected fragment was cut at the <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.StartPoint"/>, then <see cref="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.StartCut"/> indicates
            the cut that produced this intersection.
            Similarly for <see cref="P:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.EndPoint"/> and <see cref="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.EndCut"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.GetPolyline(SpaceClaim.Api.V23.Geometry.PolylineOptions)">
            <summary>
            Get a polyline approximation of the trimmed curve.
            </summary>
            <param name="options">Polyline options.</param>
            <returns>A list of points describing the polyline.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.IsCoincident(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <summary>
            Compares two trimmed curves to see if they are coincident.
            </summary>
            <param name="other">Trimmed curve to compare to.</param>
            <returns><b>true</b> if the trimmed curves are coincident; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.ProjectToPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Projects the trimmed curve to a plane.
            </summary>
            <param name="plane">Target plane</param>
            <returns>The projected trimmed curve.</returns>
            <remarks>
            If a line segment is projected to a plane, and the line is perpendicular to the plane,
            a trimmed <see cref="T:SpaceClaim.Api.V23.Geometry.PointCurve"/> is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.SelectFragmentResult">
            <summary>
            Describes the result of calling <see cref="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.SelectFragment(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.SelectedFragment">
            <summary>
            The selected fragment.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.OtherFragments">
            <summary>
            One or two other fragments.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.StartCut">
            <summary>
            The start cut, if the start was trimmed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.SelectFragmentResult.EndCut">
            <summary>
            The end cut, if the end was trimmed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.OffsetCornerType">
            <summary>
            Specifies how to connect offset trimmed curves for external corners.
            </summary>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.Geometry.ITrimmedCurve.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)"/> for more information.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.OffsetCornerType.Round">
            <summary>
            The offset trimmed curves are connected by an arc centered at the original corner.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.OffsetCornerType.LinearExtension">
            <summary>
            The offset trimmed curves are connected by extending them with tangent straight lines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.OffsetCornerType.NaturalExtension">
            <summary>
            The offset trimmed curves are connected by extending the curves, if possible;
            otherwise <see cref="F:SpaceClaim.Api.V23.Geometry.OffsetCornerType.Round"/> is used.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedSpace">
            <summary>
            The object implementing this interface has a shape represented by a trimmed space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedSpace.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ITrimmedSpace">
            <summary>
            A finite region of 3D space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedSpace.Volume">
            <summary>
            Gets the volume of the trimmed space.
            </summary>
            <remarks>The volume is returned in SI units (m³)</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedSpace.SurfaceArea">
            <summary>
            Gets the surface area of the trimmed space.
            </summary>
            <remarks>The area is returned in SI units (m²)</remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedSpace.GetCollision(SpaceClaim.Api.V23.Geometry.ITrimmedSpace)">
            <summary>
            Gets the collision between this object and another.
            </summary>
            <param name="other">The other object to test with.</param>
            <returns>The nature of the collision between the two objects.</returns>
            <remarks>
            If the two objects intersect, <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> methods, such as
            <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Intersect(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})"/>, <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Fuse(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body},System.Boolean,SpaceClaim.Api.V23.Modeler.Tracker)"/>, or <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Imprint(SpaceClaim.Api.V23.Modeler.Body)"/> could
            be used to discover details of the intersection.
            The <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Copy(System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Face,SpaceClaim.Api.V23.Modeler.Face}@,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Edge,SpaceClaim.Api.V23.Modeler.Edge}@)"/>
            method can be used to that the original objects are not modified.
            <para/>
            If the two objects touch, <see cref="M:SpaceClaim.Api.V23.Geometry.ITrimmedGeometry.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)"/> could
            be used to discover where the touching condition occurs.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Collision">
            <summary>
            Describes the nature of a collision between two objects.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Collision.None">
            <summary>
            The objects do not collide.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Collision.Touch">
            <summary>
            The objects touch.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Geometry.Collision.Intersect">
            <summary>
            The objects intersect.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedSurface`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedSurface"/>
            <typeparam name="TSurface">The type of surface.</typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedSurface`1.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedSurface">
            <summary>
            The object implementing this interface has a shape represented by a trimmed surface.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedSurface.Shape">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ITrimmedSurface`1">
            <inheritdoc cref="T:SpaceClaim.Api.V23.Geometry.ITrimmedSurface"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasArea.Area">
            <summary>
            Gets the surface area.
            </summary>
            <remarks>The area is returned in SI units (m²)</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasArea.Perimeter">
            <summary>
            Gets the length of the perimeter.
            </summary>
            <remarks>The length is returned in SI units (m)</remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.ITrimmedSurface">
            <summary>
            A trimmed surface, i.e. a surface with a boundary.
            </summary>
            <remarks>
            Surfaces are unbounded in nature, e.g. a <see cref="T:SpaceClaim.Api.V23.Geometry.Plane"/> is infinite.
            A trimmed surface is a surface with a boundary.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedSurface.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a point to the trimmed surface, returning the evaluation at the closest point.
            </summary>
            <param name="point">The point to project.</param>
            <returns>The evaluation at the closest point.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.ITrimmedSurface.BoxUV">
            <summary>
            Gets the UV bounding box of the trimmed surface.
            </summary>
            <remarks>
            The UV box is not guaranteed to fit tightly around the object, although it often does.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedSurface.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Gets whether the given UV parameter is within or on the boundary of the trimmed surface.
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.ITrimmedSurface.IntersectCurve(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <summary>
            Gets the intersections between the trimmed surface and a curve segment.
            </summary>
            <param name="segment">The curve segment to intersect.</param>
            <returns>Zero or more intersection points.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Vector">
            <summary>
            A 3D displacement vector.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Vector.Direction">
            <summary>
            Gets the direction of the vector.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Vector.Magnitude">
            <summary>
            Gets the magnitude of the vector.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Vector.Project(SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Projects the vector to give the component in the specified direction.
            </summary>
            <param name="dir">The direction in which to project.</param>
            <returns>The projected vector.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Matrix">
            <summary>
            A transformation matrix.
            Matrices are pre-multiplication, as in:  x' = M*x.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.CreateTranslation(SpaceClaim.Api.V23.Geometry.Vector)">
            <summary>
            Creates a translation matrix from the specified <see cref="T:SpaceClaim.Api.V23.Geometry.Vector"/>.
            </summary>
            <param name="translation">The translation.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.CreateScale(System.Double,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a scaling matrix from the specified origin and scale factor.
            </summary>
            <param name="scale">The scale factor, which must be positive.</param>
            <param name="point">The origin about which to scale.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.CreateScale(System.Double)">
            <summary>
            Creates a scaling matrix about the origin.
            </summary>
            <param name="scale">The scale factor, which must be positive.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.CreateRotation(SpaceClaim.Api.V23.Geometry.Line,System.Double)">
            <summary>
            Creates a rotation matrix through an angle about an axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation, measured clockwise about the direction of the axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.CreateMapping(SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Creates a matrix representing a transformation to the specified coordinate system.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Geometry.Frame"/> represents a coordinate system (origin and axes).
            This method creates a transformation to that coordinate system.
            </remarks>
            <param name="frame">The frame of the coordinate system.</param>
            <returns>The transformation matrix.</returns>
            <exception cref="T:System.ArgumentException">The directions are not perpendicular.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.IsIdentity">
            <summary>
            Gets whether the matrix is the identity matrix.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.HasTranslation">
            <summary>
            Gets whether the matrix has a translation component.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.HasScale">
            <summary>
            Gets whether the matrix has a scale component.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.HasRotation">
            <summary>
            Gets whether the matrix has a rotation component.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation">
            <summary>
            Gets the translation component of the matrix.
            </summary>
            <remarks>
            A matrix can be decomposed into its <see cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation"/>, <see cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Scale"/>, and <see cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Rotation"/> components,
            such that:
            <code lang="C#">
            this == Translation * Scale * Rotation
            </code>
            The translation component depends on the order of composition, whereas the scale and rotation components do not.
            For decompositions with different orders, see the 6 overloads of <see cref="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(SpaceClaim.Api.V23.Geometry.Vector@,System.Double@,SpaceClaim.Api.V23.Geometry.Matrix@)"/>.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Scale"/>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Rotation"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.Scale">
            <summary>
            Gets the scale component of the matrix.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation"/>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Rotation"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.Rotation">
            <summary>
            Gets the rotation component of the matrix.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation"/>
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Translation"/>
            <seealso cref="P:SpaceClaim.Api.V23.Geometry.Matrix.Scale"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.IsMirror">
            <summary>
            Gets whether the matrix is mirrored. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(SpaceClaim.Api.V23.Geometry.Vector@,System.Double@,SpaceClaim.Api.V23.Geometry.Matrix@)">
            <overloads>
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            </overloads>
            
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="translation">The translation component.</param>
            <param name="scale">The scale component.</param>
            <param name="rotation">The rotation component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = T * S * R</c>, or more precisely:
            <code lang="C#">
            this == CreateTranslation(translation) * CreateScale(scale) * rotation
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(System.Double@,SpaceClaim.Api.V23.Geometry.Vector@,SpaceClaim.Api.V23.Geometry.Matrix@)">
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="scale">The scale component.</param>
            <param name="translation">The translation component.</param>
            <param name="rotation">The rotation component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = S * T * R</c>, or more precisely:
            <code lang="C#">
            this == CreateScale(scale) * CreateTranslation(translation) * rotation
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(SpaceClaim.Api.V23.Geometry.Matrix@,SpaceClaim.Api.V23.Geometry.Vector@,System.Double@)">
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="rotation">The rotation component.</param>
            <param name="translation">The translation component.</param>
            <param name="scale">The scale component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = R * T * S</c>, or more precisely:
            <code lang="C#">
            this == rotation * CreateTranslation(translation) * CreateScale(scale)
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(System.Double@,SpaceClaim.Api.V23.Geometry.Matrix@,SpaceClaim.Api.V23.Geometry.Vector@)">
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="scale">The scale component.</param>
            <param name="rotation">The rotation component.</param>
            <param name="translation">The translation component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = S * R * T</c>, or more precisely:
            <code lang="C#">
            this == CreateScale(scale) * rotation * CreateTranslation(translation)
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(SpaceClaim.Api.V23.Geometry.Vector@,SpaceClaim.Api.V23.Geometry.Matrix@,System.Double@)">
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="translation">The translation component.</param>
            <param name="rotation">The rotation component.</param>
            <param name="scale">The scale component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = T * R * S</c>, or more precisely:
            <code lang="C#">
            this == CreateTranslation(translation) * rotation * CreateScale(scale))
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.Decompose(SpaceClaim.Api.V23.Geometry.Matrix@,System.Double@,SpaceClaim.Api.V23.Geometry.Vector@)">
            <summary>
            Decomposes the matrix into its translation, scale, and rotation components.
            </summary>
            <param name="rotation">The rotation component.</param>
            <param name="scale">The scale component.</param>
            <param name="translation">The translation component.</param>
            <remarks>
            The matrix (M) is decomposed into its translation (T), scale (S), and rotation (R) components,
            such that <c>M = R * S * T</c>, or more precisely:
            <code lang="C#">
            this == rotation * CreateScale(scale) * CreateTranslation(translation))
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Gets the elements of the matrix as a 4x4 array.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException">Index must be in the range [0:3].</exception>
            <remarks>
            The matrix is a pre-multiplication transform.
            <para/>
            The rotation is in m[0:2,0:2] and contains no scaling in its leading diagonal.
            <para/>
            The translation is (m[0,3]/m[3,3], m[1,3]/m[3,3], m[2,3]/m[3,3]).
            <para/>
            The uniform scale is 1/m[3,3].
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Matrix.Inverse">
            <summary>
            Gets the inverse transformation.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.TryGetRotation(SpaceClaim.Api.V23.Geometry.Line@,System.Double@)">
            <summary>
            Convert a matrix into the equivalent rotation about an axis.
            </summary>
            <param name="axis">Axis of rotation.</param>
            <param name="angle">Angle of rotation in the range <i>0 &lt;= angle &lt;= 2*pi</i>.</param>
            <returns>Success flag.</returns>
            <remarks>
            Returns false if the matrix does not have a rotation component.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="matrixA">The first matrix.</param>
            <param name="matrixB">The second matrix.</param>
            <returns>The resulting matrix.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Transforms a <see cref="T:SpaceClaim.Api.V23.Geometry.Frame"/>.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="frame">The frame to be transformed.</param>
            <returns>The transformed frame.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Box)">
            <summary>
            Transforms a <see cref="T:SpaceClaim.Api.V23.Geometry.Box"/>.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="box">The box to be transformed.</param>
            <returns>The transformed box.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Transforms a <see cref="T:SpaceClaim.Api.V23.Geometry.Point"/>.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="point">The point to be transformed.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Vector)">
            <summary>
            Transforms a <see cref="T:SpaceClaim.Api.V23.Geometry.Vector"/>.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="vec">The vector to be transformed.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Transforms a <see cref="T:SpaceClaim.Api.V23.Geometry.Direction"/>.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="dir">The direction to be transformed.</param>
            <returns>The transformed direction.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Geometry.Matrix.op_Multiply(SpaceClaim.Api.V23.Geometry.Matrix,System.Double)">
            <summary>
            Transforms a length by applying the scale factor of the matrix.
            </summary>
            <param name="matrix">The transformation to apply.</param>
            <param name="length">The length to be transformed.</param>
            <returns>The transformed length.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.IHasPlane.Plane">
            <summary>
            Gets the plane of the object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Geometry.Point">
            <summary>
            A 3D position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Geometry.Point.Vector">
            <summary>
            Gets the vector from the origin to this point.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Body">
            <summary>
            A modeler body.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Save(SpaceClaim.Api.V23.Modeler.BodySaveFormat,System.String)">
            <summary>
            Saves the body to a file in the format of the modeler.
            </summary>
            <param name="format">Whether to use text or binary format.</param>
            <param name="path">The full path of the file to create.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.RoundEdges(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{SpaceClaim.Api.V23.Modeler.Edge,SpaceClaim.Api.V23.Modeler.EdgeRound}})">
            <summary>
            Rounds a collection of edges.
            </summary>
            <param name="edgeRounds">Round specifications for each edge.</param>
            <returns>Created round faces and their original edge.</returns>
            <remarks>
            The return value is a dictionary mapping each newly created round face to the edge that was rounded to create it.
            More than one round face might be created from the same edge.
            The edge may be <b>null</b>, e.g. for a vertex face.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.IsClosed">
            <summary>
            Gets whether the body is a closed body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.PieceCount">
            <summary>
            Gets the number of disjoint pieces of the body.
            </summary>
            <remarks>
            A body can have one or more disjoint pieces.
            For example, using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Subtract(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})"/> can leave the body in two pieces.
            <para/>
            <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/> can be used to separate the pieces into separate bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces">
            <summary>
            Separates disjoint pieces into separate bodies of one piece each.
            </summary>
            <returns>Separate bodies.</returns>
            <remarks>
            This method returns one or more separate bodies, including the original body.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.SeparateNonManifold">
            <summary>
            Separates a body into its non-manifold portions. 
            </summary>
            <returns>
            Separate bodies.
            </returns>
            <remarks>
            If the body is already manifold (<see cref="P:SpaceClaim.Api.V23.Modeler.Body.IsManifold"/> = true), then it is returned as-is with no changes. 
            <br/>
            If the body is non-manifold, then all disjoint pieces are returned as separate bodies. The original body is deleted.  
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CombinePieces(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})">
            <summary>
            Combines bodies into a single disjoint body.
            </summary>
            <param name="otherPieces">Other bodies to combine.</param>
            <remarks>
            This method does the opposite of <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/>.
            <para/>
            No boolean or fusing operation is performed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Unite(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})">
            <summary>
            Unites tools bodies with this target body.
            </summary>
            <param name="toolBodies">The tool bodies to be united with this target body.</param>
            <exception cref="T:System.ArgumentException">Some modeler bodies belong to design bodies and some do not.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            If any of the bodies involved belongs to a <see cref="T:SpaceClaim.Api.V23.DesignBody"/>, then all the bodies must belong to design bodies,
            and the design bodies must all belong to the same <see cref="T:SpaceClaim.Api.V23.Part"/>.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if a body belongs to a design body.
            <para/>
            All tool bodies are consumed in the boolean operation, so <see cref="P:SpaceClaim.Api.V23.Modeler.Topology.IsDeleted"/> will be true for each tool body afterwards.
            The target body is deleted only if the result is empty.
            <para/>
            Bodies involved may be disjoint.
            If a body belongs to a design body, it can only be disjoint if it is a planar body.
            Planar bodies are flat bodies entirely in one plane, such as those created using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">CreatePlanarBody</see>.
            Therefore if the target body belongs to a design body and the result is disjoint, but not a planar body,
            the target body is separated and additional design bodies are created in the same part.
            <para/>
            The operation works on open or closed bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Unite(SpaceClaim.Api.V23.Modeler.Body[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Modeler.Body.Unite(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Subtract(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})">
            <summary>
            Subtracts tools bodies from this target body.
            </summary>
            <param name="toolBodies">The tool bodies to be subtracted from this target body.</param>
            <exception cref="T:System.ArgumentException">Some modeler bodies belong to design bodies and some do not.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            If any of the bodies involved belongs to a <see cref="T:SpaceClaim.Api.V23.DesignBody"/>, then all the bodies must belong to design bodies,
            and the design bodies must all belong to the same <see cref="T:SpaceClaim.Api.V23.Part"/>.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if a body belongs to a design body.
            <para/>
            All tool bodies are consumed in the boolean operation, so <see cref="P:SpaceClaim.Api.V23.Modeler.Topology.IsDeleted"/> will be true for each tool body afterwards.
            The target body is deleted only if the result is empty.
            <para/>
            Bodies involved may be disjoint.
            If a body belongs to a design body, it can only be disjoint if it is a planar body.
            Planar bodies are flat bodies entirely in one plane, such as those created using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">CreatePlanarBody</see>.
            Therefore if the target body belongs to a design body and the result is disjoint, but not a planar body,
            the target body is separated and additional design bodies are created in the same part.
            <para/>
            The operation works on open or closed bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Subtract(SpaceClaim.Api.V23.Modeler.Body[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Modeler.Body.Subtract(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Intersect(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})">
            <summary>
            Intersects tools bodies with this target body.
            </summary>
            <param name="toolBodies">The tool bodies to be intersected with this target body.</param>
            <exception cref="T:System.ArgumentException">Some modeler bodies belong to design bodies and some do not.</exception>
            <exception cref="T:System.ArgumentException">Design bodies do not belong to the same part.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            If any of the bodies involved belongs to a <see cref="T:SpaceClaim.Api.V23.DesignBody"/>, then all the bodies must belong to design bodies,
            and the design bodies must all belong to the same <see cref="T:SpaceClaim.Api.V23.Part"/>.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if a body belongs to a design body.
            <para/>
            All tool bodies are consumed in the boolean operation, so <see cref="P:SpaceClaim.Api.V23.Modeler.Topology.IsDeleted"/> will be true for each tool body afterwards.
            The target body is deleted only if the result is empty.
            <para/>
            Bodies involved may be disjoint.
            If a body belongs to a design body, it can only be disjoint if it is a planar body.
            Planar bodies are flat bodies entirely in one plane, such as those created using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">CreatePlanarBody</see>.
            Therefore if the target body belongs to a design body and the result is disjoint, but not a planar body,
            the target body is separated and additional design bodies are created in the same part.
            <para/>
            The operation works on open or closed bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Intersect(SpaceClaim.Api.V23.Modeler.Body[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Modeler.Body.Intersect(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Fuse(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body},System.Boolean,SpaceClaim.Api.V23.Modeler.Tracker)">
            <summary>
            Fuses two or more bodies together into a single body.
            </summary>
            <param name="toolBodies">Tool bodies to fuse onto this target body.</param>
            <param name="skipProblemBodies">Whether to skip bodies that fail to fuse.</param>
            <param name="tracker">A tracker to receive information about splits and merges; or <b>null</b> if not required.</param>
            <exception cref="T:System.ArgumentException">A modeler body belongs to a design body.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            Fuses tool bodies onto this target body.
            <para/>
            Faces and edges in the tool bodies are transferred to this target body, and the tool bodies are deleted.
            Bodies are imprinted and coincident topology is joined.
            Unlike a boolean operation, no trimming is performed.
            <para/>
            None of the bodies involved can belong to a design body.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if a body belongs to a design body.
            <para/>
            The resulting body may be non-manifold.
            <see cref="P:SpaceClaim.Api.V23.Modeler.Body.IsManifold"/> can be used to see if a body is manifold or non-manifold.
            Non-manifold bodies can not be used to create design bodies.
            <para/>
            The <paramref name="skipProblemBodies"/> flag controls what happens if it was not possible to fuse one or more of the tool bodies.
            If <paramref name="skipProblemBodies"/> is <b>false</b> and the operation was unsuccessful, an <see cref="T:System.InvalidOperationException"/> is thrown.
            If <paramref name="skipProblemBodies"/> is <b>true</b>, any bodies that could not be fused are simply skipped.
            Any skipped bodies are unchanged and their <see cref="P:SpaceClaim.Api.V23.Modeler.Topology.IsDeleted"/> state will be <b>false</b>.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.Modeler.Tracker"/> can be provided, which will receive information about splits and merges that took place.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.IsManifold">
            <summary>
            Gets whether the body is manifold.
            </summary>
            <remarks>
            Non-manifold bodies can be created when <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Fuse(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body},System.Boolean,SpaceClaim.Api.V23.Modeler.Tracker)"/> is used.
            <para/>
            Non-manifold bodies can not be used to create design bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Imprint(SpaceClaim.Api.V23.Modeler.Body)">
            <summary>
            Imprints two bodies on each other.
            </summary>
            <param name="other">The other body to imprint.</param>
            <exception cref="T:System.ArgumentException">Some modeler bodies belong to design bodies and some do not.</exception>
            <exception cref="T:System.ArgumentException">Design bodies do not belong to the same part.</exception>
            <remarks>
            Finds the intersection between the two bodies and imprints the result onto both bodies.
            New edges are imprinted, and if closed loops of edges are produced, new faces are created.
            <para/>
            If either of the bodies involved belongs to a <see cref="T:SpaceClaim.Api.V23.DesignBody"/>, then both bodies must belong to design bodies,
            and the design bodies must both belong to the same <see cref="T:SpaceClaim.Api.V23.Part"/>.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if a body belongs to a design body.
            <para/>
            The operation works on open or closed bodies.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.ImprintCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})">
            <summary>
            Imprints curves onto the body to create edges.
            </summary>
            <param name="segments">Trimmed curves to imprint.</param>
            <param name="faces">Faces to imprint on; else <b>null</b> to use all faces in the body.</param>
            <returns>Edges created, and the segment that was imprinted to create them.</returns>
            <seealso cref="M:SpaceClaim.Api.V23.Modeler.Body.GetImprintedCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetImprintedCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})">
            <summary>
            Gets imprinted curves, without modifying the body.
            </summary>
            <param name="segments">Trimmed curves to imprint.</param>
            <param name="faces">Faces to imprint on; else <b>null</b> to use all faces in the body.</param>
            <returns>Imprinted curves.</returns>
            <remarks>
            This method is similar to <see cref="M:SpaceClaim.Api.V23.Modeler.Body.ImprintCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})"/>, only it does not modify the body.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetIntersections(SpaceClaim.Api.V23.Modeler.Body)">
            <summary>
            Gets the intersection between this body and another body.
            </summary>
            <param name="other">The other body.</param>
            <returns>The intersections.</returns>
            <remarks>
            Neither body is modified.
            <para/>
            A collection of <see cref="T:SpaceClaim.Api.V23.Modeler.BodyIntersection"/> objects is returned.
            Each one provides the geometry of the intersection,
            the contributing topology from the subject (this body),
            and the contributing topology from the other body.
            Contributing topology can be a face, an edge, or a vertex.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Copy">
            <summary>
            Creates a copy of the body.
            </summary>
            <returns>A new body.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Copy(System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Face,SpaceClaim.Api.V23.Modeler.Face}@,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Edge,SpaceClaim.Api.V23.Modeler.Edge}@)">
            <summary>
            Creates a copy of the body.
            </summary>
            <param name="oldFaceToNewFace">A dictionary of old-to-new face mappings.</param>
            <param name="oldEdgeToNewEdge">A dictionary of old-to-new edge mappings.</param>
            <returns>A new body.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CopyFaces(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face})">
            <summary>
            Creates a copy of one or more faces of the body.
            </summary>
            <param name="faces">The faces to copy.</param>
            <returns>A new body.</returns>
            <exception cref="T:System.ArgumentException">Faces must belong to this body.</exception>
            <remarks>
            If the faces are not connected, then the resulting body will be disjoint (<see cref="P:SpaceClaim.Api.V23.Modeler.Body.PieceCount"/> will be greater than 1).
            The disjoint pieces can be separated using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CopyFaces(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Face,SpaceClaim.Api.V23.Modeler.Face}@,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Edge,SpaceClaim.Api.V23.Modeler.Edge}@)">
            <summary>
            Creates a copy of one or more faces of the body.
            </summary>
            <param name="faces">The faces to copy.</param>
            <param name="oldFaceToNewFace">A dictionary of old-to-new face mappings.</param>
            <param name="oldEdgeToNewEdge">A dictionary of old-to-new edge mappings.</param>
            <returns>A new body.</returns>
            <exception cref="T:System.ArgumentException">Faces must belong to this body.</exception>
            <remarks>
            If the faces are not connected, then the resulting body will be disjoint (<see cref="P:SpaceClaim.Api.V23.Modeler.Body.PieceCount"/> will be greater than 1).
            The disjoint pieces can be separated using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)">
            <summary>
            Gets a faceted representation of the faces of the body.
            </summary>
            <param name="faces">The faces in this body whose tessellation is sought; else <b>null</b> for all faces.</param>
            <param name="options">Tessellation options.</param>
            <returns>Face tessellations for each face.</returns>
            <exception cref="T:System.ArgumentException">Faces must belong to this body.</exception>
            <remarks>
            Facets for adjacent faces are guaranteed to meet up with no gaps if faceted in the same call to <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)"/>.
            If adjacent faces are faceted in separate calls to <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)"/>, gaps may sometimes occur.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions,System.Boolean,System.Boolean)">
            <summary>
            Gets a faceted representation of the faces of the body.
            </summary>
            <param name="faces">The faces in this body whose tessellation is sought; else <b>null</b> for all faces.</param>
            <param name="options">Tessellation options.</param>
            <param name="parallel">Whether to perform the faceting in parallel, using multiple threads.</param>
            <param name="showProgress">Whether to show a popup progress window.</param>
            <returns>Face tessellations for each face.</returns>
            <exception cref="T:System.ArgumentException">Faces must belong to this body.</exception>
            <remarks>
            Facets for adjacent faces are guaranteed to meet up with no gaps if faceted in the same call to <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions,System.Boolean,System.Boolean)"/>.
            If adjacent faces are faceted in separate calls to <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions,System.Boolean,System.Boolean)"/>, gaps may sometimes occur.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Reverse">
            <summary>
            Reverses the normals of all faces of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.Shells">
            <summary>
            Gets all the shells (connected face sets) of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.Faces">
            <summary>
            Gets all the faces of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.Edges">
            <summary>
            Gets all the edges of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.Vertices">
            <summary>
            Gets all the vertices of the body.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Creates a planar body from a profile.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="profile">A collection of trimmed curves describing the boundary of the profile.</param>
            <returns>The created body.</returns>
            <remarks>
            The <paramref name="profile"/> must be a closed loop of trimmed curves.
            There can be inner loops, which will give rise to holes.
            The trimmed curves can be listed in any order.
            <br/>
            An exception will be thrown if the resulting body is non-manifold. 
            </remarks>
            <exception cref="T:System.ArgumentException">Invalid profile.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreatePlanarBody(SpaceClaim.Api.V23.Geometry.Plane,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Geometry.ITrimmedCurve,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Edge}}@)">
            <summary>
            Creates a planar body from a profile.
            </summary>
            <param name="plane">The plane of the profile.</param>
            <param name="profile">A collection of trimmed curves describing the boundary of the profile.</param>
            <param name="allowNonManifold"><b>true</b> to allow creation of a non-manifold body; otherwise <b>false</b>.</param>
            <param name="mergeTopology"><b>true</b> to remove internal edges; otherwise <b>false</b>.</param>
            <param name="removeInnerRegions"><b>true</b> to remove inner regions; otherwise <b>false</b>.</param>
            <param name="curvesToEdges">A dictionary of curves to edges in the new body.</param>
            <returns>The created body.</returns>
            <remarks>
            The <paramref name="profile"/> must be a closed loop of trimmed curves.
            There can be inner loops, which will give rise to holes.
            The trimmed curves can be listed in any order.
            </remarks>
            <exception cref="T:System.ArgumentException">Invalid profile.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreateSurfaceBody(SpaceClaim.Api.V23.Geometry.Surface,SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Creates a body from a region of a surface.
            </summary>
            <param name="surface">The surface.</param>
            <param name="region">The region of the surface.</param>
            <returns>A body of one face.</returns>
            <remarks>
            If the surface <see cref="P:SpaceClaim.Api.V23.Geometry.Surface.Parameterization"/> is bounded
            (e.g. a <see cref="T:SpaceClaim.Api.V23.Geometry.Sphere"/>, a <see cref="T:SpaceClaim.Api.V23.Geometry.Torus"/>, or a <see cref="T:SpaceClaim.Api.V23.Geometry.NurbsSurface"/>)
            an <see cref="F:SpaceClaim.Api.V23.Geometry.BoxUV.Empty"/> region can be supplied to use the entire surface;
            otherwise (e.g. a <see cref="T:SpaceClaim.Api.V23.Geometry.Plane"/>, a <see cref="T:SpaceClaim.Api.V23.Geometry.Cylinder"/>, or a <see cref="T:SpaceClaim.Api.V23.Geometry.Cone"/>),
            an explicit region must be supplied.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreateNurbsBody(SpaceClaim.Api.V23.Modeler.Body)">
            <summary>
            Creates a new body made up of NURBS surfaces, using face geometry and topology from an existing body. 
            </summary>
            <param name="body">The original body.</param>
            <returns>The created NURBS body.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreateNurbsBody(SpaceClaim.Api.V23.Modeler.Face)">
            <summary>
            Creates a new body made up of a NURBS surface, using face geometry and topology from an existing face. 
            </summary>
            <param name="face">The original face.</param>
            <returns>The created NURBS body.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.CreateWireBody(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <summary>
            Creates a wire body of one edge.
            </summary>
            <param name="segment">The shape of the edge.</param>
            <returns>A wire body of one edge.</returns>
            <remarks>
            This method creates a wire body containing a single edge.
            Wire bodies with more than one edge can be created using <see cref="M:SpaceClaim.Api.V23.Modeler.Body.Fuse(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body},System.Boolean,SpaceClaim.Api.V23.Modeler.Tracker)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.TaperFaces(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Geometry.Plane,System.Double)">
            <summary>
            Tapers a collection of faces.
            </summary>
            <param name="faces">The faces to taper.</param>
            <param name="neutralPlane">The neutral plane.</param>
            <param name="taperAngle">The taper angle in radians.</param>
            <exception cref="T:System.ArgumentException">Taper angle must be in the range [-pi/2, pi/2].</exception>
            <remarks>
            A positive taper angle tapers inwards in the direction of the plane normal.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.ExtrudeProfile(SpaceClaim.Api.V23.Geometry.Profile,System.Double)">
            <summary>
            Creates a body by extruding a planar profile.
            </summary>
            <param name="profile">The profile to extrude.</param>
            <param name="distance">The distance to extrude.</param>
            <returns>The created body.</returns>
            <remarks>
            The resulting body is capped with a planar face at the start and end.
            <para/>
            The <paramref name="profile"/> must be a closed loop of trimmed curves.
            There can be inner loops, which will give rise to holes.
            The trimmed curves can be listed in any order.
            </remarks>
            <exception cref="T:System.ArgumentException">Invalid profile.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.SweepProfile(SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Creates a body by sweeping a planar profile along a path.
            </summary>
            <param name="profile">The profile to sweep.</param>
            <param name="path">A sweep path.</param>
            <returns>The created body.</returns>
            <remarks>
            If the path is open, the resulting body is capped with a planar face at the start and end.
            <para/>
            The <paramref name="profile"/> must be a closed loop of trimmed curves.
            There can be inner loops, which will give rise to holes.
            The trimmed curves can be listed in any order.
            <para/>
            The <paramref name="path"/> must be listed in order as a chain.
            </remarks>
            <exception cref="T:System.ArgumentException">Invalid profile.</exception>
            <exception cref="T:System.ArgumentException">The path is invalid, or it is unsuitable for the profile.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.SweepChain(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Creates a body by sweeping a chain of curves along a path.
            </summary>
            <param name="chain">A chain of trimmed curves.</param>
            <param name="path">A sweep path.</param>
            <returns>The created body.</returns>
            <remarks>
            Both <paramref name="chain"/> and <paramref name="path"/> must be listed in order as a chain.
            <para/>
            The <paramref name="chain"/> to be swept can be open or closed, and need not be planar.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.LoftProfiles(System.Collections.Generic.IList{System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve}},System.Boolean,System.Boolean)">
            <summary>
            Creates a body by lofting between profiles.
            </summary>
            <param name="profiles">A list of profiles to loft through.</param>
            <param name="periodic">Whether the loft should be periodic.</param>
            <param name="ruled">Whether ruled surfaces should be produced.</param>
            <returns>The created body.</returns>
            <remarks>
            Surfaces produced have a U parameter in the direction of the profile curves,
            and a V parameter in the direction of lofting.
            <para/>
            Profiles can have different numbers of segments.
            A minimum twist solution is produced.
            <para/>
            Profiles should be all closed or all open.
            Closed profiles cannot contain inner loops.
            If closed profiles are supplied, a closed (solid) body is produced, if possible;
            otherwise an open (sheet) body is produced.
            <para/>
            The <paramref name="periodic"/> argument applies when the profiles are closed.
            It is ignored if the profiles are open.
            <list type="bullet">
            	<item>
            		If <paramref name="periodic"/> is <b>true</b>, at least three profiles must be supplied.
            		The loft continues from the last profile back to the first profile to produce surfaces that are periodic in V.
            	</item>
            	<item>
            		If <paramref name="periodic"/> is <b>false</b>, at least two profiles must be supplied.
            		If the first and last profiles are planar, end capping faces are created;
            		otherwise an open (sheet) body is produced.
            	</item>
            </list>
            <para/>
            If <paramref name="ruled"/> is <b>true</b>, separate ruled surfaces are produced between each pair of profiles.
            If <paramref name="periodic"/> is <b>true</b>, the loft continues from the last profile back to the first profile,
            but the surfaces are not periodic.
            </remarks>
            <exception cref="T:System.ArgumentException">Insufficient number of profiles supplied.</exception>
            <exception cref="T:System.ArgumentException">The profiles are unsuitable for lofting.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.LoftProfiles(System.Collections.Generic.IList{System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve}},System.Double,System.Double)">
            <summary>
            Creates a body by lofting between profiles. This interface is designed for controlling the magnitude of the
            tangent vectors if the profiles are edges on a sheet or solid body and will use the surface to enforce tangency.
            </summary>
            <param name="profiles">A list of profiles to loft through.</param>
            <param name="startMagnitude">Value between 0 and 2. A value of 1.0 should produce the surface with least amount of curvature.</param>
            <param name="endMagnitude">Value between 0 and 2. A value of 1.0 should produce the surface with least amount of curvature.</param>
            <returns>The created body.</returns>
            <remarks>
            Surfaces produced have a U parameter in the direction of the profile curves,
            and a V parameter in the direction of lofting.
            <para/>
            Profiles can have different numbers of segments.
            A minimum twist solution is produced.
            <para/>
            Profiles should be all closed or all open.
            Closed profiles cannot contain inner loops.
            If closed profiles are supplied, a closed (solid) body is produced, if possible;
            otherwise an open (sheet) body is produced.
            <para/>
            </remarks>
            <exception cref="T:System.ArgumentException">Insufficient number of profiles supplied.</exception>
            <exception cref="T:System.ArgumentException">The profiles are unsuitable for lofting.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.LoftProfiles(SpaceClaim.Api.V23.Modeler.Loop,System.Collections.Generic.IList{System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve}},SpaceClaim.Api.V23.Modeler.Loop,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Creates a body by lofting between profiles using guide curves.
            </summary>
            <param name="startLoop">The start profile, or null if not specified.</param>
            <param name="profiles">A list of profiles to loft through, or null if not specified.</param>
            <param name="endLoop">The end profile, or null if not specified.</param>
            <param name="guides">A list of guide curves.</param>
            <returns>The created body.</returns>
            <remarks>
            <para/>
            If startLoop or endLoop are supplied, the resulting faces will be tangent to the profiles. 
            <para/>
            Guide curves can be provided in tangent continuous pieces. 
            <para/>
            Surfaces produced have a U parameter in the direction of the profile curves,
            and a V parameter in the direction of lofting.
            <para/>
            Profiles can have different numbers of segments.
            A minimum twist solution is produced.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Import(SpaceClaim.Api.V23.Modeler.ForeignBody,System.Collections.Generic.IDictionary{System.String,SpaceClaim.Api.V23.Modeler.Face}@,System.Collections.Generic.IDictionary{System.String,SpaceClaim.Api.V23.Modeler.Edge}@)">
            <summary>
            Imports a custom foreign body.
            </summary>
            <param name="foreignBody">The foreign body to import.</param>
            <param name="idToFace">A mapping from foreign face id to face.</param>
            <param name="idToEdge">A mapping from foreign edge id to edge.</param>
            <returns>The imported body.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.ProjectCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Modeler.ProjectionOptions)">
            <summary>
            Projects trimmed curves to the body.
            </summary>
            <param name="segments">Trimmed curves to project.</param>
            <param name="dir">Direction of projection.</param>
            <param name="options">Projection options.</param>
            <returns>Projected trimmed curves and the faces in which they lie.</returns>
            <remarks>
            The returned dictionary contains the projected trimmed curves, and for each one, the face in which it lies.
            <para/>
            The trimmed curves are projected in both the positive and negative sense of the specified <paramref name="dir"/>
            in order to find the projected result.
            <para/>
            Only projections onto faces are returned.
            If a trimmed curve projects onto an edge, this is not returned.
            <para/>
            When <see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.Extent">ProjectionOptions.Extent</see> is specified as <see cref="F:SpaceClaim.Api.V23.Modeler.ProjectionExtent.ClosestFaces">ProjectionExtent.ClosestFaces</see>,
            only portions of each trimmed curve that are on or outside the body are projected.
            Portions that are inside the body are ignored.
            <para/>
            If projected trimmed curves intersect, they are split.
            For example, if two crossing trimmed curves project to the same face, four trimmed curves are returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.WrapPlanarCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Modeler.ProjectionOptions,SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Wraps a set of coplanar curves onto a body. 
            </summary>
            <param name="segments">Trimmed curves to wrap.</param>
            <param name="sourcePoint">A reference point in the source curve plane.</param>
            <param name="targetPoint">A reference point on the body.</param>
            <param name="options">Projection options.</param>
            <param name="plane">Optional hint plane that contains segments.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.WrapPlanarCurvesParallel(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,System.Int32,SpaceClaim.Api.V23.Geometry.Plane)">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.WrapPlanarCurvesParallel(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Modeler.ProjectionOptions,System.Int32,System.Boolean,SpaceClaim.Api.V23.Geometry.Plane)">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetHiddenLineImage(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.TransformedBody},SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a hidden line image.
            </summary>
            <param name="transformedBodies">Bodies to be rendered.</param>
            <param name="viewDir">The view direction, towards the viewer.</param>
            <returns>A table of body renderings for the supplied bodies.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.OffsetFaces(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},System.Double)">
            <summary>
            Offsets faces.
            </summary>
            <param name="faces">The faces to be offset; else <b>null</b> to offset all faces in the body.</param>
            <param name="offset">The offset distance.</param>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            The offset is positive in the direction of the face normal,
            i.e. a positive value offsets outwards, and a negative value offsets inwards.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.OffsetFaces(System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Modeler.Face,System.Double})">
            <summary>
            Offsets faces.
            </summary>
            <param name="faceToOffset">The offset to be used for each face.</param>
            <remarks>
            The offset is positive in the direction of the face normal,
            i.e. a positive value offsets outwards, and a negative value offsets inwards.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Split(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Modeler.Tracker)">
            <summary>
            Splits the body into pieces.
            </summary>
            <param name="plane">A dividing plane at which to split the body.</param>
            <param name="tracker">A tracker to receive information about splits and merges; or <b>null</b> if not required.</param>
            <remarks>
            The body is split in-situ, so that additional pieces are created.
            <see cref="P:SpaceClaim.Api.V23.Modeler.Body.PieceCount"/> can be used to get the number of pieces in the result,
            and <see cref="M:SpaceClaim.Api.V23.Modeler.Body.SeparatePieces"/> can be used to create separate bodies, if required.
            <para/>
            If the <paramref name="plane"/> does not pass through the body, no changes are made.
            <para/>
            The body must not belong to a design body.
            <see cref="M:SpaceClaim.Api.V23.DesignBody.GetDesignBody(SpaceClaim.Api.V23.Modeler.Body)"/> can be used to see if the body belongs to a design body.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.Volume">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Body.SurfaceArea">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetCollision(SpaceClaim.Api.V23.Geometry.ITrimmedSpace)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Body.IntersectCurve(SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Intersect the curve with the body and returns all the intersection points in faces
            </summary>
            <param name="curve"></param>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.ProjectionExtent">
            <summary>
            Specifies the extent of a projection.
            </summary>
            <remarks>
            This type is used with the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.ProjectCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Modeler.ProjectionOptions)"/> method.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ProjectionExtent.ClosestFaces">
            <summary>
            Project to the closest faces.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ProjectionExtent.AllFaces">
            <summary>
            Project to all faces.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.ProjectionOptions">
            <summary>
            Specifies options used with the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.ProjectCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Modeler.ProjectionOptions)"/> method.
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.Modeler.Body.ProjectCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Modeler.ProjectionOptions)"/>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ProjectionOptions.Default">
            <summary>
            A default set of projection options.
            </summary>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Modeler.ProjectionOptions.#ctor"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.Extent">
            <summary>
            Gets the extent of the projection.
            </summary>
            <remarks>This option has no effect if <see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.WrapCurves"/> is set to <b>true</b>.</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.WrapCurves">
            <summary>
            Gets whether curves are wrapped around the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.ExtendCurves">
            <summary>
            Gets whether curves are extended to the edges of faces. 
            </summary>
            <remarks>This option has no effect if <see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.WrapCurves"/> is set to <b>true</b>.</remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.ProjectionOptions.#ctor">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.ProjectionOptions"/> with a default set of options.
            </summary>
            <remarks>
            The default options are:
            <list type="bullet">
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.Extent"/> = ProjectionExtent.ClosestFaces
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.WrapCurves"/> = false
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.ProjectionOptions.ExtendCurves"/> = false
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.ProjectionOptions.#ctor(SpaceClaim.Api.V23.Modeler.ProjectionExtent,System.Boolean)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.ProjectionOptions"/> object.
            </summary>
            <param name="extent">The extent of the projection. </param>
            <param name="extendCurves">Whether curves are extended to the edges of faces.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.ProjectionOptions.#ctor(System.Boolean)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.ProjectionOptions"/> object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.ProjectionOptions.#ctor(SpaceClaim.Api.V23.Modeler.ProjectionExtent,System.Boolean,System.Boolean)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.ProjectionOptions"/> object.
            </summary>
            <param name="extent">The extent of the projection. </param>
            <param name="extendCurves">Whether curves are extended to the edges of faces.</param>
            <param name="wrapCurves">Whether curves are wrapped around the body.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.TessellationOptions">
            <summary>
            Specifies options used with the <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)"/> method.
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions)"/>
            <seealso cref="M:SpaceClaim.Api.V23.Modeler.Body.GetTessellation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},SpaceClaim.Api.V23.Modeler.TessellationOptions,System.Boolean,System.Boolean)"/>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.TessellationOptions.Default">
            <summary>
            A default set of tessellation options.
            </summary>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Modeler.TessellationOptions.#ctor"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.SurfaceDeviation">
            <summary>
            Gets the maximum deviation from the true surface position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.AngleDeviation">
            <summary>
            Gets the maximum deviation from the true surface normal.
            </summary>
            <remarks>
            The value is in radians.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.MaximumAspectRatio">
            <summary>
            Gets the maximum aspect ratio of facets, or zero if not specified.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.MaximumEdgeLength">
            <summary>
            Gets the maximum facet edge length, or zero if not specified.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.TessellationOptions.#ctor">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.TessellationOptions"/> with a default set of options.
            </summary>
            <remarks>
            The default options are:
            <list type="bullet">
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.SurfaceDeviation"/> = 0.00075 (0.75 mm)
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.AngleDeviation"/> = 20° (in radians)
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.MaximumAspectRatio"/> = 0 (unspecified)
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Modeler.TessellationOptions.MaximumEdgeLength"/> = 0 (unspecified)
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.TessellationOptions.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.TessellationOptions"/> object.
            </summary>
            <param name="surfaceDeviation">The maximum deviation from the true surface position.</param>
            <param name="angleDeviation">The maximum deviation from the true surface normal.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.TessellationOptions.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.Modeler.TessellationOptions"/> object.
            </summary>
            <param name="surfaceDeviation">The maximum deviation from the true surface position.</param>
            <param name="angleDeviation">The maximum deviation from the true surface normal.</param>
            <param name="maxAspectRatio">The maximum aspect ratio of facets, or zero if not specified.</param>
            <param name="maxEdgeLength">The maximum facet edge length, or zero if not specified.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.BodyIntersection">
            <summary>
            A result from intersecting two bodies.
            </summary>
            <remarks>
            This type is used by <see cref="M:SpaceClaim.Api.V23.Modeler.Body.GetIntersections(SpaceClaim.Api.V23.Modeler.Body)"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.BodyIntersection.Segment">
            <summary>
            Gets the intersection between the two contributing topologies.
            </summary>
            <remarks>
            If the intersection is a point, the curve of the segment will be a <see cref="T:SpaceClaim.Api.V23.Geometry.PointCurve"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.BodyIntersection.ContributorA">
            <summary>
            Gets the contributor (face, edge, or vertex) from the subject body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.BodyIntersection.ContributorB">
            <summary>
            Gets the contributor (face, edge, or vertex) from the other body.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Mesh">
            <summary>
            A mesh.
            </summary>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/> contains topology in terms of connected <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/>,
            <see cref="T:SpaceClaim.Api.V23.Modeler.MeshEdge"/>, and <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/> objects.
            <para/>
            The mesh can be open or non-manifold.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.Faces">
            <summary>
            Gets the faces in the mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.Edges">
            <summary>
            Gets the edges in the mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.Vertices">
            <summary>
            Gets the vertices in the mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.IsClosed">
            <summary>
            Gets whether the mesh is closed. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.IsManifold">
            <summary>
            Gets whether the mesh is manifold. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.Volume">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Mesh.SurfaceArea">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.GetCollision(SpaceClaim.Api.V23.Geometry.ITrimmedSpace)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Mesh.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.MeshEdge">
            <summary>
            A mesh edge.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshEdge.Direction">
            <summary>
            Gets the direction of the edge.
            </summary>
            <remarks>
            The direction is from the start vertex to the end vertex.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshEdge.Vertices">
            <summary>
            Gets the start and end vertices of the edge.
            </summary>
            <remarks>
            The returned list has two vertices: { start, end }.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshEdge.Faces">
            <summary>
            Gets the faces adjacent to this edge.
            </summary>
            <remarks>
            The mesh can be open or non-manifold, so each edge has one or more faces adjacent to it.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.MeshFace">
            <summary>
            A mesh face.
            </summary>
            <remarks>
            Mesh faces are triangular, so they have three <see cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Vertices"/> and three <see cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Edges"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshFace.Normal">
            <summary>
            Gets the normal of the plane of the face.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Vertices"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Edges"/> are ordered clockwise about the <see cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Normal"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshFace.Vertices">
            <summary>
            Gets the three vertices of the face.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Normal"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshFace.Edges">
            <summary>
            Gets the three edges of the face.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.Modeler.MeshFace.Normal"/>
            <para/>
            Edges[0] is opposite Vertices[0],
            Edges[1] is opposite Vertices[1], and
            Edges[2] is opposite Vertices[2].
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Modeler.MeshEdge.Direction"/> of each edge is arbitrary.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshFace.AdjacentFaces">
            <summary>
            Gets the adjacent faces.
            </summary>
            <remarks>
            Adjacent faces are faces that share an edge with this face.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.MeshTopology">
            <summary>
            A mesh face, mesh edge, or mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Mesh">
            <summary>
            Gets the mesh in which this topology lives.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Index">
            <summary>
            Gets the index of this topology.
            </summary>
            <remarks>
            Each mesh face, mesh edge, or mesh vertex has a zero-based index, which is unique for that type within the mesh.
            That is, two mesh faces in the same mesh will have different indices,
            but a mesh edge or mesh vertex might both have the same index as a mesh face.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.DesignMesh.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Collections.Generic.IList{SpaceClaim.Api.V23.Modeler.Facet})"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.MeshVertex">
            <summary>
            A mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshVertex.Position">
            <summary>
            Gets the position of the vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshVertex.Edges">
            <summary>
            Gets the edges connected to this vertex.
            </summary>
            <remarks>
            The result is at least two edges.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.MeshVertex.Faces">
            <summary>
            Gets the faces connected to this vertex.
            </summary>
            <remarks>
            The result is at least one face.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.BodyRendering">
            <summary>
            A hidden line rendering of a body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.BodyRendering.EdgeRenderings">
            <summary>
            Gets the edge renderings.
            </summary>
            <remarks>
            The values in the table describe edge segments.
            A segment is either visible, or hidden by a face.
            Segments that are hidden behind silhouettes or other edges are typically not returned at all,
            since there is no need for these to be displayed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.BodyRendering.FaceRenderings">
            <summary>
            Gets the face renderings.
            </summary>
            <remarks>
            The values in the table describe silhouette segments.
            A segment is either visible, or hidden by a face.
            Segments that are hidden behind edges or other silhouettes are typically not returned at all,
            since there is no need for these to be displayed.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.EdgeRendering">
            <summary>
            A hidden line rendering of a segment of an edge.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.EdgeRendering.#ctor(System.Boolean,SpaceClaim.Api.V23.Geometry.Interval)">
            <summary>
            Constructs an edge rendering.
            </summary>
            <param name="hidden">Whether the edge segment is hidden.</param>
            <param name="interval">The interval of the edge segment.</param>
            <remarks>
            The <paramref name="interval"/> is in terms of the curve of the original edge.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.EdgeRendering.IsHidden">
            <summary>
            Gets whether the edge segment is hidden by a face.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.Modeler.BodyRendering.EdgeRenderings"/> for more information.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.Modeler.BodyRendering.EdgeRenderings"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.EdgeRendering.Interval">
            <summary>
            Gets the interval of the edge segment.
            </summary>
            <remarks>
            The interval is in terms of the curve of the original edge.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.FaceRendering">
            <summary>
            A hidden line rendering of a segment of a silhouette.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.FaceRendering.#ctor(System.Boolean,SpaceClaim.Api.V23.Geometry.ITrimmedCurve,SpaceClaim.Api.V23.Geometry.Point[])">
            <summary>
            Constructs a face rendering.
            </summary>
            <param name="hidden">Whether the silhouette segment is hidden.</param>
            <param name="segment">The silhouette segment.</param>
            <param name="polyline">The silhouette polyline.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FaceRendering.IsHidden">
            <summary>
            Gets whether the silhouette is hidden by a face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FaceRendering.Segment">
            <summary>
            Gets the silhouette segment.
            </summary>
            <remarks>
            The segment is in the transformed space of the <see cref="T:SpaceClaim.Api.V23.Modeler.TransformedBody"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FaceRendering.Polyline">
            <summary>
            Gets the silhouette polyline.
            </summary>
            <remarks>
            The polyline is in the transformed space of the <see cref="T:SpaceClaim.Api.V23.Modeler.TransformedBody"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.TransformedBody">
            <summary>
            A body and a transform.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.TransformedBody.#ctor(SpaceClaim.Api.V23.Modeler.Body,SpaceClaim.Api.V23.Geometry.Matrix)">
            <summary>
            Constructs a transformed body.
            </summary>
            <param name="body">A body.</param>
            <param name="transform">A transform.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TransformedBody.Body">
            <summary>
            Gets the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.TransformedBody.Transform">
            <summary>
            Gets the transform.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.EdgeRound">
            <summary>
            Specifies an edge round.
            </summary>
            <remarks>
            This class is abstract.
            Derived classes <see cref="T:SpaceClaim.Api.V23.Modeler.FixedRadiusRound"/> and <see cref="T:SpaceClaim.Api.V23.Modeler.VariableRadiusRound"/> can be created.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.FixedRadiusRound">
            <summary>
            Specified a fixed radius edge round.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.FixedRadiusRound.#ctor(System.Double)">
            <summary>
            Creates a fixed radius round specification.
            </summary>
            <param name="radius">The round radius.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FixedRadiusRound.Radius">
            <summary>
            Gets the round radius.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.VariableRadiusRound">
            <summary>
            Specifies a variable radius edge round.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.VariableRadiusRound.#ctor(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.RadiusPoint})">
            <summary>
            Create a variable radius round specification.
            </summary>
            <param name="radiusPoints">Two or more radius values along the edge.</param>
            <exception cref="T:System.ArgumentException">At least two radius points must be supplied.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.VariableRadiusRound.RadiusPoints">
            <summary>
            Gets the radius points along the edge.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.RadiusPoint">
            <summary>
            Specifies the radius of a variable radius round.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.RadiusPoint.#ctor(System.Double,System.Double)">
            <summary>
            Creates a radius point.
            </summary>
            <param name="param">The location along the edge as a parameter on its curve.</param>
            <param name="radius">The round radius at that location.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.RadiusPoint.Param">
            <summary>
            The location along the edge as a parameter on its curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.RadiusPoint.Radius">
            <summary>
            The round radius.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Tracker">
            <summary>
            A tracker, which can be used to receive information about splits and merges during a modeling operation.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Tracker.Create">
            <summary>
            Creates a tracker.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.BodySaveFormat">
            <summary>
            Specifies the format to use when saving a body to a file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.BodySaveFormat.Text">
            <summary>
            Text format.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.BodySaveFormat.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Edge">
            <summary>
            A modeler edge.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.IsSmooth">
            <summary>
            Gets whether the edge is smooth.
            </summary>
            <remarks>
            The edge is smooth if the faces that meet at the edge are tangent continuous across the edge.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.IsConcave">
            <summary>
            Gets whether the edge is concave.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Faces">
            <summary>
            Gets the faces that share this edge.
            </summary>
            <remarks>
            An edge will have one or two faces.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Fins">
            <summary>
            Gets the fins that use this edge.
            </summary>
            <remarks>
            Note that an edge could have the same face on both sides of it (e.g. an edge drawn part-way across a face),
            in which case <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.Faces"/> would return one face, whereas <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.Fins"/> would return two fins.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex">
            <summary>
            Gets the start vertex of the edge.
            </summary>
            <remarks>
            An edge may be classified as being one of three types:
            <ol>
            <li><i>Open</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are distinct.</li>
            <li><i>Closed</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are the same.</li>
            <li><i>Ring</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are both <b>null</b>.</li>
            </ol>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex">
            <summary>
            Gets the end vertex of the edge.
            </summary>
            <remarks>
            An edge may be classified as being one of three types:
            <ol>
            <li><i>Open</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are distinct.</li>
            <li><i>Closed</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are the same.</li>
            <li><i>Ring</i> - <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.StartVertex"/> and <see cref="P:SpaceClaim.Api.V23.Modeler.Edge.EndVertex"/> are both <b>null</b>.</li>
            </ol>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Shell">
            <summary>
            Gets the shell to which this edge belongs.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Precision">
            <summary>
            Gets the modeling precision of the edge.
            </summary>
            <remarks>
            If the edge is not a tolerant edge, zero is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Bounds">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.StartPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.EndPoint">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.IntersectCurve(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.Offset(SpaceClaim.Api.V23.Geometry.Plane,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.Offset(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.OffsetChain(SpaceClaim.Api.V23.Geometry.Plane,SpaceClaim.Api.V23.Geometry.CurveParam,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.OffsetCornerType)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.ApproximateChain(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.FitMethod)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.SelectFragment(System.Double,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetPolyline(SpaceClaim.Api.V23.Geometry.PolylineOptions)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.IsCoincident(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.ProjectToPlane(SpaceClaim.Api.V23.Geometry.Plane)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.Geometry">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetGeometry``1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Edge.IsReversed">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Edge.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Face">
            <summary>
            A modeler face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Edges">
            <summary>
            Gets the edges that form the boundary of the face.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.SurfaceAsTrimmedSpline">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.SurfaceAsTrimmedSpline2(System.Boolean@)">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Loops">
            <summary>
            Gets the edge loops of the face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.AdjacentFaces">
            <summary>
            Gets the faces that border this face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Shell">
            <summary>
            Gets the shell to which the faces belongs.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetAdjacentFace(SpaceClaim.Api.V23.Modeler.Edge)">
            <summary>
            Gets the face on the other side of the specified edge.
            </summary>
            <param name="edge">An edge within the boundary of this face.</param>
            <returns>The other face; otherwise <b>null</b> if there is no other face meeting the specified edge.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.ProjectPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.BoxUV">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.ContainsParam(SpaceClaim.Api.V23.Geometry.PointUV)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.IntersectCurve(SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Area">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Perimeter">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.Geometry">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetClosestSeparation(SpaceClaim.Api.V23.Geometry.ITrimmedGeometry)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetGeometry``1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Face.IsReversed">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Face.IntersectCurve(SpaceClaim.Api.V23.Geometry.Curve)">
            <summary>
            Gets the intersections between the face and a curve.
            </summary>
            <param name="curve">The curve to intersect.</param>
            <returns>Zero or more intersection points.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Fin">
            <summary>
            A modeler fin.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Fin.IsReversed">
            <summary>
            Gets whether the fin direction is the opposite of the edge direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Fin.Edge">
            <summary>
            Gets the edge that this fin uses.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Fin.Loop">
            <summary>
            Gets the loop to which this fin belongs.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Fin.AsSplineUV">
            <summary>
            Gets a NURBS approximation for the curve in UV space. 
            </summary>
            <returns>The spline approximation; else <b>null</b> if not possible.</returns>
            <remarks>
            The curve is returned in the UV space of the associated face, obtained using <see cref="P:SpaceClaim.Api.V23.Modeler.Loop.Face">Fin.Loop.Face</see>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Loop">
            <summary>
            A connected part of the boundary of a face.
            </summary>
            <remarks>
            The apex of a cone has a degenerate loop consisting of zero fins, but one vertex.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Loop.IsOuter">
            <summary>
            Gets whether the loop is an outer loop, rather than an inner loop.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Loop.Face">
            <summary>
            Gets the face to which this loop belongs.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Loop.Edges">
            <summary>
            Gets the edges that form the boundary of the loop.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Loop.Fins">
            <summary>
            Gets the fins that describe the boundary of the loop.
            </summary>
            <remarks>
            The fins are returned in order around the loop.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Loop.Vertices">
            <summary>
            Gets the vertices in the boundary of the loop.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Shell">
            <summary>
            A collection of connected faces and edges.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Shell.Faces">
            <summary>
            Gets all the faces of the shell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Shell.Edges">
            <summary>
            Gets all the edges of the shell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Shell.Vertices">
            <summary>
            Gets all the vertices of the shell.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Shell.Type">
            <summary>
            Gets the type of shell.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ShellType.Outer">
            <summary>
            The shell is the outer boundary of a body.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ShellType.Inner">
            <summary>
            The shell is the inner boundary of a body.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Modeler.ShellType.General">
            <summary>
            The shell is open or non-manifold.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.FaceTessellation">
            <summary>
            The faceted tessellation of a face.
            </summary>
            <remarks>
            Facets are described as three indices in the <see cref="P:SpaceClaim.Api.V23.Modeler.FaceTessellation.Vertices"/> list.
            Facet vertices are ordered clockwise around the face normal (counterclockwise as you look down onto the face).
            <para/>
            Each entry in the <see cref="P:SpaceClaim.Api.V23.Modeler.FaceTessellation.Vertices"/> list specifies the position, normal, and texture parameter of the vertex.
            The texture parameter is the UV value of the underlying surface at that position.
            <para/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FaceTessellation.Vertices">
            <summary>
            Gets the vertex list.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.Modeler.FaceTessellation"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.FaceTessellation.Facets">
            <summary>
            Gets the facets.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.Modeler.FaceTessellation"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.FaceTessellation.CreateTransformedCopy(SpaceClaim.Api.V23.Geometry.Matrix)">
            <summary>
            Gets the transformed faceted tessellation of a face.
            </summary>
            <param name="trans">The transformation to be applied to the object.</param>      
            <returns>Transformed face tessellation.</returns>
            <remarks>
            Returns transformed faceted tessellation by applying given transformation
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Facet">
            <summary>
            A triangular facet.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Topology">
            <summary>
            The base class for modeler topology types.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Topology.IsDeleted">
            <summary>
            Gets whether the topology has been deleted.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Topology.Body">
            <summary>
            Gets the body to which this topology belongs.
            </summary>
            <remarks>
            <see cref="T:SpaceClaim.Api.V23.Modeler.Body"/> is also derived from <see cref="T:SpaceClaim.Api.V23.Modeler.Topology"/>, and if you ask a body for its <see cref="P:SpaceClaim.Api.V23.Modeler.Topology.Body"/>, it returns itself.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Modeler.Vertex">
            <summary>
            A modeler vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Vertex.Position">
            <summary>
            Gets the position of the vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Vertex.Faces">
            <summary>
            Gets all the faces around the vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Vertex.Edges">
            <summary>
            Gets all the edges that meet at the vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Vertex.Shell">
            <summary>
            Gets the shell to which this vertex belongs.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Modeler.Vertex.Precision">
            <summary>
            Gets the modeling precision of the vertex.
            </summary>
            <remarks>
            If the vertex is not a tolerant vertex, zero is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Vertex.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Vertex.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Vertex.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Modeler.Vertex.ContainsPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignMesh">
            <summary>
            A design mesh master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Collections.Generic.IList{SpaceClaim.Api.V23.Modeler.Facet})">
            <summary>
            Creates a design mesh from a list of vertices and facets.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name of the design mesh.</param>
            <param name="vertices">A list of vertices.</param>
            <param name="facets">A list of facets.</param>
            <returns>A design mesh.</returns>
            <remarks>
            Each <see cref="T:SpaceClaim.Api.V23.Modeler.Facet"/> is described by three indices, which are positions in the <paramref name="vertices"/> list.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.DesignMesh.Shape"/> of the design mesh is a <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/> object.
            Each vertex in the <paramref name="vertices"/> list becomes a <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/> in the <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/>,
            and each facet in the <paramref name="facets"/> list becomes a <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/> in the <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/>.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Index"/> of the <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/> is its position in the <paramref name="vertices"/> list,
            and the <see cref="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Index"/> of the <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/> is its position in the <paramref name="facets"/> list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.PointF},System.Collections.Generic.IList{SpaceClaim.Api.V23.Modeler.Facet})">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DesignMesh.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Collections.Generic.IList{SpaceClaim.Api.V23.Modeler.Facet})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.Create(SpaceClaim.Api.V23.Part,System.String,System.Single[],System.Int32[])">
            <summary>
            Creates a design mesh from an array of vertex (X,Y,Z) values and facet indices.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name of the design mesh.</param>
            <param name="vertices">A list of vertices.</param>
            <param name="facets">A list of facets.</param>
            <returns>A design mesh.</returns>
            <exception cref="T:System.ArgumentException">Array length should be divisible by 3.</exception>
            <remarks>
            Each vertex is described by three floats in the <paramref name="vertices"/> array,
            and each facet is described by three vertex indices,
            therefore the length of each array should be divisible by 3.
            Each vertex index is a zero-based count of the vertex number,
            i.e. the vertex starts at index <c>(3 * vertex index)</c> in the <paramref name="vertices"/> array.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.DesignMesh.Shape"/> of the design mesh is a <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/> object.
            Each vertex in the <paramref name="vertices"/> array becomes a <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/> in the <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/>,
            and each facet in the <paramref name="facets"/> array becomes a <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/> in the <see cref="T:SpaceClaim.Api.V23.Modeler.Mesh"/>.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Index"/> of the <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/> is its vertex index in the <paramref name="vertices"/> array,
            and the <see cref="P:SpaceClaim.Api.V23.Modeler.MeshTopology.Index"/> of the <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/> is its facet index in the <paramref name="facets"/> array.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetFaceColor(SpaceClaim.Api.V23.Modeler.MeshFace)">
            <summary>
            Gets the color of a mesh face.
            </summary>
            <param name="meshFace">A mesh face.</param>
            <returns>The color of the mesh face, or <b>null</b> if the design mesh color is used.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.SetFaceColor(SpaceClaim.Api.V23.Modeler.MeshFace,System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the color of a mesh face.
            </summary>
            <param name="meshFace">A mesh face.</param>
            <param name="color">The color to use, or <b>null</b> to use the color of the design mesh.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.SetFaceColor(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.MeshFace},System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the color of a collection of mesh faces.
            </summary>
            <param name="meshFaces">The mesh faces to color.</param>
            <param name="color">The color to use, or <b>null</b> to use the color of the design mesh.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.MasterTransform">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignMesh.MasterTransform"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignMesh.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Shape">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetDesignMeshTopology(SpaceClaim.Api.V23.Modeler.MeshTopology)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IDesignMesh.GetDesignMeshTopology(SpaceClaim.Api.V23.Modeler.MeshTopology)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetDesignMeshRegion(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.MeshFace})">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IDesignMesh.GetDesignMeshRegion(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.MeshFace})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.GetCollision(SpaceClaim.Api.V23.IDesignMesh,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Material">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignMesh.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.SurfaceMaterial">
            <summary>
            Gets the surface material of the body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.Style">
            <summary>
            Gets or sets the display style of the mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMesh.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignMesh">
            <summary>
            A design mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMesh.MasterTransform">
            <summary>
            Gets the transform on the mesh
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMesh.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMesh.Shape">
            <summary>
            Gets the shape of the design mesh.
            </summary>
            <remarks>
            Returns null for a simple (non-connected) mesh.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDesignMesh.GetDesignMeshTopology(SpaceClaim.Api.V23.Modeler.MeshTopology)">
            <summary>
            Gets the design mesh item for a mesh face, mesh edge, or mesh vertex.
            </summary>
            <param name="meshTopology">A mesh face, mesh edge, or mesh vertex.</param>
            <returns>A design mesh item.</returns>
            <remarks>
            The returned value is a doc object that can be set as the <see cref="P:SpaceClaim.Api.V23.InteractionContext.SingleSelection"/>,
            or as part of the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Selection"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDesignMesh.GetDesignMeshRegion(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.MeshFace})">
            <summary>
            Gets the design mesh item for a region of mesh faces.
            </summary>
            <param name="meshRegion">The mesh faces of the region.</param>
            <returns>A design mesh item.</returns>
            <remarks>
            The returned value is a doc object that can be set as the <see cref="P:SpaceClaim.Api.V23.InteractionContext.SingleSelection"/>,
            or as part of the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Selection"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDesignMesh.GetCollision(SpaceClaim.Api.V23.IDesignMesh,System.Double)">
            <summary>
            Gets the collision between this object and another mesh.
            </summary>
            <param name="other">The other object to test with.</param>
            <param name="tolerance"></param>
            <returns>The nature of the collision between the two objects.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMesh.Style">
            <summary>
            Gets the display style of the mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMeshGeneral.MasterTransform">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignMesh.MasterTransform"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ReplayParameter">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.CurveMethods.FindCurveParamsAtLengths(SpaceClaim.Api.V23.Geometry.Curve,System.Double,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            
            </summary>
            <param name="iCurve"></param>
            <param name="iStartParam"></param>
            <param name="iLength"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.BodyMethods.ProjectPlanarLines(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,System.Double,SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Projects a set of coplanar curves onto a body.
            </summary>
            <param name="targetFaces">Faces on the body to project onto.</param>
            <param name="trimmedCurves">Curves to project.</param>
            <param name="dir">Direction vector of the projection</param>
            <param name="distance">Distance parameter</param>
            <param name="plane">Optional hint plane that contains the curves to project.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.BodyMethods.ProjectPlanarLines(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Face},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Projects a set of coplanar curves onto a body.
            </summary>
            <param name="targetFaces">Faces on the body to project onto.</param>
            <param name="trimmedCurves">Curves to project.</param>
            <param name="dir">Direction vector of the projection</param>
            <param name="plane">Optional hint plane that contains the curves to project.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.BodyMethods.RevolveTrimmedCurves(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,System.Double)">
            <summary>
            Revolve trimmed curves to generate a body
            </summary>
            <param name="profileCurves">Curves that define profile, must be connected, planar and not cross axis plane</param>
            <param name="axisOrigin">Axis origin, must be in profile plane</param>
            <param name="axisDirection">Revolution axis</param>
            <param name="angleInDegrees">Angle to rotate [0,360]</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.BodyMethods.UnsupportedBodyMethodsStatic.CombineSolidBodies(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body})">
            <summary>
            Combine (unite) multiple bodies at once. Alternative to Body.Unite(list)
            </summary>
            <param name="bodies"></param>
            <returns>All surviving bodies</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.BodyMethods.UnsupportedBodyMethodsStatic.CombineSolidBodies(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Modeler.Body},System.Boolean)">
            <summary>
            Combine (unite) multiple bodies at once. Alternative to Body.Unite(list)
            </summary>
            <param name="bodies"></param>
            <param name="merge">Merge redundant edges an vertices from resulting bodies (false by default)</param>
            <returns>All surviving bodies</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Internal.Test.Analysis.MeshTestUtilitiesStatic.InitializeDelayedLoadedMeshing">
            <summary>
            Initializes meshing for the current document in the event that delay loading is enabled.  This in any wrapper method that
            executes a meshing command.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Internal.AnsysMethods.EnableDragDropPreSelection(System.String)">
            <summary>
            Enable preselection when dragging files into scene
            </summary>
            <param name="filter">Extensions separated by ";", example = ".txt;.csv"</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Internal.BeamMethodsStatic.GetSectionBody(SpaceClaim.Api.V23.IBeam)">
            <summary>
            Gets a body which represents the section profile. 
            </summary>
            <param name="beam"></param>
            <returns></returns>
            <remarks>
            Essentially, this returns a face corresponding to Beam.SectionProfile</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.ScriptEnvironment.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.FeatureTrackEnvironment.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.IScriptSelection.Items">
            <summary>
            Gets the list of DocObjects in selection
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.ModelerSingleTransaction">
            <summary>
            Consolidates all the primary modeler operations into
            a single undo step. This is meant for performance reasons
            caused by native modeler limitations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.ModelerSingleTransaction.MakeNew">
            <summary>
            Factory
            </summary>
            <returns>New transaction object</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.TessellationOptions2.AddFaceOption(SpaceClaim.Api.V23.Modeler.Face,SpaceClaim.Api.V23.Modeler.TessellationOptions)">
            <summary>
            Set explicit facet options to specific faces
            </summary>
            <param name="f">target face</param>
            <param name="opts">options for this face</param>
        </member>
        <member name="F:SpaceClaim.Api.V23.Unsupported.TessellationOptions2.IgnoreBody">
            <summary>
            Facet only the target faces, not the entire body
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Application.OverrideOpenFileFilter(System.String,System.Int32)">
             <summary>
             OverrideOpenFileFilter
             </summary>
             <param name="filterString">
             Gets or sets the current file name filter string, which determines the choices that appear in the "Files of type" box in the dialog box.
             </param>
             <param name="defaultFilterIndex">A value containing the index of the filter currently selected in the file dialog box. The filter index starts at 1 so the default value is 1.</param>
             <remarks>
             For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (|) and the filter pattern. The strings for different filtering options are separated by the vertical bar.
             The following is an example of a filter string:
            
             Text files(*.txt)|*.txt|All files(*.*)|*.*
            
             You can add several filter patterns to a filter by separating the file types with semicolons, for example:
             
             Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files(*.*)|*.*
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Application.SetSelectionToolOn3D">
            <summary>
            On the change of mode to 3D, set the selection tool instead of the pull tool
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition">
            <summary>
            A boundary condition
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,SpaceClaim.Api.V23.IDocObject,SpaceClaim.Api.V23.Unsupported.Live.BoundaryConditionType,SpaceClaim.Api.V23.Geometry.Vector)">
            <summary>
            Creates a vector boundary condition at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject},SpaceClaim.Api.V23.Unsupported.Live.BoundaryConditionType,SpaceClaim.Api.V23.Geometry.Vector)">
            <summary>
            Creates a vector boundary condition at a collection of locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,SpaceClaim.Api.V23.IDocObject,SpaceClaim.Api.V23.Unsupported.Live.BoundaryConditionType,System.Double)">
            <summary>
            Creates a scalar boundary condition at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject},SpaceClaim.Api.V23.Unsupported.Live.BoundaryConditionType,System.Double)">
            <summary>
            Creates a scalar boundary condition at a collection of locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.SetLocation(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Sets the location for this boundary condition.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.SetLocation(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Sets the location for this boundary condition.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.GetLocation">
            <summary>
            Gets the location for this boundary condition.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Name">
            <summary>
            Gets the boundary condition name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Type">
            <summary>
            Gets the boundary condition type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Value">
            <summary>
            Gets or sets the boundary condition value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.VectorValue">
            <summary>
            Gets or sets the boundary condition vector value.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.BoundaryCondition.Delete">
            <summary>
            Removes this boundary condition.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.Live.Calculator">
            <summary>
            A calculator
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.CalculatorType,System.Int32,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDomainType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Creates a pre-defined calculator at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.CalculatorType,System.Int32,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDomainType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a pre-defined calculator at a collection of locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDomainType,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Creates a custom surface or volume calculator at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Create(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDomainType,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a custom surface or volume calculator at a collection of locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.CreatePointCalculator(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Creates a custom point calculator at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.CreatePointCalculator(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,SpaceClaim.Api.V23.Geometry.Point,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a custom point calculator at a collection of locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.CreatePlaneCalculator(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Creates a custom plane calculator at a single location.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.CreatePlaneCalculator(SpaceClaim.Api.V23.Unsupported.Live.Solution,System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType,SpaceClaim.Api.V23.Unsupported.Live.IntegrantType,SpaceClaim.Api.V23.Unsupported.Live.ComponentType,System.Numerics.Vector3,SpaceClaim.Api.V23.Unsupported.Live.DiscreteOperatorType,SpaceClaim.Api.V23.Unsupported.Live.StatisticalOperatorType,SpaceClaim.Api.V23.Unsupported.Live.CalculatorDisplayType,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a custom plane calculator at a collection of locations.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Name">
            <summary>
            Gets the name of this calculator.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Type">
            <summary>
            Gets the calculation domain type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Value">
            <summary>
            Gets the calculator's current value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Location">
            <summary>
            Gets the calculator's location objects.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.PointLocation">
            <summary>
            Gets the calculator's point location.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Region">
            <summary>
            Gets the calculator's region.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Calculator.Delete">
            <summary>
            Removes this calculator.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.FullConvectionBoundaryCondition.Temperature">
            <summary>
            Gets or sets the full convection condition value.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.LiveHelper.CleanupDocument(SpaceClaim.Api.V23.Document)">
            <summary>
            Cleans up Live-related objects in the document and resets the result display.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.MassBoundaryCondition.Origin">
            <summary>
            Gets or sets the mass boundary condition origin.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.RemoteForceBoundaryCondition.Origin">
            <summary>
            Gets or sets the renmote force condition origin.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.Show">
            <summary>
            Gets or sets whether the results are shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.ShowMinMax">
            <summary>
            Gets or sets whether the min and max values of the results are shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.ShowCutPlane">
            <summary>
            Gets or sets whether the cut plane is shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.ShowStreamlines">
            <summary>
            Gets or sets whether result streamlines are shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.ShowParticles">
            <summary>
            Gets or sets whether result particles are shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.ShowDeformation">
            <summary>
            Gets or sets whether result deformation is shown.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.CompositeBandwidth">
            <summary>
            Gets or sets the bandwidth when the rendering method is Composite.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.CompositeCenter">
            <summary>
            Gets or sets the center when the rendering method is Composite.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Result.IsoSurfaceValue">
            <summary>
            Gets or sets the iso-surface value when the rendering method is IsoSurface.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Result.SetCurrent(SpaceClaim.Api.V23.Unsupported.Live.ResultType)">
            <summary>
            Sets the result type that is currently shown.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Result.SetRenderingMethod(SpaceClaim.Api.V23.Unsupported.Live.DisplayMode)">
            <summary>
            Sets the rendering method to be used.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Result.SetComponent(SpaceClaim.Api.V23.Unsupported.Live.ComponentType)">
            <summary>
            Sets the result component to be used for display.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Result.ExportResultsAsGltf(System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType)">
            <summary>
            Export surface results in GLTF format.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Result.ExportDeformedResultsAsGltf(System.String,SpaceClaim.Api.V23.Unsupported.Live.ResultType,System.Single)">
            <summary>
            Export deformed surface results in GLTF format when Deformation is an available result type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.RotationalVelocityBoundaryCondition.Origin">
            <summary>
            Gets or sets the rotational velocity condition origin.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.SupportBoundaryCondition.SupportType">
            <summary>
            Gets the support type.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.TopologyOptimization.Enable">
            <summary>
            Enable Topology Optimization.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.TopologyOptimization.Disable">
            <summary>
            Disable Topology Optimization.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.TopologyOptimization.SetPercentReduction(System.Double)">
            <summary>
            Set target reduction percentage.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.TopologyOptimization.SetInflation(System.Double)">
            <summary>
            Set inflation distance for boundary condition faces.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.TopologyOptimization.SetMaxIterations(System.Int32)">
            <summary>
            Set maximum number of iterations for topology optimization.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solver.Start">
            <summary>
            Starts the solver.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solver.Pause">
            <summary>
            Pauses the solver.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solver.Reset">
            <summary>
            Resets the solver.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solver.Fidelity">
            <summary>
            Gets or sets the solver fidelity.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solver.TestingResolution">
            <summary>
            Sets the testing resolution in terms of voxel count (1M max).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solver.IsConverged">
            <summary>
            Gets whether the solver is converged.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solver.CurrentTime">
            <summary>
            Gets the current solver time.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solver.EndTime">
            <summary>
            Sets the solver end time.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.Live.Solution">
            <summary>
            A solution
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.Create(SpaceClaim.Api.V23.Unsupported.Live.SolutionType,SpaceClaim.Api.V23.Unsupported.Live.TimeIntegrationType,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignBody})">
            <summary>
            Creates a solution for a collection of bodies.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.GetAllSolutions">
            <summary>
            Gets all the solutions in the active design.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.GetCurrentSolution">
            <summary>
            Gets the currently active solution.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.AddBodies(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Adds design body or design mesh to solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.IsActive">
            <summary>
            Gets whether the solution is active.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.SetAsCurrent">
            <summary>
            Sets this solution as the current solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.Name">
            <summary>
            Gets the solution name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.SolutionType">
            <summary>
            Gets the solution type.
            </summary> 
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.TimeIntegrationType">
            <summary>
            Gets the solution time integration type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.Bodies">
            <summary>
            Gets the bodies that are active in the solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.DesignMeshes">
            <summary>
            Gets the design meshes that are active in the solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.Calculators">
            <summary>
            Gets the calculators that are active in the solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.BoundaryConditions">
            <summary>
            Gets the boundary conditions that are associated with this solution.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.MaterialAssignmentsAsTuples">
            <summary>
            Get the material assignments as a collection of tuples of (material name, body collection)
            Default materials will have an empty body collection 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.Live.Solution.MaterialPropertiesAsDictionary">
            <summary>
            Get all materials in use in this solution in Dictionary form, keyed by material name.
            For each material, the value is a dictionary of material properties in SI units, keyed by property name. 
            Material property values are represented as tuples of (value, unit)
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Solution.Delete">
            <summary>
            Removes this solution.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Streamlines.SetLocation(SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Sets the location of the elliptical seeding region for the active streamlines.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Streamlines.SetSize(SpaceClaim.Api.V23.Geometry.BoxUV)">
            <summary>
            Sets the size of the elliptical seeding region for the active streamlines.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.Live.Streamlines.Export(System.String)">
            <summary>
            Writes the active streamlines to disk.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.DesignBodyMethods.Recognition.FindLogos(SpaceClaim.Api.V23.DesignBody,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Find pockets or extruded faces groups (logos) 
            </summary>
            <param name="body"></param>
            <param name="minHeight">Minimum Height</param>
            <param name="maxHeight">Maximum Heighr</param>
            <param name="maxFilletRadioAsSharp">Radius smaller than this value will be considered sharp.</param>
            <param name="fitError">Tolerance</param>
            <returns>List of grouped faces,each represents a logo.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.DesignBodyMethods.Recognition.FindLogos(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignFace},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Find pockets or extruded faces groups (logos) 
            </summary>
            <param name="seedFaces">See face or faces that will start the search within the internal loops of each.</param>
            <param name="minHeight">Minimum Height</param>
            <param name="maxHeight">Maximum Heighr</param>
            <param name="maxFilletRadioAsSharp">Radius smaller than this value will be considered sharp.</param>
            <param name="fitError">Tolerance</param>
            <returns>List of grouped faces,each represents a logo.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.UnsupportedDesignBodyMethodsStatic.SweepWithGuide(System.Collections.Generic.IList{SpaceClaim.Api.V23.DesignCurve},SpaceClaim.Api.V23.DesignCurve,SpaceClaim.Api.V23.DesignCurve,System.Boolean)">
            <summary>
            Create a body by sweeping the profile curves along a curve path.
            </summary>
            <param name="profile">Profile curves</param>
            <param name="path">Path</param>
            <param name="guide">Orientation reference</param>
            <param name="tightTolerance">Use tighter approximations in results.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.UnsupportedDesignBodyMethodsStatic.SweepWithGuide(System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},SpaceClaim.Api.V23.Geometry.ITrimmedCurve,SpaceClaim.Api.V23.Geometry.ITrimmedCurve,System.Boolean)">
            <summary>
            Create a body by sweeping the profile curves along a curve path.
            </summary>
            <param name="profile">Profile curves</param>
            <param name="path">Path</param>
            <param name="guide">Orientation reference</param>
            <param name="tightTolerance">Use tighter approximations in results.</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.ComponentMethods.SetComponentSticky(SpaceClaim.Api.V23.IComponent,System.Boolean)">
            <summary>
            Set component as temporarily locked, preventing it from being deleted or reparented
            </summary>
            <param name="comp"></param>
            <param name="isLocked"></param>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.RuledCutting.CutLine">
            <summary>
            Describes a cut line on a face
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.RuledCutting.FaceMethods.GetTightUVBox(SpaceClaim.Api.V23.Modeler.Face,System.Collections.Generic.IEnumerable{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Boolean)">
            <summary>
            samples the outer edges of a face to calculate a tight UV box.
            face.Shape.BoxUV was giving loose, slightly oversized boxes in some cases,
            this is the workaround
            </summary>
            <param name="face"></param>
            <param name="edges"></param>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.RuledCutting.FaceMethods.Align(SpaceClaim.Api.V23.Geometry.BoxUV,SpaceClaim.Api.V23.Modeler.Face,System.Boolean)">
            <summary>
            aligns a uv range box to an existing face,
            such that they have the same direction, and unruled dimensions
            </summary>
            <param name="box">the bounds</param>
            <param name="face">the face to align the bounds to</param>
            <param name="forcePeriodic">option to force the unruled dimension to a full period</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.RuledCutting.FaceMethods.GetInflatedBoxUV(SpaceClaim.Api.V23.Modeler.Face,System.Double,System.Boolean,System.Boolean)">
            <summary>
            finds a uvbox that represents the initial size of the face 
            grown by a size in world units in the u and or v directions
            </summary>
            <param name="face">face used as a base for finding the inflated uvbox</param>
            <param name="size">amount in real world units to grow the uvbox of the face</param>
            <param name="u">flag to grow in u direction</param>
            <param name="v">flag to grow in v direction</param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.RuledCutting.VariablesHelper.Swap``1(``0@,``0@)">
            <summary>
            Swaps the contents of two variables.
            </summary>
            <typeparam name="T">The type of the two variables.</typeparam>
            <param name="a">First variable.</param>
            <param name="b">Second variable.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.RuledCutting.OrderingEngine.Contour.StartPoint">
            <summary>
             The starting point (leading point) of a cut or scribe
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.RuledCutting.OrderingEngine.Contour.EndPoint">
            <summary>
            The ending point (leadout point) of a cut or a scribe.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.RuledCutting.OrderingEngine.Contour.IsReversed">
            <summary>
            Whether a scribe's start and end points are reversed. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.RuledCutting.OrderingEngine.Contour.OverrideStartPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
             Moves the starting point (leadin point) of a cut. Only works for a closed contour. 
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStrokeGeneral.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStrokeGeneral.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStrokeGeneral.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.PenStroke">
            <summary>
            A pen stroke master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.PenStroke.IsConstruction">
            <summary>
            Gets or sets whether the pen stroke is a construction object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.GetLineWeight(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line weight of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line weight of the object.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line weight of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineWeight})">
            <summary>
            Sets the line weight of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="weight">The line weight to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line weight of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.GetLineStyle(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line style of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line style of the object.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line style of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineStyle})">
            <summary>
            Sets the line style of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="style">The line style to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line style of the layer is used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.PenStroke.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.Unsupported.IPenStroke.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.PenStroke.Points">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.Scale(SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.PenStroke.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.PenStroke.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.PenStroke.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Unsupported.IPenStroke">
            <summary>
            A pen stroke.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Unsupported.UIDimension.ValueChanged">
            <summary>
            Occurs when the command has executed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Unsupported.UIDimension.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.UIDimensionGeometry.CoincidentWith(SpaceClaim.Api.V23.Unsupported.UIDimensionGeometry)">
            <summary>
            True if the solution sets of the two geometries match, but are not necessarily identical.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Unsupported.UIDimensionGeometry.GetStartPoint(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            The point relative to which this geometry is measuring.
            </summary>
            <param name="targetPoint"></param>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.SelectionOrder">
            <summary>
            Selection hit-test ordering
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionOrder.ForceTop">
            <summary>
            Custom objects are always at the top of the hit list.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionOrder.ByDistance">
            <summary>
            Custom objects appear in the hit list based on distance. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumPoint">
            <summary>
            A datum point master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a datum point.
            </summary>
            <param name="parent">Parent part.</param>
            <param name="name">Name for the datum point.</param>
            <param name="point">Location of the datum point.</param>
            <returns>The new datum point.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.Create(SpaceClaim.Api.V23.IPart,System.String,SpaceClaim.Api.V23.Geometry.Point)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DatumPoint.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Point)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDatumPoint.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Position">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Pinned">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Determinants">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPoint.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPoint.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDatumPoint">
            <summary>
            A datum point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPoint.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPoint.Position">
            <summary>
            Gets the position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPoint.Pinned">
            <summary>
            Gets whether the datum point is pinned.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPoint.Determinants">
            <summary>
            Gets the objects that determine the point.
            </summary>
            <remarks>
            If the point does not have determinants, then an empty collection is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Hole">
            <summary>
            A standard hole master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Hole.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.HoleCreationInfo)">
            <summary>
            Creates a hole on the specified face at the specified location using the defined creation properties.
            </summary>
            <param name="referenceFace">The face on which the hole is to be created.</param>
            <param name="point">The position of the hole on the face.</param>
            <param name="creationInfo">A HoleCreationInfo structure that contains additional properties for creating the hole.</param>
            <returns>The newly created hole.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Hole.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.HoleCreationInfo)">
            <summary>
            Creates a hole on the specified face at the specified location using the defined creation properties.
            </summary>
            <param name="referenceFace">The face on which the hole is to be created.</param>
            <param name="point">The UV position of the hole on the face.</param>
            <param name="creationInfo">A HoleCreationInfo structure that contains additional properties for creating the hole.</param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Axis">
            <summary>
            Gets the axis line for the hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.SpaceClaim#Api#V23#IHole#Faces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Faces"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.SpaceClaim#Api#V23#IHole#ReferenceFace">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.ReferenceFace"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.AlternateReferenceFrame">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.AlternateReferenceFrame"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.CosmeticThread">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.CosmeticThread"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Counterbore">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Counterbore"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.CounterboreDepth">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.CounterboreDepth"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.CounterboreDiameter">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.CounterboreDiameter"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Countersink">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Countersink"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.CountersinkAngle">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.CountersinkAngle"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.CountersinkDiameter">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.CountersinkDiameter"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.DepthMeasurement">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.DepthMeasurement"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Direction">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Direction"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.DrillPointAngle">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.DrillPointAngle"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.DrillSize">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.DrillSize"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Faces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Faces"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.FastenerName">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.FastenerName"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.HoleDepth">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.HoleDepth"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.HoleDiameter">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.HoleDiameter"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.HoleFit">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.HoleFit"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Point">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Point"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.ReferenceFace">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.ReferenceFace"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.SeriesName">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.SeriesName"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.Tapped">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.Tapped"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.TapDepth">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.TapDepth"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Hole.UV">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IHole.UV"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHole">
            <summary>
            A standard hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Parent">
            <summary>
            Gets the parent part. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.AlternateReferenceFrame">
            <summary>
            Gets or sets the alternate (off-face) reference frame for the hole. Can be <b>null</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.CosmeticThread">
            <summary>
            Get whether the thread is cosmetic.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Counterbore">
            <summary>
            Gets whether the hole has a counterbore.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.CounterboreDepth">
            <summary>
            Gets the hole counterbore depth.
            </summary>
            <remarks>
            The counterbore is only valid if <see cref="P:SpaceClaim.Api.V23.IHole.CounterboreDiameter"/> is also non-<b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.CounterboreDiameter">
            <summary>
            Gets the counterbore diameter of the hole. Can be <b>null</b>.
            </summary>
            <remarks>
            The counterbore is only valid if <see cref="P:SpaceClaim.Api.V23.IHole.CounterboreDepth"/> is also non-<b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Countersink">
            <summary>
            Gets whether the hole has a countersink.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.CountersinkAngle">
            <summary>
            Gets the countersink angle of the hole.
            </summary>
            <remarks>
            The countersink is only valid if <see cref="P:SpaceClaim.Api.V23.IHole.CountersinkDiameter"/> is also non-<b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.CountersinkDiameter">
            <summary>
            Gets the diameter of the countersink.
            </summary>
            <remarks>
            The countersink is only valid if <see cref="P:SpaceClaim.Api.V23.IHole.CountersinkAngle"/> is also non-<b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.DepthMeasurement">
            <summary>
            Gets the reference used for hole depth measurement. 
            </summary>
            <remarks>
            Can be null for a through-hole.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Direction">
            <summary>
            Gets the direction of the hole axis.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.DrillPointAngle">
            <summary>
            Gets the angle of the drill point.
            </summary>
            <remarks>
            Can be <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.DrillSize">
            <summary>
            Gets the drill size.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Faces">
            <summary>
            Gets the faces of the hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.FastenerName">
            <summary>
            Gets the name of the fastener for the hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.HoleDepth">
            <summary>
            Gets the depth of the hole if a blind hole, otherwise <b>null</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.HoleDiameter">
            <summary>
            Gets the diameter of the hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.HoleFit">
            <summary>
            Gets the fit tolerance.
            </summary>
            <remarks>
            The fit tolerance will be null for a nonstandard hole or a blind hole.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Point">
            <summary>
            Gets the center point of the hole on the face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.ReferenceFace">
            <summary>
            Gets the reference face for the hole.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.SeriesName">
            <summary>
            Gets the series name for the fastener.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.Tapped">
            <summary>
            Gets whether the hole is tapped. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.TapDepth">
            <summary>
            Gets the tap depth for the hole. 
            </summary>
            <remarks>
            May be <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHole.UV">
            <summary>
            Gets the hole location on the face in UV coordinates.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CurvePoint">
            <summary>
            A curve point master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CurvePoint.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ICurvePoint.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CurvePoint.Position">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CurvePoint.ExportIdentifier">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICurvePoint">
            <summary>
            A curve point.
            </summary>
            <remarks>
            A curve point is an implicit doc object, which means you cannot create or delete one. 
            Its parent is a <see cref="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve"/> and the curve point represents an endpoint of that curve. If the parent is deleted, 
            the curve point will report that <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/> is <b>true</b>.
            <para/>
            The parent may be a <see cref="T:SpaceClaim.Api.V23.IDesignEdge"/>, <see cref="T:SpaceClaim.Api.V23.IDesignCurve"/>, or <see cref="T:SpaceClaim.Api.V23.IBeam"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICurvePoint.Parent">
            <summary>
            Gets the parent design edge.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICurvePoint.Position">
            <summary>
            Gets the position.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.HoleCreationInfo">
            <summary>
            Defines the properties of a hole being created.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.SeriesName">
            <summary>
            The series name for the hole (e.g., ISO, UNC, etc.). Can be null for non-standard holes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.FastenerName">
            <summary>
            The fastener name for the hole (e.g., M1 x 0.25, 7/32 - 28, etc.). Can be null for non-standard holes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.HoleFit">
            <summary>
            The hole fit. See <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.HoleFit"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.HoleDiameter">
            <summary>
            The diameter of the hole in meters.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.DrillSize">
            <summary>
            The drill size for the hole. Provided for standard holes or holes created from a drill chart.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.HoleDepth">
            <summary>
            The depth of the hole for blind holes. If it is a through hole, specify <b>null</b>. If this value is 
            specified, you must also specify a value for <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.DrillPointAngle"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.DepthMeasurement">
            <summary>
            Specifies how the depth of a blind hole is measured. See <see cref="T:SpaceClaim.Api.V23.HoleDepthMeasurementType"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.HoleCreationInfo.Countersink">
            <summary>
            Has a value of <b>true</b> if the hole has a countersink.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.CountersinkDiameter">
            <summary>
            Specifies the diameter of the countersink. If you don't want to countersink, set this value to <b>null</b>.
            If you specify this parameter, you must also specify <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.CountersinkAngle"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.CountersinkAngle">
            <summary>
            Specifies the angle of the countersink. No countersink is generated if this value is <b>null</b>.
            If you specify this value, you must also specify the <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.CountersinkDiameter"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.HoleCreationInfo.Counterbore">
            <summary>
            Has a value of <b>true</b> if the hole has a counterbore.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.CounterboreDiameter">
            <summary>
            Specifies the diameter of the counterbore hole at the top. No counterbore is generated 
            if this value is <b>null</b>. If you specify this value, you must also specify the <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.CounterboreDepth"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.CounterboreDepth">
            <summary>
            Specifies the depth of the counterbore hole at the top. The counterbore is only created if the <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.CounterboreDiameter"/>
            is also specified. If this value is <b>null</b>, no counterbore will be created.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.DrillPointAngle">
            <summary>
            Specifies the drill point at the bottom of a blind hole. It will only apply if not <b>null</b> and <see cref="F:SpaceClaim.Api.V23.HoleCreationInfo.HoleDepth"/> is specified.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.HoleCreationInfo.Tapped">
            <summary>
            Has a value of <b>true</b> if the hole is tapped.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleCreationInfo.TapDepth">
            <summary>
            Specifies the depth of the tap hole. If this value is <b>null</b>, no tap will be created.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.HoleCreationInfo.#ctor(SpaceClaim.Api.V23.Hole)">
            <summary>
            Creates a <b>HoleCreationInfo</b> structure from an existing <see cref="T:SpaceClaim.Api.V23.Hole"/>.
            </summary>
            <param name="hole">The <see cref="T:SpaceClaim.Api.V23.Hole"/> to create the <b>HoleCreationInfo</b>.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.HoleCreationInfo.#ctor(SpaceClaim.Api.V23.IHole)">
            <summary>
            Creates a <b>HoleCreationInfo</b> structure form an existing <see cref="T:SpaceClaim.Api.V23.IHole"/>.
            </summary>
            <param name="hole"></param>
        </member>
        <member name="T:SpaceClaim.Api.V23.HoleDepthMeasurementType">
            <summary>
            Specifies how the depth of the hole is measured.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleDepthMeasurementType.ToShoulder">
            <summary>
            The depth is measured to the shoulder.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleDepthMeasurementType.ToTip">
            <summary>
            The depth is measured to the tip.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.HoleFit">
            <summary>
            Specifies how the hole fits
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleFit.Nominal">
            <summary>
            Nominal
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleFit.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleFit.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.HoleFit.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IdentifyHoleOptions">
            <summary>
            Structure for specifying options for identifying holes using <see cref="M:SpaceClaim.Api.V23.DesignBody.IdentifyHoles(SpaceClaim.Api.V23.IdentifyHoleOptions)"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.MatchStandardSize">
            <summary>
            Set to <b>true</b> to match standard hole sizes. If <b>true</b>, both <see cref="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Series"/>
            and <see cref="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Tolerance"/> must be set. The default is <b>false</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Series">
            <summary>
            The series name for the hole (e.g., ISO, UNC, etc.).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Tolerance">
            <summary>
            The tolerance, in meters, for identifying standard holes. The default is 0.0.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Through">
            <summary>
            Finds through holes if <b>true</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Blind">
            <summary>
            Finds blind holes if <b>true</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Countersink">
            <summary>
            Finds holes with a countersink if <b>true</b>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IdentifyHoleOptions.Counterbore">
            <summary>
            Finds holes with a counterbore if <b>true</b>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.IdentifyHoleOptions.Default">
            <summary>
            A default set of options which will identify all hole types but will not attempt to match standard holes.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PartType">
            <summary>
            The state of a sheet metal form in the flat pattern.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.Normal">
            <summary>
            A normal part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.SheetMetal">
            <summary>
            A sheet metal part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.FlatPattern">
            <summary>
            An sheet metal flat pattern part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.BeamProfile">
            <summary>
            A beam profile part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.Bolt">
            <summary>
            A bolt part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartType.Markup">
            <summary>
            A 3D Markup part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SurfaceMaterial">
            <summary>
            A surface material.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceMaterial.TextureOffsetU">
            <summary>
            Gets the texture offset in the U direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceMaterial.TextureOffsetV">
            <summary>
            Gets the texture offset in the V direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceMaterial.TextureScaleU">
            <summary>
            Gets the texture scale in the U direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceMaterial.TextureScaleV">
            <summary>
            Gets the texture scale in the V direction.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SurfaceMaterial.TextureAngle">
            <summary>
            Gets the texture angle.
            </summary>
            <remarks>
            The angle is in radians.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.KeyShotSurfaceMaterial">
            <summary>
            A KeyShot surface material.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.KeyShotSurfaceMaterial.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.KeyShotSurfaceMaterial.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.KeyShotSurfaceMaterial.Bip">
            <summary>
             Gets the KeyShot BIP-format description. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TextureSurfaceMaterial">
            <summary>
            A texture surface material.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TextureSurfaceMaterial.FileName">
            <summary>
            Gets the image file that is used as the texture.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CancelHandler`1">
            <summary>
            An event handler, which can be canceled.
            </summary>
            <typeparam name="TEventArgs">Type of event args.</typeparam>
            <param name="sender">Sender of the event.</param>
            <param name="args">Event arguments.</param>
            <param name="status">Cancel status.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.CancelStatus">
            <summary>
            Status of a <see cref="T:SpaceClaim.Api.V23.CancelHandler`1"/>.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CancelStatus.Cancel">
            <summary>
            Cancels the event.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CancelStatus.IsCanceled">
            <summary>
            Gets whether the event has been canceled.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PointPrimitive">
            <summary>
            A point primitive.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.PointPrimitive.Create(SpaceClaim.Api.V23.Geometry.Point,System.Single)">
            <summary>
            Creates a point primitive.
            </summary>
            <param name="point">The location.</param>
            <param name="radius">The circle radius, in pixels.</param>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.LinePrimitive">
            <summary>
            A line primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.MeshEdgeDisplay">
            <summary>
            Options for mesh edge display.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Display.MeshEdgeDisplay.None">
            <summary>
            No mesh edges are displayed.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Display.MeshEdgeDisplay.MeshJunctions">
            <summary>
            Displays the junctions between meshes in this <see cref="T:SpaceClaim.Api.V23.Display.Graphic"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Display.MeshEdgeDisplay.MeshJunctionsUnlessSmooth">
            <summary>
            Displays the junctions between meshes in this <see cref="T:SpaceClaim.Api.V23.Display.Graphic"/>,
            except where mesh edges meet smoothly (matching normals).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Display.MeshEdgeDisplay.ExteriorBoundary">
            <summary>
            Displays the exterior boundary after meshes in this <see cref="T:SpaceClaim.Api.V23.Display.Graphic"/> have been connected.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Display.MeshEdgeDisplay.Polygons">
            <summary>
            Displays the outlines of all polygons.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PositionNormal">
            <summary>
            A mesh vertex containing position and normal information.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormal.Position">
            <summary>
            Gets the position of the mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormal.Normal">
            <summary>
            Gets the normal of the mesh vertex.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PositionColored">
            <summary>
            A mesh vertex containing position and color information.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionColored.Position">
            <summary>
            Gets the position of the mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionColored.Color">
            <summary>
            Gets the color of the mesh vertex.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PositionNormalTextured">
            <summary>
            A mesh vertex containing position, normal, and texture parameter information.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormalTextured.Position">
            <summary>
            Gets the position of the mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormalTextured.Normal">
            <summary>
            Gets the normal of the mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormalTextured.Param">
            <summary>
            Gets the texture parameter of the mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.PositionNormalTextured.PositionNormal">
            <summary>
            Gets the position and normal of the mesh vertex.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.Polygon">
            <summary>
            A mesh polygon.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Polygon.#ctor(SpaceClaim.Api.V23.Geometry.Direction,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Constructs a mesh polygon.
            </summary>
            <param name="normal">The normal of the planar polygon.</param>
            <param name="vertices">Vertices of the polygon.</param>
            <remarks>
            The polygon is described by its <paramref name="vertices"/>, which are 
            indices in the vertex list of the mesh, as supplied to
            <see cref="M:SpaceClaim.Api.V23.Display.MeshPrimitive.CreatePolygons(System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Display.Polygon})"/>.
            The vertices should be clockwise about the <paramref name="normal"/> of the plane
            (counter-clockwise as seen looking down onto the plane).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Polygon.#ctor(SpaceClaim.Api.V23.Geometry.Direction,System.Int32[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Display.Polygon.#ctor(SpaceClaim.Api.V23.Geometry.Direction,System.Collections.Generic.IList{System.Int32})"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PolygonColored">
            <summary>
            A mesh polygon with a color.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PolypointPrimitive">
            <summary>
            A polypoint primitive. 
            </summary>
            <remarks>
            A polypoint primitive is similar to a <see cref="T:SpaceClaim.Api.V23.Display.PointPrimitive"/>, except that it may contain multiple points for more efficient rendering.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.PolypointPrimitive.Create(System.Collections.Generic.IList{SpaceClaim.Api.V23.Geometry.Point},System.Single)">
            <summary>
            Creates a polypoint primitive
            </summary>
            <param name="points">The locations of the points.</param>
            <param name="radius">The circle radius, in pixels.</param>
            <returns></returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.NotePrimitive">
            <summary>
            A note primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.ArrowPrimitive">
            <summary>
            A planar arrow primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.CurvePrimitive">
            <summary>
            A trimmed curve primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.Graphic">
            <summary>
            A node in a scene graph.
            </summary>
            <remarks>
            A graphic is a node in a scene graph.
            Scene graphs are used for <see cref="T:SpaceClaim.Api.V23.CustomObject"/> and <see cref="T:SpaceClaim.Api.V23.Tool"/> rendering.
            <para/>
            With a retained mode graphics library, rather than making calls to draw directly into the window,
            graphical objects are created instead, which describe what should be displayed and how.
            The term <i>scene graph</i> traditionally applies to a graph for the entire scene in the window.
            In our case, each <see cref="T:SpaceClaim.Api.V23.CustomObject"/> has its own private scene graph,
            which describes how it should be displayed.
            <para/>
            The scene graph contains a hierarchy of graphic objects, with primitives as leaf nodes.
            The graph is a directed acyclic graph (DAG), because graphic and primitive nodes can be shared.
            <para/>
            All objects in the scene graph are immutable, which means the scene graph must be constructed bottom-up.
            Although the scene graph cannot be edited, a new scene graph can be constructed by reusing pieces of the old scene graph.
            <para/>
            <see cref="P:SpaceClaim.Api.V23.Display.Graphic.Primitives"/> describe <i>what</i> should be displayed,
            and the <see cref="P:SpaceClaim.Api.V23.Display.Graphic.Style"/> describes <i>how</i> it should be displayed.
            The style is inherited by nested graphics, but a nested graphic can override properties of the style.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Graphic.Create(SpaceClaim.Api.V23.Display.GraphicStyle,SpaceClaim.Api.V23.Display.Primitive[])">
            <summary>
            Creates a graphic with some primitives.
            </summary>
            <param name="style">Graphic style, or <b>null</b>.</param>
            <param name="primitives">Primitives to display.</param>
            <returns>A graphic.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Graphic.Create(SpaceClaim.Api.V23.Display.GraphicStyle,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Display.Primitive})">
            <summary>
            Creates a graphic with some primitives.
            </summary>
            <param name="style">Graphic style, or <b>null</b>.</param>
            <param name="primitives">Primitives to display.</param>
            <returns>A graphic.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Graphic.Create(SpaceClaim.Api.V23.Display.GraphicStyle,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Display.Primitive},SpaceClaim.Api.V23.Display.Graphic[])">
            <summary>
            Creates a graphic with some primitives and nested graphics.
            </summary>
            <param name="style">Graphic style, or <b>null</b>.</param>
            <param name="primitives">Primitives to display, or <b>null</b>.</param>
            <param name="graphics">Nested graphics.</param>
            <returns>A graphic.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.Graphic.Create(SpaceClaim.Api.V23.Display.GraphicStyle,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Display.Primitive},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Display.Graphic},SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Display.MeshEdgeDisplay)">
            <summary>
            Creates a graphic with some primitives, nested graphics, and a transform.
            </summary>
            <param name="style">Graphic style, or <b>null</b>.</param>
            <param name="primitives">Primitives to display, or <b>null</b>.</param>
            <param name="graphics">Nested graphics, or <b>null</b>.</param>
            <param name="transform">The transform to be applied.</param>
            <param name="edgeDisplay">Options for mesh edge display.</param>
            <returns>A graphic.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.Style">
            <summary>
            Gets the style for this graphic.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.Primitives">
            <summary>
            Gets the primitives for this graphic.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.Graphics">
            <summary>
            Get the nested graphics.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.ElementDisplayRange">
            <summary>
            Gets or sets the range of primitive elements that should be displayed.  
            </summary>
            <remarks>
            If null (the default), all elements will be displayed. 
            The range will not affect the scene extents used for display or reported by <see cref="P:SpaceClaim.Api.V23.Window.SceneBox">Window.SceneBox</see>. 
            <para/>
            May require a subsequent call to <see cref="M:SpaceClaim.Api.V23.Window.RefreshRendering"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.Transform">
            <summary>
            Gets or sets the transform to be applied.
            </summary>
            <remarks>
            After setting, a subsequent call to <see cref="M:SpaceClaim.Api.V23.Window.RefreshRendering"/> is required.
            </remarks>		
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.TextureStyle">
            <summary>
            Gets the texture style for this graphic.
            Returns null if texture style hasn't been set.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.TextureStream">
            <summary>
            Gets the texture stream for this graphic.
            Returns null if texture hasn't been set.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.Graphic.TextureImage">
            <summary>
            Gets the texture image for this graphic.
            Returns null if texture hasn't been set.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.GraphicStyle">
            <summary>
            Describes the style of a <see cref="T:SpaceClaim.Api.V23.Display.Graphic"/>.
            </summary>
            <remarks>
            This object has optional properties.
            Property values are nullable types, and a <b>null</b> value indicates that the property is not specified.
            <para/>
            There are various types of properties:
            <list type="table">
            	<listheader>
            		<term>Type</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term>condition</term>
            		<description>
            			The <see cref="P:SpaceClaim.Api.V23.Display.GraphicStyle.ShowWhen"/> property is used to switch on an entire sub-graph when the appropriate condition is met.
            		</description>
            	</item>
            	<item>
            		<term>appearance</term>
            		<description>
            			These properties specify the appearance of primitives, e.g. <see cref="P:SpaceClaim.Api.V23.Display.GraphicStyle.LineColor"/>.
            		</description>
            	</item>
            	<item>
            		<term>mappings</term>
            		<description>
            			These properties specify the coordinate space in which primitives are defined, e.g. <see cref="P:SpaceClaim.Api.V23.Display.GraphicStyle.IsPixelSpace"/>.
            		</description>
            	</item>
            	<item>
            		<term>rendering options</term>
            		<description>
            			These properties specify rendering options, e.g. <see cref="P:SpaceClaim.Api.V23.Display.GraphicStyle.EnableDepthBuffer"/>.
            		</description>
            	</item>
            </list>
            Filters apply to the state of the <see cref="T:SpaceClaim.Api.V23.CustomObject"/> being rendered.
            For <see cref="T:SpaceClaim.Api.V23.Tool"/> rendering, filters should not be specified.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.ShowWhen">
            <summary>
            Gets or sets the condition for this sub-graph to be switched on.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.IsPixelSpace">
            <summary>
            Specifies that primitives are defined in units of pixels.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.IsFlatOn">
            <summary>
            Specifies that primitives should be displayed flat onto the XY plane.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.IsSelectable">
            <summary>
            Specifies whether primitives are selectable.
            </summary>
            <remarks>
            To be selectable, a primitive must also be visible.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.LineColor">
            <summary>
            Specifies the line color to be used.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.TextColor">
            <summary>
            Specifies the text color to be used.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.FillColor">
            <summary>
            Specifies the fill color to be used.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.LineWidth">
            <summary>
            Specifies the line width to be used.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.EnableDepthBuffer">
            <summary>
            Specifies whether the depth buffer should be enabled.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.GraphicStyle.EnableCulling">
            <summary>
            Specifies whether back face culling should be enabled.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Display.GraphicStyle.#ctor">
            <summary>
            Creates a graphic style with no properties specified.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.TextPadding">
            <summary>
            The padding for a text primitive.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.Display.TextPrimitive"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.PolylinePrimitive">
            <summary>
            A polyline primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.Primitive">
            <summary>
            A graphic primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.TextPrimitive">
            <summary>
            A text primitive.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Display.DisplayRange">
            <summary>
            The range of elements to be displayed. 
            </summary>
            <seealso cref="P:SpaceClaim.Api.V23.Display.Graphic.ElementDisplayRange"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.DisplayRange.Start">
            <summary>
            First element to be displayed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Display.DisplayRange.Count">
            <summary>
            The number of elements to be displayed.
            </summary>
            <remarks>
            Set to -1 to display all elements from <see cref="P:SpaceClaim.Api.V23.Display.DisplayRange.Start"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Handle">
            <summary>
            A tool handle.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Handle.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Handle.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.MeshColorMap">
            <summary>
            A color map for a mesh.
            </summary>
            <remarks>
            A custom <see cref="T:SpaceClaim.Api.V23.Tool"/> can apply a color map to a design mesh using <see cref="M:SpaceClaim.Api.V23.Tool.SetMeshColorMap(SpaceClaim.Api.V23.DesignMesh,SpaceClaim.Api.V23.MeshColorMap)"/>.
            <para/>
            See the <see cref="M:SpaceClaim.Api.V23.MeshColorMap.#ctor(System.Drawing.Bitmap,System.Drawing.Color,System.Collections.Generic.IDictionary{System.Int32,SpaceClaim.Api.V23.Geometry.PointUV})"/> constructor for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MeshColorMap.#ctor(System.Drawing.Bitmap,System.Drawing.Color,System.Collections.Generic.IDictionary{System.Int32,SpaceClaim.Api.V23.Geometry.PointUV})">
            <summary>
            Constructs a color map for a mesh.
            </summary>
            <param name="colorMap">A bitmap describing the color map.</param>
            <param name="defaultColor">The default color.</param>
            <param name="vertexParams">Parameters for mesh vertices.</param>
            <remarks>
            Each entry in <paramref name="vertexParams"/> is a vertex id and a UV parameter to be assigned to that vertex.
            U and V should be in the range [0, 1].
            Values outside this range are clamped to the range.
            <para/>
            The U value is the proportion of the width of the color map, so U=0 is the first column, and U=1 is the last column.
            <para/>
            Similarly the V value is the proportion of the height of the color map, so V=0 is the first row, and V=1 is the last row.
            <para/>
            Mesh facets involving vertices that not listed in <paramref name="vertexParams"/> will be shown in the <paramref name="defaultColor"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeshColorMap.ColorMap">
            <summary>
            Gets the color map.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeshColorMap.DefaultColor">
            <summary>
            Gets the default color.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MeshColorMap.VertexParams">
            <summary>
            Gets the vertex parameters.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.SerializableFields">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.Subject">
            <summary>
            Gets the custom object behind this custom wrapper.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.Rendering">
            <summary>
            Gets or sets the rendering for the custom object.
            </summary>
            <remarks>
            If the custom object has no rendering, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Commit">
            <summary>
            Commits changes made to fields in a custom object wrapper.
            </summary>
            <remarks>
            This method should be called after fields in the wrapper object have been modified.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.RefreshTransform">
            <summary>
            Refreshes handles in the Move Tool. 
            </summary>
            <remarks>
            This should be called after any changes are made which affect the Move Tool handle position. Calling this will force <see cref="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetTransformFrame(SpaceClaim.Api.V23.Geometry.Frame@,SpaceClaim.Api.V23.Geometry.Transformations@)"/> to be called./>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.AdjustTransformToWindow">
            <summary>
            Gets whether Move Tool handles should be repositioned to ensure they are visible in the window. 
            </summary>
            <remarks>
            Return <b>true</b> if the handles should be repositioned (default), or <b>false</b> if they should be left in the position returned by <see cref="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetTransformFrame(SpaceClaim.Api.V23.Geometry.Frame@,SpaceClaim.Api.V23.Geometry.Transformations@)">TryGetTransformFrame</see>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetTransformFrame(SpaceClaim.Api.V23.Geometry.Frame@,SpaceClaim.Api.V23.Geometry.Transformations@)">
            <summary>
            Gets the transform frame for the lightweight custom object.
            </summary>
            <param name="frame">The transform frame.</param>
            <param name="transformations">Allowable transformations.</param>
            <returns><b>true</b> if the custom object has a transform frame; otherwise <b>false</b>.</returns>
            <remarks>
            Override this method to allow the custom object to be used with the Move tool.
            The position and orientation of the transform frame is used for the Move tool handles.
            <para/>
            <paramref name="transformations"/> is a bit field that specifies which transformations are suitable for this object.
            This is a hint to the Move tool for which handles to display.
            If multiple objects are selected, each object may offer different transformations,
            and in this case, the union of Move tool handles is presented.
            This means <see cref="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Transform(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)"/> can be called with a transformation that may be unsuitable for this object.
            You can skip such a transform, or adjust it to make it suitable.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.BeginTransform">
            <summary>
            Called before transforming the object.
            </summary>
            <remarks>
            This can be used to store the initial position of the object before being transformed, as there is no undo between calls to <see cref="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Transform(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)"/>
            <para/>
            This method is used by the Move tool.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Transform(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Transforms the lightweight custom object.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="final">A flag indicating whether this is the final transform.</param>
            <remarks>
            Override this method if the custom object supports being transformed. The default implementation does nothing.
            <para/>
            This method is used by the Move tool.
            <para/>
            The changes are not subject to undo/redo.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetTransformPath(SpaceClaim.Api.V23.Geometry.ITrimmedCurve@)">
            <summary>
            Returns a reference path for transformation of other objects
            </summary>
            <param name="trimmedCurve"></param>
            <returns></returns>
            <remarks>
            This is used for the Move Tool 'Move Direction', 'Move Along Trajectory', and 'Orient to Object' operations
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetTransformTargetPoint(SpaceClaim.Api.V23.Geometry.Point@)">
            <summary>
            Returns a target point for transformation of other objects
            </summary>
            <param name="point"></param>
            <returns></returns>
            <remarks>
            This is used for the Move Tool 'Up To' operation
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.TryGetMeasurementReference(SpaceClaim.Api.V23.Geometry.ITrimmedCurve@)">
            <summary>
            Returns a reference for measurements.
            </summary>
            <param name="trimmedCurve"></param>
            <returns></returns>
            <remarks>
            Returning true will override the default behavior of extracting the geometry from the rendering.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.SelectionOrder">
            <summary>
            Gets or sets the selection ordering method. 
            </summary>
            <remarks>SelectionOrder.ForceTop is the default.</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.IsAlive">
            <exclude />
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightCustomWrapper.IsDeleted">
            <summary>
            Gets whether the object is deleted.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper.Restore">
            <summary>
            Restores a deleted object
            </summary>
            <remarks>
            Resets the IsDeleted property and re-registers the object with the Window. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LightweightCustomWrapper`1">
            <summary>
            The base class for custom object wrappers.
            </summary>
            <typeparam name="TWrapper">The type of the derived wrapper class.</typeparam>
            <remarks>
            A custom wrapper provides access to the functionality of a custom object.
            <para/>
            To create a new type of custom object, a class derived from <see cref="T:SpaceClaim.Api.V23.LightweightCustomWrapper`1"/> should be created.
            <para/>
            The fields of the custom wrapper are automatically stored in the custom object.
            By default, all public and private fields are serialized.
            Any fields that do not need to be serialized should be marked with the <see cref="T:System.NonSerializedAttribute"/> attribute.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.LightweightCustomWrapper`1.Type">
            <summary>
            Gets the custom object type for this wrapper class.
            </summary>
            <remarks>
            A custom object has a <see cref="P:SpaceClaim.Api.V23.LightweightCustomObject.Type"/> property,
            which is set by the wrapper when the custom object is created.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper`1.#ctor(SpaceClaim.Api.V23.LightweightCustomObject)">
            <summary>
            Constructs a wrapper for an existing custom object.
            </summary>
            <param name="subject">The custom object.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper`1.#ctor(SpaceClaim.Api.V23.Window)">
            <summary>
            Constructs a new custom object and a wrapper for it.
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper`1.Initialize">
            <summary>
            Initializes this wrapper.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper`1.GetWrapper(SpaceClaim.Api.V23.LightweightCustomObject)">
            <summary>
            Gets the wrapper for the custom object.
            </summary>
            <param name="subject">The custom object.</param>
            <returns>A wrapper; else <b>null</b> if custom object is not suitable for this wrapper type.</returns>
            <remarks>
            If <paramref name="subject"/> is <b>null</b>, or it is a custom object of the wrong <see cref="F:SpaceClaim.Api.V23.LightweightCustomWrapper`1.Type"/>,
            then a <b>null</b> wrapper is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightCustomWrapper`1.GetChildren(SpaceClaim.Api.V23.Window)">
            <summary>
            Gets custom wrappers for child custom objects.
            </summary>
            <param name="window"></param>
        </member>
        <member name="T:SpaceClaim.Api.V23.LightweightCustomObject">
            <summary>
            A lightweight custom object.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.LightweightCustomWrapper`1"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.LightweightCustomWrapper`1"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMeshLoop.Edges">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignMeshLoop">
            <summary>
            A design mesh item, which identifies a collection of mesh edges.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMeshLoop.Edges">
            <summary>
            Gets the mesh edges in a loop.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnalysisOptions">
            <summary>
            Analysis options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisOptions.SingleConnectedEdgeColor">
            <summary>
            Gets or sets single connected edge color (default = <see cref="P:System.Drawing.Color.DarkRed"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisOptions.DoubleConnectedEdgeColor">
            <summary>
            Gets or sets double connected edge color (default = <see cref="P:System.Drawing.Color.Black"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisOptions.TripleConnectedEdgeColor">
            <summary>
            Gets or sets triple connected edge color (default = <see cref="P:System.Drawing.Color.DeepPink"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnalysisOptions.MultipleConnectedEdgeColor">
            <summary>
            Gets or sets multiple connected edge color (default = <see cref="P:System.Drawing.Color.Yellow"/>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AcisImportOptions">
            <summary>
            Import options for ACIS files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AcisImportOptions.CreateAssembly">
            <summary>
            Gets or sets whether to create an assembly when an ACIS file containing more than one body is imported (default = <b>false</b>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CatiaImportOptions">
            <summary>
            Import options for Catia files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CatiaImportOptions.ImportManufacturingData">
            <summary>
            Gets or sets whether to import manufacturing data (default = <b>false</b>).
            </summary>
            <remarks>
            Manufacturing data includes dimensions, GD&amp;T symbols, surface texture, and such like.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CatiaImportOptions.SimplifySplineSurfaces">
            <summary>
            Gets or sets whether spline surfaces can be simplified (default = <b>true</b>).
            </summary>
            <remarks>
            NURBS surfaces used by faces, which are larger than necessary to cover the extent of the face,
            can be trimmed by removing excess control points, or otherwise simplified.
            <para/>
            If a model is exported with the
            <see cref="P:SpaceClaim.Api.V23.CatiaExportOptions.SimplifySplineSurfaces"/> <i>export</i> option set to <b>false</b>,
            such faces are recorded in the Catia model and when imported again, are not simplified, even if the
            <see cref="P:SpaceClaim.Api.V23.CatiaImportOptions.SimplifySplineSurfaces"/> <i>import</i> option is set to <b>true</b>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ObjImportOptions">
            <summary>
            Import options for OBJ files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ObjImportOptions.Units">
            <summary>
            Gets or sets the units to assume when an OBJ file is imported (default = <b>null</b>).
            </summary>
            <remarks>
            The mass units are currently ignored.
            <para/>
            If the value is <b>null</b>, units are determined automatically.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.StlImportOptions">
            <summary>
            Import options for STL files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StlImportOptions.Units">
            <summary>
            Gets or sets the units to assume when an STL file is imported (default = <b>null</b>).
            </summary>
            <remarks>
            The mass units are currently ignored.
            <para/>
            If the value is <b>null</b>, units are determined automatically.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.StlImportOptions.ImportType">
            <summary>
            Gets or sets how to import an STL file (default = <b>StlImportType.ConnectedFaceted</b>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.StlImportType">
            <summary>
            Specifies how to import the STL file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlImportType.ConnectedFaceted">
            <summary>
            Create a lightweight mesh with full connectivity information between facets.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlImportType.SimpleFaceted">
            <summary>
            Create a lightweight mesh with no connectivity information between facets.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlImportType.SolidOrSurface">
            <summary>
             Convert STL triangles into full geometry.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlImportType.SolidOrSurfaceMergeFaces">
            <summary>
             Convert STL triangles into full geometry and seamlessly merge one or more faces.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WorkbenchImportOptions">
            <summary>
            Import options from Workbench Project Schematic.
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.importSolidBodies">
            <summary>
            Gets or sets Workbench preference to import Solid bodies (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.importSurfaceBodies">
            <summary>
            Gets or sets Workbench preference to import Surface bodies (default = <b>true</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ImportLineBodies">
            <summary>
            Gets or sets Workbench preference to import Line bodies (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ImportAttributes">
            <summary>
            Gets or sets Workbench preference to import Attributes (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.attributeKey">
            <summary>
            Gets or sets Workbench preference for Attribute prefix key (default = <b>""</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ImportParameters">
            <summary>
            Gets or sets Workbench preference to Import CAD Parameters (default = <b>CADImportParameterType.None</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.parameterKey">
            <summary>
            Gets or sets Workbench preference for Parameter prefix key (default = <b>""</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ImportNamedSelections">
            <summary>
            Gets or sets Workbench preference to import Named Selections (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.namedSelectionKey">
            <summary>
            Gets or sets Workbench preference for Named Selection prefix key (default = <b>""</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ImportMaterialProperties">
            <summary>
            Gets or sets Workbench preference to import Material properties (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.analysisType">
            <summary>
            Gets or sets Workbench preference to import analysis type (default = <b>AnalysisType.Analysis_3D</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.useAssociativity">
            <summary>
            Gets or sets Workbench preference to Use Associativity (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.CoordinateSystems">
            <summary>
            Gets or sets Workbench preference to import Coordinate Systems (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.coordinateSystemKey">
            <summary>
            Gets or sets Workbench preference for Coordinate Systems prefix key (default = <b>""</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.WorkPoints">
            <summary>
            Gets or sets Workbench preference to import Workpoints (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.mergeBeams">
            <summary>
            Gets or sets Workbench preference to merge beams (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.ReaderModeSavesUpdatedFile">
            <summary>
            Gets or sets Workbench preference for saving updated file in reader mode (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.useInstances">
            <summary>
            Gets or sets Workbench preference to use instances during import (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.smartCadUpdate">
            <summary>
            Gets or sets Workbench preference for Smart CAD Update (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.WorkbenchImportOptions.decomposeDisjointGeom">
            <summary>
            Gets or sets Workbench preference to decompose disjoint geometry (default = <b>false</b>).
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.WorkbenchImportOptions.MixedImportResolution">
            <summary>
            Gets or sets Workbench preference to Mixed Import Resolution (default = <b>MixedImportResolution.None</b>).
            </summary>
            <exclude />
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignWindowOptions">
            <summary>
            An object containing design window options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignWindowOptions.CreateSketchCurves">
            <summary>
            Gets or sets whether to create sketch curves (rather than layout curves) when using sketch tools (default = <b>true</b>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingWindowOptions">
            <summary>
            A object containing drawing window options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingWindowOptions.CreateSketchCurves">
            <summary>
            Gets or sets whether to create sketch curves (rather than layout curves) when using sketch tools (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingWindowOptions.AllowRotation">
            <summary>
            Gets or sets whether to allow drawing sheets to be rotated so that they are not flat-on (default = <b>true</b>).
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CornerReliefSetting.InitializeUserSettingsValues(SpaceClaim.UserSettings)">
            <exclude/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalOptions">
            <summary>
            An object containing sheet metal options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.DefaultBendTooling">
            <summary>
            Gets or sets the default bend tooling settings used by sheet metal interaction tools (default = <b>null</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.DefaultJoggleHeight">
            <summary>
            Gets or sets the default bend tooling settings used by sheet metal interaction tools (default = <b>0.01</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.DefaultBendToolMode">
            <summary>
            Gets or sets the default bend mode used by sheet metal interaction tools (default = <see cref="F:SpaceClaim.Api.V23.SheetMetalBendToolMode.Bend"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.ShowLaserCornerReliefs">
            <summary>
            Gets or sets whether laser corner reliefs should be shown in the user interface (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.ShowPunchCornerReliefs">
            <summary>
            Gets or sets whether punch corner reliefs should be shown in the user interface (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalOptions.DefaultCornerRelief">
            <summary>
            Gets or sets the default corner relief (default = <see cref="F:SpaceClaim.Api.V23.CornerReliefType.Default"/>).
            </summary>
            <remarks>
            If null, then the basic corner relief will be used. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ToolGuidePosition">
            <summary>
            The position of the tool guide buttons.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WorldOrientation">
            <summary>
            The orientation of the world axes when seen in trimetric projection.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WorldOrientation.UpIsZ">
            <summary>
            Z is up, X is right, Y is away.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WorldOrientation.UpIsY">
            <summary>
            Y is up, X is right, Z is towards.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WorldOrientation.UpIsX">
            <summary>
            X is up, Y is away, Z is left
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CutoutFacePattern">
            <summary>
            A sheet metal cutout pattern.
            </summary>
            <remarks>
            This is an abstract base class for <see cref="T:SpaceClaim.Api.V23.LightweightFacePattern"/> and <see cref="T:SpaceClaim.Api.V23.HeavyweightFacePattern"/>.
            </remarks>	
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutFacePattern.TemplateFaces">
            <summary>
            Gets the faces on which the pattern is based.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutFacePattern.GetPattern(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Gets the pattern to which the face belongs, if any.
            </summary>
            <remarks>
            If the face is not part of a pattern, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutFacePattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutFacePattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.HeavyweightFacePattern">
            <summary>
            A heavyweight pattern.
            </summary>
            <remarks>
            A pattern is based on a set of faces which form a cutout. 
            A <i>lightweight</i> pattern displays the pattern without creating geometry for the other members,
            whereas a <i>heavyweight</i> pattern creates geometry for all members.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.HeavyweightFacePattern.Members">
            <summary>
            Gets the members of the pattern.
            </summary>
            <remarks>
            The faces of <see cref="P:SpaceClaim.Api.V23.CutoutFacePattern.TemplateFaces"/> is first in the returned list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.HeavyweightFacePattern.ConvertToLightweight">
            <summary>
            Converts the heavyweight pattern into a lightweight pattern.
            </summary>
            <returns>An equivalent lightweight pattern.</returns>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.HeavyweightFacePattern"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.HeavyweightFacePattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.HeavyweightFacePattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.LightweightFacePattern">
            <summary>
            A lightweight sheet metal cutout pattern.
            </summary>
            <remarks>
            A pattern is based on a set of faces which form a cutout. 
            A <i>lightweight</i> pattern displays the pattern without creating geometry for the other members,
            whereas a <i>heavyweight</i> pattern creates geometry for all members.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFacePattern.CreatePattern(SpaceClaim.Api.V23.DesignFace,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignFace},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.PlacementUV})">
            <summary>
            Creates a pattern of cutouts, using this cutout as a template.
            </summary>
            <param name="substrateDesFace">The substrate face of the pattern.</param>
            <param name="desFaces">The faces of the cutout.</param>
            <param name="otherMembers">Placements for other members of the pattern.</param>
            <returns>A lightweight pattern.</returns>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.LightweightFacePattern"/> is created, using this form as <see cref="P:SpaceClaim.Api.V23.CutoutFacePattern.TemplateFaces"/> for the pattern.
            <para/>
            A <i>lightweight</i> pattern displays the pattern without creating geometry for the other members,
            whereas a <i>heavyweight</i> pattern creates identical cutout geometry for all members.
            <para/>
            If a <see cref="T:SpaceClaim.Api.V23.HeavyweightFacePattern"/> is required, <see cref="M:SpaceClaim.Api.V23.LightweightFacePattern.ConvertToHeavyweight"/> can be called.
            <para/>
            Each <see cref="T:SpaceClaim.Api.V23.Geometry.PlacementUV"/> in <paramref name="otherMembers"/> specifies a location and orientation
            within the UV space of the plane of the <see cref="P:SpaceClaim.Api.V23.ISheetMetalForm.Substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFacePattern.GetPlacements(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Gets the placements for the pattern members.
            </summary>
            <remarks>
            The placement for the <see cref="P:SpaceClaim.Api.V23.CutoutFacePattern.TemplateFaces"/> cutout is first in the returned list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFacePattern.ConvertToHeavyweight">
            <summary>
            Converts the lightweight pattern into a heavyweight pattern.
            </summary>
            <returns>An equivalent heavyweight pattern.</returns>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.LightweightFacePattern"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFacePattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightFacePattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.BendOptions">
            <summary>
            Stores values for overriding bend tool options.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BendOptions.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},SpaceClaim.Api.V23.BendOptions.BendDirection)">
            <summary>
            Constructs a bend options object.
            </summary>
            <param name="radius">Bend radius in milliseconds.</param>
            <param name="angle">Bend angle in </param>
            <param name="veeDieWidth">Vee die width in meters.</param>
            <param name="bendAllowance">Bend allowance in meters.</param>
            <param name="direction">Direction of bend.</param>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.SheetMetalBendHandler.UpdateBendOptions(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.IDocObject)"/> for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Session.Start(SpaceClaim.Api.V23.StartupOptions)"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalBendHandler">
            <summary>
            Abstract base class for a sheet metal bend handler.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalBendHandler.UpdateBendOptions(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Overrides sheet metal bend tool options panel values.
            </summary>
            <param name="desFace">The planar sheet metal face of the bend.</param>
            <param name="reference">Reference of the bend.</param>
            <returns>An instance of <see cref="T:SpaceClaim.Api.V23.BendOptions"/> with desired values to override bend tool option.</returns>
            <remarks>
            The <paramref name="desFace"/> is a planar sheet metal face that the reference <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> or 
            <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> is on.
            The <paramref name="reference"/> is a <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> or <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> which the 
            sheet metal bend references.
            <para/>
            Return an instance of <see cref="T:SpaceClaim.Api.V23.BendOptions"/> with the desired values in the override method. When a 
            <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> or <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> is clicked to create a sheet metal bend in the bend tool, 
            values from returned <see cref="T:SpaceClaim.Api.V23.BendOptions"/> will be used to populate the options panel.
            If bend table is set in the sheet metal part, bend radius value be overridden only if it is available in the 
            value list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalBendHandler.BendCreated(SpaceClaim.Api.V23.IBend,SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Called when a sheet metal bend is created.
            </summary>
            <param name="bend">The new bend.</param>
            <param name="reference">Reference to an <see cref="T:SpaceClaim.Api.V23.IDesignCurve"/> or <see cref="T:SpaceClaim.Api.V23.IDesignEdge"/> used to defined the bend.</param>
            <remarks>
            An IDesignEdge will have been consumed by the bend, so it will be marked as deleted and its properties will not be accessible.
            An IDesignCurve will be alive and its properties will be accessible. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CornerRelief">
            <summary>
            A sheet metal corner relief.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DiametricRelief">
            <summary>
            A base class for corner reliefs that have a diameter.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DiametricRelief.Diameter">
            <summary>
            Gets the diameter of the corner relief.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CircularRelief">
            <summary>
            A circular corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CircularRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LaserEdgeRelief">
            <summary>
            A laser stamp aligned to the edge of the flange.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LaserEdgeRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LaserSymmetricRelief">
            <summary>
            A symmetric laser relief groove.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LaserSymmetricRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.OblongRelief">
            <summary>
            An oblong corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.OblongRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SmoothRelief">
            <summary>
            A smooth corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SmoothRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SquareRelief">
            <summary>
            A square corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SquareRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SquareRelief.Width">
            <summary>
            Gets the width of the square.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TriangularRelief">
            <summary>
            A triangular corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.TriangularRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TriangularRelief.Width">
            <summary>
            Gets the width of the base of the triangle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TriangularRelief.Height">
            <summary>
            Get the perpendicular height of the triangle.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DiagonalRelief">
            <summary>
            A diagonal corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DiagonalRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RectangularRelief">
            <summary>
            A rectangular corner relief.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RectangularRelief.Default">
            <summary>
            The default relief, where the size will be determined automatically.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CornerReliefPlacement">
            <summary>
            Specifies the placement of a sheet metal corner relief.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CornerReliefPlacement.Position">
            <summary>
            Gets the reference position.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CornerReliefPlacement.Offset">
            <summary>
            Gets the offset along the diagonal of the corner.
            </summary>
            <remarks>
            A positive value removes more material from the corner.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CornerReliefPosition">
            <summary>
            The reference position for a corner relief.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CrossBreak">
            <summary>
            A sheet metal cross break.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CrossBreak.Substrate">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ICrossBreak.Substrate"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CrossBreak.CreaseA">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CrossBreak.CreaseB">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICrossBreak.Substrate">
            <summary>
            Gets the face in which the cross break lives.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICrossBreak.CreaseA">
            <summary>
            Gets the first crease line.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICrossBreak.CreaseB">
            <summary>
            Gets the second crease line.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BridgeForm">
            <summary>
            A bridge form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BridgeForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a bridge form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the form.</param>
            <param name="taperAngle">Side wall taper angle.</param>
            <param name="topRadius">Round radius at the top of the form.</param>
            <param name="bottomRadius">Round radius at the bottom of the form.</param>
            
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.BridgeForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.BridgeForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BridgeForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IBridgeForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BridgeForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BridgeForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BridgeForm.TaperAngle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BridgeForm.TopRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BridgeForm.BottomRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBridgeForm">
            <summary>
            A bridge form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBridgeForm.Height">
            <summary>
            Gets height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBridgeForm.TaperAngle">
            <summary>
            Gets the side wall angle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBridgeForm.TopRadius">
            <summary>
            Gets the top radius.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBridgeForm.BottomRadius">
            <summary>
            Gets the bottom radius.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CardGuideForm">
            <summary>
            A card guide form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CardGuideForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a card guide form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the form.</param>
            <param name="spacing">Spacing.</param>
            <param name="topRadius">Round radius at the top of the form.</param>
            <param name="bottomRadius">Round radius at the bottom of the form.</param>
            
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CardGuideForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.CardGuideForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.RectangleProfile,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CardGuideForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICardGuideForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CardGuideForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CardGuideForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CardGuideForm.Spacing">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CardGuideForm.TopRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CardGuideForm.BottomRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICardGuideForm">
            <summary>
            A card guide form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICardGuideForm.Height">
            <summary>
            Gets height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICardGuideForm.Spacing">
            <summary>
            Gets the spacing.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICardGuideForm.TopRadius">
            <summary>
            Gets the top radius.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICardGuideForm.BottomRadius">
            <summary>
            Gets the bottom radius.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BossForm">
            <summary>
            A boss form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BossForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double,System.Double)">
            <summary>
            Creates a boss form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the boss.</param>
            <param name="innerRadius">Inner radius of the boss.</param>
            <returns>A new boss form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.BossForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.BossForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.BossForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IBossForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BossForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BossForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BossForm.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBossForm">
            <summary>
            A boss form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBossForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBossForm.InnerRadius">
            <summary>
            Gets the inner radius of the boss.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DimpleForm">
            <summary>
            A Dimple form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimpleForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <summary>
            Creates a Dimple form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimpleForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DimpleForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DimpleForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IDimpleForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimpleForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DimpleForm.Height">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDimpleForm">
            <summary>
            A Dimple form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDimpleForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RoundedLouverForm">
            <summary>
            A RoundedLouver form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.RoundedLouverForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a RoundedLouver form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="frame">Location of the form.</param>
            <param name="height">Height of the form.</param>
            <param name="length">Length of the form.</param>
            <param name="width">Width of the form.</param>
            <param name="topRadius">Round radius at the top of the form.</param>
            <param name="bottomRadius">Round radius at the bottom of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.RoundedLouverForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.RoundedLouverForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.RoundedLouverForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IRoundedLouverForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RoundedLouverForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RoundedLouverForm.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RoundedLouverForm.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RoundedLouverForm.TopRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RoundedLouverForm.BottomRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IRoundedLouverForm">
            <summary>
            A rounded RoundedLouver form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRoundedLouverForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRoundedLouverForm.Length">
            <summary>
            Gets the length of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRoundedLouverForm.Width">
            <summary>
            Gets the width of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRoundedLouverForm.TopRadius">
            <summary>
            Gets the top radius.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRoundedLouverForm.BottomRadius">
            <summary>
            Gets the bottom radius.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LouverForm">
            <summary>
            A louver form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LouverForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <summary>
            Creates a louver form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="frame">Location of the form.</param>
            <param name="height">Height of the form.</param>
            <param name="length">Length of the form.</param>
            <param name="width">Width of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LouverForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.LouverForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.LouverForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ILouverForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LouverForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LouverForm.Length">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LouverForm.Width">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ILouverForm">
            <summary>
            A louver form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILouverForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILouverForm.Length">
            <summary>
            Gets the length of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILouverForm.Width">
            <summary>
            Gets the width of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ThreadPunchForm">
            <summary>
            A thread punch form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ThreadPunchForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.String)">
            <summary>
            Creates a thread punch form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="frame">Location of the form.</param>
            <param name="threadSize">Thread size.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ThreadPunchForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.String)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ThreadPunchForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame,System.String)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ThreadPunchForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IThreadPunchForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ThreadPunchForm.ThreadSize">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IThreadPunchForm">
            <summary>
            A thread punch form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IThreadPunchForm.ThreadSize">
            <summary>
            Gets the thread size.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RaisedCountersinkForm">
            <summary>
            A raised countersink form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.RaisedCountersinkForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <summary>
            Creates a raised countersink form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.RaisedCountersinkForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.RaisedCountersinkForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.RaisedCountersinkForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IRaisedCountersinkForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RaisedCountersinkForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RaisedCountersinkForm.Height">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IRaisedCountersinkForm">
            <summary>
            A raised countersink form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IRaisedCountersinkForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CountersinkForm">
            <summary>
            A countersink form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CountersinkForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <summary>
            Creates a countersink form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="innerRadius">Inner radius of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CountersinkForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.CountersinkForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.CircleProfile,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CountersinkForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICountersinkForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CountersinkForm.Profile">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CountersinkForm.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICountersinkForm">
            <summary>
            A countersink form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICountersinkForm.InnerRadius">
            <summary>
            Gets the inner radius of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomForm">
            <summary>
            A custom form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{System.Int32},System.Double,SpaceClaim.Api.V23.CustomFormOptions)">
            <summary>
            Creates an embossed sheet metal form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="vents">Segments of the profile boundary that should produce vents.</param>
            <param name="height">The height of the embossed form.</param>
            <param name="options">Further options.</param>
            <returns>A new sheet metal form.</returns>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            <para/>
            The profile must be a single loop with no self-intersections, which lies in the plane of the <paramref name="substrate"/> face.
            <para/>
            <paramref name="vents"/> specifies the segments in the profile that should create vents.
            There must be at least one segment which is not vented, so that the form is attached to the face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{System.Int32},System.Double,SpaceClaim.Api.V23.CustomFormOptions)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.CustomForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{System.Int32},System.Double,SpaceClaim.Api.V23.CustomFormOptions)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICustomForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICustomForm">
            <summary>
            A custom form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CutoutFormPattern">
            <summary>
            A cutout pattern.
            </summary>
            <remarks>
            This is an abstract base class for <see cref="T:SpaceClaim.Api.V23.LightweightFormPattern"/> and <see cref="T:SpaceClaim.Api.V23.HeavyweightFormPattern"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutFormPattern.Template">
            <summary>
            Gets the template form on which the pattern is based.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutFormPattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutFormPattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ExtrusionForm">
            <summary>
            An extrusion form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ExtrusionForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double)">
            <summary>
            Creates an extrusion form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Overall height of the extrusion.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            <para/>
            The outline must be a single loop with no self-intersections, which lies in the plane of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ExtrusionForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ExtrusionForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ExtrusionForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IExtrusionForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExtrusionForm.Height">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IExtrusionForm">
            <summary>
            An extrusion form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IExtrusionForm.Height">
            <summary>
            Gets the overall height of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CupForm">
            <summary>
            A cup form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CupForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a cup form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <param name="height">Height of the form.</param>
            <param name="taperAngle">Side-wall angle.</param>
            <param name="topRadius">Round radius at the top of the form.</param>
            <param name="bottomRadius">Round radius at the bottom of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            <para/>
            The outline must be a single loop with no self-intersections, which lies in the plane of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CupForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.CupForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CupForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICupForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CupForm.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CupForm.TaperAngle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CupForm.TopRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CupForm.BottomRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICupForm">
            <summary>
            A cup form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICupForm.Height">
            <summary>
            Gets the height of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICupForm.TaperAngle">
            <summary>
            Gets the taper angle of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICupForm.TopRadius">
            <summary>
            Gets the top radius of the form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICupForm.BottomRadius">
            <summary>
            Gets the bottom radius of the form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.HeavyweightFormPattern">
            <summary>
            A heavyweight pattern.
            </summary>
            <remarks>
            A pattern is based on a <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> form.
            A <i>lightweight</i> pattern displays the pattern without creating forms for the other members,
            whereas a <i>heavyweight</i> pattern creates identical linked copies of the template form for all members.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.HeavyweightFormPattern.Members">
            <summary>
            Gets the members of the pattern.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> form is first in the returned list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.HeavyweightFormPattern.ConvertToLightweight">
            <summary>
            Converts the heavyweight pattern into a lightweight pattern.
            </summary>
            <returns>An equivalent lightweight pattern.</returns>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.HeavyweightFormPattern"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.HeavyweightFormPattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.HeavyweightFormPattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.KnockoutForm">
            <summary>
            A knockout form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.KnockoutForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile)">
            <summary>
            Creates a knockout form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            <para/>
            The outline must be a single loop with no self-intersections, which lies in the plane of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.KnockoutForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Profile)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.KnockoutForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.KnockoutForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IKnockoutForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IKnockoutForm">
            <summary>
            A knockout form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CutoutForm">
            <summary>
            A cutout form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile)">
            <summary>
            Creates a cutout form.
            </summary>
            <param name="substrate">The planar face in which to create the form.</param>
            <param name="profile">The profile of the form.</param>
            <returns>A new sheet metal form.</returns>
            <remarks>
            The <paramref name="substrate"/> must be a planar face.
            <para/>
            The outline must be a single loop with no self-intersections, which lies in the plane of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutForm.Create(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Profile)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.CutoutForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICutoutForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CutoutForm.CreatePattern(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.PlacementUV})">
            <summary>
            Creates a pattern of cutout forms, using this form as a template.
            </summary>
            <param name="otherMembers">Placements for other members of the pattern.</param>
            <returns>A lightweight pattern.</returns>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.LightweightFormPattern"/> is created, using this form as the <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> for the pattern.
            <para/>
            A pattern is based on a <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> form.
            A <i>lightweight</i> pattern displays the pattern without creating forms for the other members,
            whereas a <i>heavyweight</i> pattern creates identical linked copies of the template form for all members.
            <para/>
            If a <see cref="T:SpaceClaim.Api.V23.HeavyweightFormPattern"/> is required, <see cref="M:SpaceClaim.Api.V23.LightweightFormPattern.ConvertToHeavyweight"/> can be called.
            <para/>
            Each <see cref="T:SpaceClaim.Api.V23.Geometry.PlacementUV"/> in <paramref name="otherMembers"/> specifies a location and orientation
            within the UV space of the plane of the <see cref="P:SpaceClaim.Api.V23.ISheetMetalForm.Substrate"/> face.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.CutoutForm.Placement"/> property gives the placement for this form.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutForm.Pattern">
            <summary>
            Gets the pattern to which this cutout form belongs, if any.
            </summary>
            <remarks>
            If the cutout form is not part of a pattern, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CutoutForm.Placement">
            <summary>
            Gets the placement of the form within the plane.
            </summary>
            <remarks>
            The placement specifies a location and orientation within the UV space of the plane of the <see cref="P:SpaceClaim.Api.V23.ISheetMetalForm.Substrate"/> face.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICutoutForm">
            <summary>
            A cutout form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LightweightFormPattern">
            <summary>
            A lightweight pattern.
            </summary>
            <remarks>
            A pattern is based on a <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> form.
            A <i>lightweight</i> pattern displays the pattern without creating forms for the other members,
            whereas a <i>heavyweight</i> pattern creates identical linked copies of the template form for all members.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightFormPattern.Placements">
            <summary>
            Gets the placements for the pattern members.
            </summary>
            <remarks>
            The placement for the <see cref="P:SpaceClaim.Api.V23.CutoutFormPattern.Template"/> form is first in the returned list.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFormPattern.ConvertToHeavyweight">
            <summary>
            Converts the lightweight pattern into a heavyweight pattern.
            </summary>
            <returns>An equivalent heavyweight pattern.</returns>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.LightweightFormPattern"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LightweightFormPattern.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightFormPattern.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Lettering">
            <summary>
            Type of lettering.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Lettering.Cutout">
            <summary>
            Cutout lettering.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Lettering.Engraved">
            <summary>
            Engraved lettering.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ILightweightNote.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.AnchorPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.AnchorFace">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.Text">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.Location">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.LightweightNote.TextOutline">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.AnchorPoint">
            <summary>
            Gets the anchor point of the note.
            </summary>
            <remarks>
            The anchor point of the note is the location that remains fixed when the note is edited.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.AnchorFace">
            <summary>
            Gets the anchor face of the note.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.HorizontalAlignment">
            <summary>
            Gets the horizontal alignment.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.Location">
            <summary>
            Gets the location.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILightweightNote.TextOutline">
            <summary>
            Gets the outline of the text as trimmed curves.
            </summary>
            <remarks>
            For cutout text, both top and bottom curves are returned for a folded part, and only top curves are returned for an unfolded part. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalCorner">
            <summary>
            A sheet metal corner master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalCorner.Bends">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalCorner.Bends"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalCorner.Relief">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalCorner.Placement">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalCorner.Is2D">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISheetMetalCorner">
            <summary>
            A sheet metal corner.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalCorner.Bends">
            <summary>
            Gets the bends that meet at this corner.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalCorner.Relief">
            <summary>
            Gets or sets the corner relief style.
            </summary>
            <remarks>
            The default corner relief style is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalCorner.Placement">
            <summary>
            Gets or sets the placement of the corner relief.
            </summary>
            <remarks>
            If the <see cref="P:SpaceClaim.Api.V23.ISheetMetalCorner.Relief"/> is a <see cref="T:SpaceClaim.Api.V23.SmoothRelief"/>, the placement is ignored.
            <para/>
            If the <see cref="P:SpaceClaim.Api.V23.ISheetMetalCorner.Relief"/> is <b>null</b> (the default corner relief style),
            the <see cref="P:SpaceClaim.Api.V23.CornerReliefPlacement.Offset"/> of the placement is ignored.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalCorner.Is2D">
            <summary>
            Gets or sets whether the corner relief is 2D
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalFormHandler">
            <summary>
            Abstract base class for a sheet metal form handler.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalFormHandler.CreatePreview">
            <summary>
            Creates the preview of the sheet metal form.
            </summary>
            <returns>A preview object, or <b>null</b> to cancel the operation.</returns>
            <seealso cref="T:SpaceClaim.Api.V23.SheetMetalFormPreview"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalFormHandler.CreateForm(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile)">
            <summary>
            Creates a sheet metal form.
            </summary>
            <param name="substrate">The planar substrate face.</param>
            <param name="profile">The profile of the form.</param>
            <returns>The sheet metal form, or <b>null</b> if unsuccessful.</returns>
            <remarks>
            The <paramref name="substrate"/> is a planar face in the sheet metal part.
            <para/>
            The <paramref name="profile"/> is has the same outline as the <see cref="P:SpaceClaim.Api.V23.SheetMetalFormPreview.Profile"/>
            returned from <see cref="M:SpaceClaim.Api.V23.SheetMetalFormHandler.CreatePreview"/>, and is in the desired position and orientation in the
            plane of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalFormPreview">
            <summary>
            A sheet metal form preview.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalFormPreview.#ctor(System.String,SpaceClaim.Api.V23.Geometry.Profile)">
            <summary>
            Creates a sheet metal form preview.
            </summary>
            <param name="name">The name of the sheet metal form.</param>
            <param name="profile">The profile of the sheet metal form.</param>
            <remarks>
            This object is returned from the <see cref="M:SpaceClaim.Api.V23.SheetMetalFormHandler.CreatePreview"/> method of the <see cref="T:SpaceClaim.Api.V23.SheetMetalFormHandler"/> class.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.SheetMetalFormPreview.Name"/> is used as the name in the undo droplist.
            The <see cref="P:SpaceClaim.Api.V23.SheetMetalFormPreview.Profile"/> provides the outline of the form, and can be supplied in any plane.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalFormPreview.Name">
            <summary>
            Gets the name of the sheet metal form.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalFormPreview.Profile">
            <summary>
            Gets the profile of the sheet metal form.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Units">
            <summary>
            The units of measurement in which the user is working.
            </summary>
            <remarks>
            There are two units systems, the <see cref="P:SpaceClaim.Api.V23.Units.MetricUnits"/> system, and the <see cref="P:SpaceClaim.Api.V23.Units.ImperialUnits"/> system.
            The system currently being used is specified by the <see cref="P:SpaceClaim.Api.V23.Units.ActiveUnitsSystem"/> property.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Units.Create(SpaceClaim.Api.V23.DrawingSheet)">
            <summary>
            Creates units of measurement for a drawing sheet, to override the document units.
            </summary>
            <param name="parent">A drawing sheet.</param>
            <returns>The units for the drawing sheet.</returns>
            <exception cref="T:System.InvalidOperationException">The drawing sheet already has units.</exception>
            <remarks>
            A drawing sheet overrides the document units if it has a singleton <see cref="T:SpaceClaim.Api.V23.Units"/> child.
            <para/>
            The drawing sheet can have at most one <see cref="T:SpaceClaim.Api.V23.Units"/> child.
            If the <see cref="P:SpaceClaim.Api.V23.IHasUnits.Units"/> property of the drawing sheet is not <b>null</b>,
            the <see cref="M:SpaceClaim.Api.V23.Units.Create(SpaceClaim.Api.V23.DrawingSheet)"/> method will throw an exception.
            <para/>
            To remove the drawing sheet units override, call the <see cref="M:SpaceClaim.Api.V23.DocObject.Delete"/> method on the units object.
            Calling <see cref="M:SpaceClaim.Api.V23.DocObject.Delete"/> on the document units will thrown an exception.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.MetricUnits">
            <summary>
            Gets or sets the metric units system.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.Units"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.ImperialUnits">
            <summary>
            Gets or sets the imperial units system.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.Units"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.ActiveUnitsSystem">
            <summary>
            Gets or sets whether to use the metric or imperial units system.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.GridSettings">
            <summary>
            Gets or sets the grid settings.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.Length">
            <summary>
            Gets the length unit of measurement, in which the user is working.
            </summary>
            <remarks>
            The system units of length are meters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.Area">
            <summary>
            Gets the area unit of measurement, in which the user is working.
            </summary>
            <remarks>
            The system units of area are meters squared.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.Volume">
            <summary>
            Gets the volume unit of measurement, in which the user is working.
            </summary>
            <remarks>
            The system units of volume are meters cubed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.Angle">
            <summary>
            Gets the angle unit of measurement, in which the user is working.
            </summary>
            <remarks>
            The system units of angle are radians.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.Mass">
            <summary>
            Gets the mass unit of measurement, in which the user is working.
            </summary>
            <remarks>
            The system units of mass are kilograms.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Units.GetMeasurementUnit(SpaceClaim.Api.V23.DimensionType)">
            <summary>
            Gets the unit of measurement for the specified dimension type.
            </summary>
            <param name="dimensionType">A dimension type.</param>
            <returns>The unit of measurement for this dimension type.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.UseWorkbenchUnits">
            <summary>
            Use workbench project units for length and angle.
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.Units.IsSmallUnitType">
            <summary>
            The user unit type is small (uM, nM and Mils) or standard (m, cm, mm, in and ft)
            </summary>
            <exclude />
        </member>
        <member name="M:SpaceClaim.Api.V23.Units.Delete">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DisplayImage">
            <summary>
            Specifies the image to be used when a custom object is visible or hidden.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DisplayImage.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:SpaceClaim.Api.V23.DisplayImage"/> object.
            </summary>
            <param name="imageWhenVisible">The index of the image to use when the custom object is visible.</param>
            <param name="imageWhenHidden">The index of the image to use when the custom object is hidden.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.DisplayImage.ImageWhenVisible">
            <summary>
            Gets the index of the image to use when the custom object is visible.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DisplayImage.ImageWhenHidden">
            <summary>
            Gets the index of the image to use when the custom object is hidden.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumLine">
            <summary>
            A datum line master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Creates a datum line.
            </summary>
            <param name="parent">Parent part.</param>
            <param name="name">Name for the datum line.</param>
            <param name="line">Line of the datum line.</param>
            <returns>The new datum line.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.Create(SpaceClaim.Api.V23.IPart,System.String,SpaceClaim.Api.V23.Geometry.Line)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DatumLine.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Line)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a datum line from determinants.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name for the datum line.</param>
            <param name="determinants">The objects used to determine the line.</param>
            <returns>A datum line.</returns>
            <exception cref="T:System.ArgumentException">Cannot derive a line from the determinants.</exception>
            <remarks>
            If the <paramref name="determinants"/> are unsuitable, an exception is thrown.
            <see cref="M:SpaceClaim.Api.V23.DatumLine.GetLine(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/> can be used to test the suitability of determinants before creating the datum line.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.GetLine(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Attempts to determine a line from one or more objects.
            </summary>
            <param name="determinants">Objects used to determine the line.</param>
            <returns>A line, or <b>null</b> if no line could be determined.</returns>
            <remarks>
            This method can be used to test the suitability of determinants before 
            calling <see cref="M:SpaceClaim.Api.V23.DatumLine.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDatumLine.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.Pinned">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.Determinants">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumLine.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumLine.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDatumLine">
            <summary>
            A datum line.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumLine.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumLine.Pinned">
            <summary>
            Gets whether the datum line is pinned.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumLine.Determinants">
            <summary>
            Gets the objects that determine the line.
            </summary>
            <remarks>
            If the line does not have determinants, then an empty collection is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignAxis">
            <summary>
            A design axis master.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignAxis">
            <summary>
            A design axis.
            </summary>
            <remarks>
            A design axis is an implicit doc object, which means you cannot create or delete one.
            Its parent is typically a <see cref="T:SpaceClaim.Api.V23.IDesignFace"/>, and the design axis represents the axis of that face.
            If the surface of the design face ceases to be axial, the design axis will report that <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/> is <b>true</b>.
            <para/>
            The parent might also be a <see cref="T:SpaceClaim.Api.V23.IPart"/>, e.g. if this is the axis of a pattern.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.EnclosureAspect">
            <summary>
            The enclosure aspect of a design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.EnclosureAspect.SourceBodies">
            <summary>
            Gets the bodies that are enclosed. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.EnclosureAspect.Update">
            <summary>
            Updates the enclosure body.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignMeshStyle">
            <summary>
            Specifies the display style of the mesh.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DesignMeshStyle.Opaque">
            <summary>
            Mesh is rendered opaque.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DesignMeshStyle.Transparent">
            <summary>
            Mesh is rendered transparent.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DesignMeshStyle.Default">
            <summary>
            Mesh is rendered using transparency obtained from the alpha component of its mesh or layer color. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewScale">
            <summary>
            A drawing view scale.
            </summary>
            <remarks>
            The scale can be a <see cref="T:SpaceClaim.Api.V23.DecimalViewScale"/> or a <see cref="T:SpaceClaim.Api.V23.FractionalViewScale"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewScale.Scale">
            <summary>
            Gets the scale.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DecimalViewScale">
            <summary>
            A decimal drawing view scale.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DecimalViewScale.#ctor(System.Double)">
            <summary>
            Constructs a decimal drawing view scale.
            </summary>
            <param name="scale">The drawing view scale.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.DecimalViewScale.Scale">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.FractionalViewScale">
            <summary>
            A fractional drawing view scale.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FractionalViewScale.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a fractional drawing view scale.
            </summary>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <remarks>
            The numerator and denominator must both be positive.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FractionalViewScale.Scale">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.FractionalViewScale.Numerator">
            <summary>
            Gets the numerator.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FractionalViewScale.Denominator">
            <summary>
            Gets the denominator.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Spacing">
            <summary>
            The spacing around a rectangular object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Indicator">
            <summary>
            An indicator.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Indicator.IsSelected">
            <summary>
            Gets or sets whether the indicator is selected.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Indicator.Objects">
            <summary>
            Gets the objects of the indicator.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Indicator.Position">
            <summary>
            Gets the position of the indicator.
            </summary>
            <remarks>
            If the indicator was created at a point (see <see cref="M:SpaceClaim.Api.V23.Tool.CreateIndicator(SpaceClaim.Api.V23.Geometry.Point)"/>, that point is returned.
            Otherwise the center of the bounding box of the <see cref="P:SpaceClaim.Api.V23.Indicator.Objects"/> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Indicator.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Indicator.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.MassProperties">
            <summary>
            Mass properties.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MassProperties.PrincipleAxes">
            <summary>
            Gets the principle axes of inertia.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.Origin"/> of the frame is at the center of mass, and the axes of the frame are the principle axes.
            <para/>
            <see cref="M:SpaceClaim.Api.V23.MassProperties.GetMoment(SpaceClaim.Api.V23.Geometry.Line)"/> can be used to obtain the principle moments by supplying the axes of the frame,
            i.e. <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.AxisX"/>, <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.AxisY"/>, or <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.AxisZ"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MassProperties.Mass">
            <summary>
            Gets the mass.
            </summary>
            <remarks>
            Mass properties are initially returned for a density of 1 kg/m³, which means the mass is the volume.
            The mass properties can be multiplied by a density using '*' operator to produce mass properties for that density.
            <br/>
            The mass is returned in SI units (kg).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MassProperties.RelativeAccuracy">
            <summary>
            Returns the relative error of Mass Properties
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.MassProperties.GetInertiaTensor(SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Gets the inertia tensor for a specified frame.
            </summary>
            <param name="frame">The frame for the inertia tensor.</param>
            <returns>The inertia tensor.</returns>
            <remarks>
            The tensor is returned as a symmetric 3x3 matrix.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MassProperties.GetMoment(SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Gets the moment of inertia about a specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <returns>The moment of inertia about the specified axis.</returns>
            <remarks>
            This method can be used to obtain the principle moments by supplying the axes of the <see cref="P:SpaceClaim.Api.V23.MassProperties.PrincipleAxes"/> frame.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MassProperties.op_Multiply(System.Double,SpaceClaim.Api.V23.MassProperties)">
            <summary>
            Multiplies the mass properties by a density.
            </summary>
            <param name="density">The density to apply, in SI units (kg/m³)</param>
            <param name="props">Mass properties.</param>
            <returns>Mass properties scaled by the density value.</returns>
            <remarks>
            Mass properties are initially returned for a density of 1 kg/m³, which means the mass is the volume.
            The mass properties can be multiplied by a density using '*' operator to produce mass properties for that density.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MassProperties.op_Multiply(SpaceClaim.Api.V23.MassProperties,System.Double)">
            <summary>
            Multiplies the mass properties by a density.
            </summary>
            <param name="props">Mass properties.</param>
            <param name="density">The density to apply, in SI units (kg/m³)</param>
            <returns>Mass properties scaled by the density value.</returns>
            <remarks>
            Mass properties are initially returned for a density of 1 kg/m³, which means the mass is the volume.
            The mass properties can be multiplied by a density using '*' operator to produce mass properties for that density.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.MassProperties.op_Addition(SpaceClaim.Api.V23.MassProperties,SpaceClaim.Api.V23.MassProperties)">
            <summary>
            Adds two mass properties together.
            </summary>
            <param name="propsA">The first mass properties.</param>
            <param name="propsB">The second mass properties.</param>
            <returns>The resulting mass properties.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasMassProperties">
            <summary>
            The object implementing this interface has mass properties.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasMassProperties.MassProperties">
            <summary>
            Gets the mass properties.
            </summary>
            <remarks>
            Mass properties are initially returned for a density of 1 kg/m³, which means the mass is the volume.
            The mass properties can be multiplied by a density using '*' operator to produce mass properties for that density.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMeshItem.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignMeshItem.Parent"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignMeshItem">
            <summary>
            A design mesh item.
            </summary>
            <remarks>
            A design mesh item is a doc object representing a portion of a design mesh.
            There are two types of design mesh item:
            <list type="bullet">
            <item>
            	A <see cref="T:SpaceClaim.Api.V23.IDesignMeshTopology"/>, which identifies a <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/>, <see cref="T:SpaceClaim.Api.V23.Modeler.MeshEdge"/>, or <see cref="T:SpaceClaim.Api.V23.Modeler.MeshVertex"/>.
            </item>
            <item>
            	A <see cref="T:SpaceClaim.Api.V23.IDesignMeshRegion"/>, which identifies a collection of <see cref="T:SpaceClaim.Api.V23.Modeler.MeshFace"/> objects.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMeshItem.Parent">
            <summary>
            Gets the parent design mesh.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMeshRegion.Faces">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignMeshRegion">
            <summary>
            A design mesh item, which identifies a collection of mesh faces.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMeshRegion.Faces">
            <summary>
            Gets the mesh faces in the region.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignMeshTopology.Topology">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignMeshTopology">
            <summary>
            A design mesh item, which identifies a mesh face, mesh edge, or mesh vertex.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignMeshTopology.Topology">
            <summary>
            Gets the mesh face, mesh edge, or mesh vertex.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AxialBend">
            <summary>
            An axial bend master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.Axis">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.BendSteps">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.Corners">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IAxialBend.Corners"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.BendAllowance">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.BendAllowanceOverride">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AxialBend.Angle">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AxialBend.SetAngle(System.Double,SpaceClaim.Api.V23.IDesignFace)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">The value given for <paramref name="angle"/> is not valid.</exception>
            <exception cref="T:System.ArgumentException">The specified <paramref name="referenceFace"/> is not valid.</exception>
            <exception cref="T:System.InvalidOperationException">The bend <paramref name="angle"/> cannot be modified.</exception>
        </member>
        <member name="T:SpaceClaim.Api.V23.IAxialBend">
            <summary>
            A sheet metal bend, which is bent about an axis.
            </summary>
            <remarks>
            Axial bends include:
            <see cref="T:SpaceClaim.Api.V23.ICylindricalBend"/> and
            <see cref="T:SpaceClaim.Api.V23.IConicalBend"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAxialBend.Axis">
            <summary>
            Gets the axis of the bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAxialBend.BendSteps">
            <summary>
            Gets or set the number of steps involved in creating the bend.
            </summary>
            <remarks>
            The value is a snapshot of the bend steps.
            To change the value, a new list should be set.
            <para/>
            If a bend has more than one step, this means the bend is formed by bumping.
            In this case, more than one bend line is shown in the flat pattern.
            <para/>
            Bend lines (bumpings) are assumed to be spaced equally across the bend zone, as illustrated in the following example.
            If the flattened bend has a width of 100, and there are 5 bend lines,
            then each bend line has a 10 space on both sides, so the spacing between the bend lines is:
            <para/>
            10 line 20 line 20 line 20 line 20 line 10
            <para/>
            The list of bend steps is in order across the bend zone, and this direction is clockwise around the <see cref="P:SpaceClaim.Api.V23.IAxialBend.Axis"/> of the bend.
            The order in which bend steps are applied when the bend is formed is controlled by the <see cref="P:SpaceClaim.Api.V23.BendStep.Order"/> of each <see cref="T:SpaceClaim.Api.V23.BendStep"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAxialBend.Corners">
            <summary>
            Gets the corners in which this bend is involved.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BendStep">
            <summary>
            A bend step.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BendStep.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Constructs a bend step.
            </summary>
            <param name="shareOfAngle">The share of the total bend angle allocated to this bend step.</param>
            <param name="shareOfAllowance">The share of the total bend allowance allocated to this bend step.</param>
            <param name="order">The order of the bend step.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendStep.ShareOfAngle">
            <summary>
            Gets or sets the share of the total bend angle allocated to this bend step.
            </summary>
            <remarks>
            The values for each of the bend steps together specify how the total bend angle is distributed as a ratio.
            Since the values are ratios, they do not need to be angular amounts.
            If the bend angle is changed, these values are not affected.
            <para/>
            For example, if the total bend angle is 90 degrees and there are 3 bend steps,
            then values of {2, 5, 2} or {1, 2.5, 1} or {20, 50, 20} will all give the same result,
            which is to apportion the total 90 degree angle into steps of 20, 50, and 20 degrees.
            <para/>
            If all bend steps have the same value, then the bend angle is distributed equally.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendStep.ShareOfAllowance">
            <summary>
            Gets or sets the share of the total bend allowance allocated to this bend step.
            </summary>
            <remarks>
            The values for each of the bend steps together specify how the total bend allowance is distributed as a ratio.
            See <see cref="P:SpaceClaim.Api.V23.BendStep.ShareOfAngle"/> for further information.
            <para/>
            If all bend steps have the same value, then the bend allowance is distributed equally.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.BendStep.ShareOfAngle"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendStep.Order">
            <summary>
            Gets or sets the order of the bend step.
            </summary>
            <remarks>
            The value controls the order in which bend steps are formed.
            When <see cref="P:SpaceClaim.Api.V23.IAxialBend.BendSteps"/> is specified, the <see cref="P:SpaceClaim.Api.V23.BendStep.Order"/> value of each bend step specifies the order of forming.
            <para/>
            The forming order affects the shape of a partial bend.
            See <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.PartialBends"/>.
            <para/>
            The values are used to sort the bend steps into forming order.
            The values used do not need to be consecutive, and if two bend steps have the same value,
            their order in the <see cref="P:SpaceClaim.Api.V23.IAxialBend.BendSteps"/> list is used.
            <para/>
            For example, if 4 bend steps {A, B, C, D} have order values of {2, 12, 2, 5}, the forming order is {A, C, D, B}.
            <para/>
            If all bend steps have the same order, then the forming order is the order of the <see cref="P:SpaceClaim.Api.V23.IAxialBend.BendSteps"/> list.
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.FlatPatternAspect.PartialBends"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.JoggleBend">
            <summary>
            A joggle bend master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.JoggleBend.TryConvertToCylindrical(SpaceClaim.Api.V23.CylindricalBend@,SpaceClaim.Api.V23.CylindricalBend@)">
            <summary>
            Converts a joggle bend into two opposing cylindrical bends.
            </summary>
            <param name="bendA">The first cylindrical bend created.</param>
            <param name="bendB">The second cylindrical bend created.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            If successful, the joggle bend is deleted.
            <para/>
            This operation can be reversed using the <see cref="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateJoggle(SpaceClaim.Api.V23.CylindricalBend,SpaceClaim.Api.V23.CylindricalBend)"/> method.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.JoggleBend.Angles">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.JoggleBend.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.JoggleBend.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.JoggleBend.BendAllowance">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.JoggleBend.BendAllowanceOverride">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IJoggleBend">
            <summary>
            A joggle bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IJoggleBend.Angles">
            <summary>
            Gets the two angles and two bend axes of the joggle bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IJoggleBend.Height">
            <summary>
            Gets the height of the joggle bend.
            </summary>
            <remarks>
            The height is the displacement between the two adjacent flat faces, which is only defined if they are parallel.
            If the joggle bend is asymmetric, i.e. the two angles are not the same, then the height is undefined and <b>null</b> is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.JoggleAngles">
            <summary>
            The two angles and two bend axes of the joggle bend.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PartExportFormat">
            <summary>
            Specifies an export format for use with the <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/> method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.CatiaV5Part">
            <summary>
            A Catia V5 (".CATPart") part file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.CatiaV5Assembly">
            <summary>
            A Catia V5 (".CATProduct") assembly file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.CatiaV5Graphics">
            <summary>
            A Catia V5 (".cgr") graphics file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.Iges">
            <summary>
            An IGES (".igs") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.Step">
            <summary>
            A STEP (".stp") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.Vda">
            <summary>
            A VDA (".vda") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.JtOpen">
            <summary>
            A JT Open (".jt") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.ParasolidText">
            <summary>
            A Parasolid text (".x_t") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.ParasolidBinary">
            <summary>
            A Parasolid binary (".x_b") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.AcisText">
            <summary>
            An ACIS text (".sat") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.AcisBinary">
            <summary>
            An ACIS binary (".sab") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.Rhino">
            <summary>
            A Rhino (".3dm") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.PdfGeometry">
            <summary>
            A 3D PDF (".pdf") file, written in <b>PRC</b> format (containing a B-Rep).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.PdfFacets">
            <summary>
            A 3D PDF (".pdf") file, written in <b>Universal 3D</b> format (containing facets).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartExportFormat.SketchUp">
            <summary>
            A SketchUp (".skp") file.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Bead">
            <summary>
            A sheet metal form master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Bead.Path">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBead.Path"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBead">
            <summary>
            A sheet metal bead.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBead.Path">
            <summary>
            Gets the curves which define the bead path.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalFeature">
            <summary>
            A sheet metal feature master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalFeature.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalFeature.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalFeature.Faces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalFeature.Faces"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISheetMetalFeature">
            <summary>
            A sheet metal feature.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalFeature.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalFeature.Faces">
            <summary>
            Gets the faces of the sheet metal feature.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Private.Extensions.EnumerableMethods.Cache``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Caches an enumerable as a collection, so that it can be iterated over more than once.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">A sequence of items.</param>
            <returns>A cached collection of the sequence.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Private.Extensions.EnumerableMethods.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Gets the item with the maximum key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">A sequence of items.</param>
            <param name="selector">A function to provide the key for each item.</param>
            <returns>The item with the maximum key.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Private.Extensions.EnumerableMethods.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Gets the item with the minimum key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="source">A sequence of items.</param>
            <param name="selector">A function to provide the key for each item.</param>
            <returns>The item with the minimum key.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Camera">
            <summary>
            A camera.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Camera.Position">
            <summary>
            Gets the position of the camera.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Camera.LookDirection">
            <summary>
            Gets the direction in which the camera points. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Camera.UpDirection">
            <summary>
            Gets the orientation of the top of the camera. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Camera.Type">
            <summary>
            Gets the camera type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Camera.Zoom">
            <summary>
            Gets the zoom factor.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DockLocation">
            <summary>
            A built-in interaction panel.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SelectionFilterType">
            <Summary>
            A bitmask for defining a selection filter for a window
            </Summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Smart">
            <summary>
            Smart selection is on.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Faces">
            <summary>
            Select faces.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Edges">
            <summary>
            Select edges.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.SketchCurves">
            <summary>
            Select sketch curves.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Planes">
            <summary>
            Select planes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Axes">
            <summary>
            Select axes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Points">
            <summary>
            Select points.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Images">
            <summary>
            Select images.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.FacetedBodies">
            <summary>
            Select faceted bodies (meshes).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.LightweightComponents">
            <summary>
            Select lightweight custom objects.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Vertices">
            <summary>
            Select vertices.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Bodies">
            <summary>
            Select bodies.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Notes">
            <summary>
            Select notes.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.Dimensions">
            <summary>
            Select dimensions.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.OtherAnnotations">
            <summary>
            Select annotation types other than notes and dimensions.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.AllAnnotations">
            <summary>
            Select all annotation types.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SelectionFilterType.All">
            <summary>
            Selects all types.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WindowSplit">
            <summary>
            Base class describing how a window has been split into multiple panes.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LeftRightSplit">
            <summary>
            Describes a window that is split into a left pane and a right pane.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LeftRightSplit.#ctor">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.LeftRightSplit"/> with left and right panes of equal sizes.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LeftRightSplit.#ctor(System.Double)">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.LeftRightSplit"/> with the specified pane proportion.
            </summary>
            <param name="leftProportion">The proportion of the window width that the left pane should occupy.</param>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to be 0.9.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LeftRightSplit.LeftProportion">
            <summary>
            Gets or sets the proportion of the window width that the left pane should occupy.
            </summary>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to 0.9.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LeftRightSplit.Pane">
            <summary>
            The window pane for a <see cref="T:SpaceClaim.Api.V23.LeftRightSplit"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LeftRightSplit.ActivePane">
            <summary>
            Gets or sets the active pane.
            </summary>
            <remarks>
            The default is the <see cref="F:SpaceClaim.Api.V23.LeftRightSplit.Pane.Left"/> pane.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LeftRightSplit.PaneProjections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LeftRightSplit.PaneProjections.Item(SpaceClaim.Api.V23.LeftRightSplit.Pane)">
            <summary>
            Gets or sets one of the pane projections.
            </summary>
            <param name="pane">The pane.</param>
            <returns>The view projection for that pane.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.LeftRightSplit.Projections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TopBottomSplit">
            <summary>
            Describes a window that is split into a top pane and a bottom pane.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.TopBottomSplit.#ctor">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.TopBottomSplit"/> with top and bottom panes of equal sizes.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.TopBottomSplit.#ctor(System.Double)">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.TopBottomSplit"/> with the specified pane proportion.
            </summary>
            <param name="topProportion">The proportion of the window height that the top pane should occupy.</param>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to be 0.9.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TopBottomSplit.TopProportion">
            <summary>
            Gets or sets the proportion of the window height that the top pane should occupy.
            </summary>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to 0.9.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.TopBottomSplit.Pane">
            <summary>
            The window pane for a <see cref="T:SpaceClaim.Api.V23.TopBottomSplit"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TopBottomSplit.ActivePane">
            <summary>
            Gets or sets the active pane.
            </summary>
            <remarks>
            The default is the <see cref="F:SpaceClaim.Api.V23.TopBottomSplit.Pane.Top"/> pane.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.TopBottomSplit.PaneProjections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TopBottomSplit.PaneProjections.Item(SpaceClaim.Api.V23.TopBottomSplit.Pane)">
            <summary>
            Gets or sets one of the pane projections.
            </summary>
            <param name="pane">The pane.</param>
            <returns>The view projection for that pane.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.TopBottomSplit.Projections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FourWaySplit">
            <summary>
            Describes a window that is split into a four panes.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FourWaySplit.#ctor">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.FourWaySplit"/> with panes of equal sizes.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FourWaySplit.#ctor(System.Double,System.Double)">
            <summary>
            Creates a <see cref="T:SpaceClaim.Api.V23.FourWaySplit"/> with the specified pane proportions.
            </summary>
            <param name="leftProportion">The proportion of the window width that the left panes should occupy.</param>
            <param name="topProportion">The proportion of the window height that the top panes should occupy.</param>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to be 0.9.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FourWaySplit.LeftProportion">
            <summary>
            Gets or sets the proportion of the window width that the left panes should occupy.
            </summary>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to 0.9.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FourWaySplit.TopProportion">
            <summary>
            Gets or sets the proportion of the window height that the top panes should occupy.
            </summary>
            <remarks>
            The proportion is clamped to be between 0.1 and 0.9.
            For example, a value of 1 will be clamped to 0.9.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FourWaySplit.Pane">
            <summary>
            The window pane for a <see cref="T:SpaceClaim.Api.V23.FourWaySplit"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FourWaySplit.ActivePane">
            <summary>
            Gets or sets the active pane.
            </summary>
            <remarks>
            The default is the <see cref="F:SpaceClaim.Api.V23.FourWaySplit.Pane.TopLeft"/> pane.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FourWaySplit.PaneProjections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FourWaySplit.PaneProjections.Item(SpaceClaim.Api.V23.FourWaySplit.Pane)">
            <summary>
            Gets or sets one of the pane projections.
            </summary>
            <param name="pane">The pane.</param>
            <returns>The view projection for that pane.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.FourWaySplit.Projections">
            <summary>
            The pane projections.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WindowTab">
            <summary>
            A custom window tab.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.WindowTab.ActiveTabChanged">
            <summary>
            Occurs when the <see cref="P:SpaceClaim.Api.V23.WindowTab.ActiveTab"/> has changed.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTab.Create(SpaceClaim.Api.V23.Command,System.Windows.Forms.Control,SpaceClaim.Api.V23.WindowTabHandler)">
            <summary>
            Creates a custom window tab.
            </summary>
            <param name="command">The command to supply the image and text for the tab.</param>
            <param name="control">The contents to be displayed.</param>
            <param name="handler">A handler to receive notifications, or <b>null</b>.</param>
            <returns>A window tab.</returns>
            <remarks>
            This method adds a custom window tab to the user interface, whose contents are defined by a Windows Forms <see cref="T:System.Windows.Forms.Control"/>.
            <para/>
            The <paramref name="command"/> supplies the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> and <see cref="P:SpaceClaim.Api.V23.Command.Text"/> for the tab,
            and its <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> property controls the visibility of the tab.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.WindowTab.ActiveTab">
            <summary>
            Gets the active window tab.
            </summary>
            <remarks>
            If no custom window tab is active, the value is <b>null</b>.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.WindowTab"/> can be activated by calling <see cref="M:SpaceClaim.Api.V23.Tab.Activate"/>.
            <para/>
            Since other add-ins may also use custom window tabs, you should never assume that
            the <see cref="P:SpaceClaim.Api.V23.WindowTab.ActiveTab"/> was created by your add-in.
            Always test the <see cref="P:SpaceClaim.Api.V23.Tab.Command"/> to see whether the window tab is one of yours.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTab.GetTabs(SpaceClaim.Api.V23.Command)">
            <summary>
            Gets window tabs for a command.
            </summary>
            <param name="command">A command.</param>
            <returns>Window tabs for that command.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.WindowTabHandler">
            <summary>
            A notification handler for a custom window tab.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTabHandler.OnActivated(SpaceClaim.Api.V23.WindowTab)">
            <summary>
            Called when a window tab is activated.
            </summary>
            <param name="tab">The window tab that was activated.</param>
            <remarks>
            A custom window tab can display any kind of content, e.g. a graph, a spreadsheet, or a web page.
            So in general a custom window is foreign to built-in commands.  Therefore, the default implementation
            of <see cref="M:SpaceClaim.Api.V23.WindowTabHandler.OnActivated(SpaceClaim.Api.V23.WindowTab)"/> sets the <see cref="P:SpaceClaim.Api.V23.Window.ActiveWindow"/> to <b>null</b>.
            <para/>
            If your custom window tab embeds a <see cref="T:SpaceClaim.Api.V23.Window"/> using <see cref="M:SpaceClaim.Api.V23.Window.CreateEmbedded(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.EmbeddedWindowHandler)"/>,
            you should activate that window in your override instead of calling the base implementation;
            otherwise you should call the base implementation, followed by whatever else you might want to
            do when the window tab is activated (e.g. change its display style to indicate that it is active).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTabHandler.OnDeactivated(SpaceClaim.Api.V23.WindowTab)">
            <summary>
            Called when a window tab is deactivated.
            </summary>
            <param name="tab">The window tab that was deactivated.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTabHandler.OnClosing(SpaceClaim.Api.V23.WindowTab)">
            <summary>
            Called when a window tab is closing.
            </summary>
            <param name="tab">The window tab being closed.</param>
            <returns><b>true</b> to proceed with closing the window tab, or <b>false</b> to cancel.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.WindowTabHandler.GetRelatedWindow(SpaceClaim.Api.V23.WindowTab)">
            <summary>
            Gets the related built-in window for a window tab.
            </summary>
            <param name="tab">The window tab.</param>
            <returns>The related window, or <b>null</b> if there is no related window.</returns>
            <remarks>
            If the custom window embeds a <see cref="T:SpaceClaim.Api.V23.Window"/> using <see cref="M:SpaceClaim.Api.V23.Window.CreateEmbedded(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.EmbeddedWindowHandler)"/>,
            then <see cref="M:SpaceClaim.Api.V23.WindowTabHandler.OnActivated(SpaceClaim.Api.V23.WindowTab)"/> should be overridden so that the embedded <see cref="T:SpaceClaim.Api.V23.Window"/> is
            activated when the custom window tab is activated.
            <para/>
            Sometimes a custom window does not embed a window, but it displays information, which is related to a built-in window.
            In this case, <see cref="M:SpaceClaim.Api.V23.WindowTabHandler.GetRelatedWindow(SpaceClaim.Api.V23.WindowTab)"/> can be overridden, so that the Save command is
            available when the custom window tab is active.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.EmbeddedWindowHandler">
            <summary>
            Provides control for an embedded window.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.EmbeddedWindowHandler.OnCreate(SpaceClaim.Api.V23.Window,System.Windows.Forms.Control)">
            <summary>
            Called when the embedded window is being created.
            </summary>
            <param name="window">The embedded window.</param>
            <param name="control">The control to embed.</param>
            <remarks>
            This method is called when <see cref="M:SpaceClaim.Api.V23.Window.CreateEmbedded(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.EmbeddedWindowHandler)"/> is called.
            <para/>
            It is also called when a <b>Redo</b> command causes the embedded window to be re-created,
            or the <b>Undo</b> command causes it to be un-deleted.
            In either case a new <paramref name="control"/> is created for the <paramref name="window"/>,
            and the window becomes alive again (<see cref="P:SpaceClaim.Api.V23.Window.IsDeleted"/> now returns <b>false</b>).
            <para/>
            This method should be overridden to start hosting the control in some user interface.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.EmbeddedWindowHandler.OnDelete(SpaceClaim.Api.V23.Window)">
            <summary>
            Called when the embedded window is being deleted.
            </summary>
            <param name="window">The embedded window.</param>
            <remarks>
            This method is called when the <see cref="M:SpaceClaim.Api.V23.Window.Delete"/> method is called on the window.
            <para/>
            It is also called when a <b>Undo</b> command causes the embedded window to be un-created,
            or the <b>Redo</b> command causes it to be re-deleted.
            <para/>
            This method should be overridden to stop hosting the control.
            <para/>
            The <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)"/> method should be called to delete the control.
            If the control is hosted in a <see cref="T:System.Windows.Forms.Form"/> and the form is closed,
            the control will be disposed automatically.
            <para/>
            The control must only be disposed inside this method.
            It must not be disposed at any other time.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.EmbeddedWindowHandler.OnActivate(SpaceClaim.Api.V23.Window)">
            <summary>
            Called when the embedded window is activated.
            </summary>
            <param name="window">The embedded window.</param>
            <remarks>
            The default implementation does nothing.
            <para/>
            Override this method to indicate to the user that the embedded window is now the <see cref="P:SpaceClaim.Api.V23.Window.ActiveWindow"/>.
            For example, if the control hosted in a <see cref="T:System.Windows.Forms.Form"/>, you might call <see cref="M:System.Windows.Forms.Control.BringToFront"/> to
            bring that form to the front.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FileOpenHandler">
            <summary>
            Abstract base class for a file filter handler for the File Open dialog.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FileOpenHandler.#ctor(System.String,System.String[])">
            <summary>
            Constructor for a file filter handler for the File Open dialog.
            </summary>
            <param name="filterName">The name of the file filter.</param>
            <param name="fileExtensions">One or more file extensions to accept.</param>
            <exception cref="T:System.ArgumentException">At least one file extension must be supplied.</exception>
            <remarks>
            The <paramref name="filterName"/> should be of the form <c>"Banana Files"</c>.
            <paramref name="fileExtensions"/> specifies the one or more file extensions that are supported,
            and these can but do not have to contain a "." prefix.
            <para/>
            Together these create a file filter in the File Open dialog of the form:
            <para/>
            <c>"Banana Files (*.ban;*.banana)"</c>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileOpenHandler.FilterName">
            <summary>
            Gets the filter name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileOpenHandler.FileExtensions">
            <summary>
            Gets the file extensions that are supported.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileOpenHandler.OptionsPage">
            <summary>
            Gets or sets the options page to use with the Options button.
            </summary>
            <remarks>
            An <see cref="T:SpaceClaim.Api.V23.OptionsPage"/> has a <see cref="P:SpaceClaim.Api.V23.OptionsPage.Command"/>, which provides
            the image and text for the title of the page.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FileOpenHandler.OpenFile(System.String,SpaceClaim.Api.V23.Window)">
            <summary>
            Opens the file.
            </summary>
            <param name="path">Full path to the file.</param>
            <param name="targetWindow">The target window, if this is a drag and drop operation.</param>
            <remarks>
            Override this method to open a file matching the file filter.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FileSaveHandler">
            <summary>
            Abstract base class for a file filter handler for the File Save dialog.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FileSaveHandler.#ctor(System.String,System.String)">
            <summary>
            Constructor for a file filter handler for the File Save dialog.
            </summary>
            <param name="filterName">The name of the file filter.</param>
            <param name="fileExtension">The file extension to use.</param>
            <remarks>
            The <paramref name="fileExtension"/> can but does not have to contain a "." prefix.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileSaveHandler.FilterName">
            <summary>
            Gets the filter name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileSaveHandler.FileExtension">
            <summary>
            Gets the file extension to use.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FileSaveHandler.OptionsPage">
            <summary>
            Gets or sets the options page to use with the Options button.
            </summary>
            <remarks>
            An <see cref="T:SpaceClaim.Api.V23.OptionsPage"/> has a <see cref="P:SpaceClaim.Api.V23.OptionsPage.Command"/>, which provides
            the image and text for the title of the page.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FileSaveHandler.SaveFile(System.String)">
            <summary>
            Saves the file.
            </summary>
            <param name="path">Full path to the file.</param>
            <remarks>
            Override this method to save a file matching the file filter.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.OptionsPageSection">
            <summary>
            Location for the page entry. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.OptionsPageSection.Default">
            <summary>
            Standard section.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.OptionsPageSection.FileOptions">
            <summary>
            File Options section.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.OptionsPage">
            <summary>
            Abstract base class for a page in the options dialog.
            </summary>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.OptionsPage.CreateControl"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.OptionsPage.Command">
            <summary>
            Gets the command whose properties are used to label the page.
            </summary>
            <remarks>
            The command <see cref="P:SpaceClaim.Api.V23.Command.Text"/> is used for the name of the options page.
            <para/>
            The command <see cref="P:SpaceClaim.Api.V23.Command.Hint"/> is used for the title of the options page.
            <para/>
            The command <see cref="P:SpaceClaim.Api.V23.Command.HintImage"/> is used for the image in the title of the options page.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.OptionsPage.AutoSize">
            <summary>
            Gets whether the page should auto-size to fill available space. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.OptionsPage.Section">
            <summary>
            Gets the location of the page in the list.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.OptionsPage.Show">
            <summary>
            Shows the options page.
            </summary>
            <remarks>
            This methods shows the Options dialog, open at this options page.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.OptionsPage.CreateControl">
            <summary>
            Creates the control to be displayed in the options page.
            </summary>
            <returns>A control to be displayed.</returns>
            <remarks>
            Notification methods are called to coordinate the loading and saving of options.
            <list type="bullet">
            <item>
            	<see cref="M:SpaceClaim.Api.V23.OptionsPage.OnLoad(System.Windows.Forms.Control)"/> will be called when the options in the page need to be populated.
            </item>
            <item>
            	<see cref="M:SpaceClaim.Api.V23.OptionsPage.OnSave(System.Windows.Forms.Control)"/> will be called when the options in the page need to be saved.
            </item>
            </list>
            Both of these methods receive the control displayed in the options page,
            which can be cast to its actual class.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.OptionsPage.OnLoad(System.Windows.Forms.Control)">
            <summary>
            Called when the options page needs to be populated.
            </summary>
            <param name="control">The control displayed in the options page.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.OptionsPage.OnSave(System.Windows.Forms.Control)">
            <summary>
            Called when the options page needs to be saved.
            </summary>
            <param name="control">The control displayed in the options page.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.PropertyDisplay">
            <summary>
            A property to be displayed in the properties panel in the user interface.
            </summary>
            <remarks>
            There are the following types of property display:
            <para/>
            <list type="table">
            	<listheader>
            		<term>Type</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.ReadOnlyPropertyDisplay"/></term>
            		<description>
            		A property that is presented in the property panel, but cannot be edited.
            		</description>
            	</item>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.SimplePropertyDisplay"/></term>
            		<description>
            		A property that can be edited, either by entering text, or by selecting from a drop-list of values.
            		</description>
            	</item>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.AdvancedPropertyDisplay"/></term>
            		<description>
            		A property that can be edited in a custom editor control.
            		</description>
            	</item>
            </list>
            <para/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.PropertyDisplay.#ctor(System.String,System.String)">
            <summary>
            A base class constructor.
            </summary>
            <param name="category">The category under which the property should be presented in the properties panel.</param>
            <param name="name">The name of the property.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertyDisplay.Category">
            <summary>
            Gets or sets the category under which the property is presented.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertyDisplay.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasPropertyGetter">
            <summary>
            The property display has a property value getter.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasPropertySetter">
            <summary>
            The property display has a property value setter.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ReadOnlyPropertyDisplay">
            <summary>
            Abstract base class for a read-only property.
            </summary>
            <remarks>
            See remarks in <see cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ReadOnlyPropertyDisplay.#ctor(System.String,System.String)">
            <summary>
            Constructor for a read-only property display.
            </summary>
            <param name="category">The category under which the property should be presented in the properties panel.</param>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ReadOnlyPropertyDisplay.GetValue(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SimplePropertyDisplay">
            <summary>
            Abstract base class for a property that can be typed, or selected from a drop-list.
            </summary>
            <remarks>
            See remarks in <see cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SimplePropertyDisplay.#ctor(System.String,System.String)">
            <summary>
            Constructor for a property that can be typed, or selected from a drop-list.
            </summary>
            <param name="category">The category under which the property should be presented in the properties panel.</param>
            <param name="name">The name of the property.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.SimplePropertyDisplay.AllowableValues">
            <summary>
            Gets the allowable values for this property.
            </summary>
            <remarks>
            Override this property to supply the allowable values for this property, which will appear in a drop-list.
            The default is <b>null</b>, which means that the value can be entered as text and no drop-list arrow is presented.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SimplePropertyDisplay.GetValue(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SimplePropertyDisplay.SetValue(SpaceClaim.Api.V23.IDocObject,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.AdvancedPropertyDisplay">
            <summary>
            Abstract base class for a property that is edited in a custom editor control. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.AdvancedPropertyDisplay.#ctor(System.String,System.String)">
            <summary>
            Constructor for a property that is edited in a custom editor control.
            </summary>
            <param name="category">The category under which the property should be presented in the properties panel.</param>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.AdvancedPropertyDisplay.GetEditorControl(SpaceClaim.Api.V23.IPropertyEditorContext)">
            <summary>
            Gets the Windows Forms <see cref="T:System.Windows.Forms.Control"/> to be used to edit the property value.
            </summary>
            <param name="context">Provides access to the property value.</param>
            <returns>The user control to be used to edit the property value.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.AdvancedPropertyDisplay.GetValue(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AdvancedPropertyDisplay.SetValue(SpaceClaim.Api.V23.IDocObject,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IPropertyEditorContext">
            <summary>
            Provides access to the context in which a property value is being edited.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IPropertyEditorContext.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IPropertyEditorContext.CloseEditor">
            <summary>
            Closes the editor.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CommandException">
            <summary>
            A command exception.
            </summary>
            <remarks>
            When a command encounters a failure condition, a message can be reported to the user by throwing a command exception.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IKeepAliveObject">
            <summary>
            An object that might be remote.
            </summary>
            <remarks>
            The object is remote if it lives inside a different application domain or process from the client.
            <para/>
            If an add-in has the <b>host</b> attribute set to <i>NewAppDomain</i> in its manifest file, it will receive remote
            objects through the API, because those objects live in a different application domain.
            <para/>
            If an add-in has the <b>host</b> attribute set to <i>SameAppDomain</i> in its manifest file, the objects it receives
            will not be remote, because they live in the same application domain as the client,
            but it is best to write code that does not make this assumption.
            <para/>
            A reference to a remote object has a <i>lease</i>, which means it stays alive for a period of time (several minutes),
            after which the lease expires and the object can no longer be accessed.
            In this situation, a <see cref="T:System.Runtime.Remoting.RemotingException"/> is thrown.
            <para/>
            Usually API client code obtains a reference to an object and then calls some methods and properties before dropping
            the reference shortly afterwards.
            However, sometimes it is necessary to hold onto a remote object for an indefinite period of time.
            <para/>
            For example, you might display a form showing a table of information, where each row corresponds to a remote object.
            For this, you may need to hold references to those remote objects while the form is displayed.
            Since the form might be displayed for longer than the lease time, references to those remote objects need to be kept alive.
            <para/>
            There are various ways to keep remote objects alive.
            <para/>
            The simplest is to call <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> with <b>true</b>.
            This is an extension method, so you can call it on the object itself.
            It will automatically extend the lease for as long as the object is referenced by the client.
            <para/>
            There is a small performance overhead in providing this behavior, which unlikely to be significant
            unless many thousands of objects are being kept alive.
            In that case, if you know that you no longer require the object to be kept alive,
            you can call <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> with <b>false</b> to remove that overhead.
            In our example of the form showing a table of information, this can be done when the form is closed.
            <para/>
            The disposable <see cref="T:SpaceClaim.Api.V23.ManualKeepAliveBlock"/> class is provided to make this easy.
            It provides its own <see cref="M:SpaceClaim.Api.V23.ManualKeepAliveBlock.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject)"/> method, which calls the usual <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> with <b>true</b>,
            but then it automatically calls <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> with <b>false</b> in its <see cref="M:System.IDisposable.Dispose"/> method.
            This class is designed to be used with a C# <i>using</i> statement, or equivalent, so that <see cref="M:System.IDisposable.Dispose"/> is called
            at the end of the block of code.
            <para/>
            Sometimes you want <i>all</i> objects to be kept alive, although this is unusual in practice.
            An example is if you have an add-in that compiles and executes interactive code and stores objects in named variables
            ready for subsequent entered code to use.
            The user may take some time to decide what code to enter next, and this might be longer than the lease time.
            For this situation, the <see cref="T:SpaceClaim.Api.V23.Api"/> class has an <see cref="P:SpaceClaim.Api.V23.Api.AutoKeepAlive"/> property.
            By default this is <b>false</b>, due to the performance overhead already mentioned,
            but if you set it to <b>true</b>, then <i>all</i> objects received by the client are automatically kept alive for
            as long as they are referenced.
            <para/>
            A variation on this is the disposable <see cref="T:SpaceClaim.Api.V23.AutoKeepAliveBlock"/> class, which sets <see cref="P:SpaceClaim.Api.V23.Api.AutoKeepAlive"/>
            to <b>true</b> just within a block of code.
            As with <see cref="T:SpaceClaim.Api.V23.ManualKeepAliveBlock"/>, this is designed to be used with a C# <i>using</i> statement, or equivalent,
            so that <see cref="M:System.IDisposable.Dispose"/> is called at the end of the block of code,
            which in this case sets <see cref="P:SpaceClaim.Api.V23.Api.AutoKeepAlive"/> back to its previous setting.
            This class is often simpler to use than <see cref="T:SpaceClaim.Api.V23.ManualKeepAliveBlock"/>, since there is no need to call <see cref="M:SpaceClaim.Api.V23.ManualKeepAliveBlock.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject)"/>
            on each object to be kept alive.
            However, whereas <see cref="T:SpaceClaim.Api.V23.ManualKeepAliveBlock"/> calls <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> with <b>false</b> on each object and the end of the block of code,
            <see cref="T:SpaceClaim.Api.V23.AutoKeepAliveBlock"/> leaves all objects kept alive for as long as they continue to be referenced.
            <para/>
            Finally, if you prefer, you can use the <see cref="P:SpaceClaim.Api.V23.IKeepAliveObject.LifetimeLease"/> property to obtain the .NET Remoting lifetime <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/>,
            and sponsor the lease yourself.
            If you do this, remember to <see cref="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)"/> the lease when you no longer need the object to be kept alive,
            otherwise you will keep it alive indefinitely, even after you have dropped all references to it.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IKeepAliveObject.LifetimeLease">
            <summary>
            Gets the .NET Remoting lifetime lease for this object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AutoKeepAliveBlock">
            <summary>
            Automatically keeps any objects alive that are received by the client within a block of code.
            </summary>
            <remarks>
            This disposable object should be used with a C# <i>using</i> statement, or equivalent.
            See remarks in <see cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AutoKeepAliveBlock.#ctor">
            <summary>
            Constructs the object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ManualKeepAliveBlock">
            <summary>
            Keeps objects alive within a block of code.
            </summary>
            <remarks>
            This disposable object should be used with a C# <i>using</i> statement, or equivalent, which identifies the block of code.
            See remarks in <see cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ManualKeepAliveBlock.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject)">
            <summary>
            Keeps an object alive for the duration of the block of code.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:SpaceClaim.Api.V23.Api.AutoKeepAlive">
            <summary>
            Gets or sets whether objects returned from API calls are automatically
            kept alive for as long as they are referenced.
            </summary>
            <remarks>
            The default is <b>false</b>.
            <para/>
            See remarks in <see cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Api.IsKeptAlive(SpaceClaim.Api.V23.IKeepAliveObject)">
            <summary>
            Gets whether the remote object is kept alive while there are references to it.
            </summary>
            <param name="subject">The object in question.</param>
            <returns><b>true</b> if the object is kept alive; otherwise <b>false</b>.</returns>
            <remarks>
            See remarks in <see cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)">
            <summary>
            Sets whether an object should be kept alive while there are references to it.
            </summary>
            <param name="subject">The object to be kept alive.</param>
            <param name="keepAlive">Whether to keep the object alive.</param>
            <remarks>
            See remarks in <see cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IKeepAliveObject"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Api.Initialize">
            <summary>
            Initializes the API.
            </summary>
            <remarks>
            A call must be made to <see cref="M:SpaceClaim.Api.V23.Api.Initialize"/> before any other API calls are made.
            For add-ins, this is done automatically in the <see cref="T:SpaceClaim.Api.V23.Extensibility.AddIn"/> constructor,
            but for client applications in a separate process, <see cref="M:SpaceClaim.Api.V23.Api.Initialize"/> must be called explicitly.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)">
            <summary>
            Attaches the API to a SpaceClaim session.
            </summary>
            <param name="session">The SpaceClaim session to attach to.</param>
            <remarks>
            The API must be attached to a SpaceClaim session before it can be used.
            For add-ins, this is done automatically in the <see cref="T:SpaceClaim.Api.V23.Extensibility.AddIn"/> constructor,
            but for client applications in a separate process, <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/> must be called explicitly.
            <para/>
            In general, the only methods that can be called before <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/> has been called are:
            <list type="bullet">
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Api.Initialize"/>, which must be called first of all.
            </item>
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Session.GetSessions"/>, to find a session to attach to.
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Api.Session"/>, to see if the API is already attached.
            </item>
            <item>
            	The two static methods on the <see cref="P:SpaceClaim.Api.V23.Api.Session"/> class,
            	<see cref="M:SpaceClaim.Api.V23.Session.Start(System.Int32)"/> and <see cref="M:SpaceClaim.Api.V23.Session.Stop"/>.
            </item>
            </list>
            <para/>
            Once the API has been attached to a session, it cannot be detached, or re-attached to another session.
            The API is attached to that session for the life of the application domain.
            Multiple application domains can be used if multiple attached servers are required.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Api.Session">
            <summary>
            Gets the SpaceClaim session to which the API is attached.
            </summary>
            <remarks>
            If the API is not yet attached to a session, <b>null</b> is returned;
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Api.CheckArguments">
            <summary>
            Gets or sets whether non-trivial argument checks are performed.
            </summary>
            <remarks>
            Simple argument checks are always performed,
            e.g. checking that an argument is not <b>null</b>, or that a length is greater than zero.
            <para/>
            Some checks are more involved, e.g. checking that an object belongs to the correct part,
            which requires a traversal up the parent chain to reach the part.
            Such checks should not be necessary after the program has been adequately tested and debugged.
            <para/>
            Argument checking is on by default.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.KeepAliveObject">
            <summary>
            An object that might be remote.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.KeepAliveObject.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Session">
            <summary>
            Represents a SpaceClaim session.
            </summary>
            <remarks>
            A session is described by a <see cref="P:SpaceClaim.Api.V23.Session.Host"/>, and a <see cref="P:SpaceClaim.Api.V23.Session.ProcessId"/> on that host.
            <see cref="P:SpaceClaim.Api.V23.Session.IsAttachable"/> tells you whether the session is suitable for use with <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/>.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.Session.CurrentProcess">
            <summary>
            The session for the current process.
            </summary>
            <remarks>
            If the current process is not a suitable SpaceClaim session, <see cref="P:SpaceClaim.Api.V23.Session.IsAttachable"/> will return <b>false</b>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.#ctor(System.Diagnostics.Process)">
            <summary>
            Constructs a session from a process object.
            </summary>
            <param name="process">A process object</param>
            <remarks>
            <see cref="P:SpaceClaim.Api.V23.Session.IsAttachable"/> tells you whether the session is suitable for use with <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.ProcessId">
            <summary>
            Gets the process id of the session.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.Host">
            <summary>
            Gets the host of the session.
            </summary>
            <remarks>
            This property returns an IP address or domain name.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.MainWindowTitle">
            <summary>
            Gets the title of the main window of the process.
            </summary>
            <remarks>
            This property might be used to distinguish between multiple SpaceClaim sessions on the same machine.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.IsLocal">
            <summary>
            Gets whether the session is on the local machine.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.IsAttachable">
            <summary>
            Gets whether the session can be attached to.
            </summary>
            <remarks>
            A session is described by a <see cref="P:SpaceClaim.Api.V23.Session.Host"/>, and a <see cref="P:SpaceClaim.Api.V23.Session.ProcessId"/> on that host.
            This property tells you whether the session is suitable for use with <see cref="M:SpaceClaim.Api.V23.Api.AttachToSession(SpaceClaim.Api.V23.Session)"/>.
            <para/>
            There are many reasons why it may not be:
            <list type="bullet">
            <item>
            	The process on the host may not exist.
            </item>
            <item>
            	It may not be an instance of SpaceClaim.
            </item>
            <item>
            	It may be an instance of a version of SpaceClaim that does not support this API version.
            </item>
            <item>
            	It may be on a remote machine but not currently accessible.
            </item>
            </list>
            <para/>
            Sessions returned from <see cref="M:SpaceClaim.Api.V23.Session.GetSessions"/> are attachable.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Session.AllowRemoteManagement">
            <summary>
            Gets or sets whether remote management is allowed for the local machine.
            </summary>
            <remarks>
            If remote management is allowed, then clients on other machines on the network
            can use <see cref="M:SpaceClaim.Api.V23.Session.Start(System.Int32,System.String)"/> and <see cref="M:SpaceClaim.Api.V23.Session.Stop"/> to start and stop SpaceClaim sessions on this machine.
            <para/>
            Setting this property to <b>true</b> may cause a Windows Firewall message to be displayed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.GetSessions">
            <summary>
            Gets running SpaceClaim sessions on the local machine that can be attached to.
            </summary>
            <returns>Sessions that can be attached to.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.GetSessions(System.String)">
            <summary>
            Gets running SpaceClaim sessions on the specified machine that can be attached to.
            </summary>
            <param name="host">The machine name or IP address of the host machine.</param>
            <returns>Sessions that can be attached to.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.Start(System.Int32,System.String)">
            <summary>
            Starts a SpaceClaim session on the specified machine.
            </summary>
            <param name="timeout">The number of milliseconds to wait, or -1 to wait indefinitely.</param>
            <param name="host">The machine on which the session should be started.</param>
            <returns>The SpaceClaim session if successful; otherwise <b>null</b>.</returns>
            <remarks>
            If SpaceClaim is not successfully started within the specified <paramref name="timeout"/> period in milliseconds,
            <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.Start(SpaceClaim.Api.V23.StartupOptions,System.String)">
            <summary>
            Starts a SpaceClaim session on the specified machine.
            </summary>
            <param name="options">Information about how the session should be started.</param>
            <param name="host">The machine on which the session should be started.</param>
            <returns>The SpaceClaim session if successful; otherwise <b>null</b>.</returns>
            <remarks>
            If SpaceClaim is not successfully started within the specified <see cref="P:SpaceClaim.Api.V23.StartupOptions.Timeout"/> period in milliseconds,
            <b>null</b> is returned.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.StartupOptions"/> for information about various startup options.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.Start(System.Int32)">
            <summary>
            Starts a SpaceClaim session.
            </summary>
            <param name="timeout">The number of milliseconds to wait, or -1 to wait indefinitely.</param>
            <returns>The SpaceClaim session if successful; otherwise <b>null</b>.</returns>
            <remarks>
            If SpaceClaim is not successfully started within the specified <paramref name="timeout"/> period in milliseconds,
            <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.Start(SpaceClaim.Api.V23.StartupOptions)">
            <summary>
            Starts a SpaceClaim session.
            </summary>
            <param name="options">Information about how the session should be started.</param>
            <returns>The SpaceClaim session if successful; otherwise <b>null</b>.</returns>
            <remarks>
            If SpaceClaim is not successfully started within the specified <see cref="P:SpaceClaim.Api.V23.StartupOptions.Timeout"/> period in milliseconds,
            <b>null</b> is returned.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.StartupOptions"/> for information about various startup options.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Session.Stop">
            <summary>
            Stops the SpaceClaim session.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.StartupOptions">
            <summary>
            Contains information about how a session should be started.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.StartupOptions.#ctor(System.Int32)">
            <summary>
            Constructs a startup options object.
            </summary>
            <param name="timeout">Timeout in milliseconds.</param>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.Session.Start(SpaceClaim.Api.V23.StartupOptions)"/> for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Session.Start(SpaceClaim.Api.V23.StartupOptions)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.Timeout">
            <summary>
            Gets or sets the number of milliseconds to wait, or -1 to wait indefinitely.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.ShowSplashScreen">
            <summary>
            Gets or sets whether to show the splash screen during startup (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.ShowApplication">
            <summary>
            Gets or sets whether to show the application (default = <b>true</b>).
            </summary>
            <remarks>
            If the value is <b>false</b>, the application is started in an invisible state.
            The <see cref="P:SpaceClaim.Api.V23.Application.IsVisible"/> property of the <see cref="T:SpaceClaim.Api.V23.Application"/> class
            can be used to change the visibility of the application after it has started.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.WindowState">
            <summary>
            Gets or sets the window location and size to use (default = <b>null</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.DefaultUserSettingsFile">
            <summary>
            Gets or sets the full path of the default user settings file (default = <b>null</b>).
            </summary>
            <remarks>
            The value is the full path of a file containing some default user settings.
            <para/>
            The default user settings file is only used if a <c>user.config</c> settings file does not already exist,
            which means it is only used if SpaceClaim is being run with this user account for the very first time,
            or the <c>user.config</c> file has been deleted.
            <para/>
            The default user settings file is a cut down version of the <c>user.config</c> file, and can be created by
            copying and editing that file, removing all <c>&lt;setting&gt;</c> elements from the XML file, except for
            those settings for a which default values are to be supplied.
            <para/>
            The defaults user settings file supplied does not need to have the name <c>user.config</c>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.ManifestFile">
            <summary>
            Gets or sets the full path of an add-in manifest file.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.ExecutableFolder">
            <summary>
            Gets or sets the folder containing the SpaceClaim executable.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StartupOptions.AdditionalArguments">
            <summary>
            Gets or sets command line arguments which will be sent to SpaceClaim. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Readout">
            <summary>
            A readout.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Readout.Select">
            <summary>
            Selects the readout so that text can be entered.
            </summary>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            The method can return <b>false</b> if the tool is not enabled (see <see cref="P:SpaceClaim.Api.V23.Tool.IsEnabled"/>),
            of the readout is read-only (see <see cref="P:SpaceClaim.Api.V23.Readout.IsReadOnly"/>).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])">
            <summary>
            Sets the fields of the readout.
            </summary>
            <param name="fields">Zero or more fields.</param>
            <remarks>
            When the readout is created, it has a single field, and this field has a label and units suitable for the type of readout created.
            For example, <see cref="M:SpaceClaim.Api.V23.Tool.CreateRadiusReadout(SpaceClaim.Api.V23.Geometry.Point)"/> creates a readout with an 'R' prefix and value formatted using a <see cref="T:SpaceClaim.Api.V23.LengthConverter"/>.
            <see cref="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])"/> can be used if a custom field is required, or if more than one field is required.
            <para/>
            Custom value formatting and parsing can be achieve by deriving a class from <see cref="T:SpaceClaim.Api.V23.ValueConverter"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Readout.TargetPoint">
            <summary>
            Gets or sets the target point for the readout measurement.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Readout.TargetPoint"/> is the "to point" for the measurement.
            <para/>
            When the readout is created, the target point is <b>null</b>, which means the readout is not displayed.
            The target point can be set to <b>null</b> at any time to hide the readout.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Readout.Value">
            <summary>
            Gets the current value of the measurement.
            </summary>
            <remarks>
            The value is in system units (meters or radians).
            <para/>
            The value is <b>null</b> if the tool is not enabled (see <see cref="P:SpaceClaim.Api.V23.Tool.IsEnabled"/>),
            or the <see cref="P:SpaceClaim.Api.V23.Readout.TargetPoint"/> is <b>null</b>,
            or the measurement is indeterminate (e.g. an angular measurement where the target point is at the origin).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Readout.IsReadOnly">
            <summary>
            Gets or sets whether the readout is read-only.
            </summary>
            <remarks>
            If the readout is read-only, the value is displayed in parentheses, and the readout cannot be edited.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Readout.UseLeader">
            <summary>
            Gets or sets whether the readout should use a leader for its presentation.
            </summary>
            <remarks>
            If <see cref="P:SpaceClaim.Api.V23.Readout.UseLeader"/> is <b>false</b>, the readout measurement determines the style of dimension line used.
            If <see cref="P:SpaceClaim.Api.V23.Readout.UseLeader"/> is <b>true</b>, a leader is used instead of a dimension line.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Readout.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Readout.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ReadoutField">
            <summary>
            Describes the label and formating of a readout field.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ReadoutField.#ctor(System.String,SpaceClaim.Api.V23.ValueConverter)">
            <summary>
            Constructs a readout field.
            </summary>
            <param name="label">The label.</param>
            <param name="converter">The value converter to use.</param>
            <remarks>
            If the <paramref name="label"/> is <b>null</b> or <see cref="F:System.String.Empty"/>, no label is displayed.
            <para/>
            If the <paramref name="converter"/> is <b>null</b>, a <see cref="T:SpaceClaim.Api.V23.DoubleConverter"/> is used.
            <para/>
            See <see cref="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])"/> for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ReadoutField.Label">
            <summary>
            Gets the label to be displayed next to the readout value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ReadoutField.Converter">
            <summary>
            Gets the converter to be used to format the value for display.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ToolGuideLayout">
            <summary>
            Describes the layout of a collection of tool guide buttons.
            </summary>
            <remarks>
            Tool guides are command buttons displayed inside the edge of the graphics window.
            They are created in groups of one or more buttons.
            <para/>
            As with buttons in the ribbon bar, each tool guide button is described by a <see cref="T:SpaceClaim.Api.V23.Command"/>,
            and properties of this command are applied to the button.
            <para/>
            If the command <see cref="P:SpaceClaim.Api.V23.Command.IsChecked"/>, the button is shown larger.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ToolGuideLayout.AddButton(SpaceClaim.Api.V23.Command)">
            <summary>
            Adds a single tool guide button.
            </summary>
            <param name="command">The command to be displayed as a button.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ToolGuideLayout.AddButtonGroup(System.Int32,SpaceClaim.Api.V23.Command[])">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ToolGuideLayout.AddButtonGroup(System.Int32,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ToolGuideLayout.AddButtonGroup(System.Int32,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})">
            <summary>
            Adds a group of tool guide buttons.
            </summary>
            <param name="nColumns">The number of columns in the group.</param>
            <param name="commands">Commands in the group, to be displayed as buttons.</param>
            <exception cref="T:System.ArgumentNullException">Button commands cannot be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The number of columns is greater than the number of commands.</exception>
            <remarks>
            The tool guide buttons are laid out in rows, which are <paramref name="nColumns"/> buttons wide.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ValueConverter">
            <summary>
            A converter for formatting and parsing a value.
            </summary>
            <remarks>
            See <see cref="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])"/> for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Readout.SetFields(SpaceClaim.Api.V23.ReadoutField[])"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ValueConverter.Format(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ValueConverter.TryParse(System.String,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DoubleConverter">
            <summary>
            A converter for unitless conversion of values.
            </summary>
            <remarks>
            This converter uses the <see cref="P:SpaceClaim.Api.V23.MeasurementUnit.System"/> measurement unit,
            so the <see cref="M:SpaceClaim.Api.V23.DoubleConverter.TryParse(System.String,System.Double@)"/> method also handles expressions, e.g. "(1 + 2) * 3 ^ (3/3 + 3)" = 243.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DoubleConverter.Format(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DoubleConverter.TryParse(System.String,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.LengthConverter">
            <summary>
            A converter for length values.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LengthConverter.#ctor(SpaceClaim.Api.V23.Window)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.LengthConverter.#ctor(SpaceClaim.Api.V23.Window,System.Boolean)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.LengthConverter.#ctor(SpaceClaim.Api.V23.Window,System.Boolean)">
            <summary>
            Constructs a length converter.
            </summary>
            <param name="window">The window that will provide units conversion.</param>
            <param name="absolute">Whether the formatted value is forced to be positive.</param>
            <remarks>
            When used with a <see cref="T:SpaceClaim.Api.V23.ReadoutField"/>, the <paramref name="window"/> should be the <see cref="T:SpaceClaim.Api.V23.Window"/> of the tool.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.LengthConverter.Format(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.LengthConverter.TryParse(System.String,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.AngleConverter">
            <summary>
            A converter for angle values.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.AngleConverter.#ctor(SpaceClaim.Api.V23.Window)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.AngleConverter.#ctor(SpaceClaim.Api.V23.Window,System.Boolean)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AngleConverter.#ctor(SpaceClaim.Api.V23.Window,System.Boolean)">
            <summary>
            Constructs an angle converter.
            </summary>
            <param name="window">The window that will provide units conversion.</param>
            <param name="absolute">Whether the formatted value is forced to be positive.</param>
            <remarks>
            When used with a <see cref="T:SpaceClaim.Api.V23.ReadoutField"/>, the <paramref name="window"/> should be the <see cref="T:SpaceClaim.Api.V23.Window"/> of the tool.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.AngleConverter.Format(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AngleConverter.TryParse(System.String,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AnchorCondition.Component">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IAnchorCondition.Component"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ConicalBend">
            <summary>
            A conical sheet metal bend master.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IConicalBend">
            <summary>
            A conical sheet metal bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IConicalBend.NominalInnerRadius">
            <summary>
            Gets the nominal inner radius.
            </summary>
            <remarks>
            The nominal inner radius is the radius mid-way along the conical bend at which the bend allowance applies.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CoordinateAxis">
            <summary>
            A coordinate axis master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateAxis.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ICoordinateAxis.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateAxis.AxisType">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoordinateAxis.Label">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICoordinateAxis">
            <summary>
            An axis of a coordinate system.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICoordinateAxis.AxisType">
            <summary>
            Gets the type of axis: X, Y, or Z.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICoordinateAxis.Label">
            <summary>
            Gets or sets the label to display.
            </summary>
            <remarks>
            If the value is <b>null</b> or <see cref="F:System.String.Empty"/>, the default label ('X', 'Y', or 'Z') will be used.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.AxisType">
            <summary>
            Describes a coordinate system axis.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AxisType.AxisX">
            <summary>
            The X axis.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AxisType.AxisY">
            <summary>
            The Y axis.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AxisType.AxisZ">
            <summary>
            The Z axis.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CylindricalBend">
            <summary>
            A cylindrical sheet metal bend master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CylindricalBend.VDieWidth">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CylindricalBend.ConvertToHem">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ICylindricalBend.ConvertToHem"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CylindricalBend.InnerRadius">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICylindricalBend">
            <summary>
            A cylindrical sheet metal bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICylindricalBend.VDieWidth">
            <summary>
            Gets or sets the width of the V-die to be used.
            </summary>
            <remarks>
            The V-die width is used with the bend table to determine the bend deduction and related bend allowance.
            <para/>
            If the V-die width is not set, the value is <b>null</b>.
            <para/>
            If the part does not have a bend table, or the bend table does not specify a bend deduction for the
            combination of thickness, bend angle, inner radius, and V-die width, then the bend deduction is calculated
            from the K-factor.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.SheetMetalAspect.BendTable"/> property can be used to get the path of the bend table file.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ICylindricalBend.ConvertToHem">
            <summary>
            Converts the cylindrical bend into a hem, if possible.
            </summary>
            <returns>The equivalent hem bend, or <b>null</b> if a conversion was not possible.</returns>
            <remarks>
            If it is not possible to convert the bend into a hem, <b>null</b> is returned.
            <para/>
            If the conversion is successful, a new hem bend is defined for the geometry.
            The original cylindrical bend definition is deleted and <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/> will now be <b>true</b>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomFormOptions">
            <summary>
            Specifies options used with the <see cref="M:SpaceClaim.Api.V23.CustomForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{System.Int32},System.Double,SpaceClaim.Api.V23.CustomFormOptions)"/> method.
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.CustomForm.Create(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Profile,System.Collections.Generic.ICollection{System.Int32},System.Double,SpaceClaim.Api.V23.CustomFormOptions)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomFormOptions.DraftAngle">
            <summary>
            Gets or sets the draft angle.
            </summary>
            <remarks>
            If the value is zero, no draft is applied.
            This is the default if no value is specified.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomFormOptions.TopRadius">
            <summary>
            Gets or sets the radius to be applied to all edges on the top side of the form.
            </summary>
            <remarks>
            If the value is zero, no rounds are applied.
            This is the default if no value is specified.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomFormOptions.BottomRadius">
            <summary>
            Gets or sets the radius to be applied to all edges on the bottom side of the form.
            </summary>
            <remarks>
            If the value is zero, no rounds are applied.
            This is the default if no value is specified.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomFormOptions.RemoveTopFace">
            <summary>
            Gets or sets whether to remove the top face of the form.
            </summary>
            <remarks>
            The default is <b>false</b> if no value is specified.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.FlatPatternAspect">
            <summary>
            The flat pattern aspect of a part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.FoldedPart">
            <summary>
            Gets the sheet metal part for which this part is a flat pattern.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.AnchorFace">
            <summary>
            Gets the anchor face of the unfolding operation.
            </summary>
            <remarks>
            The anchor face is a design face within this flat pattern part.
            <see cref="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedFace(SpaceClaim.Api.V23.DesignFace)"/> can be used to get the corresponding face in the folded sheet metal part.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedFace(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Gets the folded counterpart of a flat pattern face.
            </summary>
            <param name="unfoldedFace">The face within the flat pattern part.</param>
            <returns>The corresponding face in the folded sheet metal part.</returns>
            <remarks>
            If the face does not have a folded counterpart, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetUnfoldedFaces(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Gets the unfolded counterparts of a sheet metal face.
            </summary>
            <param name="foldedFace">The face within the folded sheet metal part.</param>
            <returns>The corresponding faces in the flat pattern part.</returns>
            <remarks>
            Faces of a sheet metal form may not have counterparts in the flat pattern part.
            This is determined by the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.FormStates"/> table and the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.DefaultFormState"/> value.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedEdge(SpaceClaim.Api.V23.DesignEdge)">
            <summary>
            Gets the folded counterpart of a flat pattern edge.
            </summary>
            <param name="unfoldedEdge">The edge within the flat pattern part.</param>
            <returns>The corresponding edge in the folded sheet metal part.</returns>
            <remarks>
            If the edge does not have a folded counterpart, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetUnfoldedEdges(SpaceClaim.Api.V23.DesignEdge)">
            <summary>
            Gets the unfolded counterparts of a sheet metal edge.
            </summary>
            <param name="foldedEdge">The edge within the folded sheet metal part.</param>
            <returns>The corresponding edges in the flat pattern part.</returns>
            <remarks>
            Edges of a sheet metal form may not have counterparts in the flat pattern part.
            This is determined by the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.FormStates"/> table and the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.DefaultFormState"/> value.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetBendFace(SpaceClaim.Api.V23.DesignCurve)">
            <summary>
            Gets the bend face which is annotated by a design curve.
            </summary>
            <param name="desCurve">The design curve.</param>
            <returns>The bend face; else <b>null</b> if <paramref name="desCurve"/> does not annotate a bend face.</returns>
            <remarks>
            The bend face is a design face within this flat pattern part.
            <see cref="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedFace(SpaceClaim.Api.V23.DesignFace)"/> can be used to get the corresponding face in the folded sheet metal part.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetBendFace(SpaceClaim.Api.V23.Note)">
            <summary>
            Gets the bend face which is annotated by a note.
            </summary>
            <param name="note">The note.</param>
            <returns>The bend face; else <b>null</b> if <paramref name="note"/> does not annotate a bend face.</returns>
            <remarks>
            The bend face is a design face within this flat pattern part.
            <see cref="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedFace(SpaceClaim.Api.V23.DesignFace)"/> can be used to get the corresponding face in the folded sheet metal part.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.BendFaces">
            <summary>
            Gets the bend faces of this flat pattern part.
            </summary>
            <remarks>
            The bend faces are design faces within this flat pattern part.
            <see cref="M:SpaceClaim.Api.V23.FlatPatternAspect.GetFoldedFace(SpaceClaim.Api.V23.DesignFace)"/> can be used to get the corresponding faces in the folded sheet metal part.
            <para/>
            Only bend faces on the "front" of the flat pattern are returned.
            Bend faces on the "back" are omitted.
            The "front" is the side identified by the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.AnchorFace"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.FailedBends">
            <summary>
            Gets the bends that could not be unfolded.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetBendLine(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Gets the bend line of a bend face.
            </summary>
            <param name="bendFace">The bend face in this flat pattern part.</param>
            <returns>The bend line, or <b>null</b> if the face is not a bend face.</returns>
            <remarks>
            The bend line is a straight line lying in the plane of the bend face.
            Its start and end points lie on the boundary of the face.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.PartialBends">
            <summary>
            Gets or sets a table of bends that are to be shown in a partially bent state.
            </summary>
            <remarks>
            By default, the flat pattern unfolds all bends to a completely flat state.
            A table can be supplied in order to show bends in a partially bent or completely bent state.
            <para/>
            The table is a dictionary supplying the bend state for each bend.
            The bend state is the proportion of completely bent, where 0 means completely flat, and 1 means completely bent.
            Bends not included in the table are assumed to be completely flat (state = 0).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.GetBendEffect(System.Collections.Generic.IDictionary{SpaceClaim.Api.V23.Bend,System.Double})">
            <summary>
            Gets the effect of setting partial bend states, without actually modifying the part.
            </summary>
            <param name="partialBends">Partial bend states to use.</param>
            <returns>
            Transforms that would be applied to design bodies in the flat pattern part.
            </returns>
            <remarks>
            The <paramref name="partialBends"/> table is a dictionary supplying the bend state for each bend.
            The bend state is the proportion of completely bent, where 0 means completely flat, and 1 means completely bent.
            Bends not included in the table are assumed to be completely flat (state = 0).
            <para/>
            This method returns a transform for each design body in the flat pattern part,
            except for design bodies of bends whose bend state is being changed from
            the current state returned by <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.PartialBends"/>.
            <para/>
            To illustrate, if <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.PartialBends"/> were passed directly to this method,
            the returned dictionary would contain all design bodies, since no bend states are changed,
            and the transform for each design body would be <see cref="F:SpaceClaim.Api.V23.Geometry.Matrix.Identity"/>, since there is no effect.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.DefaultFormState">
            <summary>
            Gets or set the default state for forms in the flat pattern.
            </summary>
            <remarks>
            The default state is used for any sheet metal forms that are not specified in the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.FormStates"/> table.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.FormStates">
            <summary>
            Gets or sets a table of sheet metal form states.
            </summary>
            <remarks>
            This table specifies the state for a sheet metal form in the flat pattern.
            Any forms not specified in this table will use the <see cref="P:SpaceClaim.Api.V23.FlatPatternAspect.DefaultFormState"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.BendNotes">
            <summary>
            Gets the notes that annotation bend angles.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.BendLines">
            <summary>
            Gets the design curves that indicate bend lines.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.FormLines">
            <summary>
            Gets the design curves that represent form outlines and locations.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatPatternAspect.TryGetUnfoldTransform(SpaceClaim.Api.V23.DesignBody,SpaceClaim.Api.V23.Geometry.Matrix@)">
            <summary>
            Gets the transform from the folded sheet metal part to an unfolded body.
            </summary>
            <param name="desBody">The unfolded design body.</param>
            <param name="transform">The transform from the folded part.</param>
            <returns><b>true</b> if a transform is defined; otherwise <b>false</b>.</returns>
            <remarks>
            The flat pattern part contains a collection of design bodies.
            <para/>
            Each flat region of the sheet metal part, which is not a sheet metal feature,
            appears as a separate design body transformed into its position in the flat pattern part.
            For such flat pattern bodies, this method returns <b>true</b>.
            <para/>
            For other design bodies in the flat pattern, where material was unbent or unformed to produce that body,
            no transformation is defined, and this method returns <b>false</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.FlatPatternAspect.LightweightNotes">
            <summary>
            Gets the lightweight notes on this flat pattern part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FlatPatternFormState">
            <summary>
            The state of a sheet metal form in the flat pattern.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FlatPatternFormState.Form">
            <summary>
            The form is present.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FlatPatternFormState.Outline">
            <summary>
            The outline of the form is present as a collection of design curves.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.FlatPatternFormState.None">
            <summary>
            The form is not present in the flat pattern.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MatingCondition.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IMatingCondition.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IMatingCondition.Parent">
            <summary>
            Gets the parent part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PartAspect">
            <summary>
            An aspect of a part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.RigidCondition.ComponentA">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRigidCondition.ComponentA"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.RigidCondition.ComponentB">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IRigidCondition.ComponentB"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISheetMetalAspect.GetFeature(SpaceClaim.Api.V23.IDesignFace)">
            <summary>
            Gets the sheet metal feature to which a face belongs.
            </summary>
            <param name="desFace">The face.</param>
            <returns>The sheet metal feature.</returns>
            <remarks>
            If the <paramref name="desFace"/> is one of the <see cref="P:SpaceClaim.Api.V23.ISheetMetalFeature.Faces"/> of a <see cref="T:SpaceClaim.Api.V23.ISheetMetalFeature"/>,
            this method returns that <see cref="T:SpaceClaim.Api.V23.ISheetMetalFeature"/>; otherwise <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Bends">
            <summary>
            Gets the bends in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Forms">
            <summary>
            Gets the forms in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Beads">
            <summary>
            Gets the beads in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Gussets">
            <summary>
            Gets the gussets in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Hems">
            <summary>
            Gets the hems in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Markers">
            <summary>
            Gets the markers in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.CrossBreaks">
            <summary>
            Gets the cross breaks in this sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.Corners">
            <summary>
            Gets the corners in this sheet metal part.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISheetMetalAspect.GetOppositeFace(SpaceClaim.Api.V23.IDesignFace)">
            <summary>
            Gets the opposite face of a face.
            </summary>
            <param name="desFace">A face.</param>
            <returns>The opposite face; else <b>null</b> if there is no opposite face.</returns>
            <remarks>
            The opposite face is the face separated by the sheet metal thickness.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISheetMetalAspect.TryApplyNote(SpaceClaim.Api.V23.INote,SpaceClaim.Api.V23.Lettering,SpaceClaim.Api.V23.IDesignFace@)">
            <summary>
            Applies a note as sheet metal lettering, if possible.
            </summary>
            <param name="note">A note.</param>
            <param name="type">The type of lettering to create.</param>
            <param name="substrate">The face on which the lettering was applied.</param>
            <returns><b>true</b> if successful; otherwise <b>false</b>.</returns>
            <remarks>
            If the note lies in a planar sheet metal face, the lettering is applied,
            and the <paramref name="substrate"/> face is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalAspect.LightweightNotes">
            <summary>
            Gets lightweight notes on this sheet metal part.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalAspect">
            <summary>
            The sheet metal aspect of a part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Thickness">
            <summary>
            Gets or sets the thickness of the sheet metal part.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.InnerRadiusDefinition">
            <summary>
            Gets or sets the inner radius definition.
            </summary>
            <remarks>
            If the <see cref="P:SpaceClaim.Api.V23.ValueDefinition.Type"/> is <see cref="F:SpaceClaim.Api.V23.ValueType.Relative"/>, the <see cref="P:SpaceClaim.Api.V23.ValueDefinition.Value"/>
            is the proportion of the <see cref="P:SpaceClaim.Api.V23.SheetMetalAspect.Thickness"/>.
            For example, a value of 0.5 means that the inner radius should be half the thickness.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.InnerRadius">
            <summary>
            Gets the inner radius for bends in the sheet metal part.
            </summary>
            <remarks>
            This property is the default inner radius for bends in the sheet metal part.
            The <see cref="P:SpaceClaim.Api.V23.CylindricalBend.InnerRadius"/> property of a <see cref="T:SpaceClaim.Api.V23.CylindricalBend"/> can be used to override this value.
            <para/>
            <see cref="P:SpaceClaim.Api.V23.SheetMetalAspect.InnerRadiusDefinition"/> can be used to set the inner radius.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.KFactor">
            <summary>
            Gets or sets the K-factor of the sheet metal part.
            </summary>
            <remarks>
            The K-factor must be in the range, <c>0.25 &lt;= k &lt;= 0.5</c>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Bends">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Bends"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Forms">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Forms"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Beads">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Beads"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Gussets">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Gussets"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Hems">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Hems"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Markers">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Markers"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.CrossBreaks">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.CrossBreaks"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.Corners">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.Corners"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.GetFeature(SpaceClaim.Api.V23.DesignFace)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ISheetMetalAspect.GetFeature(SpaceClaim.Api.V23.IDesignFace)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.GetOppositeFace(SpaceClaim.Api.V23.DesignFace)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ISheetMetalAspect.GetOppositeFace(SpaceClaim.Api.V23.IDesignFace)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.TryApplyNote(SpaceClaim.Api.V23.Note,SpaceClaim.Api.V23.Lettering,SpaceClaim.Api.V23.DesignFace@)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ISheetMetalAspect.TryApplyNote(SpaceClaim.Api.V23.INote,SpaceClaim.Api.V23.Lettering,SpaceClaim.Api.V23.IDesignFace@)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.LightweightNotes">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalAspect.LightweightNotes"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalAspect.BendTable">
            <summary>
            Gets or sets the name of the bend table used by this sheet metal part.
            </summary>
            <remarks>
            The bend table is used when the <see cref="P:SpaceClaim.Api.V23.CylindricalBend.VDieWidth"/> is set for a <see cref="T:SpaceClaim.Api.V23.CylindricalBend"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.Unfold(SpaceClaim.Api.V23.DesignFace)">
            <summary>
            Unfolds the sheet metal part.
            </summary>
            <param name="anchorFace">The anchor face to unfold about.</param>
            <returns>The corresponding anchor face in the flat pattern part.</returns>
            <remarks>
            A unfolded flat pattern part is created for this sheet metal part,
            or if an unfolded part already exists, it is updated.
            </remarks>
            <exception cref="T:System.InvalidOperationException">It was not possible to unfold the part.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.Delete">
            <summary>
            Remove the sheet metal behavior from the part.
            </summary>
            <remarks>
            Sheet metal behavior can be restored using <see cref="M:SpaceClaim.Api.V23.Part.ConvertToSheetMetal"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateBends(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Point,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.BendSpecification},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignCurve})">
            <summary>
            Creates sheet metal bends.
            </summary>
            <param name="face">The face in which to create bends.</param>
            <param name="anchorPoint">An anchor point to indicate which region of the <paramref name="face"/> stays fixed.</param>
            <param name="bendSpecs">A collection of bend specifications.</param>
            <param name="desCurvesToMove">Design curves to be moved with the faces in which they lie.</param>
            <returns>A collection of new bends.</returns>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
            <remarks>
            This methods creates sheet metal bends within a face.
            <para/>
            The <paramref name="anchorPoint"/> indicates which region of the <paramref name="face"/> stays fixed as bends are applied.
            <para/>
            If the bend angle is positive, the bend is upwards, i.e. towards the face normal.
            <para/>
            As bends are applied, faces will move.
            <paramref name="desCurvesToMove"/> specifies design curves that should be moved with the faces in which they lie.
            If <paramref name="desCurvesToMove"/> is <b>null</b>, any suitable design curves in the <paramref name="face"/> will be moved,
            otherwise only those design curves specified in <paramref name="desCurvesToMove"/> will be considered.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateMissingBends(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignEdge},System.Double)">
            <summary>
            Creates bends in place of crease edges.
            </summary>
            <param name="creaseEdges">Edges in a sheet metal body where bends need to be applied.</param>
            <param name="innerRadius">The inner radius of the bend.</param>
            <returns>Any bends created.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateRips(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignEdge})">
            <summary>
            Creates rips in place of crease edges.
            </summary>
            <param name="creaseEdges">Edges in a sheet metal body to be ripped.</param>
            <returns>Created rip faces.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.RepairBends(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DesignFace})">
            <summary>
            Creates bends in a sheet metal body after repairing the model.
            </summary>
            <param name="bendFaces">Bend faces to be repaired in a sheet metal body.</param>
            <returns>Any bends created.</returns>
            <remarks>
            The method looks for situations where the shape of a bend is incomplete,
            but the model can be repaired to create a bend.
            An example is where there is a cylindrical face on the outside, but a crease edge on the inside.
            <para/>
            <paramref name="bendFaces"/> may contain all faces of the body. Any faces which cannot be repaired will be ignored. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.GetCreaseEdges(SpaceClaim.Api.V23.DesignBody)">
            <summary>
            Gets the edges in a sheet metal body where bends need to be applied.
            </summary>
            <param name="desBody">The sheet metal body.</param>
            <returns>The sharp edges in the sheet metal body.</returns>
            <remarks>
            A crease edge cannot be unfolded, because there is no bend present.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateInternalBead(SpaceClaim.Api.V23.DesignFace,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve},System.Double,System.Double)">
            <summary>
            Creates a sheet metal bead, which is internal to a face.
            </summary>
            <param name="substrate">The face in which to create the bead.</param>
            <param name="path">The path for the bead to follow.</param>
            <param name="beadRadius">The radius of the bead.</param>
            <param name="edgeRadius">The radius to be applied to the edges of the bead.</param>
            <returns>A sheet metal bead.</returns>
            <remarks>
            The trimmed curves in the <paramref name="path"/> should form a smooth (tangent continuous) path with no self-intersections.
            <para/>
            The bead must lie within the boundary of the <paramref name="substrate"/> face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreatePartitionBead(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,System.Double,System.Double)">
            <summary>
            Creates a straight sheet metal bead across a face.
            </summary>
            <param name="substrate">The face in which to create the bead.</param>
            <param name="pointInFace">A point in the substrate face to locate the bead.</param>
            <param name="dir">The direction of the bead within the face.</param>
            <param name="beadRadius">The radius of the bead.</param>
            <param name="edgeRadius">The radius to be applied to the edges of the bead.</param>
            <returns>A sheet metal bead.</returns>
            <remarks>
            A bead is created, which passes through <paramref name="pointInFace"/> in the orientation of <paramref name="dir"/> within the face,
            and extends in both directions until it meets the boundary of the face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateJoggle(SpaceClaim.Api.V23.CylindricalBend,SpaceClaim.Api.V23.CylindricalBend)">
            <summary>
            Creates a sheet metal joggle from two cylindrical bends.
            </summary>
            <param name="bendA">The first cylindrical bend.</param>
            <param name="bendB">The second cylindrical bend.</param>
            <returns>A sheet metal joggle.</returns>
            <remarks>
            The two cylindrical bends must be parallel and bent in opposite directions.
            <para/>
            This operation can be reversed using the <see cref="M:SpaceClaim.Api.V23.JoggleBend.TryConvertToCylindrical(SpaceClaim.Api.V23.CylindricalBend@,SpaceClaim.Api.V23.CylindricalBend@)"/> method
            on the <see cref="T:SpaceClaim.Api.V23.JoggleBend"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateMarker(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a sheet metal marker in a planar face.
            </summary>
            <param name="face">The planar design face in which the marker should live.</param>
            <param name="location">The location of the marker within the plane of the design face.</param>
            <returns>A sheet metal marker.</returns>
            <exception cref="T:System.ArgumentException">The face must be planar and not a side face.</exception>
            <remarks>
            The <paramref name="face"/> must be planar and not a side face.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateHem(SpaceClaim.Api.V23.DesignEdge,SpaceClaim.Api.V23.HemStyle)">
            <summary>
            Creates a hem bend along a straight edge.
            </summary>
            <param name="edge">The straight edge for the hem.</param>
            <param name="style">The style of the hem.</param>
            <returns>A hem bend.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.CreateHem(SpaceClaim.Api.V23.DesignEdge,SpaceClaim.Api.V23.HemStyle,SpaceClaim.Api.V23.Geometry.Interval)">
            <summary>
            Creates a hem bend along a straight edge, limited to parametric bounds.
            </summary>
            <param name="edge">The straight edge for the hem.</param>
            <param name="style">The style of the hem.</param>
            <param name="bounds">The bounds of the hem.</param>
            <returns>A hem bend.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalAspect.IdentifyForms(System.Boolean)">
            <summary>
            Identifies sheet metal forms.
            </summary>
            <param name="ignoreCutouts">Ignore cutouts when <b>true</b>.</param>
            <returns>A collection of identified <see cref="T:SpaceClaim.Api.V23.SheetMetalForm">SheetMetalForm</see>s.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.BendSpecification">
            <summary>
            The specification for a sheet metal bend.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.BendSpecification.Create(SpaceClaim.Api.V23.Geometry.ITrimmedCurve,System.Double,System.Double,System.Nullable{System.Double})">
            <summary>
            Constructs a sheet metal bend specification.
            </summary>
            <param name="bendLine">The bend line, which should cut across the face.</param>
            <param name="angle">The bend angle, where positive is upwards, i.e. towards the face normal.</param>
            <param name="innerRadius">The inner radius.</param>
            <param name="bendAllowanceOverride">The optional bend allowance override.</param>
            <returns>A bend specification.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendSpecification.BendLine">
            <summary>
            Gets the bend line.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendSpecification.Angle">
            <summary>
            Gets the bend angle.
            </summary>
            <remarks>
            This value will become the <see cref="P:SpaceClaim.Api.V23.IHasBendAngle.Angle"/> of the bend.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendSpecification.InnerRadius">
            <summary>
            Gets the inner radius of the bend.
            </summary>
            <remarks>
            This value will become the <see cref="P:SpaceClaim.Api.V23.IHasBendRadius.InnerRadius"/> of the bend.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.BendSpecification.BendAllowanceOverride">
            <summary>
            Gets the optional bend allowance override.
            </summary>
            <remarks>
            This value will become the <see cref="P:SpaceClaim.Api.V23.IBend.BendAllowanceOverride"/> of the bend.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Bend">
            <summary>
            A sheet metal bend master.
            </summary>
            <remarks>
            There are several types of sheet metal bend:
            <see cref="T:SpaceClaim.Api.V23.ICylindricalBend"/>,
            <see cref="T:SpaceClaim.Api.V23.IConicalBend"/>,
            <see cref="T:SpaceClaim.Api.V23.IJoggleBend"/> and
            <see cref="T:SpaceClaim.Api.V23.IHemBend"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bend.ToDeduction(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Converts a bend allowance into a bend deduction.
            </summary>
            <param name="bendAllowance">The bend allowance to convert.</param>
            <param name="innerRadius">The inner radius of the bend.</param>
            <param name="thickness">The material thickness.</param>
            <param name="bendAngle">The bend angle.</param>
            <returns>The corresponding bend deduction</returns>
            <remarks>
            Bend allowance and bend deduction are related by the equation:
            <para/>
            <c>bend deduction = 2 * setback - bend allowance</c>
            <para/>
            The static methods <see cref="M:SpaceClaim.Api.V23.Bend.ToDeduction(System.Double,System.Double,System.Double,System.Double)"/> and <see cref="M:SpaceClaim.Api.V23.Bend.ToAllowance(System.Double,System.Double,System.Double,System.Double)"/> can be used to convert between these quantities.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Bend.ToAllowance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Converts a bend deduction into a bend allowance.
            </summary>
            <param name="bendDeduction">The bend deduction to convert.</param>
            <param name="innerRadius">The inner radius of the bend.</param>
            <param name="thickness">The material thickness.</param>
            <param name="bendAngle">The bend angle.</param>
            <returns>The corresponding bend allowance</returns>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Bend.ToDeduction(System.Double,System.Double,System.Double,System.Double)"/>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBend">
            <summary>
            A sheet metal bend.
            </summary>
            <remarks>
            There are several types of sheet metal bend:
            <see cref="T:SpaceClaim.Api.V23.ICylindricalBend"/>,
            <see cref="T:SpaceClaim.Api.V23.IConicalBend"/>,
            <see cref="T:SpaceClaim.Api.V23.IJoggleBend"/> and
            <see cref="T:SpaceClaim.Api.V23.IHemBend"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBend.BendAllowance">
            <summary>
            Gets the bend allowance for the bend.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBend.BendAllowanceOverride">
            <summary>
            Gets or sets the optional bend allowance override.
            </summary>
            <remarks>
            If a bend allowance override is not <b>null</b>, the override is used instead of the <see cref="P:SpaceClaim.Api.V23.IBend.BendAllowance"/>
            when the sheet metal part is unfolded to produce the flat pattern.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasBendRadius">
            <summary>
            A sheet metal bend that has a bend radius.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasBendRadius.InnerRadius">
            <summary>
            Gets or sets the inner radius of the bend.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasBendAngle">
            <summary>
            A sheet metal bend that has a bend angle.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasBendAngle.Angle">
            <summary>
            Gets the angle of the bend.
            </summary>
            <remarks>
            The bend angle is the angle through which the material is bent.
            The measured angle between the adjacent flat regions is the complement of the bend angle.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.IHasBendAngle.SetAngle(System.Double,SpaceClaim.Api.V23.IDesignFace)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasBendAngle.SetAngle(System.Double,SpaceClaim.Api.V23.IDesignFace)">
            <summary>
            Sets the angle of the bend.
            </summary>
            <param name="angle">The bend angle.</param>
            <param name="referenceFace">An optional stationary reference face.</param>
            <exception cref="T:System.ArgumentException">The value given for <paramref name="angle"/> is not valid.</exception>
            <exception cref="T:System.ArgumentException">The specified <paramref name="referenceFace"/> is not valid.</exception>
            <exception cref="T:System.InvalidOperationException">The bend <paramref name="angle"/> cannot be modified.</exception>
            <remarks>
            If <em>referenceFace</em> is null, then the stationary face will be determined automatically. 
            </remarks>
            <seealso cref="P:SpaceClaim.Api.V23.IHasBendAngle.Angle"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SheetMetalForm">
            <summary>
            A sheet metal form master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SheetMetalForm.Copy(SpaceClaim.Api.V23.DesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ISheetMetalForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalForm.Substrate">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISheetMetalForm.Substrate"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SheetMetalForm.Profile">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISheetMetalForm">
            <summary>
            A sheet metal form.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISheetMetalForm.Copy(SpaceClaim.Api.V23.IDesignFace,SpaceClaim.Api.V23.Geometry.Frame)">
            <summary>
            Creates a copy of the form at a new location.
            </summary>
            <param name="substrate">A planar substrate face.</param>
            <param name="frame">The position and orientation of the form within the substrate face.</param>
            <returns>A copy of the form.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalForm.Substrate">
            <summary>
            Gets the face in which the form lives.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISheetMetalForm.Profile">
            <summary>
            Gets the form profile.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeld.WeldPoints">
            <summary>
            Gets the weld points for this spot weld.
            </summary>
            <remarks>
            There are two or more weld points.
            <para/>
            Each entry contains the face in which the weld point lies, and the location of the weld point in the surface of that face.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.SpotWeldJoint">
            <summary>
            A spot weld joint master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISpotWeldJoint.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.DesignFaces">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.SpotWelds">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SpotWeldJoint.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SpotWeldJoint.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.SpotWeldJoint.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SpotWeldJoint.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISpotWeldJoint">
            <summary>
            A spot weld joint.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISpotWeldJoint.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISpotWeldJoint.DesignFaces">
            <summary>
            Gets the design faces involved in this joint.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISpotWeldJoint.SpotWelds">
            <summary>
            Gets the spots welds in this joint.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Panel">
            <summary>
            A built-in interaction panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Structure">
            <summary>
            The structure panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Selection">
            <summary>
            The selection panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Layers">
            <summary>
            The layers panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Groups">
            <summary>
            The groups panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Views">
            <summary>
            The views panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Options">
            <summary>
            The options panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Properties">
            <summary>
            The properties panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.Appearance">
            <summary>
            The appearance panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.ReplayEditor">
            <summary>
            The replay editor panel.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Panel.ScriptEditor">
            <summary>
            The script editor panel.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ProgressTracker">
            <summary>
            Provides access to the progress indicator.
            </summary>
            <remarks>
            The progress tracker object must be disposed at the end of the operation.
            In C#, this would typically be done with a <b>using</b> statement:
            <code lang="C++">
            <![CDATA[
            const int nSteps = 10;
            using (var tracker = ProgressTracker.Create(nSteps))
            	for (int i = 1; i <= nSteps; i++) {
            		tracker.Message = string.Format("Calculating step {0}.", i);
            		Thread.Sleep(1000); // the actual operation would go here
            		tracker.Progress = i;
            	}
            ]]>
            </code>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ProgressTracker.Create(System.Int32)">
            <summary>
            Creates a progress tracker.
            </summary>
            <param name="stepCount">Number of steps.</param>
            <returns>A progress tracker.</returns>
            <remarks>
            This overload creates a progress tracker with a default delay time of 0.5 seconds.
            <para/>
            See <see cref="M:SpaceClaim.Api.V23.ProgressTracker.Create(System.Int32,System.Int32)"/> for more information about the delay time.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ProgressTracker.Create(System.Int32,System.Int32)">
            <summary>
            Creates a progress tracker.
            </summary>
            <param name="stepCount">Number of steps.</param>
            <param name="delay">Delay in milliseconds before the progress indicator is displayed.</param>
            <returns>A progress tracker.</returns>
            <remarks>
            The <paramref name="stepCount"/> can be zero.
            <para/>
            The <paramref name="delay"/> is the time in milliseconds before the progress indicator is displayed.
            The delay is to prevent the progress indicator from flashing up if the operation does not take long.
            A <paramref name="delay"/> of zero will display the progress indicator immediately.
            <para/>
            It is not necessary to call <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> on the returned progress tracker,
            since this has already been done (<see cref="M:SpaceClaim.Api.V23.Api.IsKeptAlive(SpaceClaim.Api.V23.IKeepAliveObject)"/> is <b>true</b>).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ProgressTracker.CreateParallel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a progress tracker.
            </summary>
            <param name="stepCount">Number of steps.</param>
            <param name="delay">Delay in milliseconds before the progress indicator is displayed.</param>
            <param name="numParallelTasks">The number of tasks to be displayed.</param>
            <returns>A progress tracker.</returns>
            <remarks>
            The <paramref name="stepCount"/> can be zero.
            <para/>
            The <paramref name="delay"/> is the time in milliseconds before the progress indicator is displayed.
            The delay is to prevent the progress indicator from flashing up if the operation does not take long.
            A <paramref name="delay"/> of zero will display the progress indicator immediately.
            <para/>
            It is not necessary to call <see cref="M:SpaceClaim.Api.V23.Api.KeepAlive(SpaceClaim.Api.V23.IKeepAliveObject,System.Boolean)"/> on the returned progress tracker,
            since this has already been done (<see cref="M:SpaceClaim.Api.V23.Api.IsKeptAlive(SpaceClaim.Api.V23.IKeepAliveObject)"/> is <b>true</b>).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ProgressTracker.UsePopupWindow">
            <summary>
            Gets or sets whether to use the progress popup window.
            </summary>
            <remarks>
            If <b>true</b>, the progress popup window will be shown approximately 3 seconds after a long operation has begun.
            <para/>
            The default value is <b>false</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ProgressTracker.Title">
            <summary>
            Gets or sets the progress title.
            </summary>
            <remarks>
            The progress title appears in the progress popup window, which is used if <see cref="P:SpaceClaim.Api.V23.ProgressTracker.UsePopupWindow"/> is <b>true</b>.
            If the title is empty, then the current command name will be displayed.
            <para/>
            The default value is the empty string.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ProgressTracker.Message">
            <summary>
            Gets or sets the progress message.
            </summary>
            <remarks>
            The progress message can be set once to describe the entire operation,
            or it can be changed during the operation to indicate stages in the operation.
            <para/>
            The default value is the empty string.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ProgressTracker.StepCount">
            <summary>
            Gets the number of steps.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ProgressTracker.Progress">
            <summary>
            Gets or sets the progress made so far.
            </summary>
            <remarks>
            The progress is a value in the range <c>[0, <see cref="P:SpaceClaim.Api.V23.ProgressTracker.StepCount"/>]</c>, inclusive.
            <para/>
            The initial value is 0 when the progress tracker is created.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ProgressTracker.Dispose">
            <summary>
            Disposes the progress tracker, which hides the progress indicator.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RadialMenuEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Application.RadialMenuOpening"/> event.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomObject">
            <summary>
            A custom object master.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.CustomWrapper`1"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.CustomWrapper`1"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomObject.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ICustomObject.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomObject.Type">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomObject.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomObject.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomObject.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomObject.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomObject.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICustomObject">
            <summary>
            A custom object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICustomObject.Parent">
            <summary>
            Gets the parent of the custom object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICustomObject.Type">
            <summary>
            Gets the type of the custom object.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICustomObjectParent">
            <summary>
            The parent of a custom object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICustomObjectParent.Master">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICustomObjectParent.CustomObjects">
            <summary>
            Gets the custom object children.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ICustomObjectParentMaster">
            <summary>
            The parent of a custom object master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ICustomObjectParentMaster.CustomObjects">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.SerializableFields">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.ValidationProperties">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.ValidateMethods">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.Subject">
            <summary>
            Gets the custom object behind this custom wrapper.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName">
            <summary>
            Gets the default display name to use in the structure panel.
            </summary>
            <remarks>
            Custom objects are listed in the structure panel only if they have a <i>display image</i> and a <i>display name</i>.
            <para/>
            Display images are specified as an index within the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.ImageList"/>,
            which is a static property listing the images used by this custom object type.
            By default, the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.ImageList"/> is empty, but you can declare a static
            property of the same name that hides the inherited property using the <b>new</b> modifier.
            <para/>
            Images for the structure panel should be 16x16 in size.
            <para/>
            The <i>display image</i> is determined by the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.DisplayImage"/> property,
            which specifies the image index to use when the custom object is visible,
            along with the image index to use when it is hidden (these two can be the same).
            If the image index is within the range of the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.ImageList"/>, the image is used,
            otherwise the custom object is not listed in the structure panel.
            <para/>
            Since the default <see cref="P:SpaceClaim.Api.V23.CustomWrapper.ImageList"/> is empty, by default custom objects are not listed in the structure panel.
            <para/>
            The default <see cref="P:SpaceClaim.Api.V23.CustomWrapper.DisplayImage"/> indices are zero for both visible and hidden states,
            so if your declared <see cref="P:SpaceClaim.Api.V23.CustomWrapper.ImageList"/> contains a single image, there is no need
            to set the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.DisplayImage"/> property.
            <para/>
            The <i>display name</i> is specified by the <see cref="P:SpaceClaim.Api.V23.CustomObject.Name"/> of the custom object,
            but if that is empty, the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName"/> is used.
            If the resulting name is empty, the custom object is not listed in the structure panel.
            <para/>
            By default, the <see cref="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName"/> is empty,
            which means only custom objects with a name are listed in the structure panel.
            To specify a default display name,
            you should declare a static property of the same name that hides the inherited property using the <b>new</b> modifier.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.GroupName">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.ImageList">
            <summary>
            Gets the images used by this custom object type.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.DisplayImage">
            <summary>
            Gets or sets the image to be used when the custom object is visible or hidden.
            </summary>
            <remarks>
            <inheritdoc cref="P:SpaceClaim.Api.V23.CustomWrapper.DefaultDisplayName"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.SelectionOrder">
            <summary>
            Gets or sets the selection ordering method. 
            </summary>
            <remarks>SelectionOrder.ForceTop is the default.</remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.Rendering">
            <summary>
            Gets or sets the rendering for the custom object.
            </summary>
            <remarks>
            If the custom object has no rendering, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.Commit">
            <summary>
            Commits changes made to fields in a custom object wrapper.
            </summary>
            <remarks>
            This method should be called after fields in the wrapper object have been modified.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.TryGetTransformFrame(SpaceClaim.Api.V23.Geometry.Frame@,SpaceClaim.Api.V23.Geometry.Transformations@)">
            <summary>
            Gets the transform frame for the custom object.
            </summary>
            <param name="frame">The transform frame.</param>
            <param name="transformations">Allowable transformations.</param>
            <returns><b>true</b> if the custom object has a transform frame; otherwise <b>false</b>.</returns>
            <remarks>
            Override this method to allow the custom object to be used with the Move tool.
            The position and orientation of the transform frame is used for the Move tool handles.
            <para/>
            <paramref name="transformations"/> is a bit field that specifies which transformations are suitable for this object.
            This is a hint to the Move tool for which handles to display.
            If multiple objects are selected, each object may offer different transformations,
            and in this case, the union of Move tool handles is presented.
            This means <see cref="M:SpaceClaim.Api.V23.CustomWrapper.Transform(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)"/> can be called with a transformation that may be unsuitable for this object.
            You can skip such a transform, or adjust it to make it suitable.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.TryGetPositionOrigin(SpaceClaim.Api.V23.Geometry.Point@)">
            <summary>
            Gets the position origin for the custom object.
            </summary>
            <param name="origin">The position origin.</param>
            <returns><b>true</b> if the custom object has a position origin; otherwise <b>false</b>.</returns>
            <remarks>
            Override this method to specify a position origin to be used with the Move tool.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.Transform(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Transforms the custom object.
            </summary>
            <param name="trans">The transformation to apply.</param>
            <param name="final">A flag indicating whether this is the final transform.</param>
            <remarks>
            Override this method if the custom object supports being transformed.
            The default implementation does nothing.
            <para/>
            This method is used by the Move tool.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.TryGetTransformPath(SpaceClaim.Api.V23.Geometry.ITrimmedCurve@)">
            <summary>
            Returns a reference path for transformation of other objects
            </summary>
            <param name="trimmedCurve"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomWrapper`1">
            <summary>
            The base class for custom object wrappers.
            </summary>
            <typeparam name="TWrapper">The type of the derived wrapper class.</typeparam>
            <remarks>
            A custom wrapper provides access to the functionality of a custom object.
            <para/>
            To create a new type of custom object, a class derived from <see cref="T:SpaceClaim.Api.V23.CustomWrapper`1"/> should be created.
            <para/>
            The fields of the custom wrapper are automatically stored in the custom object.
            By default, all public and private fields are serialized.
            Any fields that do not need to be serialized should be marked with the <see cref="T:System.NonSerializedAttribute"/> attribute.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper`1.SerializableFields">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper`1.ValidationProperties">
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper`1.ValidateMethods">
            <exclude />
        </member>
        <member name="F:SpaceClaim.Api.V23.CustomWrapper`1.Type">
            <summary>
            Gets the custom object type for this wrapper class.
            </summary>
            <remarks>
            A custom object has a <see cref="P:SpaceClaim.Api.V23.ICustomObject.Type"/> property,
            which is set by the wrapper when the custom object is created.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.#ctor(SpaceClaim.Api.V23.CustomObject)">
            <summary>
            Constructs a wrapper for an existing custom object.
            </summary>
            <param name="subject">The custom object.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.#ctor(SpaceClaim.Api.V23.ICustomObjectParentMaster)">
            <summary>
            Constructs a new custom object and a wrapper for it.
            </summary>
            <param name="parent">The parent <see cref="T:SpaceClaim.Api.V23.Part"/> or <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/>.</param>
            <remarks>
            Custom objects created using this constructor are persisted (saved) to the .scdoc. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.#ctor(SpaceClaim.Api.V23.ICustomObjectParentMaster,System.Boolean)">
            <summary>
            Constructs a new custom object and a wrapper for it.
            </summary>
            <param name="parent">The parent <see cref="T:SpaceClaim.Api.V23.Part"/> or <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/>.</param>
            <param name="persist">Whether the custom object should be persisted (saved) to the .scdoc.</param>
            <remarks>
            Custom objects should normally be persisted to the .scdoc (<em>persist = true</em>). An exception is when they are used solely for graphics and selection purposes, and can be easily regenerated. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.Initialize">
            <summary>
            Initializes this wrapper.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomWrapper`1.DoesPersist">
            <summary>
            Value determines if custom wrapper is serialized to scdoc.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.GetWrapper(SpaceClaim.Api.V23.CustomObject)">
            <summary>
            Gets the wrapper for the custom object.
            </summary>
            <param name="subject">The custom object.</param>
            <returns>A wrapper; else <b>null</b> if custom object is not suitable for this wrapper type.</returns>
            <remarks>
            If <paramref name="subject"/> is <b>null</b>, or it is a custom object of the wrong <see cref="F:SpaceClaim.Api.V23.CustomWrapper`1.Type"/>,
            then a <b>null</b> wrapper is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.GetChildren(SpaceClaim.Api.V23.ICustomObjectParentMaster)">
            <summary>
            Gets custom wrappers for child custom objects.
            </summary>
            <param name="parent">The parent <see cref="T:SpaceClaim.Api.V23.Part"/> or <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/>.</param>
            <returns>A collection of custom wrappers.</returns>
            <remarks>
            This method gets custom object children of this <see cref="F:SpaceClaim.Api.V23.CustomWrapper`1.Type"/>, and returns their custom wrappers.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomWrapper`1.Copy">
            <summary>
            Copies the custom object.
            </summary>
            <returns></returns>
            <remarks>
            Override this method if the custom object supports being copied.
            The default implementation returns <b>null</b>.
            <para/>
            This method is used by the Move tool if the Ctrl key is down when dragging.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewDisplayName">
            <summary>
            The display name for a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewDisplayName.Text">
            <summary>
            Gets the display name text.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LongDisplayName">
            <summary>
            An object specifying that the long name should be used as the display name for a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LongDisplayName.Create(SpaceClaim.Api.V23.DrawingView)">
            <summary>
            Creates a long display name.
            </summary>
            <param name="view">The view to which the display name applies.</param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.LongDisplayName.Text">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ShortDisplayName">
            <summary>
            An object specifying that the short name should be used as the display name for a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ShortDisplayName.Create(SpaceClaim.Api.V23.DrawingView)">
            <summary>
            Creates a short display name.
            </summary>
            <param name="view">The view to which the display name applies.</param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.ShortDisplayName.Text">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomDisplayName">
            <summary>
            An object specifying that a custom name should be used as the display name for a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomDisplayName.Create(SpaceClaim.Api.V23.DrawingView,System.String)">
            <summary>
            Creates a custom display name.
            </summary>
            <param name="view">The view to which the display name applies.</param>
            <param name="name">The custom name to use.</param>
            <returns></returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomDisplayName.Name">
            <summary>
            Gets or sets the custom name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomDisplayName.Text">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.LocationPoint">
            <summary>
            Specifies a location within a rectangular block of annotation.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ApplicationVersion">
            <summary>
            The version information for the application.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ApplicationVersion.MajorReleaseNumber">
            <summary>
            Gets the major release number of the application.
            </summary>
            <remarks>
            The major release number is a simple integer that increases for each major release of SpaceClaim,
            but which is the same for each minor release and service pack.
            Here are some example minor release numbers:
            <para/>
            SpaceClaim 2014 = 11
            SpaceClaim 2015 = 12
            SpaceClaim 2016 = 17
            <para/>
            Note that there was a jump from 12 to 17 at SpaceClaim 2016 to align with ANSYS release numbers. 
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ApplicationVersion.MinorReleaseNumber">
            <summary>
            Gets the minor release number of the application.
            </summary>
            <remarks>
            The minor release number is a simple integer that increases for each minor release of SpaceClaim,
            but which is the same for each service pack.
            Here are some example minor release numbers:
            <para/>
            SpaceClaim 2016 = 0
            SpaceClaim 2016.1 = 1
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ApplicationVersion.ServicePack">
            <summary>
            Get the service pack of the application.
            </summary>
            <remarks>
            The initial release has a service pack of zero.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ApplicationWindowState">
            <summary>
            Specifies the location and size to use when starting a session.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.StartupOptions.WindowState"/> for more information.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.InteractionContext">
            <summary>
            An interaction context.
            </summary>
            <remarks>
            An interaction context allows you to work in a different coordinate space from that of the window scene.
            <para/>
            Whenever an <see cref="T:SpaceClaim.Api.V23.Instance"/> is involved, there is a transformation from the coordinate system of
            the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> to the coordinate system in which the instance lives.
            For example, a <see cref="T:SpaceClaim.Api.V23.Component"/> transforms a template <see cref="T:SpaceClaim.Api.V23.Part"/> into assembly-space,
            and a <see cref="T:SpaceClaim.Api.V23.DrawingView"/> transforms a template <see cref="T:SpaceClaim.Api.V23.Part"/> into paper-space.
            <para/>
            If the user selects a design edge in a drawing view, the selection in scene-space is actually
            a design edge occurrence, since the drawing view is an instance providing paper-space occurrences of
            model-space objects.
            In this case, the transformation to paper-space involves scaling the geometry according to the drawing view scale.
            If you ask for the length of the design edge, you will get the length in paper-space, which is typically
            not the same as the length in model-space, and this can cause confusion.
            <para/>
            An interaction context presents information mapped back into some context-space.
            Using an interaction context for the model-space of one of the drawing views, the design edge
            occurrence is automatically mapped back into model-space, so that the selection is presented in model-space.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.Window"/> has three ways to obtain an interaction context:
            <list type="bullet">
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Window.ActiveContext"/> gets the context in which the user is currently working.
            	For example, if the user is sketching on a face inside a drawing view, this context is the model-space
            	of the root part shown in that drawing view, and all information is presented in that model-space.
            </item>
            <item>
            	<see cref="P:SpaceClaim.Api.V23.Window.SceneContext"/> gets the context for scene-space.
            	If the user selects design edges in two different drawing views, an interaction context in one of
            	those views would only see the model-space design edge in that view, and the second design edge
            	would be filtered out.
            	The scene context does not filter any objects out.
            </item>
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Window.GetContext(SpaceClaim.Api.V23.IDocObject)"/> gets a specific interaction context.
            	This context can map selections back to any coordinate system, such as the model-space of a component
            	of an assembly shown in a drawing view.
            	It may be more convenient to use an interaction context of this sort, rather than making
            	several calls to <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> and <see cref="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(SpaceClaim.Api.V23.IDocObject)"/>.
            </item>
            </list>
            <para/>
            If you have no good reason to do otherwise, use <see cref="P:SpaceClaim.Api.V23.Window.ActiveContext"/> by default.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.InteractionContext.Context"/> is described by a scene-space object whose <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> is a root object.
            A root object is an object whose <see cref="P:SpaceClaim.Api.V23.DocObject.Parent"/> is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.Window">
            <summary>
            Gets the window to which this interaction context belongs.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.Context">
            <summary>
            Gets the context for the interaction.
            </summary>
            <remarks>
            The context is a scene-space object whose <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> is a root object.
            A root object is an object whose <see cref="P:SpaceClaim.Api.V23.DocObject.Parent"/> is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.ContextRoot">
            <summary>
            In scene-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.ActiveContextRoot">
            <summary>
            In scene-space.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.MapToContext``1(``0)">
            <summary>
            Maps a scene-space object into context-space.
            </summary>
            <typeparam name="TDocObject">The type of object.</typeparam>
            <param name="sceneObject">The object in scene-space.</param>
            <returns>The corresponding object in context-space; or <b>null</b> if no such mapping exists.</returns>
            <remarks>
            This method returns <b>null</b> if <paramref name="sceneObject"/> is <b>null</b>,
            or if there is no mapping to context-space, either because <paramref name="sceneObject"/> does
            not live in scene-space, or because there is no original in its occurrence chain that belongs
            to the context-space.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.MapToContext``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Maps a collection of scene-space objects into context-space.
            </summary>
            <typeparam name="TDocObject">The type of object.</typeparam>
            <param name="sceneObjects">Scene-space objects to map.</param>
            <returns>Corresponding context-space objects.</returns>
            <remarks>
            If any of the scene-space objects cannot be mapped to context-space, they are filtered out.
            Therefore the result may contain fewer objects than <paramref name="sceneObjects"/>.
            <para/>
            See <see cref="M:SpaceClaim.Api.V23.InteractionContext.MapToContext``1(``0)"/> for why no mapping may exist.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.MapToScene``1(``0)">
            <summary>
            Maps a context-space object into scene-space.
            </summary>
            <typeparam name="TDocObject">The type of object.</typeparam>
            <param name="contextObject">The object in context-space.</param>
            <returns>The corresponding object in scene-space; or <b>null</b> if no such mapping exists.</returns>
            <remarks>
            This method returns <b>null</b> if <paramref name="contextObject"/> is <b>null</b>
            or it does not live in context-space.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.MapToScene``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Maps a collection of context-space objects into scene-space.
            </summary>
            <typeparam name="TDocObject">The type of object.</typeparam>
            <param name="contextObjects">Context-space objects to map.</param>
            <returns>Corresponding scene-space objects.</returns>
            <remarks>
            If any of the <paramref name="contextObjects"/> members do not live in context-space, they are filtered out.
            Therefore the result may contain fewer objects than <paramref name="contextObjects"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.TransformToContext">
            <summary>
            Gets the transform from scene-space to context-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.TransformToScene">
            <summary>
            Gets the transform from context-space to scene-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.Root">
            <summary>
            Gets the root object of the context.
            </summary>
            <remarks>
            The root object is the <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> of the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Context"/>.
            A root object is an object whose <see cref="P:SpaceClaim.Api.V23.DocObject.Parent"/> is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.ActivePart">
            <summary>
            Gets or sets the active part, in context-space.
            </summary>
            <remarks>
            If there is no active part, <b>null</b> is returned.
            This can occur in a drawing sheet that has no drawing views.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.ActiveDatum">
            <summary>
            Gets or sets the active datum, in context-space.
            </summary>
            <remarks>
            When a datum is active, sketch tools create design curves as children of the datum.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.DesignCurveParent">
            <summary>
            Gets the parent for new design curves, in context-space.
            </summary>
            <remarks>
            Even though it is mapped to context-space, the design curve parent may be an occurrence,
            e.g. if the context is an assembly and the user is sketching on a datum plane in a component.
            <para/>
            The value is never <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.Selection">
            <summary>
            Gets or sets the selection in the window, in context-space.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.SelectById(System.String[])">
            <summary>
            Sets the selection in the window using unique ids, in context-space.
            </summary>
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.SecondarySelectById(System.String[])">
            <summary>
            Sets the selection in the window using unique ids, in context-space.
            </summary>
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.SelectByGroup(System.String[])">
            <summary>
            Sets the selection in the window using groups, in context-space.
            </summary>
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.SecondarySelection">
            <summary>
            Gets or sets the secondary selection in the window, in context-space.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetSelection``1">
            <summary>
            Gets the selected objects of the specified type, in context-space.
            </summary>
            <typeparam name="TDocObject">The type of objects desired.</typeparam>
            <returns>Selected objects of the specified type.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.SingleSelection">
            <summary>
            Gets or sets the current single selection in the window, in context-space.
            </summary>
            <remarks>
            In general, many objects can be selected,
            however, it is common to test whether a single object is selected, and if so, obtain that object.
            This property returns the single selection, or <b>null</b> if either no objects are selected, or more than one object is selected.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetSelectionPoint(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Gets the hit point for the selected object, in context-space.
            </summary>
            <param name="selectedObject">The object for which the selection hit point is sought.</param>
            <returns>The selection hit point, or <b>null</b> if not available.</returns>
            <remarks>
            If an object is selected by clicking in the graphics window, then a hit point will be available for it.
            If the object was box-selected, or selected in the Structure View, then a hit point will not be available
            and <b>null</b> is returned.
            <para/>
            <b>null</b> is also returned if the object is not currently selected.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.Preselection">
            <summary>
            Gets or sets the currently preselected object, in context-space.
            </summary>
            <remarks>
            Returns <b>null</b> if there is no currently preselected object,
            or if the preselected object in scene-space cannot be mapped to context-space.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.PreselectionPoint">
            <summary>
            Gets the hit point of the preselected object, in context-space.
            </summary>
            <remarks>
            If the current preselection was made in the Structure View, then a hit point will not be available
            and <b>null</b> is returned.
            <para/>
            <b>null</b> is also returned if there is no currently preselected object (<see cref="P:SpaceClaim.Api.V23.InteractionContext.Preselection"/> is <b>null</b>).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.VisibleBodies">
            <summary>
            Gets all visible design bodies, in context-space.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetVisibleCurves(SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Gets visible design curves, in context-space.
            </summary>
            <param name="plane">A plane in context-space, or <b>null</b>.</param>
            <returns>Visible curves in context-space.</returns>
            <remarks>
            If <paramref name="plane"/> is not <b>null</b>, only design curves that lie in that plane are returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.SectionPlane">
            <summary>
            Gets the current section plane, in context-space.
            </summary>
            <remarks>
            If this context is not sectioned, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetSection(SpaceClaim.Api.V23.IDesignBody)">
            <summary>
            Gets the section for a design body.
            </summary>
            <param name="desBody">The design body.</param>
            <returns>The design body section; else <b>null</b> if bodies are not sectioned in this context.</returns>
            <exception cref="T:System.ArgumentException">The object does not belong to this interaction context.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetPixelSize(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Gets the screen pixel size for the active view, in context-space.
            </summary>
            <param name="point">The context-space point at which the pixel size is required.</param>
            <returns>The screen pixel size in context-space.</returns>
            <remarks>
            This method returns the distance in context-space which corresponds to one pixel in screen-space.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.ProjectToScreen(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Projects a context-space point into screen-space.
            </summary>
            <param name="point">A point in context-space.</param>
            <returns>The projection of the point in screen-space.</returns>
            <remarks>
            The result is in the pixel-space of the active view.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.InteractionContext.GetCursorRay(System.Drawing.Point)">
            <summary>
            Gets the context-space cursor ray at a position in screen-space.
            </summary>
            <param name="screenPoint">A screen-space point.</param>
            <returns>The corresponding cursor ray in context-space.</returns>
            <remarks>
            The <paramref name="screenPoint"/> is in the pixel-space of the active view.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.CursorRay">
            <summary>
            Gets the current cursor ray in context-space.
            </summary>
            <remarks>
            The cursor ray is an unbounded straight line beneath the cursor in the viewing direction.
            <para/>
            If the cursor is not inside the active view of the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Window"/>, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionContext.LayoutGrid">
            <summary>
            Gets the layout grid for this interaction context.
            </summary>
            <remarks>
            If this interaction context does not have a layout grid, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.InteractionMode">
            <summary>
            The interaction mode of a window.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.InteractionMode.Sketch">
            <summary>
            Sketch mode.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.InteractionMode.Section">
            <summary>
            Section mode.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.InteractionMode.Solid">
            <summary>
            Solid mode.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ExportOptions">
            <summary>
            An object containing export options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.CleanUpBodies">
            <summary>
            Gets or sets whether to simplify geometry and clean up topology (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.ExportNames">
            <summary>
            Gets or sets whether to export names (default = <b>false</b>).
            </summary>
            <remarks>
            Names of design bodies and design curves are exported if this option is <b>true</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Acis">
            <summary>
            Gets the export options specific to ACIS.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Parasolid">
            <summary>
            Gets the export options specific to Parasolid.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Catia">
            <summary>
            Gets the export options specific to Catia.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Step">
            <summary>
            Gets the export options specific to STEP.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Stl">
            <summary>
            Gets the export options specific to STL.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExportOptions.Obj">
            <summary>
            Gets the export options specific to OBJ.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ExportOptions.Create">
            <summary>
            Creates an object containing the default export options.
            </summary>
            <returns>An object containing the default export options.</returns>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Options.Create"/>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.AcisExportOptions">
            <summary>
            An object containing export options specific to ACIS.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AcisExportOptions.Version">
            <summary>
            Gets or sets the ACIS version for export file (default = <see cref="F:SpaceClaim.Api.V23.AcisVersion.V23"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.AcisExportOptions.Units">
            <summary>
            Gets or sets the units for the export file (default = <see cref="F:SpaceClaim.Api.V23.AcisUnits.Meters"/>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ParasolidExportOptions">
            <summary>
            An object containing export options specific to Parasolid.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ParasolidExportOptions.Version">
            <summary>
            Gets or sets the Parasolid version for export file (default = <see cref="F:SpaceClaim.Api.V23.ParasolidVersion.V23"/>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CatiaExportOptions">
            <summary>
            An object containing export options specific to Catia.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CatiaExportOptions.Version">
            <summary>
            Gets or sets the Catia version for the export file (default = <see cref="F:SpaceClaim.Api.V23.CatiaVersion.V23"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CatiaExportOptions.SimplifySplineSurfaces">
            <summary>
            Gets or sets whether spline surfaces can be simplified (default = <b>true</b>).
            </summary>
            <remarks>
            NURBS surfaces used by faces, which are larger than necessary to cover the extent of the face,
            can be trimmed by removing excess control points, or otherwise simplified.
            <para/>
            If a model is exported with the
            <see cref="P:SpaceClaim.Api.V23.CatiaExportOptions.SimplifySplineSurfaces"/> <i>export</i> option set to <b>false</b>,
            such faces are recorded in the Catia model and when imported again, are not simplified, even if the
            <see cref="P:SpaceClaim.Api.V23.CatiaImportOptions.SimplifySplineSurfaces"/> <i>import</i> option is set to <b>true</b>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.StepExportOptions">
            <summary>
            An object containing export options specific to STEP.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StepExportOptions.ExportIdentifiers">
            <summary>
            Gets or sets whether to export identifiers for faces and edges (default = <b>false</b>).
            </summary>
            <remarks>
            If this option is <b>true</b>, identifiers are exported to STEP files for faces and edges.
            <para/>
            <see cref="T:SpaceClaim.Api.V23.DesignFace"/> and <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> have an <see cref="P:SpaceClaim.Api.V23.IHasExportIdentifier.ExportIdentifier"/> property,
            which gets the identifier that is written when the model is exported.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.StlExportFormat">
            <summary>
            Specifies the format to use when exporting an STL file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlExportFormat.Text">
            <summary>
            Text format.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlExportFormat.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.StlFileGranularity">
            <summary>
            Specifies how many files are created when exporting an STL file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlFileGranularity.SingleFile">
            <summary>
            A single STL file is created.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlFileGranularity.FilePerPart">
            <summary>
            A separate STL file is created for each part (or part occurrence) that contains any bodies.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.StlFileGranularity.FilePerBody">
            <summary>
            A separate STL file is created for each body (or body occurrence).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.StlExportOptions">
            <summary>
            An object containing export options specific to STL.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StlExportOptions.Format">
            <summary>
            Gets or sets the format to use when exporting an STL file (default = <see cref="F:SpaceClaim.Api.V23.StlExportFormat.Text"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StlExportOptions.FileGranularity">
            <summary>
            Gets or sets the file granularity to use when exporting an STL file (default = <see cref="F:SpaceClaim.Api.V23.StlFileGranularity.SingleFile"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.StlExportOptions.Tessellation">
            <summary>
            Gets or sets the format to use when exporting an STL file (default = <see cref="F:SpaceClaim.Api.V23.Modeler.TessellationOptions.Default"/>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ObjExportOptions">
            <summary>
            An object containing export options specific to OBJ.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ObjExportOptions.Tessellation">
            <summary>
            Gets or sets the tessellation options when exporting an OBJ file (default = <see cref="F:SpaceClaim.Api.V23.Modeler.TessellationOptions.Default"/>).
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImportCompleteness">
            <summary>
            Specifies how much of a foreign file should be imported.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImportCompleteness.Structure">
            <summary>
            Import just the assembly structure.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImportCompleteness.StructureAndRendering">
            <summary>
            Import just the assembly structure and body rendering, but not the geometry.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImportCompleteness.StructureAndRenderingWithBackup">
            <summary>
            Import just the assembly structure and body rendering, while creating a complete 'scdoc' file for each part.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ImportCompleteness.Everything">
            <summary>
            Import everything.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MixedImportResolution">
            <summary>
            Specifies how much of a foreign file should be imported.
            </summary>
            <exclude/>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.None">
            <summary>
            Import None.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.Solids">
            <summary>
            Import Solids.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.Surfaces">
            <summary>
            Import Surfaces.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.Lines">
            <summary>
            Import Lines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.SolidsAndSurfaces">
            <summary>
            Import Solids and Surfaces.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.SolidsAndLines">
            <summary>
            Import Solids and Lines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.SurfacesAndLines">
            <summary>
            Import Surfaces and Lines.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MixedImportResolution.SolidsSurfacesAndLines">
            <summary>
            Import Solids Surfaces and Lines.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AnalysisType">
            <summary>
            Specifies the type of Analysis
            </summary>
            <exclude/>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnalysisType.Analysis2D">
            <summary>
            Analysis type is 2D.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.AnalysisType.Analysis3D">
            <summary>
            Analysis type is 3D.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CADImportParameterType">
            <summary>
            Types of parameters to be imported from CAD
             True and False ARE NOT enum values to be used, but there to help support the
             open of old databases.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CADImportParameterType.None">
            <summary>
            Do NOT import parameters
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CADImportParameterType.Independent">
            <summary>
            Import editable parameters -- default value (like old true value)
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.CADImportParameterType.All">
            <summary>
            Import all parameters that match the filter, both independent and dependent (read-only)
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ImportOptions">
            <summary>
            Import options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.CreateExternalAssembly">
            <summary>
            Gets or sets whether to create an external assembly when an assembly is imported (default = <b>false</b>).
            </summary>
            <remarks>
            An external assembly is one where each part master lives in a separate document.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.UseMatchingDocuments">
            <summary>
            Gets or sets whether to use matching SpaceClaim documents in the same folder when an assembly is imported (default = <b>false</b>).
            </summary>
            <remarks>
            If this options is <b>true</b>, then when an assembly is imported, if there is already a SpaceClaim
            'scdoc' file in the same folder as the foreign assembly, which has the same filename as the component,
            this will be used as the imported component.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Completeness">
            <summary>
            Gets or sets how much of a foreign file should be imported (default = <see cref="F:SpaceClaim.Api.V23.ImportCompleteness.Everything"/>).
            </summary>
            <remarks>
            This property controls whether lightweight assemblies are created.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.CleanUpBodies">
            <summary>
            Gets or sets whether to simplify geometry and clean up topology (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.StitchSurfaces">
            <summary>
            Gets or sets whether to stitch surfaces that meet (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.StitchTolerance">
            <summary>
            Gets or sets the stitching tolerance to use when stitching surfaces (default = 0).
            </summary>
            <remarks>
            If the value is zero, the <see cref="P:SpaceClaim.Api.V23.Geometry.Accuracy.LinearResolution"/> will be used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.ImportCurves">
            <summary>
            Gets or sets whether to import curves (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.ImportPoints">
            <summary>
            Gets or sets whether to import points (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.ImportNames">
            <summary>
            Gets or sets whether to import names (default = <b>false</b>).
            </summary>
            <remarks>
            Names of design bodies and design curves are imported if this option is <b>true</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Acis">
            <summary>
            Gets the import options for ACIS files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Catia">
            <summary>
            Gets the import options for Catia files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Stl">
            <summary>
            Gets the import options for STL files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Obj">
            <summary>
            Gets the import options for OBJ files.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ImportOptions.Workbench">
            <summary>
            Gets or sets the Workbench options.
            </summary>
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.ImportOptions.Create">
            <summary>
            Creates an object containing the default import options.
            </summary>
            <returns>An object containing the default import options.</returns>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Options.Create"/>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Options">
            <summary>
            An object containing options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.WorldOrientation">
            <summary>
            Gets or sets the orientation of the world axes when seen in trimetric projection (default = <see cref="F:SpaceClaim.Api.V23.WorldOrientation.UpIsZ"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.ShowWorldOrigin">
            <summary>
            Gets or sets whether to display the world origin (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.ShowSpinCenter">
            <summary>
            Gets or sets whether to display the spin center when rotating the view (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.ResetSelectionFilterOnToolChange">
            <summary>
            Gets or sets whether to reset the selection filter when a tool changes (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.BackgroundColor">
            <summary>
            Gets or sets the background color used in design windows (default = <see cref="P:System.Drawing.Color.White"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.ToolGuidePosition">
            <summary>
            Gets or sets the position of the tool guide buttons (default = <see cref="F:SpaceClaim.Api.V23.ToolGuidePosition.Right"/>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.UseWorkbenchLanguage">
            <summary>
            Use workbench language.
            </summary>
            <exclude />
        </member>
        <member name="E:SpaceClaim.Api.V23.Options.UseWorkbenchLanguageChanged">
            <summary>
            Use workbench language event
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.WorkbenchLanguage">
            <summary>
            Get Workbench language.
            </summary>
            <exclude />
        </member>
        <member name="E:SpaceClaim.Api.V23.Options.WorkbenchLanguageChanged">
            <summary>
            Get Workbench language event
            </summary>
            <exclude />
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.Culture">
            <summary>
            Gets or sets the current culture (default = "").
            </summary>
            <remarks>
            The value is the name of the culture.
            An empty string represents the default culture.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.SupportDirectories">
             <summary>
             Gets or sets the support directories search path. 
             </summary>
            
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.AutomaticBackup">
            <summary>
            Gets or sets whether to automatically backup the current document (default = <b>true</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.ShowBeta">
            <summary>
            Gets or sets whether to show beta options (default = <b>false</b>).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.RenderingQuality">
            <summary>
            Gets or sets the rendering quality (default = <b>3</b>).
            </summary>
            <exception cref="T:System.ArgumentException">The quality level is not in the valid range.</exception>
            <remarks>
            The rendering quality must be an integer between 1 and 10 inclusive.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.StatusMessageLimit">
            <summary>
            Gets or sets the status message limit. Unlimited if set to -1
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.Import">
            <summary>
            Gets the import options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.Export">
            <summary>
            Gets the export options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.DesignWindow">
            <summary>
            Gets the design window options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.DrawingWindow">
            <summary>
            Gets the drawing window options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.SheetMetal">
            <summary>
            Gets the sheet metal options.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Options.Analysis">
            <summary>
            Gets or sets Analysis options.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Options.Create">
            <summary>
            Creates an object containing the default options.
            </summary>
            <returns>An object containing the default options.</returns>
            <remarks>
            This method returns the default options.
            See help on each property for the default values.
            <para/>
            The <see cref="T:SpaceClaim.Api.V23.Application"/> class provides a <see cref="P:SpaceClaim.Api.V23.Application.UserOptions"/> property
            for access to the current user options.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LayoutGrid">
            <summary>
            A layout grid master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.LayoutGrid.Create(SpaceClaim.Api.V23.DrawingView,SpaceClaim.Api.V23.LayoutGridDisplay)">
            <summary>
            Creates a layout grid for the specified drawing view.
            </summary>
            <param name="parent">The drawing view.</param>
            <param name="display">The conditions for the layout grid to be displayed.</param>
            <returns>A layout grid.</returns>
            <exception cref="T:System.InvalidOperationException">The drawing view already has a layout grid.</exception>
            <exception cref="T:System.InvalidOperationException">It was not possible to create the layout grid.</exception>
            <remarks>
            The drawing view projection must satisfy the <paramref name="display"/> conditions otherwise an exception is thrown.
            See <see cref="T:SpaceClaim.Api.V23.LayoutGridDisplay"/> for more information.
            <para/>
            A layout grid is a child of a drawing view.
            A drawing view can have at most one layout grid.
            If a layout grid already exists, an exception is thrown.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.DrawingView.LayoutGrid"/> property can be used to get the layout grid of a drawing view.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.Display">
            <summary>
            Gets or sets the conditions for the layout grid to be displayed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.Plane">
            <summary>
            Gets the model-space plane of the layout grid.
            </summary>
            <remarks>
            The plane is in model-space and it is seen flat-on in the drawing view.
            <para/>
            If the layout grid is not displayed, <b>null</b> is returned.
            See <see cref="T:SpaceClaim.Api.V23.LayoutGridDisplay"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.Extent">
            <summary>
            Gets or sets the model-space extent of the layout grid.
            </summary>
            <remarks>
            The extent is in the UV space of the <see cref="P:SpaceClaim.Api.V23.LayoutGrid.Plane"/> of the layout grid.
            <para/>
            This property can be used even if the layout grid is not currently displayed.
            See <see cref="T:SpaceClaim.Api.V23.LayoutGridDisplay"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.AxisNameU">
            <summary>
            Gets the axis name in the U parameter direction of the layout grid plane.
            </summary>
            <remarks>
            The U parameter direction of a <see cref="T:SpaceClaim.Api.V23.Geometry.Plane"/> is the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/> direction
            of its <see cref="P:SpaceClaim.Api.V23.Geometry.Plane.Frame"/>.
            <para/>
            If no axis is displayed in the U parameter direction, <b>null</b> is returned.
            This is either because the layout grid is not displayed at all,
            or because only one model-space axis is parallel to the drawing sheet, and this is not that axis.
            See <see cref="T:SpaceClaim.Api.V23.LayoutGridDisplay"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.AxisNameV">
            <summary>
            Gets the axis name in the V parameter direction of the layout grid plane.
            </summary>
            <remarks>
            The V parameter direction of a <see cref="T:SpaceClaim.Api.V23.Geometry.Plane"/> is the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirY"/> direction
            of its <see cref="P:SpaceClaim.Api.V23.Geometry.Plane.Frame"/>.
            <para/>
            If no axis is displayed in the V parameter direction, <b>null</b> is returned.
            This is either because the layout grid is not displayed at all,
            or because only one model-space axis is parallel to the drawing sheet, and this is not that axis.
            See <see cref="T:SpaceClaim.Api.V23.LayoutGridDisplay"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.UnitSpacing">
            <summary>
            Gets or sets the model-space distance corresponding to one unit of the grid.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.UnitsPerGridLine">
            <summary>
            Gets or sets the number of grid units between grid lines.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LayoutGrid.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ILayoutGrid.Parent"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ILayoutGrid">
            <summary>
            A layout grid.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ILayoutGrid.Parent">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.LayoutGridDisplay">
            <summary>
            Specifies the conditions for a layout grid to be displayed in a drawing sheet.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LayoutGridDisplay.OneAxis">
            <summary>
            The layout grid is shown if at least one model-space axis is parallel to the drawing sheet.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LayoutGridDisplay.TwoAxes">
            <summary>
            The layout grid is shown if two model-space axes are parallel to the drawing sheet.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.StatusMessageType">
            <summary>
            Specifies an status message type for use with the <see cref="M:SpaceClaim.Api.V23.Application.ReportStatus(System.String,SpaceClaim.Api.V23.StatusMessageType,SpaceClaim.Api.V23.Task)"/> method.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Beam">
            <inheritdoc cref="T:SpaceClaim.Api.V23.IBeam"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.Create(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.DesignCurve)">
             <summary>
             Creates a beam.
             </summary>
             <param name="profilePart">A beam profile part.</param>
             <param name="desCurve">A design curve.</param>
             <returns>A beam.</returns>
             <remarks>
            The <i>profilePart</i> must be of type <see cref="F:SpaceClaim.Api.V23.PartType.BeamProfile"/>
             </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionSource">
            <summary>
            Gets the object that defines the section.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionAngle">
            <summary>
            Gets or sets the rotation angle of the cross section.
            </summary>
            <remarks>
            The angle is in radians.
            The rotation angle is clockwise from the default perpendicular of the beam path.
            </remarks>        
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionAnchor">
            <summary>
            Gets or sets the section anchor.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.AnchorLocation">
            <summary>
            Gets or sets the location of the section anchor.
            </summary>
            <remarks>
            The anchor location is only used if <see cref="P:SpaceClaim.Api.V23.Beam.SectionAnchor"/> is set to <see cref="F:SpaceClaim.Api.V23.SectionAnchor.Location"/>;
            otherwise it is ignored.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionProfile">
            <summary>
            Gets the section profile in the XY plane.
            </summary>
            <remarks>
            Returns an empty list if the beam does not have a cross section.
            <para/>
            The profile is returned as a list of closed loops.
            The first loop is the outer loop, and any subsequent loops are inner loops.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Geometry.IShape.IsReversed"/> property of each segment indicates the direction of the loop.
            The area of the section is always on the left of the segment.
            This means the outer loop is in a counterclockwise direction as seen looking onto the XY plane,
            and inner loops are in a clockwise direction.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionProperties">
            <summary>
            Gets the section properties.
            </summary>
            <remarks>
            Returns <b>null</b> if the beam does not have a cross section.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.IsReversed">
            <summary>
            Gets or sets whether the beam profile is reversed. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.IsRigid">
            <summary>
            Gets or sets whether the beam is rigid. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IBeam.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.ShapeSource">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.SectionFrame">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Type">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Shape">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Beam.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.Material">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Beam.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IBeam">
            <summary>
            A beam.
            </summary>
            <remarks>
            Beams inherit <see cref="T:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve"/>, but in this case the <see cref="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve.Shape"/> can be <b>null</b>
            if the beam geometry cannot be determined.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBeam.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBeam.ShapeSource">
            <summary>
            Gets the objects that determine the <see cref="P:SpaceClaim.Api.V23.Geometry.IHasTrimmedCurve.Shape"/> of the beam.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBeam.SectionFrame">
            <summary>
            Gets the section frame at the start of the beam.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IBeam.Type">
            <summary>
            Gets or sets the <see cref="T:SpaceClaim.Api.V23.BeamType">type</see> of beam.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.BeamType">
            <summary>
            The type of <see cref="T:SpaceClaim.Api.V23.IBeam">beam</see>.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SectionAnchor">
            <summary>
            Specifies how the beam section is anchored to the beam path.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SectionAnchor.Centroid">
            <summary>
            The centroid of the section is anchored to the beam path.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SectionAnchor.ShearCenter">
            <summary>
            The shear center of the section is achored to the beam path.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SectionAnchor.Location">
            <summary>
            The <see cref="P:SpaceClaim.Api.V23.Beam.AnchorLocation"/> is anchored to the beam path.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SectionProperties">
            <summary>
            Section properties.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.SectionProperties.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Constructs a section properties object.
            </summary>
            <param name="area">The area of the section.</param>
            <param name="ixx">The moment of inertia about the X-axis.</param>
            <param name="iyy">The moment of inertia about the Y-axis.</param>
            <param name="ixy">The product of inertia.</param>
            <param name="warpingConstant">The warping constant (Cw).</param>
            <param name="torsionConstant">The torsion constant (J).</param>
            <param name="centroid">The centroid of the section.</param>
            <param name="shearCenter">The shear center.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.HasOverriddenValues">
            <summary>
            Gets whether any of the calculated values have been overridden.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.Area">
            <summary>
            Gets the area of the section.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.Ixx">
            <summary>
            Gets the moment of inertia about the X-axis.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.Iyy">
            <summary>
            Gets the moment of inertia about the Y-axis.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.Ixy">
            <summary>
            Gets the product of inertia.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.WarpingConstant">
            <summary>
            Gets the warping constant (Cw).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.TorsionConstant">
            <summary>
            Gets the torsion constant (J).
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.Centroid">
            <summary>
            Gets the centroid of the section.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionProperties.ShearCenter">
            <summary>
            Gets the shear center.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ConnectionTable">
            <summary>
            A connection table for a collection of wire curves.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ConnectionTable.WireCurves">
            <summary>
            The wire curves for this table.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ConnectionTable.GetTangentChain(SpaceClaim.Api.V23.IWireCurve)">
            <summary>
            Gets the wire curves that form a tangent chain with the specified wire curve.
            </summary>
            <param name="seed">The seed wire curve.</param>
            <returns>Wire curves forming a tangent chain, including the <paramref name="seed"/> wire curve.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.ConnectionTable.GetConnections(SpaceClaim.Api.V23.IWireCurve)">
            <summary>
            Gets the connections that a wire curve has to other wire curves.
            </summary>
            <param name="wireCurve">The wire curve.</param>
            <returns>Connections that the wire curve has to other wire curves.</returns>
            <remarks>
            Each <see cref="T:SpaceClaim.Api.V23.WireCurveConnection"/> returned has two <see cref="T:SpaceClaim.Api.V23.WireCurvePoint"/> objects,
            describing the connection to a wire curve.
            The <see cref="P:SpaceClaim.Api.V23.WireCurveConnection.FirstPoint"/> is for the supplied <paramref name="wireCurve"/>
            and the <see cref="P:SpaceClaim.Api.V23.WireCurveConnection.SecondPoint"/> is for the other wire curve.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.WireCurveConnection">
            <summary>
            A connection between two wire curves.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.WireCurveConnection.#ctor(SpaceClaim.Api.V23.WireCurvePoint,SpaceClaim.Api.V23.WireCurvePoint,System.Boolean)">
            <summary>
            Constructs a wire curve connection.
            </summary>
            <param name="firstPoint">Details of the point on the first wire curve.</param>
            <param name="secondPoint">Details of the point on the second wire curve.</param>
            <param name="tangent">Whether the two wire curves are tangent where they meet.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurveConnection.FirstPoint">
            <summary>
            Gets details of the point on the first wire curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurveConnection.SecondPoint">
            <summary>
            Gets details of the point on the second wire curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurveConnection.IsTangent">
            <summary>
            Gets whether the two wire curves are tangent where they meet.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WireCurvePoint">
            <summary>
            Details of a connection to a wire curve.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.WireCurveConnection"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.WireCurvePoint.#ctor(SpaceClaim.Api.V23.IWireCurve,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.PointType)">
            <summary>
            Constructs a wire curve point.
            </summary>
            <param name="wireCurve">The wire curve.</param>
            <param name="point">The wire curve point.</param>
            <param name="pointType">The type of point.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurvePoint.WireCurve">
            <summary>
            Gets the wire curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurvePoint.Point">
            <summary>
            Gets the point.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.WireCurvePoint.PointType">
            <summary>
            Gets the type of point.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PointType">
            <summary>
            A type of point.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PointType.StartPoint">
            <summary>
            The start point.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PointType.EndPoint">
            <summary>
            The end point.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PointType.MidPoint">
            <summary>
            The mid-point.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PointType.Center">
            <summary>
            The center point.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PointType.None">
            <summary>
            A point which does not fit one of the other categories.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignBodyAspect">
            <summary>
            An aspect of a design body.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MidSurfaceAspect">
            <summary>
            The mid-surface aspect of a design body.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.MidSurfaceAspect.TryGetFaceThickness(SpaceClaim.Api.V23.DesignFace,System.Double@)">
            <summary>
            Gets the thickness assigned to a design face, if available.
            </summary>
            <param name="desFace">The design face whose thickness is wanted.</param>
            <param name="thickness">The thickness assigned to the face.</param>
            <returns><b>true</b> if a thickness is assigned to the face; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.MidSurfaceAspect.OffsetType">
            <summary>
            Gets the offset type.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.MidSurfaceAspect.Create(SpaceClaim.Api.V23.DesignBody,System.Double)">
            <summary>
            Creates a MidSurfaceAspect of the specified thickness on a DesignBody.
            </summary>
            <param name="desBody">The <see cref="T:SpaceClaim.Api.V23.DesignBody"/> on which to create a MidSurfaceAspect.</param>
            <param name="thickness">The desired thickness</param>
            <returns>The MidSurfaceAspect.</returns>
            <exception cref="T:System.ArgumentException">The desBody argument is null.</exception>
            <exception cref="T:System.ArgumentException">The thickness is not greater than zero.</exception>
            <exception cref="T:System.ArgumentException">The DesignBody is not open.</exception>
            <exception cref="T:System.ArgumentException">The DesignBody already has a MidSurfaceAspect.</exception>
        </member>
        <member name="T:SpaceClaim.Api.V23.AppearanceState">
            <summary>
            An appearance state master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.AppearanceState.Create(SpaceClaim.Api.V23.Part,System.String)">
            <summary>
            Creates an appearance object.
            </summary>
            <param name="parent">The parent part, to which this appearance state applies.</param>
            <param name="name">The name of the appearance state.</param>
            <returns>A new appearance state.</returns>
            <remarks>
            The name must be unique across all existing appearance states in the <paramref name="parent"/> part,
            and across all standard view projections.
            <para/>
            The appearance state is created, but <see cref="M:SpaceClaim.Api.V23.AppearanceState.CaptureVisibility"/> must then be called
            if object visibility is to be stored, and <see cref="P:SpaceClaim.Api.V23.AppearanceState.Projection"/> must be set if the view
            projection is to be stored.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IAppearanceState.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.Shortcut">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.Projection">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.HasVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AppearanceState.CaptureVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AppearanceState.RestoreVisibility(SpaceClaim.Api.V23.DefaultVisibility)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.AppearanceState.DeleteVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.AppearanceState.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IAppearanceState">
            <summary>
            An appearance state.
            </summary>
            <remarks>
            Appearance states belong to a part (the <see cref="P:SpaceClaim.Api.V23.IAppearanceState.Parent"/> is a <see cref="T:SpaceClaim.Api.V23.Part"/>).
            They can capture the visibility of objects in the part.
            They can also store the view projection.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAppearanceState.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAppearanceState.Shortcut">
            <summary>
            Gets or sets the shortcut (if any) assigned to the appearance state.
            </summary>
            <remarks>
            If the shortcut is <b>null</b>, the appearance state does not have a shortcut assigned.
            Shortcuts Ctrl+0 to Ctrl+9 can be assigned to appearance states.
            The value of this property is the number, 0 to 9, or <b>null</b> for "no shortcut".
            <para/>
            Since shortcuts need to be unique, if you assign a shortcut that is currently assigned to
            another appearance state, or to a standard view projection, the shortcut is automatically
            removed from that existing object first.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAppearanceState.Projection">
            <summary>
            Gets or set the view projection (if any) assigned to the appearance state.
            </summary>
            <remarks>
            The view projection can be stored in the appearance state for convenience, so that the
            state of the window can be captured, as well as the visibility of objects in the scene.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Window.Projection"/> property of the <see cref="T:SpaceClaim.Api.V23.Window"/> can be used to
            obtain the current projection, and <see cref="M:SpaceClaim.Api.V23.Window.SetProjection(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean,System.Boolean)"/> can later be used to restore it.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAppearanceState.DefaultVisibility">
            <summary>
            Gets or sets the default visibility used when restoring appearance state visibility.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.IAppearanceState.RestoreVisibility(SpaceClaim.Api.V23.DefaultVisibility)"/> is used to restore the visibility of objects in the part.
            Any objects created since the appearance state was captured will take on the default
            visibility supplied to <see cref="M:SpaceClaim.Api.V23.IAppearanceState.RestoreVisibility(SpaceClaim.Api.V23.DefaultVisibility)"/>.
            <para/>
            This property can be used to store the default visibility with the appearance state,
            so that the restore behavior is defined when the user restores the appearance state.
            When restoring visibility using the API, the value of this property can be supplied,
            or a specific value from the <see cref="T:SpaceClaim.Api.V23.DefaultVisibility"/> enumerated type.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAppearanceState.HasVisibility">
            <summary>
            Gets whether the appearance state has captured object visibility.
            </summary>
            <remarks>
            <see cref="M:SpaceClaim.Api.V23.IAppearanceState.CaptureVisibility"/> is used to store object visibility, and
            <see cref="M:SpaceClaim.Api.V23.IAppearanceState.DeleteVisibility"/> is used to delete that information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IAppearanceState.CaptureVisibility">
            <summary>
            Captures object visibility in the appearance state.
            </summary>
            <remarks>
            If the appearance state already stores object visibility, this is overwritten.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IAppearanceState.RestoreVisibility(SpaceClaim.Api.V23.DefaultVisibility)">
            <summary>
            Restores object visibility.
            </summary>
            <param name="defaultVisibility">Visibility for objects created since the appearance state captured visibility.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.IAppearanceState.DeleteVisibility">
            <summary>
            Deletes object visibility.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DefaultVisibility">
            <summary>
            Default visibility, used when restoring an appearance state.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.IAppearanceState.DefaultVisibility"/> for more information.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.DefaultVisibility.Visible">
            <summary>
            The object should be visible.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DefaultVisibility.Hidden">
            <summary>
            The object should be hidden.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DefaultVisibility.Unchanged">
            <summary>
            The visibility should not be changed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Gusset">
            <summary>
            A sheet metal gusset master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Gusset.Site">
            <summary>
            Gets the two colinear bends on either side of the gusset.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Gusset.Style">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IGusset">
            <summary>
            A sheet metal gusset.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IGusset.Style">
            <summary>
            Gets or sets the gusset style.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.GussetStyle">
            <summary>
            The base class for gusset styles.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.UnknownGusset">
            <summary>
            A gusset with an unrecognized style, usually produced by importing a model.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RegularGusset">
            <summary>
            A gusset with known dimensions.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.RegularGusset.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a regular gusset style.
            </summary>
            <param name="width">The width of the gusset.</param>
            <param name="depth">The depth of the gusset.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.RegularGusset.Width">
            <summary>
            Gets or sets the width of the gusset.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.RegularGusset.Depth">
            <summary>
            Gets or sets the depth of the gusset.
            </summary>
            <remarks>
            The depth is the perpendicular distance from the bend face to the bottom of the gusset.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.RegularGusset.Angle">
            <summary>
            Gets or sets the angle (in radians) of the gusset.
            </summary>
            <remarks>
            A symmetric gusset has an angle of 45 degrees.
            The angle is measured clockwise about the <see cref="P:SpaceClaim.Api.V23.AxialBend.Axis"/> of the <see cref="T:SpaceClaim.Api.V23.GussetSite"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.RegularGusset.RoundRadius">
            <summary>
            Gets or sets the round radius to be applied to edges of the gusset.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.FlatGusset">
            <summary>
            A gusset with a flat bottom.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.FlatGusset.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a flat gusset style.
            </summary>
            <param name="width">The width of the gusset.</param>
            <param name="depth">The depth of the gusset.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.RoundGusset">
            <summary>
            A gusset with a round bottom.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.RoundGusset.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a round gusset style.
            </summary>
            <param name="width">The width of the gusset.</param>
            <param name="depth">The depth of the gusset.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.GussetSite">
            <summary>
            The site where a gusset is applied.
            </summary>
            <remarks>
            The two bends, <see cref="P:SpaceClaim.Api.V23.GussetSite.BendA"/> and <see cref="P:SpaceClaim.Api.V23.GussetSite.BendB"/>, are coaxial bends,
            and their <see cref="P:SpaceClaim.Api.V23.AxialBend.Axis"/> lines have the same direction.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.HemBend">
            <summary>
            A sheet metal form master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.HemBend.Style">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.HemBend.BendAllowance">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.HemBend.BendAllowanceOverride">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHemBend">
            <summary>
            A sheet metal hem.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHemBend.Style">
            <summary>
            Gets or sets the hem style.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.HemStyle">
            <summary>
            The base class for hem styles.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ClosedHem">
            <summary>
            A closed hem style.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ClosedHem.#ctor(System.Double)">
            <summary>
            Constructs a closed hem style.
            </summary>
            <param name="length">The foldback distance.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.ClosedHem.Length">
            <summary>
            Gets the foldback distance.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.OpenHem">
            <summary>
            An open hem style.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.OpenHem.#ctor(System.Double,System.Double)">
            <summary>
            Constructs an open hem style.
            </summary>
            <param name="length">The foldback distance.</param>
            <param name="gap">The inside gap.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.OpenHem.Length">
            <summary>
            Gets the foldback distance.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.OpenHem.Gap">
            <summary>
            Gets the inner gap.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.TeardropHem">
            <summary>
            A teardrop hem style.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.TeardropHem.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a teardrop hem style.
            </summary>
            <param name="length">The length of the teardrop shape.</param>
            <param name="height">The height of the teardrop shape.</param>
            <remarks>
            The <paramref name="height"/> is equivalent to the outer diameter of the bend surface.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.TeardropHem.Length">
            <summary>
            Gets the length of the teardrop shape.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.TeardropHem.Height">
            <summary>
            Gets the height of the teardrop shape.
            </summary>
            <remarks>
            The height is equivalent to the outer diameter of the bend surface.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.RolledHem">
            <summary>
            A rolled hem style.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.RolledHem.#ctor(System.Double)">
            <summary>
            Constructs a rolled hem style.
            </summary>
            <param name="innerRadius">The inner radius of the roll.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.RolledHem.InnerRadius">
            <summary>
            Gets the inner radius of the roll.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Marker">
            <summary>
            A sheet metal marker master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Marker.Face">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Marker.Location">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IMarker">
            <summary>
            A sheet metal marker.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IMarker.Face">
            <summary>
            Gets the face in which the marker lives.
            </summary>
            <remarks>
            The face is a planar sheet metal face, and not a side face.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IMarker.Location">
            <summary>
            Gets the location of the marker within the face.
            </summary>
            <remarks>
            The location is the UV point within the plane of the <see cref="P:SpaceClaim.Api.V23.IMarker.Face"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Section">
            <summary>
            A design body section.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.ISection"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Section.Body">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISection.Body"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Section.Curves">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISection.Curves"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Section.GetCurves(SpaceClaim.Api.V23.DesignFace)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.ISection.GetCurves(SpaceClaim.Api.V23.IDesignFace)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Section.GetCurves(SpaceClaim.Api.V23.IDesignFace)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Section.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Section.GetBoundingBox(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Section.GetExtremePoint(SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction,SpaceClaim.Api.V23.Geometry.Direction)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISection">
            <summary>
            A cross section through a design body.
            </summary>
            <remarks>
            It is not possible to create a section using the API.
            Sections occur when the user is working with the section plane on.
            Sections can only be obtained using the <see cref="M:SpaceClaim.Api.V23.InteractionContext.GetSection(SpaceClaim.Api.V23.IDesignBody)"/> method of the <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> class.
            <para/>
            Sections and their child <see cref="T:SpaceClaim.Api.V23.SectionCurve"/> objects are unusual doc-objects since they do not belong to a document.
            Consequently their <see cref="P:SpaceClaim.Api.V23.IHasDocument.Document"/> property returns <b>null</b>.
            <para/>
            They also don't have monikers or update states, so <see cref="P:SpaceClaim.Api.V23.IDocObject.Moniker"/> returns <b>null</b>,
            and <see cref="P:SpaceClaim.Api.V23.DocObject.UpdateState"/> returns <see cref="F:SpaceClaim.Api.V23.UpdateState.Empty"/>.
            <para/>
            A section is a root object, which means that its <see cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/> is <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISection.Body">
            <summary>
            Gets the design body being sectioned.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISection.Curves">
            <summary>
            Gets all section curves in this section.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ISection.GetCurves(SpaceClaim.Api.V23.IDesignFace)">
            <summary>
            Gets the section curves for a given face.
            </summary>
            <param name="desFace">The design face whose section curves are required.</param>
            <returns>A collection of section curves; empty if the face is not sectioned.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.SectionCurve">
            <summary>
            A section curve master.
            </summary>
            <remarks>
            <inheritdoc cref="T:SpaceClaim.Api.V23.ISectionCurve"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionCurve.Face">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISectionCurve.Face"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.SectionCurve.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.ISectionCurve.Parent"/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ISectionCurve">
            <summary>
            A section curve.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.ISection"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISectionCurve.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.ISectionCurve.Face">
            <summary>
            Gets the face being sectioned.
            </summary>
            <remarks>
            If the section plane passes through an edge, the most perpendicular face is returned.
            If both faces are equally perpendicular, the face behind the section plane is returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.VolumeExtractionAspect">
            <summary>
            The volume extraction aspect of a design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.VolumeExtractionAspect.SourceBodies">
            <summary>
            Gets the bodies that define the volume.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.VolumeExtractionAspect.Update">
            <summary>
            Updates the volume extraction body.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.AlignedViewAspect">
            <summary>
            The aligned view aspect of a drawing view.
            </summary>
            <remarks>
            An aligned view is a view that is projected from another view.
            Both projected views and auxiliary views are aligned views.
            The <see cref="P:SpaceClaim.Api.V23.AlignedViewAspect.IsAligned"/> property indicates whether the view is held in alignment with its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.AlignedViewAspect.IsAligned">
            <summary>
            Gets or sets whether the view is held in alignment with its source view.
            </summary>
            <remarks>
            Setting this property to <b>true</b> will cause the view to be repositioned
            so as to achieve the alignment with its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DerivedPlane.Plane">
            <summary>
            Gets the plane.
            </summary>
            <remarks>
            If the plane cannot be determined, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DerivedPlane.Document">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DerivedPoint.Point">
            <summary>
            Gets the point.
            </summary>
            <remarks>
            If the point cannot be determined, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DerivedPoint.Document">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DerivedViewAspect">
            <summary>
            The derived view aspect of a drawing view.
            </summary>
            <remarks>
            A derived view is a view with a projection that is derived from a <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/>.
            Projected views, auxiliary views, and detail views are all derived views, but general views are not.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView">
            <summary>
            Gets the source view from which this view is derived.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DerivedViewAspect.ConvertToGeneral">
            <summary>
            Converts the view into a general view.
            </summary>
            <remarks>
            The view is detached from its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/> to become a general view.
            <para/>
            After this method is called, the view is no longer a derived view
            and an exception is thrown if members of this aspect are called.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.DetailViewAspect">
            <summary>
            The detail view aspect of a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DetailViewAspect.DetachFromSourceView">
            <summary>
            Detaches the view from its source view.
            </summary>
            <remarks>
            A detail view is a view with a projection that is linked to a <see name="DerivedView.SourceView"/>.
            <see cref="M:SpaceClaim.Api.V23.DetailViewAspect.DetachFromSourceView"/> detaches the view from the source view so that its projection is now defined in the same way as the source view.
            For example, if the detail view is a detail of a projected view, then after detaching, this view will now be a projected view too.
            <para/>
            Unless the source view is also a detail view, after this method is called, the view is no longer a detail view
            and an exception is thrown if members of this aspect are called.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DetailViewAspect.Enlargement">
            <summary>
            Gets or sets the enlargement factor.
            </summary>
            <remarks>
            This property gives the enlargement factor of the view compared to the scale of its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/>.
            <para/>
            When <see cref="M:SpaceClaim.Api.V23.DrawingView.CreateDetailView(SpaceClaim.Api.V23.DrawingView,SpaceClaim.Api.V23.Geometry.PointUV)"/> is used to create a detail view, the scale is initially the default scale of the sheet.
            The <see cref="P:SpaceClaim.Api.V23.DetailViewAspect.Enlargement"/> property can be set to create a detail enlargement.
            <para/>
            The enlargement factor changes if the <see cref="P:SpaceClaim.Api.V23.DrawingView.ViewScale"/> of the view or its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/> is changed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DetailViewAspect.Name">
            <summary>
            Gets or sets the name of the detail view.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewAspect">
            <summary>
            An aspect of a drawing view.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewBoundary">
            <summary>
            Specifies the clipping boundary of a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingViewBoundary.Create(SpaceClaim.Api.V23.DerivedPoint,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})">
            <summary>
            Creates a clipping boundary for a drawing view.
            </summary>
            <param name="anchorPoint">The anchor point in model-space.</param>
            <param name="profile">The clipping profile in paper-space.</param>
            <returns>A drawing view clipping boundary.</returns>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.DrawingView.Boundary"/> property specifies the boundary of a drawing view.
            <para/>
            The <paramref name="profile"/> specifies the clipping profile in paper-space.
            The profile must be a single connected close loop, which is not self-intersecting.
            The segments of the profile can be in any order and direction.
            <para/>
            The <paramref name="anchorPoint"/> is a point in model-space to which the boundary is anchored.
            The anchor point is a <see cref="T:SpaceClaim.Api.V23.DerivedPoint"/>, which allows it to be linked to geometry in the model.
            If the view projection changes, or the anchor point moves, the clipping profile maintains its connection to the anchor point.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewBoundary.AnchorPoint">
            <summary>
            Gets the anchor point in model-space.
            </summary>
            <remarks>
            See the <see cref="M:SpaceClaim.Api.V23.DrawingViewBoundary.Create(SpaceClaim.Api.V23.DerivedPoint,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})"/> method for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewBoundary.Profile">
            <summary>
            Gets the clipping profile in paper-space.
            </summary>
            <remarks>
            See the <see cref="M:SpaceClaim.Api.V23.DrawingViewBoundary.Create(SpaceClaim.Api.V23.DerivedPoint,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Geometry.ITrimmedCurve})"/> method for more information.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewSectionType">
            <summary>
            The type of section of a drawing view.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewSectionType.Area">
            <summary>
            The section is an area section, so just the section cut is shown.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewSectionType.Total">
            <summary>
            The section is a total section, so the model behind the section cut is also shown.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewSection">
            <summary>
            Specifies the section for a drawing view.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingViewSection.Create(SpaceClaim.Api.V23.DerivedPlane,SpaceClaim.Api.V23.DrawingViewSectionType,SpaceClaim.Api.V23.DrawingView)">
            <summary>
            Creates the section information for a drawing view.
            </summary>
            <param name="cuttingPlane">The cutting plane in model-space.</param>
            <param name="type">The section type.</param>
            <param name="arrowsView">The view in which section arrows should be displayed.</param>
            <returns>A section for a drawing view.</returns>
            <remarks>
            A <see cref="T:SpaceClaim.Api.V23.DrawingViewSection"/> is created with no section <see cref="P:SpaceClaim.Api.V23.DrawingViewSection.Name"/> specified,
            and a section name will automatically be generated for the section.
            The <see cref="P:SpaceClaim.Api.V23.DrawingViewSection.Name"/> property can be set to specify a name, which must not already be used by another section view.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewSection.CuttingPlane">
            <summary>
            Gets or sets the cutting plane in model-space.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewSection.Type">
            <summary>
            Gets or sets the section type.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewSection.ArrowsView">
            <summary>
            Gets or sets the view in which the section arrows are displayed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewSection.Name">
            <summary>
            Gets or sets the section name.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewStyle">
            <summary>
            The style of a drawing view.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewStyle.Shaded">
            <summary>
            The view is shown shaded.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewStyle.WireFrame">
            <summary>
            The view is shown in wire-frame.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewStyle.HiddenEdgesDashed">
            <summary>
            The view is shown with hidden edges dashed or faint.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingViewStyle.HiddenEdgesRemoved">
            <summary>
            The view is shown with hidden edges removed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IAspect`1">
            <summary>
            The object implementing this interface is an aspect of another object.
            </summary>
            <typeparam name="T">Type of owner.</typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.IAspect`1.Owner">
            <summary>
            Gets the object of which this is an aspect.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Aspect`1">
            <summary>
            An aspect of a doc object.
            </summary>
            <typeparam name="TDocObject"></typeparam>
        </member>
        <member name="P:SpaceClaim.Api.V23.Aspect`1.Owner">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ValueDefinition">
            <summary>
            A value definition.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ValueDefinition.#ctor(System.Double,SpaceClaim.Api.V23.ValueType)">
            <summary>
            Constructs a value definition.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The value type.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.ValueDefinition.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ValueDefinition.Type">
            <summary>
            Gets or sets the type of value.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ValueType">
            <summary>
            A value type, used with a <see cref="T:SpaceClaim.Api.V23.ValueDefinition"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ValueType.Absolute">
            <summary>
            An absolute value.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ValueType.Relative">
            <summary>
            A relative value.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PickboxObjectType">
            <summary>
            Specifies the types of objects which are included in pickbox results. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PickboxObjectType.Single">
            <summary>
            Include only the first-encountered object type. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PickboxObjectType.Mixed">
            <summary>
            Include all object types.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PickboxObjectType.Default">
            <summary>
            Use the current settings. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Tool">
            <summary>
            The base class for interaction tools.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(System.String,SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "name">Tool name.</param>
            <param name = "mode">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(System.String,SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "name">Tool name.</param>
            <param name = "modeA">Supported interaction mode.</param>
            <param name = "modeB">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(System.String,SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "name">Tool name.</param>
            <param name = "modeA">Supported interaction mode.</param>
            <param name = "modeB">Supported interaction mode.</param>
            <param name = "modeC">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "mode">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "modeA">Supported interaction mode.</param>
            <param name = "modeB">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.#ctor(SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode,SpaceClaim.Api.V23.InteractionMode)">
            <summary>
            Constructs an interaction tool.
            </summary>
            <param name = "modeA">Supported interaction mode.</param>
            <param name = "modeB">Supported interaction mode.</param>
            <param name = "modeC">Supported interaction mode.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.SetMeshColorMap(SpaceClaim.Api.V23.DesignMesh,SpaceClaim.Api.V23.MeshColorMap)">
            <summary>
            Applies a color map to a design mesh.
            </summary>
            <param name="mesh">A design mesh to which the color ramp will be applied.</param>
            <param name="colorMap">A color map, or <b>null</b> to remove any existing color map from the design mesh.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.MeshColorMap"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.SetToolGuideLayout(SpaceClaim.Api.V23.ToolGuideLayout)">
            <summary>
            Sets the tool guide buttons for this tool.
            </summary>
            <param name="layout">The layout of tool guides.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.SetToolbarLayout(System.String)">
            <summary>
            Sets the mini-toolbar layout for this tool.
            </summary>
            <param name="layoutXml"></param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.ShowObjectToolbar(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Gets whether the object-oriented mini-toolbar should be displayed on selection. 
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.SelectionHandler`1.GetToolbarLayout(System.Collections.Generic.ICollection{`0})"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.OptionsXml">
            <summary>
            Gets the options panel layout for this tool.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.IsEnabled">
            <summary>
            Gets whether the tool is enabled.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.IsDragging">
            <summary>
            Gets whether a drag is in progress.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.SelectionTypes">
            <summary>
            Gets or sets the types of object that can be selected by the user.
            </summary>
            <remarks>
            The value is a collection of types, which may be interfaces or doc object classes.
            Only objects that satisfy one of these types can be selected by the user.
            <para/>
            The default value is one type, <c>typeof(<see cref="T:SpaceClaim.Api.V23.IDocObject"/>)</c>, which effectively means no filtering is done.
            <para/>
            If the value is set to an empty collection, no objects can be selected.
            <para/>
            To filter the selection by criteria other than type, <see cref="M:SpaceClaim.Api.V23.Tool.AdjustSelection(SpaceClaim.Api.V23.IDocObject)"/> can be overridden.
            See that method for more information.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Tool.AdjustSelection(SpaceClaim.Api.V23.IDocObject)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.PickboxUpselectBodies">
            <summary>
            Gets or sets whether faces are up-selected to bodies in pickbox selection.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.PickboxIncludedObjectTypes">
            <summary>
            Gets or sets the types of objects which are included in pickbox selection. 
            </summary>
            <remarks>This option allows a tool to override the selection filter in the UI.</remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.AdjustSelection(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Adjusts or filters objects being selected.
            </summary>
            <param name="docObject">The object to be tested.</param>
            <returns>The object to select, or <b>null</b> to filter out this object.</returns>
            <remarks>
            To filter objects by type, <see cref="P:SpaceClaim.Api.V23.Tool.SelectionTypes"/> should be set.
            After filtering by type, <see cref="M:SpaceClaim.Api.V23.Tool.AdjustSelection(SpaceClaim.Api.V23.IDocObject)"/> is called to determine the object to be selected.
            <para/>
            The default implementation simply returns the incoming <paramref name="docObject"/> so that no filtering is done.
            Override this method to perform filtering so that only desired objects are selected.
            <para/>
            Filtering is done on the preselection so that only suitable objects are prehighlighted.
            The method can return <b>null</b> to filter out an object;
            it can return the same object in order to allow that object;
            or it can return a different object, for example to preselect a design body when the user hovers over a design face or design edge.
            <para/>
            Filtering is also done on the current selection when the tool is activated,
            and it is done when the Select All command is chosen.
            In these situations, the selection is merely filtered, and not adjusted.
            If the method returns the same object, the object is accepted, otherwise it is filtered out.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Window">
            <summary>
            Gets the window to which this tool is assigned.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.Close">
            <summary>
            Closes the tool.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.InteractionContext">
            <summary>
            Gets or sets the interaction context in which the tool is working.
            </summary>
            <remarks>
            Cursor rays supplied to the tool in notification methods, such as <see cref="M:SpaceClaim.Api.V23.Tool.OnDragStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)" />,
            are supplied in context-space.
            Also, graphics objects are understood to be in context-space.
            <para />
            The default value is the <see cref="P:SpaceClaim.Api.V23.Window.ActiveContext" /> of the <see cref="T:SpaceClaim.Api.V23.Window" />.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.StatusText">
            <summary>
            Gets or sets the text to show in the status bar.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <remarks>
            Set to null to use the default cursor.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Rendering">
            <summary>
            Gets or sets the temporary graphics rendering.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.OverlayRendering">
            <summary>
            Gets or sets the overlay rendering.
            </summary>
            <remarks>
            With overlay rendering, all graphics primitives are assumed to be in pixel-space of the active view.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            <para/>
            Overlay rendering is only displayed in the active view,
            whereas <see cref="P:SpaceClaim.Api.V23.Tool.Rendering"/> is displayed in all views in the window.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDragEvent(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called to determine whether mouse dragging should be handled by the tool.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <returns><b>true</b> to handle drag events in the tool; else <b>false</b> for default handling.</returns>
            <remarks>
            If the return value is <b>true</b>, the tool handles drag behavior and <see cref="M:SpaceClaim.Api.V23.Tool.OnDragStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> will be called. This is the default if this method is not overridden.
            <para/>
            If the return value is <b>false</b>, default handling will be used, and dragging will perform a pick box selection. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDragStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called when the mouse drag begins. 
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <returns><b>true</b> to continue with the drag operation; else <b>false</b> to cancel.</returns>
            <remarks>
            If the return value is <b>true</b>, <see cref="M:SpaceClaim.Api.V23.Tool.OnDragMove(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> will be called for each mouse move during the drag. 
            <para/>
            If the return value is <b>false</b>, the drag will be canceled. This is the default if this method is not overridden.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDragMove(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called for each mouse move during a drag.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDragEnd(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called at the end of the drag.  
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDragCancel">
            <summary>
            Called if the drag is canceled. 
            </summary>
            <remarks>
            The drag may be canceled if the Escape key is pressed during the drag.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnPickbox(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Called when a pickbox is completed.
            </summary>
            <param name="objects">The objects included in the pickbox.</param>
            <returns><b>true</b> to handle the pickbox in the tool; else <b>false</b> for default handling.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnClickEvent(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called to determine whether mouse clicks should be handled by the tool.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <returns><b>true</b> to handle mouse clicks in the tool; else <b>false</b> for default handling.</returns>
            <remarks>
            If the return value is <b>true</b>, the tool handles mouse clicks and <see cref="M:SpaceClaim.Api.V23.Tool.OnClickStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> will be called. This is the default if this method is not overridden.
            <para/>
            If the return value is <b>false</b>, default selection handling will occur. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnClickStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called on a mouse click.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <returns><b>true</b> to continue with the click sequence; else <b>false</b> to end.</returns>
            <remarks>
            If the return value is <b>true</b>, then <see cref="M:SpaceClaim.Api.V23.Tool.OnClickEnd(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> will be called for the next mouse click. This may be useful 
            when multiple clicks are required for an operation. 
            <para/>
            If the return value is <b>false</b>, the click sequence will end. This is the default if this method is not overridden.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnClickMove(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called when the mouse is moved while in a click sequence. 
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <remarks>
            This method will be called as long as a previous call to <see cref="M:SpaceClaim.Api.V23.Tool.OnClickStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> or <see cref="M:SpaceClaim.Api.V23.Tool.OnClickEnd(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> returned true, 
            and <see cref="M:SpaceClaim.Api.V23.Tool.OnClickCancel"/> has not been called.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnClickEnd(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)">
            <summary>
            Called for subsequent mouse clicks. 
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <returns><b>true</b> to continue with the click sequence; else <b>false</b> to end.</returns>
            <remarks>
            If the return value is <b>true</b>, then <see cref="M:SpaceClaim.Api.V23.Tool.OnClickEnd(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/> will be called for the next mouse click.  
            <para/>
            If the return value is <b>false</b>, then the click sequence will end, and subsequent clicks will restart with <see cref="M:SpaceClaim.Api.V23.Tool.OnClickStart(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line)"/>. 
            This is the default value if the method is not overridden. 
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnClickCancel">
            <summary>
            Called if the click sequence is canceled. 
            </summary>
            <remarks>
            The click sequence may be canceled if the Escape key is pressed during the drag.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnMouseDown(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line,System.Windows.Forms.MouseButtons)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <param name="button">The button which has been pressed.</param>
            <returns><b>true</b> if the mouse event was handled by the tool and no further processing should be performed; else <b>false</b> for default handling.</returns>
            <remarks>
            The default return value is false;
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnMouseMove(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line,System.Windows.Forms.MouseButtons)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <param name="button">The button which has been pressed.</param>
            <returns><b>true</b> if the mouse event was handled by the tool and no further processing should be performed; else <b>false</b> for default handling.</returns>
            <remarks>
            Default handling includes preselection, so a return value of <b>true</b> will prevent any preselection from occurring. 
            <para/>
            The default return value is false;
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnMouseUp(System.Drawing.Point,SpaceClaim.Api.V23.Geometry.Line,System.Windows.Forms.MouseButtons)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="cursorRay">The cursor ray.</param>
            <param name="button">The button which has been pressed.</param>
            <returns><b>true</b> if the mouse event was handled by the tool and no further processing should be performed; else <b>false</b> for default handling.</returns>
            <remarks>
            The default return value is false;
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnMouseWheel(System.Drawing.Point,System.Int32)">
            <summary>
            Called when the mouse wheel is rotated
            </summary>
            <param name="cursorPos">The cursor position.</param>
            <param name="delta">A signed count of the number of detents the mouse wheel has rotated.</param>
            <returns><b>true</b> if the mouse event was handled by the tool and no further processing should be performed; else <b>false</b> for default handling.</returns>
            <remarks><paramref name="delta"/> will be a positive number when the wheel is rotated forward (away from the user), and negative when rotated backward.</remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnEnable(System.Boolean)">
            <summary>
            Called when the tool is being activated or deactivated.
            </summary>
            <param name="enable"><b>true</b> if the tool is being activated; otherwise <b>false</b></param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnDoubleClick">
            <summary>
            Called when a double-click occurs.
            </summary>
            <returns><b>true</b> if the double-click was handled; else <b>false</b> if default handling should proceed.</returns>
            <remarks>
            A double-click event occurs after a single-click event has already occurred.
            Hence double-click behavior is always in addition to single-click behavior, not instead of it.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Tool.OnTripleClick"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnTripleClick">
            <summary>
            Called when a triple-click occurs.
            </summary>
            <returns><b>true</b> if the triple-click was handled; else <b>false</b> if default handling should proceed.</returns>
            <remarks>
            A triple-click event occurs after a double-click event has already occurred.
            Hence triple-click behavior is always in addition to double-click behavior, not instead of it.
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Tool.OnDoubleClick"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnReadoutEdited(SpaceClaim.Api.V23.Readout,System.Int32,System.Double)">
            <summary>
            Called when a readout value has been changed. 
            </summary>
            <param name="readout">The readout.</param>
            <param name="field">The field name.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnSelectedIndicatorsChanged">
            <summary>
            Called when the selected indicators have changed.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.OnSelectedHandleChanged">
            <summary>
            Called when the selected handle has changed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Readouts">
            <summary>
            Gets the readouts of the tool.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateOffsetReadout(SpaceClaim.Api.V23.Geometry.Curve,System.Boolean)">
            <summary>
            Creates readout, which measures an offset from a curve.
            </summary>
            <param name="curve">The curve from which the offset is measured.</param>
            <param name="symmetric">Whether the offset is symmetric about the curve.</param>
            <returns>A readout.</returns>
            <remarks>
            By providing a <see cref="T:SpaceClaim.Api.V23.Geometry.PointCurve"/> as the <paramref name="curve"/>, the distance from a point can be measured.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateRadiusReadout(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates a readout, which measures a radius.
            </summary>
            <param name="origin">v.</param>
            <returns>A readout.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateDiameterReadout(SpaceClaim.Api.V23.Geometry.Point,System.Boolean)">
            <summary>
            Creates a readout, which measures a diameter.
            </summary>
            <param name="origin">The origin about which the diameter is measured.</param>
            <param name="useLeader">Whether the readout should use a leader.</param>
            <returns>A readout.</returns>
            <remarks>
            If <paramref name="useLeader"/> is <b>true</b>, the <see cref="P:SpaceClaim.Api.V23.Readout.UseLeader"/> property of the <see cref="T:SpaceClaim.Api.V23.Readout"/>
            is set to <b>true</b>, so that the presentation is like a radius readout, only the value is doubled;
            otherwise the presentation is like a linear dimension across the diameter.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateLengthReadout(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,System.Boolean,System.Boolean)">
            <summary>
            Creates a readout, which measures a length in a particular direction.
            </summary>
            <param name="origin">The origin from which the length is measured.</param>
            <param name="dir">The direction of measurement.</param>
            <param name="symmetric">Whether the measurement is symmetric about the origin.</param>
            <param name="followTarget">Whether the dimension line should follow the target point.</param>
            <returns>A readout.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateAngleReadout(SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction,System.Boolean,System.Boolean)">
            <summary>
            Creates a readout, which measures an angle from a base direction.
            </summary>
            <param name="origin">The origin about which the angle is measured</param>
            <param name="baseDir">The direction of the zero angle.</param>
            <param name="symmetric">Whether the measurement is symmetric about the base direction.</param>
            <param name="followTarget">Whether the dimension line should follow the target point.</param>
            <returns>A readout.</returns>
            <remarks>
            The angle is between 0 and 180 degrees.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateAngleReadout(SpaceClaim.Api.V23.Geometry.Frame,System.Boolean,System.Boolean)">
            <summary>
            Creates a readout, which measures an angle about an axis.
            </summary>
            <param name="frame">The frame for the measurement.</param>
            <param name="positive">Whether the angle must be positive.</param>
            <param name="followTarget">Whether the dimension line should follow the target point.</param>
            <returns>A readout.</returns>
            <remarks>
            The <paramref name="frame"/> specifies how the measurement is made.
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/> direction of the <paramref name="frame"/> is the direction of the zero angle,
            and the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirY"/> direction of the <paramref name="frame"/> is the axis direction.
            <para/>
            The angle is measured in a clockwise direction about the axis.
            If <paramref name="positive"/> is <b>true</b>, the angle is between 0 and 360 degrees;
            otherwise the angle is between -180 and 180 degrees.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateCurveLengthReadout(SpaceClaim.Api.V23.Geometry.Curve,System.Double)">
            <summary>
            Creates a readout, which measures a length along a curve.
            </summary>
            <param name="curve">The curve along which the length is measured.</param>
            <param name="startParam">The start parameter from which to measure.</param>
            <returns>A readout.</returns>
            <remarks>
            The distance is a zero or positive value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Indicators">
            <summary>
            Gets the indicators of the tool.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateIndicator(SpaceClaim.Api.V23.Geometry.Point)">
            <summary>
            Creates an indicator at a point.
            </summary>
            <param name="position">The position of the indicator.</param>
            <returns>An indicator.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateIndicator(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignFace})">
            <summary>
            Creates an indicator for a collection of faces.
            </summary>
            <param name="desFaces">The faces.</param>
            <returns>An indicator.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateIndicator(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignEdge})">
            <summary>
            Creates an indicator for a collection of edges.
            </summary>
            <param name="desEdges">The edges.</param>
            <returns>An indicator.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateIndicator(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDesignCurve})">
            <summary>
            Creates an indicator for a collection of curves.
            </summary>
            <param name="desCurves">The curves.</param>
            <returns>An indicator.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.Handles">
            <summary>
            Gets the handles of the tool.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tool.SelectedHandle">
            <summary>
            Gets or sets the selected handle.
            </summary>
            <remarks>
            If no handle is selected, the value is <b>null</b>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateDirectionHandle(System.Drawing.Color,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates a direction handle.
            </summary>
            <param name="color">The color to use, or <see cref="F:System.Drawing.Color.Empty"/> for the default handle color.</param>
            <param name="position">The position of the handle.</param>
            <param name="dir">The direction to show.</param>
            <returns>A handle.</returns>
            <remarks>
            The handle is created, but it is not selected.
            You can set <see cref="P:SpaceClaim.Api.V23.Tool.SelectedHandle"/> to select the handle.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tool.CreateAxisHandle(System.Drawing.Color,SpaceClaim.Api.V23.Geometry.Point,SpaceClaim.Api.V23.Geometry.Direction)">
            <summary>
            Creates an axis handle.
            </summary>
            <param name="color">The color to use, or <see cref="F:System.Drawing.Color.Empty"/> for the default handle color.</param>
            <param name="position">The position of the handle.</param>
            <param name="dir">The axis direction to show.</param>
            <returns>A handle.</returns>
            <remarks>
            The handle is created, but it is not selected.
            You can set <see cref="P:SpaceClaim.Api.V23.Tool.SelectedHandle"/> to select the handle.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.InteractionHandler.CurrentContextFactory">
            <summary>
            The basic idea of this indirection is that if somebody wants to override "CurrentContext", they 
            must also override "TryConvertToPreferredContext", by overriding the current context factory.
            This significantly increases the probability of the two methods being synchronized.  It would be
            nice if Visual Studio supported custom compile-time assertions like "if A is overridden then
            B must also be overridden" but it does not.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DocumentMaterial">
            <summary>
            A material that belongs to a document.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocumentMaterial.Create(SpaceClaim.Api.V23.Document,System.String,System.Double)">
            <summary>
            Creates a new material.
            </summary>
            <param name="doc">The document in which the material should be created.</param>
            <param name="name">The name of the material.</param>
            <param name="density">The density of the material.</param>
            <returns>The created material.</returns>
            <exception cref="T:System.ArgumentException">A material already exists with the name.</exception>
            <exception cref="T:System.ArgumentException">Density must be positive.</exception>
            <remarks>
            A material has a name, which is case sensitive,
            i.e. two materials, "steel" and "Steel", can both exist in the same document and could have different densities.
            <para/>
            The density is specified in SI units, i.e. kilograms per cubic meter.
            For example, water has a density of 1000 kilograms per cubic meter.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocumentMaterial.Copy(SpaceClaim.Api.V23.Document,SpaceClaim.Api.V23.Material)">
            <summary>
            Creates a copy of an existing material.
            </summary>
            <param name="doc">The document in which to create the new material.</param>
            <param name="material">An existing material to copy.</param>
            <returns>The new material.</returns>
            <remarks>
            This method can be used to copy a <see cref="T:SpaceClaim.Api.V23.DocumentMaterial"/> from one document to another,
            or to create a <see cref="T:SpaceClaim.Api.V23.DocumentMaterial"/> as a copy of a <see cref="T:SpaceClaim.Api.V23.LibraryMaterial"/>.
            <para/>
            If a library material is copied, and the library material
            has a <see cref="T:SpaceClaim.Api.V23.MaterialProperty"/> with an <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/> of <see cref="F:SpaceClaim.Api.V23.MaterialPropertyId.Density"/>,
            then this material property is used to set the <see cref="P:SpaceClaim.Api.V23.DocumentMaterial.Density"/> of the new document material.
            If no such material property exists, or the density cannot be parsed
            (e.g. the value is zero, or the <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Units"/> cannot be interpreted),
            then the new material is created with a default density equal to that of water
            (1000 kilograms per cubic meter).
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.Name">
            <summary>
            Gets or sets the name of the material.
            </summary>
            <remarks>
            A material has a name, which is case sensitive,
            i.e. two materials, "steel" and "Steel", can both exist in the same document and could have different properties.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.IsFluid">
            <summary>
            Gets or sets whether the material is fluid.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.Density">
            <summary>
            Gets or sets the density of the material.
            </summary>
            <exception cref="T:System.ArgumentException">Density must be positive.</exception>
            <remarks>
            The density is specified in SI units, i.e. kilograms per cubic meter.
            For example, water has a density of 1000 kilograms per cubic meter.
            <para/>
            If the material has a <see cref="T:SpaceClaim.Api.V23.MaterialProperty"/> with an <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/> of <see cref="F:SpaceClaim.Api.V23.MaterialPropertyId.Density"/>,
            then this material property is updated with the new density value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.Properties">
            <summary>
            Gets the material properties for this material.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocumentMaterial.SetProperty(SpaceClaim.Api.V23.MaterialProperty)">
            <summary>
            Sets a material property.
            </summary>
            <param name="property">The material property to set.</param>
            <remarks>
            If the material already has a material property with the same <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/>,
            then the existing material property is replaced; otherwise the material property is added.
            <para/>
            If the <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/> is the <see cref="F:SpaceClaim.Api.V23.MaterialPropertyId.Density"/> property id,
            the <see cref="P:SpaceClaim.Api.V23.DocumentMaterial.Density"/> property of the material is also updated.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocumentMaterial.RemoveProperty(System.String)">
            <summary>
            Removes the material property with the given id.
            </summary>
            <param name="id">The id of the material property to remove.</param>
            <returns><b>true</b> if the material property was found and removed; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.Document">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.Document"/> to which this object belongs.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocumentMaterial.Delete">
            <summary>
            Deletes the object.
            <para/>
            Unhooks the object from its parent, if any, and then deletes it.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentMaterial.IsDeleted">
            <summary>
            Gets whether the object is deleted.
            </summary>
            <remarks>
            Undo and redo operations can bring deleted objects back to life.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasMaterial">
            <summary>
            A doc object that has material.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasMaterial.Material">
            <summary>
            Gets or sets the material of the object.
            </summary>
            <exception cref="T:System.ArgumentException">The material does belong to the correct document.</exception>
            <remarks>
            <see cref="T:SpaceClaim.Api.V23.DesignBody"/>, <see cref="T:SpaceClaim.Api.V23.DesignMesh"/>, and <see cref="T:SpaceClaim.Api.V23.Part"/> implement <see cref="T:SpaceClaim.Api.V23.IHasMaterial"/>.
            If the body or mesh has no material (the material is <b>null</b>), then the material of the part is implied.
            If the part has no material (the material is <b>null</b>), then the material is not specified.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LibraryMaterial">
            <summary>
            A material that lives in the material library.
            </summary>
            <remarks>
            The material library can be accessed using the <see cref="P:SpaceClaim.Api.V23.LibraryMaterial.Library"/> property.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.LibraryMaterial.Library">
            <summary>
            Gets the material library.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LibraryMaterial.Properties">
            <summary>
            Gets the material properties for this material.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LibraryMaterialDictionary">
            <summary>
            A dictionary mapping material names to <see cref="T:SpaceClaim.Api.V23.LibraryMaterial"/> objects.
            </summary>
            <remarks>
            You can access a material of a specific name by looking it up using the indexer or the <see cref="M:SpaceClaim.Api.V23.LibraryMaterialDictionary.TryGetValue(System.String,SpaceClaim.Api.V23.LibraryMaterial@)"/> method.
            Names are case sensitive.
            <para/>
            The collection of material can be accessed using the <see cref="P:SpaceClaim.Api.V23.LibraryMaterialDictionary.Values"/> property.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Material">
            <summary>
            A material.
            </summary>
            <remarks>
            There are two types of material:
            <para/>
            <list type="table">
            	<listheader>
            		<term>Type</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.DocumentMaterial"/></term>
            		<description>
            			A material that belongs to a document and can be used as
            			the <see cref="P:SpaceClaim.Api.V23.IHasMaterial.Material"/> property of a <see cref="T:SpaceClaim.Api.V23.DesignBody"/> or <see cref="T:SpaceClaim.Api.V23.Part"/>.
            		</description>
            	</item>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.LibraryMaterial"/></term>
            		<description>
            			A material in the material library.
            			These materials are read-only.
            		</description>
            	</item>
            </list>
            <para/>
            To use a material from the library, you should first call <see cref="M:SpaceClaim.Api.V23.DocumentMaterial.Copy(SpaceClaim.Api.V23.Document,SpaceClaim.Api.V23.Material)"/> to create
            a copy of that material in the document in which it is to be used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Material.Name">
            <summary>
            Gets the name of the material.
            </summary>
            <remarks>
            A material has a name, which is case sensitive,
            i.e. two materials, "steel" and "Steel", can both exist in the same document and could have different properties.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Material.Properties">
            <summary>
            Gets the material properties for this material.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DocumentMaterialDictionary">
            <summary>
            A dictionary mapping material names to <see cref="T:SpaceClaim.Api.V23.DocumentMaterial"/> objects.
            </summary>
            <remarks>
            You can access a material of a specific name by looking it up using the indexer or the <see cref="M:SpaceClaim.Api.V23.DocumentMaterialDictionary.TryGetValue(System.String,SpaceClaim.Api.V23.DocumentMaterial@)"/> method.
            Names are case sensitive.
            <para/>
            The collection of material can be accessed using the <see cref="P:SpaceClaim.Api.V23.DocumentMaterialDictionary.Values"/> property.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.MaterialProperty">
            <summary>
            Represents a material property.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.MaterialProperty.#ctor(System.String,System.String,System.Double,System.String)">
            <summary>
            Creates a new material property.
            </summary>
            <param name="id">The id of the property.</param>
            <param name="displayName">The display name of the property.</param>
            <param name="value">The value of the property.</param>
            <param name="units">The units of the property.</param>
            <remarks>
            Some common property <paramref name="id"/> values can be found in the <see cref="T:SpaceClaim.Api.V23.MaterialPropertyId"/> class.
            <para/>
            If the material property has no units (e.g. Poisson's ratio), an empty string or <b>null</b> can be supplied.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.MaterialProperty.Id">
            <summary>
            Gets the id of the property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MaterialProperty.DisplayName">
            <summary>
            Gets or sets the display name of the property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MaterialProperty.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.MaterialProperty.Units">
            <summary>
            Gets or sets the units of the property.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MaterialPropertyDictionary">
            <summary>
            A dictionary mapping material property <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/> values to <see cref="T:SpaceClaim.Api.V23.MaterialProperty"/> objects.
            </summary>
            <remarks>
            You can access a material property of a specific <see cref="P:SpaceClaim.Api.V23.MaterialProperty.Id"/> by looking it up using the
            indexer or the <see cref="M:SpaceClaim.Api.V23.MaterialPropertyDictionary.TryGetValue(System.String,SpaceClaim.Api.V23.MaterialProperty@)"/> method.
            Material property ids are case sensitive.
            <para/>
            The collection of material properties can be accessed using the <see cref="P:SpaceClaim.Api.V23.MaterialPropertyDictionary.Values"/> property.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.UpdateState">
            <summary>
            Represents the update state of a <see cref="T:SpaceClaim.Api.V23.DocObject"/>.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.DocObject.UpdateState"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGeneral.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGeneral.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGeneral.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurveGeneral.Scale(SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignCurve">
            <summary>
            A design curve master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParentMaster,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <summary>
            Creates a design curve.
            </summary>
            <param name="parent">The parent of the design curve.</param>
            <param name="shape">The shape of the design curve.</param>
            <returns>The new design curve.</returns>
            <remarks>
            If the <paramref name="parent"/> is a planar object, e.g. a <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> or <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>,
            then the <paramref name="shape"/> should lie in that plane.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParentMaster,SpaceClaim.Api.V23.Geometry.ITrimmedCurve,System.Nullable{System.Boolean})">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParentMaster,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParent,SpaceClaim.Api.V23.Geometry.ITrimmedCurve,System.Nullable{System.Boolean})">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParentMaster,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParent,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DesignCurve.Create(SpaceClaim.Api.V23.IDesignCurveParentMaster,SpaceClaim.Api.V23.Geometry.ITrimmedCurve)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.IsConstruction">
            <summary>
            Gets or sets whether the design curve is a construction object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.GetLineWeight(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line weight of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line weight of the object.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line weight of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineWeight})">
            <summary>
            Sets the line weight of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="weight">The line weight to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line weight of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.GetLineStyle(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line style of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line style of the object.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line style of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineStyle})">
            <summary>
            Sets the line style of the design curve in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="style">The line style to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the line style of the layer is used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignCurve.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.Shape">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Copy">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IDesignCurve.Copy"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Replace(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DocObject})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignCurve.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DesignCurve.Scale(SpaceClaim.Api.V23.Geometry.Frame,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDesignCurve">
            <summary>
            A design curve.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurve.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurve.Shape">
            <summary>
            Gets or sets the shape of the design curve.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDesignCurve.Copy">
            <summary>
            Creates a copy of the design curve.
            </summary>
            <returns>A copy of the design curve.</returns>
            <remarks>
            The copy has the same parent, geometry, name, layer, line style, line width, and color as the original.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveParent.Master">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveParent.Curves">
            <summary>
            Gets the child design curves.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveParent.CurveGroups">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveParentMaster.Curves">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignCurveParentMaster.CurveGroups">
            <exclude/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IReplaceable">
            <summary>
            The doc object implementing this interface is replaceable.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IReplaceable.Replace(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DocObject})">
            <summary>
            Deletes the object and records its replacements.
            </summary>
            <param name="replacements">Replacements for the object.</param>
            <remarks>
            The object is deleted, and the <paramref name="replacements"/> are recorded as its survivors.
            See <see cref="M:SpaceClaim.Api.V23.Moniker`1.ResolveSurvivors(SpaceClaim.Api.V23.Document)"/> for more information on survivors.
            <para/>
            The <paramref name="replacements"/> must belong to the same part and must not already
            be survivors of another object.
            <para/>
            If <paramref name="replacements"/> is <b>null</b> or empty, the object is simply deleted.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasExportIdentifier.ExportIdentifier">
            <summary>
            Gets the identifier used when the object is exported.
            </summary>
            <remarks>
            When an ACIS or Parasolid file is exported, either by the user, or by calling <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>,
            <i>name</i> attributes are attached to faces and edges in the file to indicate which <see cref="T:SpaceClaim.Api.V23.DesignFace"/> or
            <see cref="T:SpaceClaim.Api.V23.DesignEdge"/> they came from.
            This is useful if the model is changed and then a new file is exported, since corresponding faces and edges
            will have the same <i>name</i> attributes.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.IHasExportIdentifier.ExportIdentifier"/> returns the value of the <i>name</i> attribute that is written for this object.
            <para/>
            An ACIS <i>name</i> attribute is a "named attribute" (ATTRIB_GEN_NAME) with the attribute name, "ATTRIB_XACIS_NAME".
            <para/>
            A Parasolid <i>name</i> attribute is a system attribute with the name, "SDL/TYSA_NAME".
            <para/>
            Identifiers are also exported to STEP files if the <see cref="P:SpaceClaim.Api.V23.StepExportOptions.ExportIdentifiers"/> option is <b>true</b>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasUnits">
            <summary>
            The object implementing this interface has units of measurement.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasUnits.Units">
            <summary>
            Gets the units of measurement, in which the user is working.
            </summary>
            <remarks>
            Internally SpaceClaim works in SI Units (meters, kilograms, seconds) and angles are in radians.
            The user may be working in different units,
            therefore system values are converted to user units on output to the user,
            and are converted back from user units to system units on input from the user.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.Document"/> defines the units of measurement in which the user is working.
            For a document, the <see cref="P:SpaceClaim.Api.V23.IHasUnits.Units"/> property is never <b>null</b>.
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> may override the units for any objects in that drawing sheet, such as dimensions.
            If the drawing sheet does not override the units, then the <see cref="P:SpaceClaim.Api.V23.IHasUnits.Units"/> property is <b>null</b>.
            <para/>
            <see cref="T:SpaceClaim.Api.V23.Window"/> also implements <see cref="T:SpaceClaim.Api.V23.IHasUnits"/>, and provides the units in which the user
            is working in that window.  This is usually the most convenient access to units.
            If the window shows a drawing sheet that overrides document units, these units are returned;
            otherwise the document units are returned.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.RollDirection">
            <summary>
            The roll direction. Used with <see cref="T:SpaceClaim.Api.V23.SessionRolledEventArgs"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RollDirection.Undo">
            <summary>
            An undo.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RollDirection.Redo">
            <summary>
            A redo. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RollEventType">
            <summary>
            The roll event type. Used with <see cref="T:SpaceClaim.Api.V23.SessionRolledEventArgs"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RollEventType.Temporary">
            <summary>
            An undo/redo event that occurs while interactively modifying an object, such as pulling a face. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RollEventType.Committed">
            <summary>
            A standard undo/redo event. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SessionRolledEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Application.SessionRolled"/> and <see cref="E:SpaceClaim.Api.V23.Application.SessionRolledIncremental"/> events.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SessionRolledEventArgs.EventType">
            <summary>
            Gets the type of undo/redo operation associated with this event.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SessionRolledEventArgs.Direction">
            <summary>
            Gets whether the operation is an undo or redo.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.SessionChangedEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Application.SessionChanged"/> event.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Base">
            <summary>
            An abstract base class for many objects in the class library.
            Provides no interesting properties or methods.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MainThread.UserSettings">
            <summary>
            Events are raised when settings are changed, and many handlers require the main thread.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MainThread.NoteText">
            <summary>
            The internal Note.NoteText getter calls CheckUpdate, which can result in
            Text.UpdateLayout, which uses SuspendGraphics, which requires the main thread.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasColor">
            <summary>
            The object implementing this interface has a color.
            </summary>
            <remarks>
            If the color is <b>null</b>, the color of the parent is used if the parent implements <see cref="T:SpaceClaim.Api.V23.IHasColor"/>;
            otherwise the color of the layer is used.
            <para/>
            For example, <see cref="T:SpaceClaim.Api.V23.DesignFace"/> and <see cref="T:SpaceClaim.Api.V23.DesignBody"/> both implement <see cref="T:SpaceClaim.Api.V23.IHasColor"/>,
            and <see cref="T:SpaceClaim.Api.V23.DesignBody"/> implements <see cref="T:SpaceClaim.Api.V23.IHasLayer"/>.
            If the design face color is <b>null</b>, the color of the design body is used.
            If the color of the design body is <b>null</b>, the color of the design body layer is used.
            <para/>
            <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> implements <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/>, which means the color of an object
            can be set differently in a <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> from how it appears in design windows.
            If the color in a drawing sheet has never been set, then the color used in design windows will be used in the drawing sheet.
            (This is different from how visibility works - see <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>.)
            If the color is <b>null</b>, the parent or layer color will be used, which could itself be different in the drawing sheet.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasColor.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the color of the object in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The color of the object.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the color of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasColor.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the color of the object in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="color">The color to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the value is <b>null</b>, the color of the layer is used.
            <para/>
            The alpha component of the <paramref name="color"/> is ignored.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ExecutionContext">
            <summary>
            The context of a command being executed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExecutionContext.Data">
            <summary>
            Gets or sets the data for the command.
            </summary>
            <remarks>
            A command that displays a dialog can set the data to be used when a journal
            file is replayed, so that the same data can be reused without displaying the dialog again.
            <para/>
            If no data has been set, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExecutionContext.IsReplay">
            <summary>
            Gets whether a journal file is being replayed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ExecutionContext.IsNested">
            <summary>
            Gets whether the command is being executed from within another command.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CommandExecutingEventArgs.Context">
            <summary>
            Gets the execution context for the command being executed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CommandExecutingEventArgs.ButtonRectangle">
            <summary>
            Gets the rectangle in screen space of the button that was pressed.
            </summary>
            <remarks>
            Returns an empty rectangle (<see cref="P:System.Drawing.Rectangle.IsEmpty"/> is <b>true</b>) if the command
            was not executed by pressing a button.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Command">
            <summary>
            Each UI control in SpaceClaim must be bound to a Command.  A Command controls the text, tooltip, 
            image, and handles the <see cref="E:SpaceClaim.Api.V23.Command.Executed"/> and <see cref="E:SpaceClaim.Api.V23.Command.Updating"/> events.  
            </summary>
            <remarks>	
            If a new UI control is created by the add-in, the add-in must either create a new Command or 
            associated it with an existing Command.
            <para/>
            To add commands the add-in must implement <see cref="T:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility"/>.
            <para/>
            To add UI controls to the Ribbon the add-in must implement <see cref="T:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.Extensibility.ICommandExtensibility"/>
            <seealso cref="T:SpaceClaim.Api.V23.Extensibility.IRibbonExtensibility"/>
            <seealso cref="E:SpaceClaim.Api.V23.Application.ContextMenuOpening"/>
        </member>
        <member name="E:SpaceClaim.Api.V23.Command.Executing">
            <summary>
            Occurs when the command is about to execute.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Command.Executed">
            <summary>
            Occurs when the command has executed.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Command.CommandExecuted">
            <summary>
            Occurs when any command has executed.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the command that was executed.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Command.Updating">
            <summary>
            Occurs when the command is required to update its state.
            </summary>
            <remarks>
            <para>
            For example, the event handler can update the <see cref="P:SpaceClaim.Api.V23.Command.IsEnabled"/> and/or <see cref="P:SpaceClaim.Api.V23.Command.IsChecked"/> properties of the command.  This will
            in turn update state of the UI components bound to this command so that items such as buttons can be enabled or disabled
            depending on the state of the command. 
            </para>
            <para>
            <b>IMPORTANT:</b> The Updating event is raised during the applications idle processing. This event may be raised many times per second,
            therefore there should be no compute-intensive code in an Updating event.
            </para>
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Command.TextChanged">
            <summary>
            Occurs when the command Text property has been changed from the user interface.
            </summary>
            <remarks>
            <para>
            The Text property can be set interactively from TextBox and ComboBox controls. This event is raised when the text is finalized, either
            by the control losing focus, the Enter key has been pressed, or a ComboBox item has been selected.  
            </para>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.Create(System.String)">
            <summary>
            Creates a command.
            </summary>
            <param name="name">The name of the command to create.</param>
            <returns>The new command.</returns>
            <exception cref="T:System.ArgumentException">A command already exists with the specified name.</exception>
            <remarks>
            All commands must have unique names. Add-ins should prepend the name of the add-in to the command name.  
            For example: "MyAddIn.YourCommand"
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.Execute(System.String)">
            <summary>
            Executes the command with the specified name.
            </summary>
            <param name="commandName">The name of the command to execute.</param>
            <exception cref="T:System.ArgumentException">Command not found.</exception>
            <remarks>
            This method is equivalent to using <see cref="M:SpaceClaim.Api.V23.Command.GetCommand(System.String)"/> followed by <see cref="M:SpaceClaim.Api.V23.Command.Execute"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.Execute">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.ExecuteWithData(System.String)">
            <summary>
            Executes a command, supplying input data.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.AllCommands">
            <summary>
            Gets all commands currently in use by the application.
            </summary>
            <remarks>
            The readonly collection returned contains all commands, including native SpaceClaim commands,
            and commands of other add-ins.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.GetCommand(System.String)">
            <summary>
            Gets the command with the specified name.
            </summary>
            <param name="name">The name of the command.</param>
            <returns>The command with the specified name; else <b>null</b> if no such command exists.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.GetCommand(System.Windows.Forms.Keys)">
            <summary>
            Gets the command with the specified shortcut.
            </summary>
            <param name="shortcut">The shortcut.</param>
            <returns>The command with the specified shortcut; else <b>null</b> if no such command exists.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.Name">
            <summary>
            Gets the name of the command.
            </summary>
            <remarks>
            All commands must have unique names.
            Therefore add-ins should prepend the name of the add-in to the command name, e.g. "YourAddIn.YourCommand".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.Text">
            <summary>
            Gets or sets the display text for the command.
            </summary>
            <remarks>
            This is shown on the controls bound to this command, and is also used if the command appears in the undo drop list.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.ControlState">
            <summary>
            Gets or sets the data for advanced controls bound to this command.
            </summary>
            <remarks>
            Simple controls (buttons, labels, text boxes, check boxes, radio buttons, tabs, groups) are fully
            defined by the <see cref="P:SpaceClaim.Api.V23.Command.Text"/> and <see cref="P:SpaceClaim.Api.V23.Command.Image"/> of the command, but some controls require more data:
            <list type="bullet">
            <item>
            	If a combo box is bound to the command, the <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> will return a <see cref="T:SpaceClaim.Api.V23.ComboBoxState"/>
            	to describe the combo box items and whether the combo box shows an edit field.
            </item>
            <item>
            	If a spin box is bound to the command, the <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> will return a <see cref="T:SpaceClaim.Api.V23.SpinBoxState"/>
            	to describe the spin box numeric range and current value.
            </item>
            <item>
            	If a slider is bound to the command, the <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> will return a <see cref="T:SpaceClaim.Api.V23.SliderState"/>
            	to describe the slider numeric range and current value.
            </item>
            <item>
            	If a gallery is bound to the command, the <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> will return a <see cref="T:SpaceClaim.Api.V23.GalleryState"/>
            	to describe the gallery items.
            </item>
            </list>
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> can be set when the command is created, before the control is bound to it,
            or the details of the control can be described in the XML instead.
            If both are done, the supplied <see cref="P:SpaceClaim.Api.V23.Command.ControlState"/> will be applied to the control and will override the XML.
            <para/>
            When the user changes the control, the <see cref="E:SpaceClaim.Api.V23.Command.TextChanged"/> event is raised.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.Hint">
            <summary>
            Gets or sets the tooltip text.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Command.Hint"/> text is displayed in the tooltip of any controls bound to this command.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.DisabledHint">
            <summary>
            Gets or sets the additional text to be displayed on the tooltip when the command is disabled.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Command.DisabledHint"/> is displayed beneath the <see cref="P:SpaceClaim.Api.V23.Command.Hint"/> text when the command is disabled,
            and can be used to explain how to enable the command.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.Image">
            <summary>
            Gets or sets the image that will be displayed on any controls bound to this command.
            </summary>
            <remarks>
            The image should be 32x32 pixels to create a large button, or 16x16 pixels to create a small button.
            If the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> is <b>null</b> then the <see cref="P:SpaceClaim.Api.V23.Command.HintImage"/> will be used.
            If both images are <b>null</b>, then no image will be displayed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.ImageKey">
            <summary>
            Gets or sets the image key used to identify the display image.
            </summary>
            <remarks>
            This property is only used in Disco. If the image key does not correspond
            to a toolkit image, then it will need to be added to Disco resources
            through a call to the Disco Api along with its corresponding image.
            If the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> is not <b>null</b>, Disco will automatically
            use <see cref="P:SpaceClaim.Api.V23.Command.Name"/> as the image key to ensure consistency between
            the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> and the <see cref="P:SpaceClaim.Api.V23.Command.ImageKey"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.HintImage">
            <summary>
            Gets or sets the image to be displayed in the tooltip.
            </summary>
            <remarks>
            The image should be 32x32 pixels.
            <para/>
            If the <see cref="P:SpaceClaim.Api.V23.Command.HintImage"/> is <b>null</b> then the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> will be used.
            If both images are <b>null</b>, then no image will be displayed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.IsVisible">
            <summary>
            Gets or sets whether the command is visible.
            </summary>
            <remarks>
            All controls bound to the command that have a "Visible" property will be updated when
            this property is changed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.IsEnabled">
            <summary>
            Gets or sets whether the command is enabled.
            </summary>
            <remarks>
            All controls bound to the command that have an "Enabled" property will be updated when
            this property is changed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.IsChecked">
            <summary>
            Gets or sets whether the command is checked or pressed.
            </summary>
            <remarks>
            All controls bound to the command that have a "Checked" property will be updated when
            this property is changed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.IsWriteBlock">
            <summary>
            Gets or sets whether the command executes within a write block.
            </summary>
            <remarks>
            Code executed within a write block is allowed to make changes to documents.
            Any changes made within the write block are presented to the user as an undo step.
            If no changes are made, this is harmless, and no undo step is created.
            <para/>
            The default is <b>true</b>, and this is usually desired.
            <para/>
            An apply loop is automatically canceled if another write block is started.
            An <see cref="T:SpaceClaim.Api.V23.Animation"/> can use an <see cref="T:SpaceClaim.Api.V23.Animator"/>, which is implemented using apply loop.
            If the command for a Pause button were to start another write block,
            this would cancel the apply loop, aborting any changes made so far, rather than just pausing the animation.
            To solve this problem, <see cref="P:SpaceClaim.Api.V23.Command.IsWriteBlock"/> can be set to <b>false</b> when the command is created,
            so that a write block is not started when the Pause button is pressed.
            <para/>
            The command is not journaled when set to <b>true</b>.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.WriteBlock"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.WriteBlock"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.TabIsActive">
            <summary>
            Get whether the tab to which this command is attached is active.
            </summary>
            <remarks>
            This property returns <b>true</b> if there is a ribbon tab or a custom panel tab bound to this command, and that tab is active.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.Shortcuts">
            <summary>
            A readonly collection of keyboard shortcuts for this command. 
            </summary>
            <remarks>
            If the shortcut is already used by another command, setting that shortcut will first remove it from the other command.
            <see cref="M:SpaceClaim.Api.V23.Command.GetCommand(System.Windows.Forms.Keys)"/> can be used to check if the shortcut is already used by an existing command.
            </remarks>
            <example>
            <code>
            <![CDATA[
            Command command = Command.Create("YourAddIn.YourCommand");
            Keys shortcut = Keys.Control | Keys.Q;
            if (Command.GetCommand(shortcut) == null)
            	command.Shortcuts = new Keys[] {shortcut};
            ]]>
            </code>
            </example>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.ShortcutMnemonic">
            <summary>
            Gets or sets the single character mnemonic shortcut.
            </summary>
            <remarks>
            When this key is pressed the command is executed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.KeyTip">
            <summary>
            Gets or sets the keytip character displayed in the ribbon bar when the Alt or F10 key is pressed.
            </summary>
            <remarks>
            Keytips must be enabled in the SpaceClaim Options for keytips to be displayed.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.HelpId">
            <summary>
            The SpaceClaim help topic id for this command.
            </summary>
            <remarks>
            The format is <b>Filename::/Topic</b> or a valid <b>HTTP</b> (<i>http://...</i>) or <b>file</b> (<i>file://...</i>) URL. 
            <para/>
            Examples:
            <list type="bullet">
            <item>
            An add-in specific topic: "MyAddIn.chm::/MyTopic"
            </item>
            <item>
            An existing topic in SpaceClaim help, such as the Select Tool: "SpaceClaim.chm::/Selecting"
            </item>
            <item>
            A full URL to an online help topic similar to the following:
            <list type="bullet">
            <item>http://myaddin.mycompany.com/help/myaddinhelp.aspx?topic=mycommand</item>
            <item>http://myaddin.mycompany.com/help/myaddinhelp/mycommand.htm</item>
            <item>file://localhost/C:/HelpFiles/mycommand.htm</item>
            <item>file:///C:/HelpFiles/mycommand.htm</item>
            </list>
            </item>
            </list>
            <para/>
            Please note that help files need to be in the same directory as the add-in DLL.
            <para/>
            If you want to link to a topic in the SpaceClaim help file without copying the help file
            to the same folder as your add-in, specify the full path to the help file as follows:
            <code>
            var spaceClaimDir = System.IO.Path.GetDirectoryName(System.Windows.Forms.Application.ExecutablePath);
            var helpFile = "SpaceClaim.chm";
            var helpTopic = "Selecting.htm";
            command.HelpId = string.Format("{0}::/{1}", System.IO.Path.Combine(spaceClaimDir, helpFile), helpTopic);
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.UpdateFrequency">
            <summary>
            Gets or set the frequency at which <see cref="E:SpaceClaim.Api.V23.Command.Updating"/> events are called. 
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Command.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Command.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.CommandStatic.GetCommand(System.String)">
            <summary>
            Gets the command with the specified name.
            </summary>
            <param name="name">The name of the command.</param>
            <returns>The command with the specified name; else <b>null</b> if no such command exists.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.IComponent">
            <summary>
            Represents an assembly component.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IComponent.Parent">
            <summary>
            Gets the part that contains the component.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IComponent.Content">
            <summary>
            Gets the part occurrence contained by the component.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IComponent.Components">
            <summary>
            Gets components contained by this component.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IComponent.Name">
            <summary>
            Gets the name of this component.
            </summary>
            <remarks>
            The name is optional and may be presented in the user interface as a suffix to the part name. 
            To set the part name, use <see cref="P:SpaceClaim.Api.V23.Part.Name">Component.Template.Name</see>
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.CoreProperties">
            <summary>
            Core properties provide access to common properties.
            </summary>
            <remarks>
            Core properties conform to the ECMA <i>Open Packaging Conventions</i> standard.
            <a href ="http://www.ecma-international.org/news/TC45_current_work/Office%20Open%20XML%20Part%202%20-%20Open%20Packaging%20Conventions.pdf">
            Chapter 10. Core Properties</a> explains the meaning of each property.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Category">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.ContentStatus">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.ContentType">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Created">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Creator">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Description">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Identifier">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Keywords">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Language">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.LastModifiedBy">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.LastPrinted">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Modified">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Revision">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Subject">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Title">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CoreProperties.Version">
            <summary>
            See the ECMA <i>Open Packaging Conventions</i> standard.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomProperty">
            <summary>
            A custom property of a document.
            </summary>
            <remarks>
            <see cref="P:SpaceClaim.Api.V23.Document.CustomProperties"/> returns the collection of custom properties for a document.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomProperty.Create(SpaceClaim.Api.V23.Document,System.String,System.String)">
            <summary>
            Creates a custom property with a <see cref="T:System.String"/> value.
            </summary>
            <param name="doc">The document in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomProperty.Create(SpaceClaim.Api.V23.Document,System.String,System.Boolean)">
            <summary>
            Creates a custom property with a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="doc">The document in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomProperty.Create(SpaceClaim.Api.V23.Document,System.String,System.Double)">
            <summary>
            Creates a custom property with a <see cref="T:System.Double"/> value.
            </summary>
            <param name="doc">The document in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomProperty.Create(SpaceClaim.Api.V23.Document,System.String,System.DateTime)">
            <summary>
            Creates a custom property with a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="doc">The document in which the custom property should be created.</param>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value for the custom property.</param>
            <returns>The new custom property.</returns>
            <exception cref="T:System.ArgumentException">A custom property already exists with the specified name.</exception>
            <remarks>
            To make custom property names unique, add-in developers should prefix private custom properties
            as follows: "&lt;company name&gt;.&lt;add-in name&gt;.&lt;custom property name&gt;", e.g. "BeachSoft.PebbleDesigner.RockType".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomProperty.IsVisible">
            <summary>
            Gets or sets whether the custom property is visible in the Properties
            panel. If <i>true</i>, it will be displayed in the properties panel in the "Custom Document Properties" category. Otherwise it must
            be exposed by the add-in and will be displayed in the category defined by the <see cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>-derived class.
            </summary>
            <remarks>
            If <b>IsVisible</b> is <i>true</i> and there is a <see cref="T:SpaceClaim.Api.V23.PropertyDisplay"/>-derived  class, the property will be shown in both places.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomProperty.Name">
            <summary>
            Gets the name of the custom property.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomProperty.Value">
            <summary>
            Gets or sets the value of the custom property.
            </summary>
            <exception cref="T:System.InvalidCastException">Attempt to change the value type.</exception>
            <remarks>
            The value type of the custom property is cannot be changed.
            For example, if you create a custom property with a <b>bool</b> value, you cannot later assign a <b>string</b> value to it.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.CustomProperty.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.CustomProperty.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.CustomPropertyDictionary">
            <summary>
            A dictionary mapping names to <see cref="T:SpaceClaim.Api.V23.CustomProperty"/> objects.
            </summary>
            <remarks>
            You can access a custom property of a specific name by looking it up using the indexer or the <see cref="M:SpaceClaim.Api.V23.CustomPropertyDictionary.TryGetValue(System.String,SpaceClaim.Api.V23.CustomProperty@)"/> method.
            Names are case sensitive.
            <para/>
            The collection of custom properties can be accessed using the <see cref="P:SpaceClaim.Api.V23.CustomPropertyDictionary.Values"/> property.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlaneGeneral.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlaneGeneral.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DatumPlane">
            <summary>
            A datum plane master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Plane)">
            <summary>
            Creates a datum plane.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name for the datum plane.</param>
            <param name="plane">The plane of the datum plane.</param>
            <returns>A datum plane.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.Create(SpaceClaim.Api.V23.IPart,System.String,SpaceClaim.Api.V23.Geometry.Plane)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.DatumPlane.Create(SpaceClaim.Api.V23.Part,System.String,SpaceClaim.Api.V23.Geometry.Plane)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a datum plane from determinants.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name for the datum plane.</param>
            <param name="determinants">The objects used to determine the plane.</param>
            <returns>A datum plane.</returns>
            <exception cref="T:System.ArgumentException">Cannot derive a plane from the determinants.</exception>
            <remarks>
            If the <paramref name="determinants"/> are unsuitable, an exception is thrown.
            <see cref="M:SpaceClaim.Api.V23.DatumPlane.GetPlane(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/> can be used to test the suitability of determinants before creating the datum plane.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.GetPlane(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Attempts to determine a plane from one or more objects.
            </summary>
            <param name="determinants">Objects used to determine the plane.</param>
            <returns>A plane, or <b>null</b> if no plane could be determined.</returns>
            <remarks>
            This method can be used to test the suitability of determinants before 
            calling <see cref="M:SpaceClaim.Api.V23.DatumPlane.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDatumPlane.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Pinned">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Determinants">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.IsReference">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Notes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Barcodes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.SurfaceFinishes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.DatumFeatureSymbols">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.SymbolInserts">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.AnnotationPlane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Curves">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.CurveGroups">
            <exclude/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DatumPlane.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.CanSuppress">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.IsSuppressed">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DatumPlane.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDatumPlane">
            <summary>
            A datum plane.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPlane.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPlane.Pinned">
            <summary>
            Gets whether the datum plane is pinned.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPlane.Determinants">
            <summary>
            Gets the objects that determine the plane.
            </summary>
            <remarks>
            If the datum plane does not have determinants, then an empty collection is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDatumPlane.IsReference">
            <summary>
            Gets whether the datum plane is a reference type. 
            </summary>
            <remarks>
            Returns <b>true</b> for user-placed datum planes. Returns <b>false</b> for automatically-created planes such as mirror planes. 
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDeletable">
            <summary>
            Represents an object that must be deleted using the <see cref="M:SpaceClaim.Api.V23.IDeletable.Delete"/> method, rather than by releasing references to it.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDeletable.Delete">
            <summary>
            Deletes the object.
            </summary>
            <remarks>
            Unhooks the object from its parent, if any, and then deletes it.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDeletable.IsDeleted">
            <summary>
            Gets whether the object is deleted.
            </summary>
            <remarks>
            Undo and redo operations can bring deleted objects back to life.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.BodyStyle">
            <summary>
            Specifies the display style of the body.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BodyStyle.Opaque">
            <summary>
            Body is rendered opaque.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BodyStyle.Transparent">
            <summary>
            Body is rendered transparent.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BodyStyle.Metal">
            <summary>
            Body is rendered metallic.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.BodyStyle.Default">
            <summary>
            Body is rendered using transparency obtained from the alpha component of its body or layer color. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DesignEdge">
            <summary>
            A design edge master.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignEdge.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignEdge.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignEdge.Faces">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDesignEdge.Faces"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignEdge.Shape">
            <summary>
            Gets the shape of the object.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DesignEdge.ExportIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignFace.Parent">
            <summary>
            Gets the parent design body.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignFace.Edges">
            <summary>
            Gets the design edges in the boundary of this design face.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDesignFace.AdjacentFaces">
            <summary>
            Gets the design faces adjacent to this design edge.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DocObject">
            <summary>
            An object master that belongs to a document.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.SetNumberAttribute(System.String,System.Double)">
            <summary>
            Creates or replaces a number attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value to set.</param>
            <remarks>
            So that attribute names do not clash when different applications choose an attribute name,
            the name should be prepended by the application name or add-in name, e.g. "BananaWorks.SkinType".
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.DocObject"/> can have a number attribute and a text attribute with the same name.
            <para/>
            SpaceClaim reserved attribute names start with '@', e.g. "@id".
            See <see cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/> and <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.TryGetNumberAttribute(System.String,System.Double@)">
            <summary>
            Looks up the value of a number attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <returns><b>true</b> if the attribute was found; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.RemoveNumberAttribute(System.String)">
            <summary>
            Removes a number attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns><b>true</b> if the attribute was found; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.NumberAttributes">
            <summary>
            Gets all number attributes for this object.
            </summary>
            <remarks>
            The returned dictionary maps attribute name to attribute value.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.SetTextAttribute(System.String,System.String)">
            <summary>
            Creates or replaces a text attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value to set.</param>
            <remarks>
            The <paramref name="value"/> cannot be null, but it can be empty.
            <para/>
            So that attribute names do not clash when different applications choose an attribute name,
            the name should be prepended by the application name or add-in name, e.g. "BananaWorks.SkinType".
            <para/>
            A <see cref="T:SpaceClaim.Api.V23.DocObject"/> can have a number attribute and a text attribute with the same name.
            <para/>
            SpaceClaim reserved attribute names start with '@', e.g. "@id".
            See <see cref="M:SpaceClaim.Api.V23.Document.Open(System.String,SpaceClaim.Api.V23.ImportOptions)"/> and <see cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.TryGetTextAttribute(System.String,System.String@)">
            <summary>
            Looks up the value of a text attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <returns><b>true</b> if the attribute was found; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.RemoveTextAttribute(System.String)">
            <summary>
            Removes a text attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns><b>true</b> if the attribute was found; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.TextAttributes">
            <summary>
            Gets all text attributes for this object.
            </summary>
            <remarks>
            The returned dictionary maps attribute name to attribute value.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.Root">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetAncestor``1">
            <inheritdoc cref="M:SpaceClaim.Api.V23.IDocObject.GetAncestor``1"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetChildren``1">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetDescendants``1">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.Moniker">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDocObject.Moniker"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.UpdateState">
            <summary>
            Gets the update state for the object.
            </summary>
            <remarks>
            Each time the <see cref="T:SpaceClaim.Api.V23.DocObject"/> is changed, its <see cref="P:SpaceClaim.Api.V23.DocObject.UpdateState"/> changes.
            Conversely, if the update state has not changed, then the object has not changed.
            <para/>
            When an object is changed due to an undo (or redo) operation, its update state is undone (or redone) too.
            <para/>
            The update state only represents the state of the object itself, and not the state of other objects it contains or references.
            For example, the update state of a <see cref="T:SpaceClaim.Api.V23.Part"/> is not changed if a child <see cref="T:SpaceClaim.Api.V23.DesignBody"/> is modified.
            Similarly, although the update state of a <see cref="T:SpaceClaim.Api.V23.Component"/> will change if its <see cref="P:SpaceClaim.Api.V23.Instance.Placement"/>
            is modified, it will not change if the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> part is modified.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.Document">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DocObject.Delete">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocObject.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.SaveDocumentOriginator">
            <summary>
            Specifies the originator of a save operation. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SaveDocumentOriginator.User">
            <summary>
            Originated by the user.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.SaveDocumentOriginator.AutomaticBackup">
            <summary>
            Originated by the built-in automatic file backup service. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SaveDocumentEventArgs.Document">
            <summary>
            Gets the document that was saved.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SaveDocumentEventArgs.Path">
            <summary>
            Gets the path to which the document was saved.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.SaveDocumentEventArgs.Originator">
            <summary>
            Gets the originator of the save operation.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DocumentChangedEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Document.DocumentChanged"/> event.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentChangedEventArgs.Document">
            <summary>
            Gets the document that was changed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentChangedEventArgs.AddedObjects">
            <summary>
            Gets the objects that were added.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentChangedEventArgs.DeletedObjects">
            <summary>
            Gets the objects that were deleted.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DocumentChangedEventArgs.ChangedObjects">
            <summary>
            Gets the objects that were changed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PropertiesChangedEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Document.CustomPropertiesChanged"/> event.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertiesChangedEventArgs.Document">
            <summary>
            Gets the document that was changed.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertiesChangedEventArgs.AddedProperties">
            <summary>
            Gets the properties that were added.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertiesChangedEventArgs.DeletedProperties">
            <summary>
            Gets the properties that were deleted.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.PropertiesChangedEventArgs.ChangedProperties">
            <summary>
            Gets the properties that were changed.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingSheet">
            <summary>
            A drawing sheet master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingSheet.Create(SpaceClaim.Api.V23.Document,System.Double,System.Double)">
            <summary>
            Creates an empty drawing sheet.
            </summary>
            <param name="doc">The document in which the drawing sheet will be created.</param>
            <param name="width">The width of the drawing sheet.</param>
            <param name="height">The height of the drawing sheet.</param>
            <returns>A new drawing sheet.</returns>
            <remarks>
            A new drawing sheet is created with no views and a <see cref="P:SpaceClaim.Api.V23.DrawingSheet.ViewScale"/> of 1.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingSheet.Create(SpaceClaim.Api.V23.Document,SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.DrawingSheetContents)">
            <summary>
            Creates an empty drawing sheet with the specified format.
            </summary>
            <param name="doc">The document in which the drawing sheet will be created.</param>
            <param name="format">The format to use.</param>
            <param name="contents">Format contents to copy into the drawing sheet.</param>
            <returns>A new drawing sheet.</returns>
            <remarks>
            A new drawing sheet is created with no views and a <see cref="P:SpaceClaim.Api.V23.DrawingSheet.ViewScale"/> of 1.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.DrawingSheet.Width"/> and <see cref="P:SpaceClaim.Api.V23.DrawingSheet.Height"/> are taken from the format.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Format">
            <summary>
            Gets the drawing sheet format.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingSheet.SetFormat(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.DrawingSheetContents)">
            <summary>
            Sets the drawing sheet format.
            </summary>
            <param name="format">The format to use, or <b>null</b> to remove the format.</param>
            <param name="contents">Format contents to copy into the drawing sheet.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingSheet.TranslateViews(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DrawingView},SpaceClaim.Api.V23.Geometry.VectorUV)">
            <summary>
            Translates views within the drawing sheet.
            </summary>
            <param name="views">The views to translate.</param>
            <param name="translation">A translation vector in paper-space.</param>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.ViewScale">
            <summary>
            Gets or sets the default scale for views in the sheet.
            </summary>
            <remarks>
            The scale can be a <see cref="T:SpaceClaim.Api.V23.DecimalViewScale"/> or a <see cref="T:SpaceClaim.Api.V23.FractionalViewScale"/>.
            <para/>
            The scale can be overridden for a specific view by setting its <see cref="P:SpaceClaim.Api.V23.DrawingView.ViewScale"/> property.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Style">
            <summary>
            Gets or sets the default style for views in the sheet.
            </summary>
            <remarks>
            The style can be overridden for a view by setting its <see cref="P:SpaceClaim.Api.V23.DrawingView.Style"/> property.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.IsThirdAngle">
            <summary>
            Gets whether the sheet uses a 3rd angle projection.
            </summary>
            <remarks>
            If this property is <b>false</b>, a 1st angle projection is being used.
            <para/>
            This property affects how <see cref="M:SpaceClaim.Api.V23.DrawingView.CreateProjectedView(SpaceClaim.Api.V23.DrawingView,SpaceClaim.Api.V23.Geometry.PointUV)"/> determines the projection from the location supplied.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Views">
            <summary>
            Gets the views on the sheet.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Notes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Barcodes">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Tables">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.DatumFeatureSymbols">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.SymbolInserts">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.AnnotationPlane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Curves">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.CurveGroups">
            <exclude/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.SpaceClaim#Api#V23#IDesignCurveParent#Master">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Images">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.CustomObjects">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Shape">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Units">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingSheet.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingSheetContents">
            <summary>
            Specifies contents of a drawing sheet.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetContents.None">
            <summary>
            No content.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetContents.Views">
            <summary>
            Drawing views.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetContents.BomTables">
            <summary>
            Bill Of Materials (BOM) tables.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetContents.All">
            <summary>
            All contents.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingView">
            <summary>
            A drawing view master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.CreateGeneralView(SpaceClaim.Api.V23.DrawingSheet,SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.Geometry.Matrix,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a general view.
            </summary>
            <param name="parent">The sheet in which to create the view.</param>
            <param name="part">The part to show.</param>
            <param name="projection">The projection to be used.</param>
            <param name="location">The location on the sheet for the new view.</param>
            <returns>A general view.</returns>
            <exception cref="T:System.ArgumentException">The drawing sheet and part do not belong to the same document.</exception>
            <exception cref="T:System.ArgumentException">The projection has a translation or scale component.</exception>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.CreateProjectedView(SpaceClaim.Api.V23.DrawingView,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a projected view.
            </summary>
            <param name="sourceView">The view to project.</param>
            <param name="location">The location on the sheet for the new view.</param>
            <returns>A projected view; or <b>null</b> if the projection could not be determined from the <paramref name="location"/>.</returns>
            <remarks>
            The <paramref name="location"/> should be left, right, above, or below the <paramref name="sourceView"/>.
            The source view location can be determined as the <see cref="P:SpaceClaim.Api.V23.Geometry.BoxUV.Center"/> of the <see cref="P:SpaceClaim.Api.V23.DrawingView.Extent"/> of the view.
            <para/>
            If the <paramref name="location"/> is not suitably placed, the projection cannot be determined and <b>null</b> is returned.
            <para/>
            The sheet uses 1st angle or 3rd angle projection, and this is used to determine the projection from the <paramref name="location"/> supplied.
            The <see cref="P:SpaceClaim.Api.V23.DrawingSheet.IsThirdAngle"/> property of the sheet indicates which projection convention is used.
            <para/>
            The projected view has the same <see cref="P:SpaceClaim.Api.V23.DrawingView.ViewScale"/> and <see cref="P:SpaceClaim.Api.V23.DrawingView.Style"/> as the <paramref name="sourceView"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.CreateDetailView(SpaceClaim.Api.V23.DrawingView,SpaceClaim.Api.V23.Geometry.PointUV)">
            <summary>
            Creates a detail view.
            </summary>
            <param name="sourceView">The view to be detailed</param>
            <param name="location">The location on the sheet for the new view.</param>
            <returns>A detail view.</returns>
            <remarks>
            A detail view is a view with a projection that is linked to a <paramref name="sourceView"/>.
            The detail view is created with the default style of the sheet,
            and the same scale as the source view.
            <para/>
            The scale can be overridden by setting the <see cref="P:SpaceClaim.Api.V23.DrawingView.ViewScale"/> property,
            or by setting the <see cref="P:SpaceClaim.Api.V23.DetailViewAspect.Enlargement"/> property of the <see cref="P:SpaceClaim.Api.V23.DrawingView.DetailView"/> aspect.
            <para/>
            The style can be overridden by setting the <see cref="P:SpaceClaim.Api.V23.DrawingView.Style"/> property.
            <para/>
            The detail view is created with no clipping boundary.
            The <see cref="P:SpaceClaim.Api.V23.DrawingView.Boundary"/> property can be used to set the clipping boundary.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.AlignedView">
            <summary>
            Gets the aligned view aspect of the view.
            </summary>
            <remarks>
            If the view is not a projected view or auxiliary view, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.DetailView">
            <summary>
            Gets the detail view aspect of the view.
            </summary>
            <remarks>
            If the view is not a detail view, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.IsOrientable">
            <summary>
            Gets whether the view is orientable.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.DrawingView.Projection"/> property can only be set if the view is orientable,
            otherwise an exception will be thrown.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Projection">
            <summary>
            Gets or set the view projection.
            </summary>
            <exception cref="T:System.ArgumentException">The projection has a translation or scale component.</exception>
            <exception cref="T:System.InvalidOperationException">The view is not orientable.</exception>
            <remarks>
            The projection can only be set if the view is orientable, otherwise an exception is thrown.
            The <see cref="P:SpaceClaim.Api.V23.DrawingView.IsOrientable"/> property tells you if the view is orientable.
            <para/>
            The projection is a matrix that only contains rotation.
            It does not contain the location of the view on the sheet, or its view scale.
            The <see cref="P:SpaceClaim.Api.V23.Geometry.BoxUV.Center"/> of the <see cref="P:SpaceClaim.Api.V23.DrawingView.Extent"/> gives the location on the sheet,
            and the <see cref="P:SpaceClaim.Api.V23.DrawingView.ViewScale"/> property gives the view scale.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Instance.Placement"/> property contains the overall transform from model-space to paper-space,
            including the location and scale of the view.
            This can be used to transform geometry from model-space to paper-space.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.Reverse">
            <summary>
            Reverses the drawing view so that the view direction is from the back.
            </summary>
            <remarks>
            The view projection is adjusted so that the view direction is from the back.
            The axis in the plane of the sheet about which this 180 degree rotation occurs
            is chosen so as to avoid or at least minimize changes to other views.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Extent">
            <summary>
            Gets the extent of the view in paper-space.
            </summary>
            <remarks>
            The extent of the view is returned as a rectangle in paper-space.
            If the view has a <see cref="P:SpaceClaim.Api.V23.DrawingView.Boundary"/>, the extent is clipped accordingly.
            <para/>
            The location of the view is the <see cref="P:SpaceClaim.Api.V23.Geometry.BoxUV.Center"/> of the extent box.
            If the model is empty, a zero-sized box is returned, centered on the model origin in paper-space.
            <para/>
            <see cref="M:SpaceClaim.Api.V23.DrawingSheet.TranslateViews(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.DrawingView},SpaceClaim.Api.V23.Geometry.VectorUV)"/> can be used to move the view to a new location.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.ViewScale">
            <summary>
            Gets or sets the view scale.
            </summary>
            <remarks>
            The scale can be a <see cref="T:SpaceClaim.Api.V23.DecimalViewScale"/> or a <see cref="T:SpaceClaim.Api.V23.FractionalViewScale"/>.
            <para/>
            If the scale is <b>null</b>, the default <see cref="P:SpaceClaim.Api.V23.DrawingSheet.ViewScale"/> of the sheet is used.
            <para/>
            Projected views have linked scales, so setting the scale of one view will adjust the scale of other views accordingly.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Style">
            <summary>
            Gets or sets the view style.
            </summary>
            <remarks>
            If the style is <b>null</b>, the default <see cref="P:SpaceClaim.Api.V23.DrawingSheet.Style"/> of the sheet is used.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Boundary">
            <summary>
            Gets or sets the clipping boundary of the view.
            </summary>
            <exception cref="T:System.ArgumentException">Invalid clipping profile.</exception>
            <remarks>
            If the boundary is <b>null</b>, the view has no clipping boundary.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.DrawingViewBoundary"/> for how the section is defined.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Section">
            <summary>
            Gets or sets the section of the view.
            </summary>
            <exception cref="T:System.ArgumentException">The arrows view does not belong to the same document.</exception>
            <exception cref="T:System.ArgumentException">There is an existing section view with the specified name.</exception>
            <remarks>
            If the section is <b>null</b>, the view is not sectioned.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.DrawingViewSection"/> for how the section is defined.
            <para/>
            A detail view has the same section as its <see cref="P:SpaceClaim.Api.V23.DerivedViewAspect.SourceView"/>.
            Setting the section of a detail view will affect its source view.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.LayoutGrid">
            <summary>
            Gets the layout grid.
            </summary>
            <remarks>
            If this view does not have a layout grid, <b>null</b> is returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.ViewNumber">
            <summary>
            Gets the view number of the view.
            </summary>
            <remarks>
            A view number is assigned to the view when it is created, which is unique at the time of creation.
            When views are listed in the structure panel, the view number is often seen, e.g. "Top View 2".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.LongName">
            <summary>
            Gets the long form of the view name.
            </summary>
            <remarks>
            Long names are of the form: "Section A-A", “Detail C”, "Top View 2".
            <para/>
            Short names are of the form: "A-A", “C”, "View 2".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.ShortName">
            <summary>
            Gets the short form of the view name.
            </summary>
            <remarks>
            Long names are of the form: "Section A-A", “Detail C”, "Top View 2".
            <para/>
            Short names are of the form: "A-A", “C”, "View 2".
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.DisplayName">
            <summary>
            Gets or sets the display name for the view.
            </summary>
            <remarks>
            The display name is used when the view is listed in the structure panel.
            <para/>
            There are three possibilities:
            <para/>
            <list type="table">
            	<listheader>
            		<term>Subclass</term>
            		<description>Description</description>
            	</listheader>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.LongDisplayName"/></term>
            		<description>
            			The <see cref="P:SpaceClaim.Api.V23.DrawingView.LongName"/> is displayed, e.g. "Section A-A", “Detail C”, "Top View 2".
            		</description>
            	</item>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.ShortDisplayName"/></term>
            		<description>
            			The <see cref="P:SpaceClaim.Api.V23.DrawingView.ShortName"/> is displayed, e.g. "A-A", “C”, "View 2".
            		</description>
            	</item>
            	<item>
            		<term><see cref="T:SpaceClaim.Api.V23.CustomDisplayName"/></term>
            		<description>
            			A custom name is displayed.
            		</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Template">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.GetRendering(SpaceClaim.Api.V23.DrawingViewStyle)">
            <summary>
            Gets the rendering of the drawing view.
            </summary>
            <param name="styleWhenShaded">View style to be used if the view is currently shaded.</param>
            <returns>Rendering of the drawing view.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.DrawingView.GetColorRendering(SpaceClaim.Api.V23.DrawingViewStyle)">
            <summary>
            Gets the rendering of the drawing view, including curve colors. 
            </summary>
            <param name="styleWhenShaded">View style to be used if the view is currently shaded.</param>
            <returns>Rendering of the drawing view.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.IDrawingView.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Content">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.IsVisible">
            <summary>
            Gets whether the object is visible.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.Visibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingView.SpaceClaim#Api#V23#IHasLayer#DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDrawingView">
            <summary>
            A drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDrawingView.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDrawingView.Content">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewRendering">
            <summary>
            Rendering of a drawing view.
            </summary>
            <remarks>
            Rendering is presented as three batches:
            <see cref="P:SpaceClaim.Api.V23.DrawingViewRendering.Body"/> rendering, <see cref="P:SpaceClaim.Api.V23.DrawingViewRendering.Hatch"/> rendering, and <see cref="P:SpaceClaim.Api.V23.DrawingViewRendering.Clip"/> rendering.
            <para/>
            Each batch contains trimmed curves in three categories:
            <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Thick"/>, <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Thin"/>, and <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Hidden"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewRendering.Body">
            <summary>
            Gets the body rendering.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewRendering.Hatch">
            <summary>
            Gets the rendering of hatch lines.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewRendering.Clip">
            <summary>
            Gets the clipping border rendering.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingViewColorRendering">
            <summary>
            Rendering of a drawing view, including curve colors.
            </summary>
            <remarks>
            Rendering is presented as three batches:
            <see cref="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Body"/> rendering, <see cref="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Hatch"/> rendering, and <see cref="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Clip"/> rendering.
            <para/>
            Each batch contains trimmed curves in three categories:
            <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Thick"/>, <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Thin"/>, and <see cref="P:SpaceClaim.Api.V23.RenderingBatch.Hidden"/>.
            </remarks>
            
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Body">
            <summary>
            Gets the body rendering.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Hatch">
            <summary>
            Gets the rendering of hatch lines.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.DrawingViewColorRendering.Clip">
            <summary>
            Gets the clipping border rendering.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.RenderingBatch">
            <summary>
            A rendering batch.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.RenderingBatch.Thick">
            <summary>
            Gets the rendering of visible thick lines in a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.RenderingBatch.Thin">
            <summary>
            Gets the rendering of visible thin lines in a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.RenderingBatch.Hidden">
            <summary>
            Gets the rendering of hidden lines in a drawing view.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ColorRenderingBatch">
            <summary>
            A rendering batch, including curve colors. 
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ColorRenderingBatch.Thick">
            <summary>
            Gets the rendering of visible thick lines in a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ColorRenderingBatch.Thin">
            <summary>
            Gets the rendering of visible thin lines in a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ColorRenderingBatch.Hidden">
            <summary>
            Gets the rendering of hidden lines in a drawing view.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasDocument.Document">
            <summary>
            Gets the <see cref="T:SpaceClaim.Api.V23.Document"/> to which this object belongs.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IDocObject">
            <summary>
            A general object that belongs to a document. 
            </summary>
            <remarks>
            You can work with <i>general objects</i>, which are represented by interfaces derived from <see cref="T:SpaceClaim.Api.V23.IDocObject"/>,
            or you can work with <i>masters</i>, which are represented by classes (e.g. <see cref="T:SpaceClaim.Api.V23.DocObject"/>).
            <para/>
            Working with general objects allows you to work in the context of an assembly or drawing sheet, in which
            an object might be an <i>occurrence</i> or a master.
            Some operations, however, are only available on master objects, which you can obtain using the <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> property.
            The returned type is a class (rather than an interface), which may provide members not available on the general object
            interface.
            <para/>
            If you need to work with masters, you should also use <see cref="P:SpaceClaim.Api.V23.IDocObject.TransformToMaster"/> to transform any geometry you
            are using back to master-space.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Root">
            <summary>
            Gets the root object, i.e. the ultimate parent that itself has no parent.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Parent">
            <summary>
            Gets the immediate parent, or null if this is a root object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetAncestor``1">
            <summary>
            Crawls up the parent chain until an object of the specified type is found.
            </summary>
            <typeparam name="TDocObject">The type of object to find.</typeparam>
            <returns>An object of the specified type, or <b>null</b> if not found.</returns>
            <remarks>
            The search starts with the parent of the object.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetChildren``1">
            <summary>
            Gets children of the specified type.
            </summary>
            <typeparam name="TDocObject">The type of children to return.</typeparam>
            <returns>Children of the specified type.</returns>
            <remarks>
            Derived classes provide properties for accessing children of a specific type.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetDescendants``1">
            <summary>
            Gets all descendants of the specified type.
            </summary>
            <typeparam name="TDocObject">The type of descendants to return.</typeparam>
            <returns>Descendants of the specified type.</returns>
            <remarks>
            The search starts with the children of the object.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Moniker">
            <summary>
            Gets the moniker for this object.
            </summary>
            <remarks>
            A moniker provides a persistent identifier for the object.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Original">
            <summary>
            Gets the original <see cref="T:SpaceClaim.Api.V23.IDocObject"/>, if this is an occurrence, else null if this is a master.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.IDocObject.Original"/> can be obtained even if the object <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/>.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Master">
            <summary>
            Gets the master for this object.
            If this object is a master, the object itself is returned.
            </summary>
            <remarks>
            Derived interfaces override <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> to return the appropriate master type.
            For example, the <see cref="T:SpaceClaim.Api.V23.IPart"/> interface overrides <see cref="P:SpaceClaim.Api.V23.IPart.Master"/> and returns a <see cref="T:SpaceClaim.Api.V23.Part"/>.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> can be obtained even if the object <see cref="P:SpaceClaim.Api.V23.IDeletable.IsDeleted"/>.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.TransformToMaster">
            <summary>
            Gets the transform to master-space.
            If the object is a master, the identity transform is returned.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.PathToMaster">
            <summary>
            Gets the instance path to the master <see cref="T:SpaceClaim.Api.V23.DocObject"/>.
            If the object is a master, a zero length path is returned.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IDocObject.Instance">
            <summary>
            Gets the <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> that gives rise to this occurrence, or null if this is a master.
            </summary>
            <remarks>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <summary>
            Gets the occurrence produced by the specified instance path.
            </summary>
            <param name="instancePath">The path from the occurrence context back to the context of this object.</param>
            <returns>The occurrence of this object.</returns>
            <exception cref="T:System.ArgumentException">Invalid instance path.</exception>
            <remarks>
            For example, calling <see cref="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})"/> on the <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> 
            and supplying the <see cref="P:SpaceClaim.Api.V23.IDocObject.PathToMaster"/> returns the original object.
            <para/>
            See <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <summary>
            Gets the occurrence produced by the specified instance.
            </summary>
            <param name="instance">The instance producing the occurrence.</param>
            <returns>The occurrence of this object.</returns>
            <exception cref="T:System.ArgumentException">Object root is not the template of the instance.</exception>
            <remarks>
            The instance must use the <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> of this object as its <see cref="P:SpaceClaim.Api.V23.Instance.Template"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Gets an occurrence that is similar to the specified companion object.
            </summary>
            <param name="companionOcc">An object identifying the space of the desired occurrence.</param>
            <returns>The occurrence of this object.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasShape">
            <summary>
            The object implementing this interface has geometric shape.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.MaterialPropertyId">
            <summary>
            Contains constants for property ids of some well-known material properties.
            </summary>
            <remarks>
            See the SpaceClaim material library XML file for examples of other property ids.
            </remarks>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.Density">
            <summary>
            The density property ("General.Density.Mass").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.TensileStrength">
            <summary>
            The tensile strength property ("Nonlinear.vonMises.Ultimate").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.ElasticModulus">
            <summary>
            The elastic modulus property ("Linear.Isotropic.Emodulus").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.ShearModulus">
            <summary>
            The shear modulus property ("Linear.Isotropic.Gmodulus").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.PoissonsRatio">
            <summary>
            The Poisson's ratio property ("Linear.Isotropic.Poisson").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.ThermalConductivity">
            <summary>
            The thermal conductivity property ("Heat.Iso.Conduction").
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.MaterialPropertyId.SpecificHeat">
            <summary>
            The specific heat capacity property ("Heat.Iso.Cp").
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Group">
            <summary>
            A group master.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a group.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name of the group.</param>
            <param name="members">One or more members of the group.</param>
            <returns>A new group.</returns>
            <exception cref="T:System.ArgumentException">One or more of the members do not belong to this interaction context.</exception>
            <remarks>
            The new group does not have a dimension (<see cref="P:SpaceClaim.Api.V23.Group.HasDimension"/> is <b>false</b>).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a group.
            </summary>
            <param name="parent">The parent part.</param>
            <param name="name">The name of the group.</param>
            <param name="members">One or more members of the group.</param>
            <param name="secondaryMembers">One or more secondary members of the group.</param>
            <returns>A new group.</returns>
            <exception cref="T:System.ArgumentException">One or more of the members do not belong to this interaction context.</exception>
            <remarks>
            The new group does not have a dimension (<see cref="P:SpaceClaim.Api.V23.Group.HasDimension"/> is <b>false</b>).
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.DrawingSheet,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a group.
            </summary>
            <param name="parent">The parent drawing sheet.</param>
            <param name="name">The name of the group.</param>
            <param name="members">One or more members of the group.</param>
            <returns></returns>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/>
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.DrawingSheet,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject},System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})">
            <summary>
            Creates a group.
            </summary>
            <param name="parent">The parent drawing sheet.</param>
            <param name="name">The name of the group.</param>
            <param name="members">One or more members of the group.</param>
            <param name="secondaryMembers">One or more secondary members of the group.</param>
            <returns></returns>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Group.Create(SpaceClaim.Api.V23.Part,System.String,System.Collections.Generic.ICollection{SpaceClaim.Api.V23.IDocObject})"/>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Group.Members">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Group.SecondaryMembers">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Group.HasDimension">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.TryGetDimensionValue(System.Double@,SpaceClaim.Api.V23.DimensionType@)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Group.SetDimensionValue(System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Group.UsesInteractionTool">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Group.Name">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.IGroup">
            <summary>
            A group.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IGroup.Members">
            <summary>
            Gets the members of the group.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IGroup.SecondaryMembers">
            <summary>
            Gets the secondary members of the group.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IGroup.HasDimension">
            <summary>
            Gets whether the group has a dimension.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.IGroup.TryGetDimensionValue(System.Double@,SpaceClaim.Api.V23.DimensionType@)">
            <summary>
            Gets the dimension value of the group.
            </summary>
            <param name="value">The value of the dimension.</param>
            <param name="dimensionType">The type of the dimension.</param>
            <returns><b>true</b> if the group has a dimension; otherwise <b>false</b>.</returns>
            <remarks>
            The dimension value is in system units (meters or radians).
            <para/>
            If the dimension value is to be presented to the user, it will need to be converted to user units.
            The <see cref="P:SpaceClaim.Api.V23.Window.Units"/> property of the <see cref="T:SpaceClaim.Api.V23.Window"/> provides the user units,
            and <paramref name="dimensionType"/> can then be supplied to <see cref="M:SpaceClaim.Api.V23.Units.GetMeasurementUnit(SpaceClaim.Api.V23.DimensionType)"/> to
            obtain a measurement unit that can be used to perform the conversion.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IGroup.SetDimensionValue(System.Double)">
            <summary>
            Sets the dimension value of the group.
            </summary>
            <param name="value">The dimension value to set.</param>
            <exception cref="T:System.InvalidOperationException">The group has no dimension.</exception>
        </member>
        <member name="P:SpaceClaim.Api.V23.IGroup.UsesInteractionTool">
            <summary>
            Gets whether the group needs to set the active tool in order to return the dimension value.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Instance">
            <summary>
            An instance master.
            </summary>
            <remarks>
            Provides a mechanism to instantiate a <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> object.
            <para/>
            An <see cref="T:SpaceClaim.Api.V23.Instance"/> produces a transformed <i>occurrence</i> of a <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> object,
            along with occurrences of its children, recursively.
            The <see cref="P:SpaceClaim.Api.V23.IInstance.Content"/> property provides access to the occurrence of the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> object itself.
            The transformation is defined by the <see cref="P:SpaceClaim.Api.V23.Instance.Placement"/> matrix.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> is a <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> object (it has no parent),
            and the <see cref="P:SpaceClaim.Api.V23.IInstance.Content"/> is an occurrence whose parent is the instance.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> object is not copied.
            Instead, occurrences are <see cref="T:SpaceClaim.Api.V23.IDocObject"/> objects that present methods and properties that work in the transformed occurrence-space.
            When an <see cref="P:SpaceClaim.Api.V23.IDocObject.Original"/> object is changed, its occurrence changes correspondingly.
            Changes made to an occurrence are actually made to the original.
            <para/>
            A common example of an <see cref="T:SpaceClaim.Api.V23.Instance"/> is the <see cref="T:SpaceClaim.Api.V23.Component"/> class, 
            which creates an assembly component by instantiating a <see cref="P:SpaceClaim.Api.V23.Component.Template"/> that is a <see cref="T:SpaceClaim.Api.V23.Part"/>.
            The <see cref="P:SpaceClaim.Api.V23.Component.Parent"/> of the <see cref="T:SpaceClaim.Api.V23.Component"/> is another <see cref="T:SpaceClaim.Api.V23.Part"/>,
            which can itself be instantiated using another <see cref="T:SpaceClaim.Api.V23.Component"/>,
            giving rise to a 2-level assembly (assembly, sub-assembly, piece part).
            <para/>
            When the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> itself contains <see cref="T:SpaceClaim.Api.V23.Instance"/> objects, occurrences of its occurrences are produced.
            Therefore, in general, occurrences are chained, i.e. occurrence of occurrence of ... occurrence of master.
            The <see cref="P:SpaceClaim.Api.V23.IDocObject.Original"/> property takes you one step back along this chain, peeling off one occurrence.
            The <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> property takens you all the way to the end of the chain to the <see cref="T:SpaceClaim.Api.V23.DocObject"/>.
            This is often done because master classes have additional members that are not provided by occurrences.
            <para/>
            <see cref="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(SpaceClaim.Api.V23.Instance)"/> can be used to obtain the occurrence for a given original,
            and <see cref="P:SpaceClaim.Api.V23.IDocObject.Instance"/> can be used to obtain the <see cref="T:SpaceClaim.Api.V23.Instance"/> that produced the occurrence.
            <para/>
            There are as many occurrences in the chain as there are <see cref="T:SpaceClaim.Api.V23.Instance"/> objects involved.
            The <see cref="P:SpaceClaim.Api.V23.IDocObject.PathToMaster"/> property returns these <see cref="T:SpaceClaim.Api.V23.Instance"/> objects.
            <see cref="M:SpaceClaim.Api.V23.IDocObject.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})"/> can be used to reconstruct an occurrence
            from the <see cref="P:SpaceClaim.Api.V23.IDocObject.PathToMaster"/>.
            <para/>
            When the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> itself contains an <see cref="T:SpaceClaim.Api.V23.Instance"/>,
            an occurrence of the <see cref="T:SpaceClaim.Api.V23.Instance"/> is also produced.
            For example, imagine a toy car is an assembly containing two <see cref="T:SpaceClaim.Api.V23.Component"/> objects ("front" and "rear")
            of the "axle sub-assembly" part, which itself contains two <see cref="T:SpaceClaim.Api.V23.Component"/> objects ("left" and "right") 
            of the "wheel" part, and one <see cref="T:SpaceClaim.Api.V23.Component"/> of the "axle" part.
            In the car, there are four <see cref="T:SpaceClaim.Api.V23.IComponent"/> objects (instance occurrences) for wheels,
            i.e. the "front left", "front right", "rear left", and "rear right" wheels.
            In each case, the <see cref="P:SpaceClaim.Api.V23.IDocObject.Master"/> of the <see cref="P:SpaceClaim.Api.V23.IComponent.Content"/> returns the "wheel" <see cref="T:SpaceClaim.Api.V23.Part"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Instance.Content">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Instance.Template">
            <summary>
            Gets the template object being instantiated.
            </summary>
            <remarks>
            The template is always a <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> object.
            <para/>
            The value is <b>null</b> if the template is missing.
            This happens if an assembly is loaded, and the document of an external part cannot be found.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Instance.Placement">
            <summary>
            Gets the placement matrix for the instance.
            </summary>
            <remarks>
            The <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> object is transformed by the placement matrix, 
            giving rise to occurrences of the template and its children, recursively.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IInstance">
            <summary>
            A general instance.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IInstance.Content">
            <summary>
            Gets the content of the instance.
            </summary>
            <remarks>
            The content is <b>null</b> if the <see cref="P:SpaceClaim.Api.V23.Instance.Template"/> is <b>null</b>, which means that the template is missing.
            This happens if an assembly is loaded, and the document of an external part cannot be found.
            In that case, the <see cref="T:SpaceClaim.Api.V23.Component"/> will have a <b>null</b> <see cref="P:SpaceClaim.Api.V23.Component.Template"/>
            and a <b>null</b> <see cref="P:SpaceClaim.Api.V23.IComponent.Content"/>.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.Instance"/> for an overview of instances, occurrences, and masters.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.Layer">
            <summary>
            A layer master.
            </summary>
            <remarks>
            Occurrences of layers are not supported, therefore all layers are masters.
            <para/>
            A layer is a root object, i.e. its <see cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/> is <b>null</b>
            and its <see cref="P:SpaceClaim.Api.V23.IDocObject.Root"/> is itself.
            <para/>
            Objects implementing the <see cref="T:SpaceClaim.Api.V23.IHasLayer"/> interface belong to layers.
            The layer is not the <see cref="P:SpaceClaim.Api.V23.IDocObject.Parent"/> of the object, so deleting a layer does not delete the objects that belong to that layer.
            Instead, when a layer is deleted, all its objects are automatically moved to the <see cref="P:SpaceClaim.Api.V23.Document.DefaultLayer"/>.
            It is not possible to delete the default layer.
            <para/>
            Layers cannot be deleted using the <see cref="M:SpaceClaim.Api.V23.Layer.Delete"/> method, which will throw a <see cref="T:System.NotSupportedException"/>.
            Instead, <see cref="M:SpaceClaim.Api.V23.Window.DeleteLayers(System.String)"/> should be used.
            <para/>
            Layers provide a default appearance (color, visibility) for objects that belong to that layer.
            Objects can override appearance properties.
            For example, an object supporting <see cref="T:SpaceClaim.Api.V23.IHasColor"/> can specify a color to use instead of the layer color.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.Create(SpaceClaim.Api.V23.Document,System.String,System.Drawing.Color)">
            <summary>
            Creates a new layer.
            </summary>
            <param name="doc">The document in which to create the layer.</param>
            <param name="name">The name of the new layer.</param>
            <param name="color">The color of the new layer.</param>
            <returns>A new layer.</returns>
            <exception cref="T:System.InvalidOperationException">Another layer in the document already has the specified name.</exception>
            <remarks>
            Layers in the same document must have unique names.
            Layer names are case sensitive.
            <para/>
            The alpha component of the <paramref name="color"/> is ignored.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.Copy(SpaceClaim.Api.V23.Document,System.String,SpaceClaim.Api.V23.Layer)">
            <summary>
            Creates a copy of a layer.
            </summary>
            <param name="doc">The document in which to create the layer.</param>
            <param name="name">The name of the new layer.</param>
            <param name="layer">A layer to copy.</param>
            <returns>A new layer.</returns>
            <remarks>
            Layers in the same document must have unique names.
            Layer names are case sensitive.
            <para/>
            The properties of the existing <paramref name="layer"/> are copied.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.SetVisible(SpaceClaim.Api.V23.IAppearanceContext,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.GetLineWeight(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,SpaceClaim.Api.V23.LineWeight)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.GetLineStyle(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,SpaceClaim.Api.V23.LineStyle)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Layer.Name">
            <summary>
            Gets or sets the name of the layer.
            </summary>
            <exception cref="T:System.InvalidOperationException">Another layer in the document already has the specified name.</exception>
            <exception cref="T:System.InvalidOperationException">The default layer cannot be renamed.</exception>
            <remarks>
            Layers in the same document must have unique names.
            Layer names are case sensitive.
            <para/>
            The name of the <see cref="P:SpaceClaim.Api.V23.Document.DefaultLayer"/> cannot be changed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Layer.Delete">
            <summary>
            Implements <see cref="T:SpaceClaim.Api.V23.IDeletable"/>.<see cref="M:SpaceClaim.Api.V23.IDeletable.Delete"/>.
            </summary>
            <remarks>
            The <see cref="M:SpaceClaim.Api.V23.Layer.Delete"/> method is not supported for layers.
            Use the <see cref="M:SpaceClaim.Api.V23.Window.DeleteLayers(System.String)"/> method instead.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ILayer">
            <summary>
            A layer.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.Layer"/> for more information.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets whether the layer is visible in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>Whether the layer is visible.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Objects can override the visibility using <see cref="M:SpaceClaim.Api.V23.IHasVisibility.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.SetVisible(SpaceClaim.Api.V23.IAppearanceContext,System.Boolean)">
            <summary>
            Sets whether the layer is visible in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="visible"><b>true</b> to show the layer, or <b>false</b> to hide the layer.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Objects can override the visibility using <see cref="M:SpaceClaim.Api.V23.IHasVisibility.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the color of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The color of the layer.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Objects can override the color using <see cref="M:SpaceClaim.Api.V23.IHasColor.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Drawing.Color)">
            <summary>
            Sets the color of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="color">The color to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Objects can override the color using <see cref="M:SpaceClaim.Api.V23.IHasColor.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})"/>.
            <para/>
            The alpha component of the <paramref name="color"/> is ignored.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.GetLineWeight(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line weight of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line weight of the layer.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Design curves can override the line weight using <see cref="M:SpaceClaim.Api.V23.DesignCurve.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineWeight})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,SpaceClaim.Api.V23.LineWeight)">
            <summary>
            Sets the line weight of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="weight">The line weight to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Design curves can override the line weight using <see cref="M:SpaceClaim.Api.V23.DesignCurve.SetLineWeight(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineWeight})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.GetLineStyle(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the line style of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>The line style of the layer.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Design curves can override the line style using <see cref="M:SpaceClaim.Api.V23.DesignCurve.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineStyle})"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ILayer.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,SpaceClaim.Api.V23.LineStyle)">
            <summary>
            Sets the line style of the layer in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="style">The line style to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            Design curves can override the line style using <see cref="M:SpaceClaim.Api.V23.DesignCurve.SetLineStyle(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{SpaceClaim.Api.V23.LineStyle})"/>.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasLayer">
            <summary>
            The master object implementing this interface belongs to a layer.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasLayer.DefaultVisibility">
            <summary>
            Gets the default visibility used when visibility is not specified.
            </summary>
            <remarks>
            See comments in <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.IHasVisibility"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasLayer.Layer">
            <summary>
            Gets or sets the layer to which this object belongs.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IAppearanceContext">
            <summary>
            A context in which the appearance (color and visibility) of objects can be set.
            </summary>
            <remarks>
            The interface has no members.
            <para/>
            <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> implements this interface.
            This means you can make colors and visibility different in a drawing sheet from how they appear in design windows.
            <para/>
            A <b>null</b> appearance context indicates the appearance in design windows.
            <para/>
            Methods that get or set an appearance property (e.g. visibility or color) take an 
            appearance context in which that appearance property should apply.
            <para/>
            Note that when an appearance property setter (e.g. <see cref="M:SpaceClaim.Api.V23.IHasColor.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})"/>) is called,
            it is the document of the appearance context that is modified, rather than the document of
            the object on which the method is called.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.ContextMenuEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Application.ContextMenuOpening"/> event.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ContextMenuId">
            <summary>
            The type of context menu.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ContextMenu">
            <summary>
            A context menu.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.ContextMenu.Id">
            <summary>
            The type of context menu.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextMenu.AddGroup(System.Collections.Generic.ICollection{SpaceClaim.Api.V23.Command})">
            <summary>
            Adds the specified commands. A separator is added at the end. 
            </summary>
            <param name="commands">Commands to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextMenu.AddItem(SpaceClaim.Api.V23.Command)">
            <summary>
            Adds the specified command.
            </summary>
            <param name="command">Command to be added.</param>
        </member>
        <member name="M:SpaceClaim.Api.V23.ContextMenu.AddSeparator">
            <summary>
            Adds a separator.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Moniker`1">
            <summary>
            Provides a type-safe persistent reference to a <see cref="T:SpaceClaim.Api.V23.IDocObject"/>.
            </summary>
            <typeparam name="TDocObject">The type of the target object.</typeparam>
        </member>
        <member name="F:SpaceClaim.Api.V23.Moniker`1.Null">
            <summary>
            A null moniker, i.e. a moniker that resolves to null.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Moniker`1.Resolve(SpaceClaim.Api.V23.Document)">
            <summary>
            Resolves a moniker within the specified document, returning the target object.
            </summary>
            <param name="doc">The document in which the target object is expected to be found.</param>
            <returns>The target object, or <b>null</b> if the object is not found.</returns>
            <remarks>
            If the object no longer exists because it has been replaced,
            and at least one of its replacements (or their replacements) survives,
            then one of these survivors is returned.
            For example, if a <see cref="T:SpaceClaim.Api.V23.DesignFace"/> was split during a modeling operation, the fragments are typically new faces,
            but this replacement is recorded so that when a moniker for the original face is resolved,
            one of the face fragments is returned instead.
            <para/>
            To determine whether the result was the original object, as opposed to a survivor,
            you can compare its moniker with the original moniker that was resolved.
            <para/>
            To get all survivors, use <see cref="M:SpaceClaim.Api.V23.Moniker`1.ResolveSurvivors(SpaceClaim.Api.V23.Document)"/>.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Moniker`1.ResolveSurvivors(SpaceClaim.Api.V23.Document)">
            <summary>
            Resolves a moniker within the specified document, returning all survivors.
            </summary>
            <param name="doc">The document in which to resolve the moniker.</param>
            <returns>A collection of survivors, possibly empty.</returns>
            <remarks>
            See comments in <see cref="M:SpaceClaim.Api.V23.Moniker`1.Resolve(SpaceClaim.Api.V23.Document)"/>.
            <para/>
            If the target object still exists, then it has not been replaced, and an empty collection is returned.
            <para/>
            If the target object does not exist, but it was not replaced by other objects, an empty collection is returned.
            <para/>
            Otherwise, all surviving replacements (recursively) are returned, if any.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Moniker`1.ToString">
            <summary>
            Provides a string representation of this moniker that can be stored and later converted
            back into a moniker using <see cref="M:SpaceClaim.Api.V23.Moniker`1.FromString(System.String)"/>.
            </summary>
            <returns>The string representation of this moniker.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Moniker`1.FromString(System.String)">
            <summary>
            Converts a string representation of a moniker, created using <see cref="M:SpaceClaim.Api.V23.Moniker`1.ToString"/>, back into
            a moniker that can then be used to <see cref="M:SpaceClaim.Api.V23.Moniker`1.Resolve(SpaceClaim.Api.V23.Document)"/> the identified <typeparamref name="TDocObject"/>.
            </summary>
            <remarks>
            If the <paramref name="monikerString"/> is null or empty, the <see cref="F:SpaceClaim.Api.V23.Moniker`1.Null"/> moniker is returned.
            </remarks>
            <param name="monikerString">The string representation of a moniker.</param>
            <returns>The moniker represented by the supplied string.</returns>
            <exception cref="T:System.ArgumentException">Invalid moniker string.</exception>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasName">
            <summary>
            The object implementing this interface has a name.
            </summary>
            <remarks>
            Some classes (e.g. <see cref="T:SpaceClaim.Api.V23.Command"/>) require names to be unique, whereas others (e.g. <see cref="T:SpaceClaim.Api.V23.DesignBody"/>) do not.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.IHasName.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.NoteGeneral.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.Note">
            <summary>
            A note master.
            </summary>
            <remarks>
            Notes support <see cref="T:SpaceClaim.Api.V23.IHasLayer"/>, which means they belong to layers,
            but they do not support <see cref="T:SpaceClaim.Api.V23.IHasVisibility"/>, so the visibility of the layer cannot be overridden for individual notes.
            Instead, if the parent is a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>, the visibility of the datum plane controls the visibility of any annotations it contains.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.Create(SpaceClaim.Api.V23.IAnnotationParentMaster,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.String)">
            <summary>
            Creates a text note.
            </summary>
            <param name="parent">The annotation parent in which the note should be created.</param>
            <param name="anchorLocation">The anchor location in the UV space of the plane of the annotation parent.</param>
            <param name="anchorPoint">The anchor point.</param>
            <param name="fontSize">The font size in meters.</param>
            <param name="text">The text to display.</param>
            <returns>The new text note.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.Create(SpaceClaim.Api.V23.IAnnotationParent,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.String)">
            <inheritdoc cref="M:SpaceClaim.Api.V23.Note.Create(SpaceClaim.Api.V23.IAnnotationParentMaster,SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint,System.Double,System.String)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Parent">
            <inheritdoc cref="P:SpaceClaim.Api.V23.INote.Parent"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.AnnotationSpace">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Curvature">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.IsMirrored">
            <inheritdoc />>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.LineSpacing">
            <inheritdoc />>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.Copy">
            <inheritdoc cref="M:SpaceClaim.Api.V23.INote.Copy"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetLocation(SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetLocation(SpaceClaim.Api.V23.Geometry.PointUV,SpaceClaim.Api.V23.LocationPoint)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.AnchorPoint">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Width">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Height">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.TextFit">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Angle">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Callouts">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.EndIndex">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.DeleteText(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.InsertText(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.ReplaceText(System.Int32,System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.ReplaceText(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetFontName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetFontName(System.String,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetFontSize(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetFontSize(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetBold(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetBold(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetItalic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetItalic(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetUnderline(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetUnderline(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetStrikethrough(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetStrikethrough(System.Boolean,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetCharacterSpacing(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetCharacterSpacing(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetWidthFactor(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetWidthFactor(System.Double,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Text">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Plane">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.TextOutline">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetTextPolylines(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Layer">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.DefaultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Note.Name">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetColor(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetColor(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Drawing.Color})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Note.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.INote">
            <summary>
            A note.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.INote.GetOccurrence(System.Collections.Generic.IList{SpaceClaim.Api.V23.Instance})">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.INote.GetOccurrence(SpaceClaim.Api.V23.Instance)">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.INote.GetOccurrence(SpaceClaim.Api.V23.IDocObject)">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.INote.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.INote.AnnotationSpace">
            <summary>
            Gets or sets the annotation space for the note.
            </summary>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.AnnotationSpace"/> for more information.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.INote.Curvature">
            <summary>
            Gets or sets the curvature of the note.
            </summary>
            <remarks>
            By default, a note is straight and the <see cref="P:SpaceClaim.Api.V23.INote.Curvature"/> is <b>null</b>.
            The <see cref="P:SpaceClaim.Api.V23.INote.Curvature"/> can be set to create a note that is curved around an arc.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.INote.TextFit">
            <summary>
            Gets or sets the text fit.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.INote.IsMirrored">
            <summary>
            Gets or sets whether the note is mirrored.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.INote.Copy">
            <summary>
            Creates a copy of the note.
            </summary>
            <returns>A copy of the note.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.UpdateFrequency">
            <summary>
            Specifies the frequency at which <see cref="E:SpaceClaim.Api.V23.Command.Updating"/> events are called. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.UpdateFrequency.Always">
            <summary>
            Command is always updated during idle processing. 
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.UpdateFrequency.AsNeeded">
            <summary>
            Command is only updated during idle processing only if the design has been modified. 
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LineStyle">
            <summary>
            A line style.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Hidden">
            <summary>
            The line style used for hidden lines in a "hidden line" rendering (either dashed or faint, depending on user settings).
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Dashed">
            <summary>
            Dash, dash, ... dash.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Dotted">
            <summary>
            Dot, dot, ... dot.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Chained">
            <summary>
            Dashed line: long-short, long-short, ... long.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineStyle.Phantom">
            <summary>
            Dashed line: long-short-short, long-short-short, ... long.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.LineWeight">
            <summary>
            A line weight.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LineWeight.Type">
            <summary>
            Gets the type of the line weight.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.LineWeight.Thickness">
            <summary>
            Gets the thickness of the line weight.
            </summary>
            <remarks>
            If the <see cref="P:SpaceClaim.Api.V23.LineWeight.Type"/> is not <see cref="F:SpaceClaim.Api.V23.LineWeightType.Numeric"/>, the value is zero.
            </remarks>
        </member>
        <member name="T:SpaceClaim.Api.V23.LineWeightType">
            <summary>
            A line weight type.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineWeightType.Numeric">
            <summary>
            The line weight is defined by a thickness value.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineWeightType.Thick">
            <summary>
            The line weight is equal to the user's thick line setting.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineWeightType.Thin">
            <summary>
            The line weight is equal to the user's thin line setting.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineWeightType.ThickThinThick">
            <summary>
            The line is thick at the ends, and thin in the middle.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.LineWeightType.ThickMissingThick">
            <summary>
            The line is thick at the ends, and missing in the middle.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.Access.Read">
            <summary>
            The operation is read-only.
            It can be performed inside or outside a write block.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.Access.Write">
            <summary>
            The operation makes changes and can only be performed inside a write block.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.Access.PermittedWrite">
            <summary>
            The operation makes changes, but not to documents.
            It can be performed inside or outside a write block.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.Access.ImmutableValue">
            <summary>
            Creates an immutable object.
            Effectively a read access, since other threads do not know about this object yet.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.UseThread.Main">
            <summary>
            The main thread is required for execution.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.RemoteObject.UseThread.Any">
            <summary>
            No specific thread (e.g. main thread) is required for execution.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ITransformable">
            <summary>
            Provides a method to transform an object.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.ITransformable.Transform(SpaceClaim.Api.V23.Geometry.Matrix)">
            <summary>
            Transforms the object by applying a transformation <see cref="T:SpaceClaim.Api.V23.Geometry.Matrix"/>.
            </summary>
            <param name="trans">The transformation matrix to apply.</param>
        </member>
        <member name="T:SpaceClaim.Api.V23.PanelTab">
            <summary>
            A custom panel tab.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.PanelTab.Create(SpaceClaim.Api.V23.Command,System.Windows.Forms.Control,SpaceClaim.Api.V23.Panel)">
            <summary>
            Creates a custom panel tab.
            </summary>
            <param name="command">A command to supply the image and text for the tab.</param>
            <param name="content">The content to be displayed.</param>
            <param name="companionPanel">A built-in panel used to identify the panel group for the custom panel.</param>
            <returns>The new panel.</returns>
            <remarks>
            This method adds a custom panel tab to the user interface, whose contents are defined by a Windows Forms <see cref="T:System.Windows.Forms.Control"/>.
            <para/>
            The panel is created in the same panel group as the existing <paramref name="companionPanel"/>.
            <para/>
            The <paramref name="command"/> supplies the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> and <see cref="P:SpaceClaim.Api.V23.Command.Text"/> for the tab,
            and its <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> property controls the visibility of the tab.
            <para/>
            Built-in panels do not show images on their tabs.
            Supplying a command with a <b>null</b> image will achieve this standard appearance.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.PanelTab.Create(SpaceClaim.Api.V23.Command,System.Windows.Forms.Control,SpaceClaim.Api.V23.DockLocation,System.Int32,System.Boolean)">
            <summary>
            Creates a custom panel tab.
            </summary>
            <param name="command">A command to supply the image and text for the tab.</param>
            <param name="content">The content to be displayed.</param>
            <param name="dockLocation">The docking location.</param>
            <param name="size">The width or height of the docking bar.</param>
            <param name="isLocked"><b>true</b> to lock the panel and prevent undocking; otherwise <b>false</b></param>
            <returns>The new panel.</returns>
            <remarks>
            This method adds a custom panel tab to the user interface, whose contents are defined by a Windows Forms <see cref="T:System.Windows.Forms.Control"/>.
            <para/>
            The <paramref name="command"/> supplies the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> and <see cref="P:SpaceClaim.Api.V23.Command.Text"/> for the tab,
            and its <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> property controls the visibility of the tab.
            <para/>
            Built-in panels do not show images on their tabs.
            Supplying a command with a <b>null</b> image will achieve this standard appearance.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.PanelTab.GetTabs(SpaceClaim.Api.V23.Command)">
            <summary>
            Gets panel tabs for a command.
            </summary>
            <param name="command">A command.</param>
            <returns>Panel tabs for that command.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Tab">
            <summary>
            A custom tab.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tab.Command">
            <summary>
            Gets the command associated with this tab.
            </summary>
            <remarks>
            The command supplies the <see cref="P:SpaceClaim.Api.V23.Command.Image"/> and <see cref="P:SpaceClaim.Api.V23.Command.Text"/> for the tab,
            and the command's <see cref="P:SpaceClaim.Api.V23.Command.IsVisible"/> property controls the visibility of the tab.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tab.Activate">
            <summary>
            Activates the tab.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tab.Close">
            <summary>
            Closes the tab.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Tab.Delete">
            <summary>
            Deletes the tab.
            </summary>
            <remarks>
            Same as <see cref="M:SpaceClaim.Api.V23.Tab.Close"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Tab.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="T:SpaceClaim.Api.V23.ViewProjection">
            <summary>
            Standard view projections.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Top">
            <summary>
            View from above.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Bottom">
            <summary>
            View from below.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Front">
            <summary>
            View from the front.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Back">
            <summary>
            View from the back.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Left">
            <summary>
            View from the left.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Right">
            <summary>
            View from the right.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Trimetric">
            <summary>
            Trimetric projection.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.ViewProjection.Isometric">
            <summary>
            Isometric projection.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.IHasVisibility">
            <summary>
            The object implementing this interface has visibility.
            </summary>
            <remarks>
            If the visibility is <b>null</b>, the <see cref="P:SpaceClaim.Api.V23.IHasLayer.DefaultVisibility"/> of the master is used.
            If that in turn is <b>null</b>, the visibility of the layer is used.
            <para/>
            Other conditions can affect the whether the object is ultimately visible.
            For example, a <see cref="T:SpaceClaim.Api.V23.DesignCurve"/> is not displayed if its parent is a <see cref="T:SpaceClaim.Api.V23.DatumPlane"/>,
            which itself is not visible.
            <see cref="M:SpaceClaim.Api.V23.IHasVisibility.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)"/> can be used to determine whether the object is ultimately visible.
            <para/>
            <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> implements <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/>, which means the visibility of an object
            can be set differently in a <see cref="T:SpaceClaim.Api.V23.DrawingSheet"/> from how it appears in design windows.
            If the visibility in a drawing sheet has never been set, then the visibility is <b>null</b>.
            (This is different from how colors work - see <see cref="T:SpaceClaim.Api.V23.IHasColor"/>.)
            If the visibility is <b>null</b>, the layer visibility will be used, which could itself be different in the drawing sheet.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasVisibility.GetVisibility(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets the visibility of the object in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns>Whether the object is visible.</returns>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the visibility is <b>null</b>, the visibility of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasVisibility.SetVisibility(SpaceClaim.Api.V23.IAppearanceContext,System.Nullable{System.Boolean})">
            <summary>
            Sets the visibility of the object in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <param name="visible">The visibility to use.</param>
            <remarks>
            See <see cref="T:SpaceClaim.Api.V23.IAppearanceContext"/> for more information.
            <para/>
            If the visibility is <b>null</b>, the visibility of the layer is used.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.IHasVisibility.IsVisible(SpaceClaim.Api.V23.IAppearanceContext)">
            <summary>
            Gets whether the object is visible in the specified context.
            </summary>
            <param name="context">The appearance context, or <b>null</b> for the appearance in design windows.</param>
            <returns><b>true</b> if the object is visible; otherwise <b>false</b>.</returns>
        </member>
        <member name="T:SpaceClaim.Api.V23.Window">
            <summary>
            A graphical interaction window, showing a part or a drawing sheet.
            </summary>
            <remarks>
            Some information about the scene in the window, such as the current selection and the section plane,
            is presented by an <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> object.
            <see cref="P:SpaceClaim.Api.V23.Window.ActiveContext"/> is typically used to obtain the interaction context,
            but <see cref="P:SpaceClaim.Api.V23.Window.SceneContext"/> and <see cref="M:SpaceClaim.Api.V23.Window.GetContext(SpaceClaim.Api.V23.IDocObject)"/> may also be used.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.InteractionContext"/>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.ActiveWindowChanged">
            <summary>
            Occurs when the <see cref="P:SpaceClaim.Api.V23.Window.ActiveWindow"/> has changed.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.SelectionChanged">
            <summary>
            Occurs when the selection changes.
            </summary>
            <remarks>
            This event is raised when the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Selection"/> of the <see cref="P:SpaceClaim.Api.V23.Window.SceneContext"/> has changed.
            The selection in any other <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for this window is the subset of the scene selection
            that can be mapped into context-space, so this subset may not have changed even though the selection in the overall scene has.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowSelectionChanged">
            <summary>
            Occurs when the selection of the active window changes.
            </summary>
            <remarks>
            This event is raised when the selection has changed, either because it has changed in
            the <see cref="P:SpaceClaim.Api.V23.Window.ActiveWindow"/>, or because another window has become active.
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window that contains the new selection.
            <para/>
            If the event was raised because the last window was closed, then the subject will be <b>null</b>.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.PreselectionChanged">
            <summary>
            Occurs when the preselection changes.
            </summary>
            <remarks>
            This event is raised when the <see cref="P:SpaceClaim.Api.V23.InteractionContext.Preselection"/> of the <see cref="P:SpaceClaim.Api.V23.Window.SceneContext"/> has changed.
            The preselection in any other <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for this window may not have changed.
            See <see cref="E:SpaceClaim.Api.V23.Window.SelectionChanged"/> for on why this is.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowPreselectionChanged">
            <summary>
            Occurs when the preselection of any window changes.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window that contains the new preselection.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowOpened">
            <summary>
            Occurs when a window is opened.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window that was opened.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowCloseProposed">
            <summary>
            Occurs when it is proposed that a window should close.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window to be closed.
            <para/>
            An event handler can cancel the operation by calling <see cref="M:SpaceClaim.Api.V23.CancelStatus.Cancel"/>.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowCloseAgreed">
            <summary>
            Occurs when a window is about to be closed.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window to be closed.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.WindowClosed">
            <summary>
            Occurs when a window is closed.
            </summary>
            <remarks>
            The second argument of the event handler has a <see cref="P:SpaceClaim.Api.V23.SubjectEventArgs`1.Subject"/> property,
            which returns the window that was closed.
            </remarks>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.ActiveToolChanged">
            <summary>
            Occurs when an active tool in the window has changed.
            </summary>
        </member>
        <member name="E:SpaceClaim.Api.V23.Window.InteractionModeChanged">
            <summary>
            Occurs when the section mode in the window has changed.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Create(SpaceClaim.Api.V23.Part,System.Boolean)">
            <summary>
            Creates a window showing a part.
            </summary>
            <param name="scene">A part to be used as the window scene.</param>
            <param name="visible">Whether the new window should be visible.</param>
            <returns>A new window.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Create(SpaceClaim.Api.V23.DrawingSheet)">
            <summary>
            Creates a window showing a drawing sheet.
            </summary>
            <param name="scene">A drawing sheet to be used as the window scene.</param>
            <returns>A new window.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.CreateEmbedded(SpaceClaim.Api.V23.Part,SpaceClaim.Api.V23.EmbeddedWindowHandler)">
            <summary>
            Creates a window showing a part, which can be embedded in a custom user interface.
            </summary>
            <param name="scene">A part to be used as the window scene.</param>
            <param name="handler">A handler for controlling the embedded window.</param>
            <returns>A new window.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Split">
            <summary>
            Gets or sets the window split arrangement.
            </summary>
            <remarks>
            Returns a <see cref="T:SpaceClaim.Api.V23.LeftRightSplit"/>, a <see cref="T:SpaceClaim.Api.V23.TopBottomSplit"/>, or a <see cref="T:SpaceClaim.Api.V23.FourWaySplit"/> object;
            or <b>null</b> if the window is not split.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.IsVisible">
            <summary>
            Gets or sets whether the window is visible.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.AllowDragDrop">
            <summary>
            Gets or set whether the window will allow a user to drop an object in the window.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.IsViewProjectionLocked">
            <summary>
            Gets or sets whether window's view projection is locked
            </summary>
            <remarks>
            When a window's view projection is locked, all commands for manipulating the view are disabled.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.AllWindows">
            <summary>
            Gets all windows in the session.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.GetWindows(SpaceClaim.Api.V23.Document)">
            <summary>
            Gets all windows with scenes belonging to the specified document.
            </summary>
            <param name="doc">The document for which windows are sought.</param>
            <returns>Zero or more windows with scenes belonging to the specified document.</returns>
            <remarks>
            If a document has been loaded using <see cref="M:SpaceClaim.Api.V23.Document.Load(System.String)"/> or it has been 
            loaded implicitly, e.g. because an assembly was opened and one of its components
            has a template part in another document, then the document may not have any windows
            open.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.GetWindows(SpaceClaim.Api.V23.Part)">
            <summary>
            Gets all windows having the specified part as their scene.
            </summary>
            <param name="scene">The window scene.</param>
            <returns>Zero or more windows having the specified part as their scene.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.GetWindows(SpaceClaim.Api.V23.DrawingSheet)">
            <summary>
            Gets all windows having the specified drawing sheet as their scene.
            </summary>
            <param name="scene">The window scene.</param>
            <returns>Zero or more windows having the specified drawing sheet as their scene.</returns>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Document">
            <summary>
            Gets the document to which this window belongs.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.ActiveWindow">
            <summary>
            Gets or sets the active window.
            </summary>
            <remarks>
            If the last window has been closed, so that there are no longer any windows, <see cref="P:SpaceClaim.Api.V23.Window.ActiveWindow"/> returns <b>null</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.SelectionFilter">
            <summary>
            Gets or sets the selection filter for the window.
            </summary>
            <remarks>
            The selection filter can either be set to use SpaceClaim smart selection or 
            can be set to filter selection to specific types by using a logical OR operator
            to combine particular types.
            </remarks>
            <example>
            The following examples show some of the ways to set the selection filter.
            <code>
            // Select only faces and edges
            Window.ActiveWindow.SelectionFilter = SelectionFilterType.Faces | SelectionFilterType.Edges;
            
            // Select everything but annotations
            Window.ActiveWindow.SelectionFilter = SelectionFilterType.All &amp; ~SelectionFilterType.AllAnnotations;
            
            // Turn on smart selection
            Window.ActiveWindow.SelectionFilter = SelectionFilterType.Smart;
            </code>
            </example>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Copy">
            <summary>
            Creates a new window that shows the same <see cref="P:SpaceClaim.Api.V23.Window.Scene"/> as this window.
            </summary>
            <returns>A new window.</returns>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.ZoomExtents">
            <summary>
            Zooms and pans so as to fit the scene to the window.
            </summary>
            <remarks>
            The operation does not happen until the end of the command being executed.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.ZoomSelection">
            <summary>
            Zooms so as to fit the current selection to the window.
            If nothing is selected, the behavior is the same as <see cref="M:SpaceClaim.Api.V23.Window.ZoomExtents"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.HomeProjection">
            <summary>
            Gets or sets the home projection for the active view.
            </summary>
            <remarks>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Projection">
            <summary>
            Gets the view projection matrix for the active view.
            </summary>
            <remarks>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.SetProjection(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean,System.Boolean)">
            <summary>
            Sets the view projection for the active view.
            </summary>
            <param name="projection">The new projection to use.</param>
            <param name="zoomExtents">Whether to fit the scene to the window.</param>
            <param name="animate">Whether to animate the change to the projection.</param>
            <remarks>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.SetProjection(SpaceClaim.Api.V23.Geometry.Frame,System.Double)">
            <summary>
            Sets the view projection for the active view.
            </summary>
            <param name="viewPlane">The view plane.</param>
            <param name="viewSize">The size of the view in model-space.</param>
            <remarks>
            This method can be used to set the view projection for a specific scene in the view.
            <para/>
            The projection is set so as to look flat onto the XY plane of the <paramref name="viewPlane"/>.
            The <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.Origin"/> of the <paramref name="viewPlane"/> is centered in the view,
            and the orientation is with <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirX"/> to the right, and <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.DirY"/> up.
            <para/>
            The size of the scene is controlled by <paramref name="viewSize"/>,
            which is the model-space size that should fill the view.
            The <paramref name="viewSize"/> will occupy the smaller of the width or height of view.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Scene">
            <summary>
            Gets the scene shown in the window, either a part or a drawing sheet.
            </summary>
            <remarks>
            The scene is a <see cref="P:SpaceClaim.Api.V23.DocObject.Root"/> object.
            <para/>
            This property is equivalent to <c>window.<see cref="P:SpaceClaim.Api.V23.Window.SceneContext"/>.<see cref="P:SpaceClaim.Api.V23.InteractionContext.Root"/></c>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.SceneBox">
            <summary>
            Gets the scene box.
            </summary>
            <remarks>
            The scene box is the bounding box of the visible objects in the scene.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Camera">
            <summary>
            Gets the camera for the scene.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.TransformCamera(SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Transforms the camera for the scene.
            The scene must be in FlyThrough mode
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.GetCameraFrame">
            <summary>
            Gets the camera's frame for the scene.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.ActiveLayer">
            <summary>
            Gets or sets the active layer of the window.
            </summary>
            <exception cref="T:System.ArgumentException">The layer belongs to the wrong document.</exception>
            <remarks>
            The active layer is the layer to which newly created objects are assigned.
            Different windows of the same subject matter can have a different active layer.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.DeleteLayers(System.String)">
            <summary>
            Deletes layers in the window that match the specified name.
            </summary>
            <param name="name">The layer name.</param>
            <remarks>
            In general, the scene in a window shows parts that live in more than one document.
            In the user interface, the union of layer names is presented.
            This method deletes all layers in any documents in the scene that have the specified name.
            <para/>
            The <see cref="P:SpaceClaim.Api.V23.Document.DefaultLayer"/> cannot be deleted.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.CreateBitmap(System.Drawing.Size)">
            <summary>
            Creates a bitmap image of the current scene shown in the window.
            </summary>
            <param name="size">The size of the bitmap.</param>
            <returns>A bitmap.</returns>
            <remarks>
            This method is designed to create a thumbnail image,
            so <paramref name="size"/> is expected to be smaller than the <see cref="P:SpaceClaim.Api.V23.Window.Size"/> of the window.
            <para/>
            If the aspect ratio of <paramref name="size"/> does not match the aspect ratio of the <see cref="P:SpaceClaim.Api.V23.Window.Size"/> of the window,
            the resulting image will be cropped.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.CreateBitmap(System.Drawing.Size,System.Boolean,System.Boolean,SpaceClaim.Api.V23.Geometry.Matrix,System.Boolean)">
            <summary>
            Creates a bitmap image of the current scene shown in the window.
            </summary>
            <param name="size">The size of the bitmap.</param>
            <param name="hideGrid">Hides the grid.</param>
            <param name="hideDrawingMatte">Hides the drawing sheet matte.</param>
            <param name="projection">The scene projection to use.</param>
            <param name="transparentBackground">Whether to use a transparent background.</param>
            <returns>A bitmap.</returns>
            <remarks>
            This method is designed to create a thumbnail image,
            so <paramref name="size"/> is expected to be smaller than the <see cref="P:SpaceClaim.Api.V23.Window.Size"/> of the window.
            <para/>
            If the aspect ratio of <paramref name="size"/> does not match the aspect ratio of the <see cref="P:SpaceClaim.Api.V23.Window.Size"/> of the window,
            the resulting image will be cropped.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)">
            <summary>
            Exports the scene in a particular file format.
            </summary>
            <param name="format">The file format to use.</param>
            <param name="path">The path of the file to write to.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <remarks>
            A standard file extension will be added according to the file type specified.
            <para/>
            Both <see cref="T:SpaceClaim.Api.V23.Part"/> and <see cref="T:SpaceClaim.Api.V23.Window"/> have methods to export to a particular file format.
            <see cref="T:SpaceClaim.Api.V23.Part"/> export translates the model, which does not need to be open in a window,
            whereas <see cref="T:SpaceClaim.Api.V23.Window"/> export translates the graphics, which is why a window is required.
            <para/>
            There are three window export methods:
            <list type="bullet">
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/> works for any window.
            </item>
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Window.ExportPart(SpaceClaim.Api.V23.PartWindowExportFormat,System.String)"/> works for a window that shows a part.
            </item>
            <item>
            	<see cref="M:SpaceClaim.Api.V23.Window.ExportDrawingSheet(SpaceClaim.Api.V23.DrawingSheetWindowExportFormat,SpaceClaim.Api.V23.DrawingSheetBatch,System.String)"/> works for a window that shows a drawing sheet.
            </item>
            </list>
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.ExportPart(SpaceClaim.Api.V23.PartWindowExportFormat,System.String)">
            <summary>
            Exports the part in a particular file format.
            </summary>
            <param name="format">The file format to use.</param>
            <param name="path">The path of the file to write to.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <exception cref="T:System.InvalidOperationException">The window does not show a part.</exception>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/>
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.ExportDrawingSheet(SpaceClaim.Api.V23.DrawingSheetWindowExportFormat,SpaceClaim.Api.V23.DrawingSheetBatch,System.String)">
            <summary>
            Exports the drawing sheet in a particular file format.
            </summary>
            <param name="format">The file format to use.</param>
            <param name="batch">Which drawing sheet windows to export.</param>
            <param name="path">The path of the file to write to.</param>
            <exception cref="T:System.InvalidOperationException">This copy of SpaceClaim is not licensed for the specified operation.</exception>
            <exception cref="T:System.InvalidOperationException">The window does not show a drawing sheet.</exception>
            <remarks>
            <inheritdoc cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/>
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Part.Export(SpaceClaim.Api.V23.PartExportFormat,System.String,System.Boolean,SpaceClaim.Api.V23.ExportOptions)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Groups">
            <summary>
            Gets the groups belonging to the scene shown in the window.
            </summary>
            <remarks>
            If the window shows an assembly, the groups of the top-level part are returned.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.SelectedGroups">
            <summary>
            Gets or sets the groups currently selected in the groups panel.  
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.ActiveTool">
            <summary>
            Gets the active tool, if that tool is using this API version.
            </summary>
            <remarks>
            If the active tool is a custom tool implemented using this version of the API,
            then that tool is returned; otherwise <b>null</b> is returned.
            <para/>
            The purpose of this property is to determine whether your custom tool is active.
            The purpose is not to provide access to built-in tools, or tools provided by
            other add-ins.
            <para/>
            <see cref="P:SpaceClaim.Api.V23.Window.ActiveTool"/> is typically use to set IsChecked for the command that activates a custom tool.
            <code>
            <![CDATA[
            Window window = Window.ActiveWindow;
            command.IsEnabled = window != null;
            command.IsChecked = window != null && window.ActiveTool is CustomTool;
            ]]>
            </code>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.SceneContext">
            <summary>
            Gets the interaction context for the scene.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.ActiveContext">
            <summary>
            Gets the interaction context in which the user is currently working.
            </summary>
            <remarks>
            This property returns a live context, i.e. if the user changes context, this interaction context changes too.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.GetContext(SpaceClaim.Api.V23.IDocObject)">
            <summary>
            Gets an interaction context for the specified root object.
            </summary>
            <param name="sceneSpaceRoot">Root object describing the context.</param>
            <returns>The new interaction context.</returns>
            <exception cref="T:System.ArgumentException">The object does not belong to the scene.</exception>
            <exception cref="T:System.ArgumentException">The master is not a root object.</exception>
            <remarks>
            The <paramref name="sceneSpaceRoot"/> must be an object in scene-space whose master is a root object.
            A root object is an object whose <see cref="P:SpaceClaim.Api.V23.DocObject.Parent"/> is <b>null</b>.
            <para/>
            See <see cref="T:SpaceClaim.Api.V23.InteractionContext"/> for more information.
            </remarks>
            <seealso cref="T:SpaceClaim.Api.V23.InteractionContext"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.InteractionMode">
            <summary>
            Gets or sets the interaction mode of the window.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Size">
            <summary>
            Gets the width and height of the active view in pixels.
            </summary>
            <remarks>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.CursorPosition">
            <summary>
            Gets the position of the cursor in the active view.
            </summary>
            <remarks>
            The coordinate space of the view is in pixels,
            with <c>(0, 0)</c> as the top-left pixel and <c>(width - 1, height - 1)</c> as the bottom-right pixel.
            The <see cref="P:SpaceClaim.Api.V23.Window.Size"/>property can be used to obtain the width and height of the view.
            <para/>
            The cursor might be outside the view, in which case the cursor position will be outside this range.
            <para/>
            The window can be split into two or four panes.
            The active view is the pane in which the user last clicked.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Rendering">
            <summary>
            Gets or sets the temporary graphics rendering.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.Window.ClipViewShape">
            <summary>
            Specifies a clipping volume shape for use with <see cref="M:SpaceClaim.Api.V23.Window.SetClipVolume(SpaceClaim.Api.V23.Window.ClipViewShape,SpaceClaim.Api.V23.Geometry.Frame,System.Double)"/>.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Window.ClipViewShape.Box">
            <summary>
            Use a box for the clipping volume.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.Window.ClipViewShape.Sphere">
            <summary>
            Use a sphere for the clipping volume.
            </summary>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.SetClipVolume(SpaceClaim.Api.V23.Window.ClipViewShape,SpaceClaim.Api.V23.Geometry.Frame,System.Double)">
            <summary>
            Sets the clipping volume for the window.
            </summary>
            <param name="shape">
            The shape of the clipping volume.
            </param>
            <param name="frame">
            A frame that defines the origin and orientation of the clipping volume.
            </param>
            <param name="radius">
            The radius of the clipping volume.
            </param>
            <remarks>
            For a <b>Box</b> clipping shape, <paramref name="frame"/> defines the center and orientation of the clipping region. 
            <para/>
            For a <b>Sphere</b> clipping shape, the <see cref="P:SpaceClaim.Api.V23.Geometry.Frame.Origin"/> property of <paramref name="frame"/> is used to define the center of the clipping region. 
            </remarks>
            <seealso cref="M:SpaceClaim.Api.V23.Window.ClearClipVolume"/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.ClearClipVolume">
            <summary>
            Clears the current clipping volume for the window.
            </summary>
            <seealso cref="M:SpaceClaim.Api.V23.Window.SetClipVolume(SpaceClaim.Api.V23.Window.ClipViewShape,SpaceClaim.Api.V23.Geometry.Frame,System.Double)"/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.IsSketchConversionEnabled">
            <summary>
            Gets or sets whether conversion between sketches and surfaces is enabled. 
            </summary>
            <remarks>
            The default is <b>true</b>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.ExtendConstructionLines">
            <summary>
            Gets or sets whether construction lines should be rendered with extensions.
            </summary>
            <remarks>The lines are extended relative to the bounding box of the visible objects in the scene. 
            <br/>
            The default is <b>false</b>
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.Units">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Close">
            <summary>
            Closes the window.
            </summary>
            <remarks>
            The window is closed.
            If this is the last window of the document, and the document needs saving, the user will <i>not</i> be prompted to save changes.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.Delete">
            <summary>
            Deletes the window.
            </summary>
            <remarks>
            Same as <see cref="M:SpaceClaim.Api.V23.Window.Close"/>.
            </remarks>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.IsDeleted">
            <inheritdoc/>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.LifetimeLease">
            <inheritdoc/>
        </member>
        <member name="M:SpaceClaim.Api.V23.Window.RefreshRendering">
            <summary>
            Forces the window to repaint the graphics specified in <see cref="P:SpaceClaim.Api.V23.Window.Rendering"/>.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.FontName">
            <summary>
            Gets the window font name.
            </summary>
        </member>
        <member name="P:SpaceClaim.Api.V23.Window.FontSize">
            <summary>
            Gets the window font size.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ActiveToolChangedEventArgs">
            <summary>
            Event arguments used with the <see cref="E:SpaceClaim.Api.V23.Window.ActiveToolChanged"/> event
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ToolOperation">
            <summary>
            What operation is happening during tool setting
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.WindowExportFormat">
            <summary>
            Specifies an export format for use with the <see cref="M:SpaceClaim.Api.V23.Window.Export(SpaceClaim.Api.V23.WindowExportFormat,System.String)"/> method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.AutoCadDwg">
            <summary>
            An AutoCAD DWG (".dwg") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.AutoCadDxf">
            <summary>
            An AutoCAD DXF (".dxf") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Bmp">
            <summary>
            A Windows bitmap (".bmp") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Jpeg">
            <summary>
            A JPEG image (".jpg") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Png">
            <summary>
            A PNG image (".png") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Tiff">
            <summary>
            A TIFF image (".tif") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Gif">
            <summary>
            A GIF image (".gif") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Amf">
            <summary>
            An AMF (".amf") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Pov">
            <summary>
            A POV-Ray (".pov") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Anf">
            <summary>
            An ANSYS Neutral File (".anf") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.Amm">
            <summary>
            An ANSYS Modeler Mesh (".amm") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.IcepakModel">
            <summary>
            An ANSYS Icepak model ("model") file.
            </summary>
            <exclude/>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.QIF">
            <summary>
            A QIF (".qif") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.MSH">
            <summary>
            A Fluent mesh (".msh") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.INP">
            <summary>
            An ANSYS mesh (".inp") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.TGF">
            <summary>
            A Fluent mesh (".tgf") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.TIN">
            <summary>
            An ICEM CFD (".tin") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.STL">
            <summary>
            An STL (".stl") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.FMD">
            <summary>
            A FM database (".fmd") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.WindowExportFormat.DISCO">
            <summary>
            A Disco (".dsco") file.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.PartWindowExportFormat">
            <summary>
            Specifies an export format for use with the <see cref="M:SpaceClaim.Api.V23.Window.ExportPart(SpaceClaim.Api.V23.PartWindowExportFormat,System.String)"/> method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartWindowExportFormat.Vrml">
            <summary>
            A VRML (".wrl") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartWindowExportFormat.Xaml">
            <summary>
            A XAML (".xaml") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartWindowExportFormat.Stl">
            <summary>
            An STL (".stl") file.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartWindowExportFormat.Obj">
            <summary>
            A Wavefront image (".obj") file.
            A companion material file (".mtl") is also exported.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.PartWindowExportFormat.Bip">
            <summary>
            A Luxion KeyShot scene (".bip") file.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingSheetWindowExportFormat">
            <summary>
            Specifies an export format for use with the <see cref="M:SpaceClaim.Api.V23.Window.ExportDrawingSheet(SpaceClaim.Api.V23.DrawingSheetWindowExportFormat,SpaceClaim.Api.V23.DrawingSheetBatch,System.String)"/> method.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetWindowExportFormat.Pdf">
            <summary>
            A 2D PDF (".pdf") file.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.DrawingSheetBatch">
            <summary>
            Specifies which drawing sheet windows to use.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetBatch.SingleWindow">
            <summary>
            A single drawing sheet window.
            </summary>
        </member>
        <member name="F:SpaceClaim.Api.V23.DrawingSheetBatch.AllWindows">
            <summary>
            All drawing sheet windows currently open.
            </summary>
        </member>
        <member name="T:SpaceClaim.Api.V23.ModifyLockedDocumentBlock">
            <summary>
            Allows for modification of a locked document within a block of code. 
            </summary>
            <remarks>
            This should be used to wrap a call to <see cref="M:SpaceClaim.Api.V23.WriteBlock.ExecuteTask(System.String,SpaceClaim.Api.V23.Task)">WriteBlock.ExecuteTask</see> or
            <see cref="M:SpaceClaim.Api.V23.WriteBlock.AppendTask(SpaceClaim.Api.V23.Task)">WriteBlock.AppendTask</see>.
            <br/>
            This disposable object should be used with a C# <i>using</i> statement, or equivalent.
            </remarks>
        </member>
        <member name="M:SpaceClaim.Api.V23.ModifyLockedDocumentBlock.#ctor">
            <summary>
            Constructs the object.
            </summary>
        </member>
    </members>
</doc>
