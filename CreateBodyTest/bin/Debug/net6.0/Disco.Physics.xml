<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Disco.Physics</name>
    </assembly>
    <members>
        <member name="M:Ansys.Disco.Physics.Beams.IBeamEntityProvider.GetBeamEntityFromSectionSource(SpaceClaim.IPart)">
            <summary>
            This provider method gets the beam entity from the <see cref="P:SpaceClaim.Beam.SectionSource"/>.
            </summary>
            <param name="sectionSource"><see cref="P:SpaceClaim.Beam.SectionSource"/></param>
            <returns>the BeamEntity</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Beams.IBeamTransfer">
            <summary>
            This can be used to transfer legacy SpaceClaim .scdoc materials to Discovery simulations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Bolts.IBoltEntityProvider.GetBoltEntityFromBoltSource(SpaceClaim.IPart)">
            <summary>
            This provider method gets the bolt entity from the <see cref="P:SpaceClaim.Bolt.BoltSource"/>.
            </summary>
            <param name="boltSource"><see cref="P:SpaceClaim.Bolt.BoltSource"/></param>
            <returns>the BoltEntity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Charts.ChartsTreeBaseItem.TryGetChartEntity(Ansys.Disco.Physics.Entities.Charts.IChartEntity@)">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Charts.ChartsTreeBaseItem.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.AssignBeamCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.AssignBeamCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.AssignBeamCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.AssignBeamCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.ChangeAssignedBeamDataCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeAssignedBeamDataCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeAssignedBeamDataCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeAssignedBeamDataCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.ChangeBeamAssignmentScopeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeBeamAssignmentScopeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeBeamAssignmentScopeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ChangeBeamAssignmentScopeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.DeleteBeamsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.DeleteBeamsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.DeleteBeamsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.DeleteBeamsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.ExtractedBeamAssignments">
            <summary>
            Beam assignments created or extended after extracting.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.ScTimer">
            <summary>
            Timer to monitor time taken by SpaceClaim ExtractBeamFromBodyCommand.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.ExtractBeamsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.SetBeamMaterialCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamMaterialCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamMaterialCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamMaterialCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Beams.SetBeamProfileNameCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamProfileNameCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamProfileNameCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Beams.SetBeamProfileNameCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.CloneBoltAssignmentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.CloneBoltAssignmentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.MergeBoltLocationsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.MergeBoltLocationsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.MergeBoltLocationsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.MergeBoltLocationsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.SplitBoltLocationsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SplitBoltLocationsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SplitBoltLocationsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SplitBoltLocationsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.AssignBoltCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.AssignBoltCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.AssignBoltCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.AssignBoltCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.BoltCommandBase.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.ChangeAssignedBoltDataCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeAssignedBoltDataCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeAssignedBoltDataCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeAssignedBoltDataCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.ChangeBoltAssignmentScopeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeBoltAssignmentScopeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeBoltAssignmentScopeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ChangeBoltAssignmentScopeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.DeleteBoltsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.DeleteBoltsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.DeleteBoltsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.DeleteBoltsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.ExtractBoltsCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.ExtractBoltsCommand.ExtractedBoltAssignments">
            <summary>
            Bolt assignments created after extracting.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ExtractBoltsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ExtractBoltsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.ExtractBoltsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.SetBoltMaterialCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltMaterialCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltMaterialCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltMaterialCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Bolts.SetBoltNameCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltNameCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltNameCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Bolts.SetBoltNameCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactSpecifyThermalConductanceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactSpecifyThermalConductanceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactThermalConductanceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactThermalConductanceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeInterfaceSpecifyThermalConductanceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeInterfaceSpecifyThermalConductanceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeInterfaceThermalConductanceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeInterfaceThermalConductanceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialDensityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialDensityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialDensityCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialDensityCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialSpecificHeatCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialSpecificHeatCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialSpecificHeatCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialSpecificHeatCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialThermalConductivityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialThermalConductivityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialThermalConductivityCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousMediaMaterialThermalConductivityCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesColorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesColorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesFrequencyCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesFrequencyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesModifierCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesModifierCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDbScalingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDbScalingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartOrientationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartOrientationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesPortCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesPortCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesVariableCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDataSeriesVariableCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.AddChartDataSeriesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.AddChartDataSeriesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.ChangeChartDisplayTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.ChangeChartDisplayTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.CloneChartsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.CloneChartsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.DuplicateChartCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.DuplicateChartCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Charts.RemoveChartDataSeriesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Charts.RemoveChartDataSeriesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.CommandInitializers.ChangeInterfaceSpecifyThermalConductanceCommandInitializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Beams.ExtractBeamsCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Beams.SetBeamMaterialCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Beams.SetBeamProfileNameCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Bolts.ExtractBoltsCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Bolts.SetBoltMaterialCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.CommandInitializers.Bolts.SetBoltNameCommandInitializer.GetCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConductiveLossesTypeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConductiveLossesTypeCommand"/> class.
            Command that will change electromagnetic conductive losses type setting
            </summary>
            <param name="simulation">simulation to alter electromagnetic conductive losses type setting</param>
            <param name="electromagneticConductiveLossesType">whether the electromagnetic conductive losses type is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConductiveLossesTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConductiveLossesTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConvergenceTargetCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConvergenceTargetCommand"/> class.
            Command that will change electromagnetic convergence setting
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="electromagneticConvergenceTarget">whether the electromagnetic convergence target is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConvergenceTargetCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionElectromagneticConvergenceTargetCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionMaximumSimulationDurationCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionMaximumSimulationDurationCommand"/> class.
            Command that will change maximum simulation duration setting
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="maximumSimulationDuration">whether the maximum simulation duration is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionMaximumSimulationDurationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionMaximumSimulationDurationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfFarfieldFrequencyPointsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfFarfieldFrequencyPointsCommand"/> class.
            Command that will change number of farfield frequency points
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="numberOfFarfieldFrequencyPoints">whether the number of farfield frequency points is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfFarfieldFrequencyPointsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfFarfieldFrequencyPointsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfNearfieldFrequencyPointsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfNearfieldFrequencyPointsCommand"/> class.
            Command that will change number of nearfield frequency points
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="numberOfNearfieldFrequencyPoints">whether the number of nearfield frequency points is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfNearfieldFrequencyPointsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfNearfieldFrequencyPointsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfSParameterFrequencyPointsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfSParameterFrequencyPointsCommand"/> class.
            Command that will change number of s-parameter frequency points
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="numberOfSParameterFrequencyPoints">whether the number of s-parameter frequency points is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfSParameterFrequencyPointsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionNumberOfSParameterFrequencyPointsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionPerfectConductivityThresholdCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionPerfectConductivityThresholdCommand"/> class.
            Command that will change perfect conductivity threshold
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="perfectConductivityThreshold">whether the perfect conductivity threshold is user or program controlled, and user controlled value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionPerfectConductivityThresholdCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.Electromagnetic.ChangeSimulationOptionPerfectConductivityThresholdCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationCustomPhysicsTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationCustomPhysicsTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ToggleModalPhysicsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ToggleModalPhysicsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ToggleModalPhysicsCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ToggleModalPhysicsCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowConvergenceStopCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowConvergenceStopCommand"/> class.
            </summary>
            <param name="simulation">Simulation where criteria is modified</param>
            <param name="newFlowConvergenceStop">new Flow Convergence Stop</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowConvergenceStopCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowConvergenceStopCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionImproveMeshCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionImproveMeshCommand"/> class.
            Command that will change the improve mesh option value
            </summary>
            <param name="simulation">Simulation to alter improve mesh value on</param>
            <param name="improveMesh">New improve mesh option value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionImproveMeshCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionImproveMeshCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetEnergyCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetEnergyCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newNumericalConvergenceTargetEnergy">new convergence target value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetEnergyCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetEnergyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetMonitorsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetMonitorsCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newNumericalConvergenceTargetMonitors">new convergence target value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetMonitorsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetMonitorsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionIncludeNewBodiesCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionIncludeNewBodiesCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="includeNewBodies">Include in simulation</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionIncludeNewBodiesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionIncludeNewBodiesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfSolutionProgressionCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfSolutionProgressionCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newSpecificationOfSolutionProgression">newSpecificationOfSolutionProgression</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfSolutionProgressionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfSolutionProgressionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionInitialNumberOfSubstepsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionInitialNumberOfSubstepsCommand"/> class.
            Command that will change initial number of substeps
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newInitialNumberOfSubsteps">new Initial Number Of Substeps</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionInitialNumberOfSubstepsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionInitialNumberOfSubstepsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfIterationsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfIterationsCommand"/> class.
            Command that will change maximum number of Iterations
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newMaximumNumberOfIterations">newMaximumNumberOfIterations</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfIterationsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfIterationsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfSubstepsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfSubstepsCommand"/> class.
            Command that will change maximum number of substeps
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newMaximumNumberOfSubsteps">newMaximumNumberOfSubsteps</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfSubstepsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMaximumNumberOfSubstepsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMinimumNumberOfSubstepsCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMinimumNumberOfSubstepsCommand"/> class.
            Command that will change minimum number of substeps
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newMinimumNumberOfSubsteps">newMinimumNumberOfSubsteps</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMinimumNumberOfSubstepsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionMinimumNumberOfSubstepsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="window">Interaction window</param>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newNumericalConvergenceTarget">new convergence target value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionNumericalConvergenceTargetCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfFlowConvergenceCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfFlowConvergenceCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newSpecificationOfFlowConvergence">newOverrideDefaultFlowConvergence</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfFlowConvergenceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfFlowConvergenceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionCalculationTypeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.CalculationTypeOption})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionCalculationTypeCommand"/> class.
            </summary>
            <param name="simulation">Simulation where criteria is modified</param>
            <param name="newCalculationType">new Calculation Type</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionCalculationTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionCalculationTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowModelCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowModelCommand"/> class.
            </summary>
            <param name="simulation">Simulation where criteria is modified</param>
            <param name="newFlowModel">Flow model to change to</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowModelCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionFlowModelCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfTimeDependentDurationSettingCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfTimeDependentDurationSettingCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">simulation to alter convergence target</param>
            <param name="newSpecificationOfTimeDependentDurationSetting">newSpecificationOfTimeDependentDurationSetting</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfTimeDependentDurationSettingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionSpecificationOfTimeDependentDurationSettingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionStructuralModelCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionStructuralModelCommand"/> class.
            </summary>
            <param name="simulation">Simulation where criteria is modified</param>
            <param name="newStructuralModel">newStructuralModel</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionStructuralModelCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionStructuralModelCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionTargetEngineeringConvergenceCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionTargetEngineeringConvergenceCommand"/> class.
            Command that will change numerical convergence target
            </summary>
            <param name="simulation">Simulation to alter convergence target</param>
            <param name="newTargetEngineeringConvergence">New convergence target value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionTargetEngineeringConvergenceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSimulationOptionTargetEngineeringConvergenceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.AddSimulationBodiesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.AddSimulationBodiesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSolutionEndTimeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,UnitsNet.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSolutionEndTimeCommand"/> class.
            Command that will change the duration of a solution
            </summary>
            <param name="simulation">simulation to alter duration</param>
            <param name="newEndTime">end time for given solution in seconds</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSolutionEndTimeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSolutionEndTimeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSpecifyEndTimeCommand">
            <summary>
            Will toggle the SpecifyEndTime property on a simulation entity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSpecifyEndTimeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.ChangeSpecifyEndTimeCommand"/> class.
            </summary>
            <param name="simulationEntity">The simulation entity to toggle specify end time on</param>
            <param name="specifyEndTime">value to set</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.ChangeSpecifyEndTimeCommand.Name">
            <inheritdoc />
            <summary>
            The name of this command. Will appear in the undo stack
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.ChangeSpecifyEndTimeCommand.Apply">
            <summary>
            Apply this command
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Simulations.CloneSimulationCommand">
            <summary>
            Clones a simulation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.CloneSimulationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.CloneSimulationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="F:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.Operation.SuppressOverwrite">
            <summary>
            Clears current set of suppressed bodies on simulation and replaces with listed bodies
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.Operation.SuppressIncremental">
            <summary>
            Adds listed bodies to current set on simulation
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.Operation.UnsuppressIncremental">
            <summary>
            Removes listed bodies from current set on simulation
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.Operation.UnsuppressAll">
            <summary>
            Unsuppresses all bodies on simulation (listed bodies ignored)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand.Operation,Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Simulations.PhysicsSuppressionCommand"/> class.
            Sets suppression state of bodies
            </summary>
            <param name="window">The window</param>
            <param name="simulationEntity">The simulation</param>
            <param name="scope">Bodies to be suppressed/unsuppressed. Ignored for Operation.UnsuppressAll</param>
            <param name="operation">Indicates how the bodies should be suppressed/unsuppressed</param>
            <param name="physicsSuppressionService">The physics body suppression service</param>
            <param name="tryCompress">Whether to try to suppress.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Simulations.ResetPhysicsCommand">
            <summary>
            command to look after clearing existing simulation and its child physics
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Simulations.DeleteSimulationCommand">
            <summary>
            command to look after clearing existing solution
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.DeleteSimulationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.DeleteSimulationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Simulations.CreateSimulationCommand">
            <summary>
            command to look after creating a simulation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Simulations.CreateSimulationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.CreateSimulationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.CreateSimulationCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Simulations.CreateSimulationCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityCustomMultiplierCommand">
            <summary>
            Physics command to set the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.FidelityMultiplier"/> property for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityCustomMultiplierCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityCustomMultiplierCommand"/> class.
            </summary>
            <param name="entity">The entity to update</param>
            <param name="simulation">The simulation</param>
            <param name="fidelityMultiplier">The fidelity multiplier to update to</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityCustomMultiplierCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityCustomMultiplierCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityApproachSettingCommand">
            <summary>
            Physics command to set the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.FidelityApproachSetting"/> property for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityApproachSettingCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Fidelity.GlobalFidelityApproachSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityApproachSettingCommand"/> class.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="simulation">The simulation.</param>
            <param name="fidelitySetting">The fidelity multiplier setting to use</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityApproachSettingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityApproachSettingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityUsePredefinedSettingsCommand">
            <summary>
            Physics command to set the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.UsePredefinedSettings"/> property for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityUsePredefinedSettingsCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityUsePredefinedSettingsCommand"/> class.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="simulation">Simulation entity.</param>
            <param name="usePredefinedSettings">The use predefined settings value to update to.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityUsePredefinedSettingsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelityUsePredefinedSettingsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingMethodCommand">
            <summary>
            Physics command to set the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingMethod"/> property for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingMethodCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Fidelity.FidelitySizingMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingMethodCommand"/> class.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="simulation">The simulation.</param>
            <param name="sizingMethod">The fidelity sizing method to update to.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingMethodCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingMethodCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand">
            <summary>
            Physics command to set the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingSettings"/> property for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,System.Boolean,Ansys.Disco.Physics.Fidelity.FidelitySizingSettings,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand"/> class.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="fromUser">Whether this command originated from a user action.</param>
            <param name="settings">The fidelity sizing settings to update to.</param>
            <param name="simulation">The simulation.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity,System.Boolean,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Nullable{UnitsNet.Length},System.Nullable{UnitsNet.Length},System.Nullable{UnitsNet.Length},System.Nullable{System.Double},System.Nullable{UnitsNet.Angle},System.Nullable{Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{UnitsNet.Length})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand"/> class.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="fromUser">Whether this command originated from a user action.</param>
            <param name="simulation">The simulation.</param>
            <param name="minimumSize">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MinimumSize"/> value</param>
            <param name="maximumSize">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumSize"/> value</param>
            <param name="maximumFaceSize">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumFaceSize"/> value</param>
            <param name="growthRate">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.GrowthRate"/> value</param>
            <param name="curvatureNormalAngle">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.CurvatureNormalAngle"/> value</param>
            <param name="proximitySourcesOption">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.ProximitySourcesOption"/> value</param>
            <param name="numberOfCellsAcrossGap">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.NumberOfCellsAcrossGap"/> value</param>
            <param name="maximumBoundaryLayers">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumBoundaryLayers"/> value</param>
            <param name="minimumFeatureSize">Optional, the new <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MinimumFeatureSize"/> value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Fidelity.SetGlobalFidelitySizingSettingsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.Properties.ChangeMaterialTableRowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.Properties.ChangeMaterialTableRowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.Properties.RemoveMaterialTableRowsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.Properties.RemoveMaterialTableRowsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.Properties.CreateMaterialTableRowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.Properties.CreateMaterialTableRowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticLossTangentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticLossTangentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticMagneticLossTangentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticMagneticLossTangentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticPermeabilityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticPermeabilityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalMolarMassCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalMolarMassCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAdditivePropertiesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAdditivePropertiesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticConductivityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticConductivityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticPermittivityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialElectromagneticPermittivityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalCompressiveYieldStrengthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalCompressiveYieldStrengthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalCompressiveUltimateYieldStrengthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalCompressiveUltimateYieldStrengthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAssignmentScopeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAssignmentScopeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAssignmentScopeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialAssignmentScopeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialNameCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialNameCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialSourceIdCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialSourceIdCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPropertiesCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPropertiesCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialStateCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialStateCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialSourceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialSourceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialManufacturingTemperatureCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialManufacturingTemperatureCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialMechanicalPoissonsRatioCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialMechanicalPoissonsRatioCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialMechanicalYoungsModulusCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialMechanicalYoungsModulusCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalDensityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalDensityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalTensileUltimateYieldStrengthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalTensileUltimateYieldStrengthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalTensileYieldStrengthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalTensileYieldStrengthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalViscosityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialPhysicalViscosityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalCoefficientOfThermalExpansionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalCoefficientOfThermalExpansionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalIsoThermalConductivityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalIsoThermalConductivityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalSpecificHeatCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Materials.ChangeMaterialThermalSpecificHeatCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Materials.CopyMaterialToProjectCommand">
            <summary>
            Command that will copy materials to the project from a shared library
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorSpecificationTargetCommand">
            <summary>
            Changes the specified targets on / off for a given monitor
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorSpecificationTargetCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorSpecificationTargetCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorTargetQuantityCommand">
            <summary>
            Changes a monitor target specification for a given target type
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorTargetQuantityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ChangeMonitorTargetQuantityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ClearAllPreviousDesignChangesCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ClearAllPreviousDesignChangesCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ClearCurrentDesignPointCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ClearCurrentDesignPointCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Monitors.ClearDefaultMonitorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.ClearDefaultMonitorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Monitors.DeleteMonitorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Monitors.DeleteMonitorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveColumnCommandHelper.RemoveColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Remove given <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> from
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
            <param name="parameterStudy">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> which <paramref name="column"/>
            is being removed for.
            </param>
            <param name="column">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/> being removed.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveColumnCommandHelper.RemoveRedundantRows(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity)">
            <summary>
            Removes redundant <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> when no
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> column has been
            defined for the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
            <param name="parameterStudy">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> which redundant
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> are being removed for.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveTestCaseRowsCommand">
            <summary>
            Removes the collection of <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity" /> with
            provided ids from the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantDrivingDimensionCommand">
            <summary>
            Handles the transaction required to set a constant driving dimension
            value.
            </summary>
            <remarks>
            This command is run when a driving dimension parameter value is changed
            from within the Parameters table. Only applies to constant driving
            dimension values.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantDrivingDimensionCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantDrivingDimensionCommand" /> class.
            </summary>
            <param name="drivingDimensionService">
            Manipulates <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> values.
            </param>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> being modified.
            </param>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> being modified.
            </param>
            <param name="value">The new constant value being set.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantDrivingDimensionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantDrivingDimensionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantParameterCommand">
            <summary>
            Sets all cells in a given column to the provided value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantParameterCommand.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantParameterCommand" /> class.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose column is to be
            modified.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> being modified.
            </param>
            <param name="value">
            The new value to set all cells in <paramref name="column" />.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantParameterCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetConstantParameterCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowUpToDateCommand">
            <summary>
            Command marks <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/>(s) up to date in
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowUpToDateCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowUpToDateCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveParameterStudyRowsCommand">
            <summary>
            Removes the collection of <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> with
            provided ids from the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.EditOutputCellCommand.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.EditOutputCellCommand"
            /> class.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" /> is being edited to reflect the given
            <paramref name="designChange" />.
            </param>
            <param name="monitorColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> to be edited.
            </param>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> to be edited.
            </param>
            <param name="designChange">
            The new <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" /> to give to the <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" />.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.EditOutputCellCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.EditOutputCellCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateHistoryTrackDimensionColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateHistoryTrackDimensionColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.DuplicateTestCaseRowCommand">
            <summary>
            Uses the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/> with provided id to create a clone and add it to the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.EditTestCaseCellQuantityCommand">
            <summary>
            Changes the cell value at column, row to the quantity provided.
            Marks the row containing the cell out of date.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.EditTestCaseCellQuantityCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.EditTestCaseCellQuantityCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveHistoryTrackDimensionColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveHistoryTrackDimensionColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowOutOfDateCommand">
            <summary>
            Command marks <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/>(s) out of date for in a
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowOutOfDateCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.MarkRowOutOfDateCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveTestCaseRowCommand">
            <summary>
            Removes <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/> with provided id
            from the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RenameTestCaseRowCommand">
            <summary>
            Renames the header value for a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/> row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.ApplyCurrentRowCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.ApplyCurrentRowCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetSelectedCaseCommand">
            <summary>
            Sets if a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> is starred.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetSelectedCaseCommand.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetSelectedCaseCommand"/> class.
            </summary>
            <param name="parameterStudy"> Parameter study</param>
            <param name = "selectedCase"> Selected case.</param>
            <param name="row">The row being manipulated.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetSelectedCaseCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetSelectedCaseCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetStarredRowCommand">
            <summary>
            Sets if a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> is starred.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetStarredRowCommand.#ctor(System.Boolean,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetStarredRowCommand"/> class.
            </summary>
            <param name="starred"> Whether the row is starred or not. </param>
            <param name="row">The row being manipulated.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetStarredRowCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetStarredRowCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand">
            <summary>
            Sets/applies the current <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> for a <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand" /> class.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> containing <paramref
            name="row" />.
            </param>
            <param name="row">The row being manipulated.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand.DefinedVariationSet">
            <summary>
            Returns the state after running <see cref="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand.Apply" />. Value will be
            null if command has not been run.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.SetDefinedVariationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreatePhysicsParameterColumnCommand.#ctor(Ansys.Disco.Physics.Repositories.IParameterStudyRepository,System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity)">
            <summary>
            Initializes a new instance of the <see cref=
            "T:Ansys.Disco.Physics.Commands.ParameterSweeps.CreatePhysicsParameterColumnCommand"/> class.
            This command adds <paramref name="column"/> to <see cref=
            "T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence"/> and to <paramref name=
            "parameterStudyRepository"/>.
            </summary>
            <param name="parameterStudyRepository">
            Repository to add <paramref name="parameterStudyRepository"/> to.
            </param>
            <param name="simulationId">
            The simulation id which the <paramref name="column"/> being created
            is a child of.
            </param>
            <param name="column">The column being added.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.CreatePhysicsParameterColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreatePhysicsParameterColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.IPhysicsParameterColumnService">
            <summary>
            Header interface for <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.PhysicsParameterColumnService"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.IPhysicsParameterColumnService.CreatePhysicsParameterColumn(System.Guid,System.Guid,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Creates and adds a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"/>.
            </summary>
            <param name="id">
            New id for <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"/> being created.
            </param>
            <param name="simulationId">
            Simulation this column should belong to.
            </param>
            <param name="header">Column header/name.</param>
            <param name="parameter">
            Physics parameter to attach to the column for get/set functionality
            of the column value.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.IPhysicsParameterColumnService.RemovePhysicsParameterColumn(System.Guid,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Removes a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"/>.
            </summary>
            <param name="simulationId">
            Simulation id used to find the correct <see cref=
            "T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>
            </param>
            <param name="parameter">
            Physics parameter to attach to the column for get/set functionality
            of the column value.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.PhysicsParameterColumnService.CreatePhysicsParameterColumn(System.Guid,System.Guid,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.PhysicsParameterColumnService.RemovePhysicsParameterColumn(System.Guid,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.PhysicsParameterColumnService.Suppressed(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Determines if the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> associated with
            <paramref name="parameter" /> has been suppressed or not.
            </summary>
            <param name="parameter">
            The <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> whose <see
            cref="P:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.ConditionId" /> is being checked for
            suppression.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="parameter" /> is
            suppressed.
            </returns>
            <remarks>
            This is a bit of a hack way of determining suppression. Since we
            only carry around the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> id, we have
            to ask data access to get the actual entity before we are able to
            query the suppression state.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemovePhysicsParameterColumnCommand.#ctor(Ansys.Disco.Physics.Repositories.IParameterStudyRepository,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref=
            "T:Ansys.Disco.Physics.Commands.ParameterSweeps.RemovePhysicsParameterColumnCommand"/> class.
            Removes a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"/> from the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
            <param name="parameterStudyRepository">
            Repository to grab the latest <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>
            from.
            </param>
            <param name="parameter">The parameter being removed.</param>
            <param name="simulationId">
            <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> id used as a key to find correct <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.RemovePhysicsParameterColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemovePhysicsParameterColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateDrivingDimensionColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateDrivingDimensionColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand.#ctor(System.Collections.Generic.List{System.ValueTuple{UnitsNet.IQuantity,UnitsNet.IQuantity,System.UInt32}},System.Collections.Generic.List{Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn},System.Collections.Generic.Dictionary{Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,UnitsNet.IQuantity},Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem},Ansys.Disco.Core.Environment.IAppUserSettings)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand"/> class.
            </summary>
            <param name="sweeps">
            List of tuples containing start quantity, end quantity, and number
            of steps to generate.
            </param>
            <param name="columns">
            List of columns that are varied in the generation, sorted via
            order of occurrence in the table.
            </param>
            <param name="baseColumns">
            Map of columns and values for the variation being used as the base
            for the generation.
            </param>
            <param name="parameterStudy">
            Parameter study entity in which variations are being generated for.
            </param>
            <param name="unitSystemContext">
            Context of current unit system.
            </param>
            <param name="userSettings">
            Application user settings.
            </param>
            <remarks>
            The collection <paramref name="sweeps"/> should be the same length
            and match the order of the <paramref name="columns"/> collection.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand.ApplyCombinations(System.Collections.Generic.List{System.Collections.Generic.List{UnitsNet.IQuantity}},System.Collections.Generic.List{Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity})">
            <summary>
            Attempts to apply each combination to the corresponding row.
            </summary>
            <param name="combinations">
            The collection of combinations to be applied.
            </param>
            <param name="rows">
            The collection of defined variations in which the combinations
            are to be applied.
            </param>
            <remarks>
            The number of combinations provided should match the number of
            rows.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowRangeCommand.TryGetDisplayQuantity(UnitsNet.IQuantity,Ansys.Disco.Physics.Units.UnitDisplayType,UnitsNet.IQuantity@)">
            <summary>
            Try get the given quantity converted to display units.
            </summary>
            <param name="quantity">
            Quantity to be converted.
            </param>
            <param name="unitDisplayType">
            Expected display unit usage
            </param>
            <param name="convertedQuantity">
            Out parameter containing converted <see cref="T:UnitsNet.IQuantity" /> if
            successful, otherwise <see langword="null" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="convertedQuantity"/> is
            not null.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowCombinationCommand.GetColumnValues(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Enumerates over all <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> rows and returns the cell
            <see cref="T:UnitsNet.IQuantity"/> for the given <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/>.
            </summary>
            <param name="parameterStudy">Parameter study table to check cell values.</param>
            <param name="column">
            The column in the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> where values are gathered from.
            </param>
            <returns>All <see cref="T:UnitsNet.IQuantity"/>'s in the given column.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyRowCombinationCommand.CutAround``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Separates a list of items into items before and after the cut object.
            </summary>
            <param name="list">List to be split into tuple.</param>
            <param name="cut">The object to split the list around.</param>
            <typeparam name="T">Any type.</typeparam>
            <returns>A tuple with a list of items before cut, list containing cut, and a list of items after cut.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateMonitorColumnCommand">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/> and adds it to the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveParameterStudyRowCommand">
            <summary>
            Removes <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> with provided id from the
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.DuplicateParameterStudyRowCommand">
            <summary>
            Uses the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> with provided id to
            create a clone and add it to the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.EditCellQuantityCommand">
            <summary>
            Changes the cell value at column, row to the quantity provided.
            Marks the row containing the cell out of date.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.EditCellQuantityCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.EditCellQuantityCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveDrivingDimensionColumnCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.RemoveDrivingDimensionColumnCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.RenameParameterStudyRowCommand">
            <summary>
            Renames the header value for a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> row.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateDefinedVariationCommand">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity"/> and adds it to the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyCommand">
            <summary>
            Creates a parameter study for a simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ParameterSweeps.CreateParameterStudyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorMeshStatisticsComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorMeshStatisticsComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorMeshQualityComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorMeshQualityComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorContactStressComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorContactStressComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.AddResultSeriesDataCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultSeriesDataCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.MassMonitorHelper.ModifyVariableForMassRelatedMonitors(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Handles cases for switching between normal variables and
            <see cref="F:Ansys.Disco.Core.Results.Types.ResultVariable.Mass"/>.
            Cases include:
                MassMonitorEntity -> Displacement etc.
                MonitorEntity -> Mass ResultVariable.
            </summary>
            <returns>
            <see langword="true"/> if we have handled a case involving
            mass monitors or variables. Otherwise returns
            <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Results.AddResultValue">
            <summary>
            Command used to add and record a result value for either a calculated result or a result insight
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultValue.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,System.Guid,System.Guid,Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolveOrigin,Ansys.Disco.Physics.Entities.Results.ResultValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Results.AddResultValue"/> class.
            Creates a command with the calculated result and result value to be added
            </summary>
            <remarks>This constructor is used when you need to add result values to an insight for the current design change</remarks>
            <param name="window">The interaction window</param>
            <param name="insightsEntity">The parent results insights to add a result value to</param>
            <param name="monitorId">The id for the result insight to record a result value for</param>
            <param name="associatedDVId">The id for the active defined variation the result should be recorded for</param>
            <param name="solverType">The specific solver that produced the results</param>
            <param name="solveOrigin">Origin of where the solve was invoked from</param>
            <param name="value">The result value to be added</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultValue.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,System.Guid,System.Guid,Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolveOrigin,Ansys.Disco.Physics.Entities.Results.ResultValue,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Results.AddResultValue"/> class.
            Creates a command with the engineering insight and result value to be added
            </summary>
            <remarks>This constructor is used when you need to add result values to an insight for a previous design change</remarks>
            <param name="window">The interaction window</param>
            <param name="insightsEntity">The parent results insights to add a result value to</param>
            <param name="monitorId">The id for the result insight to record a result value for</param>
            <param name="associatedDVId">The id for the active defined variation the result should be recorded for</param>
            <param name="solverType">The specific solver that produced the results</param>
            <param name="solveOrigin">Origin of where the solve was invoked from</param>
            <param name="value">The result value to be added</param>
            <param name="designChangeIndex">The index for the design change the result should be recorded for</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.AddResultValue.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultValue.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Results.AddResultValues">
            <summary>
            Command used to add and record multiple result values for multiple calculated results or result insights
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultValues.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,System.Guid,Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolveOrigin,System.Collections.Generic.Dictionary{System.Guid,Ansys.Disco.Physics.Entities.Results.ResultValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Results.AddResultValues"/> class.
            Creates a command with a map of the calculated results and result values to be added
            </summary>
            <remarks>This constructor is used when you need to add result values to many calculated results</remarks>
            <param name="window">The interaction window</param>
            <param name="insightsEntity">The parent results insights to add a result value to</param>
            <param name="associatedDVId">The id for the active defined variation the result should be recorded for</param>
            <param name="solverType">The specific solver that produced the results</param>
            <param name="solveOrigin">Origin of where the solve was invoked from</param>
            <param name="monitorIdToValues">A dictionary of the result insight ids and the result values to add</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.AddResultValues.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.AddResultValues.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorUniformityComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorUniformityComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorSpecificationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorSpecificationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.CloneMonitorsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.CloneMonitorsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.DuplicateMonitorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.DuplicateMonitorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorModeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorModeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorPrincipalComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorPrincipalComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorFunctionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorFunctionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorTensorComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorTensorComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Results.ChangeMonitorVariableCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Results.ChangeMonitorVariableCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.AddScriptGroupCommand">
            <summary>
            Command to add a new script group to the SpaceClaim document.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.AddScriptGroupCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.AddScriptGroupCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.AddScriptGroupCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.AddScriptGroupCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand">
            <summary>
            Command to add a new script parameter to the SpaceClaim document.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand.ScriptParameter">
            <summary>
            Access to the create script parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.AddScriptParameterCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.DisableScriptAutoExecutionCommand">
            <summary>
            Command to disable script auto execution.
            </summary>
            <remarks>
            This disables auto execution of the embedded script if an included
            <see cref="T:SpaceClaim.INamedScriptParameter"/> has been changed.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.DisableScriptAutoExecutionCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.DisableScriptAutoExecutionCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.DisableScriptAutoExecutionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.DisableScriptAutoExecutionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterNameCommand">
            <summary>
            Command to edit the name of a script parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterNameCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService,SpaceClaim.INamedScriptParameter,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterNameCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterNameCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterNameCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterUnitCommand">
            <summary>
            Command to edit the unit of a script parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterUnitCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService,SpaceClaim.INamedScriptParameter,SpaceClaim.NamedScriptParameterUnitType)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterUnitCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterUnitCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterUnitCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterValueCommand">
            <summary>
            Command to edit the value of a script parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterValueCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService,SpaceClaim.INamedScriptParameter,System.Double)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterValueCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterValueCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EditScriptParameterValueCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.EnableScriptAutoExecutionCommand">
            <summary>
            Command to enable script auto execution.
            </summary>
            <remarks>
            This enables auto execution of the embedded script if an included 
            <see cref="T:SpaceClaim.INamedScriptParameter"/> has been changed.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EnableScriptAutoExecutionCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.EnableScriptAutoExecutionCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.EnableScriptAutoExecutionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.EnableScriptAutoExecutionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParameterCommand">
            <summary>
            Command to remove a script parameter from the SpaceClaim document.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParameterCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService,SpaceClaim.INamedScriptParameter)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParameterCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParameterCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParameterCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParametersCommand">
            <summary>
            Command to remove multiple script parameter from the SpaceClaim document.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParametersCommand.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService,System.Collections.Generic.IList{SpaceClaim.INamedScriptParameter})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParametersCommand"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParametersCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Scripting.RemoveScriptParametersCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToCadCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Core.Utilities.ILongOperationMonitor,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,SpaceClaim.IMesh,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="longOperationMonitor">Monitor to display progress of lengthy operations</param>
            <param name="locationService">The location service used to process bodies for the simulation scope</param>
            <param name="simulation">Simulation to extract result from</param>
            <param name="mesh">The selected mesh</param>
            <param name="smooth">Option to smooth the output faceted body or perform smoothing before converting to BRep</param>
            <param name="hideOriginalbody">Option to hide original simulation scope when conversion is complete</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToCadCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToCadCommand.ConvertedBody">
            <summary>
            Contains the converted result INominalBody or IMesh if command was successfully executed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToCadCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToSolidCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,System.Collections.Generic.ICollection{SpaceClaim.IEvaluation},Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToSolidCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="evals">collection of meshes to be converted</param>
            <param name="simulation">The simulation for which the conversion is applied</param>
            <param name="mergeFaces">Option to merge facets during conversion</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToSolidCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertMeshToSolidCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertToSubDBodyCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,SpaceClaim.IMesh)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertToSubDBodyCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="simulation">Simulation to extract result from</param>
            <param name="meshToSubD">IMesh that was previously converted from Apollo result, implies it may have a reference map</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertToSubDBodyCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ConvertToSubDBodyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractMultipleApolloResultsCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Core.Utilities.ILongOperationMonitor,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Collections.Generic.IDictionary{System.UInt32,System.Tuple{System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.UInt32}}},UnitsNet.Length,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractMultipleApolloResultsCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="longOperationMonitor">Monitor to display progress of lengthy operations</param>
            <param name="locationService">The location service used to process bodies for the simulation scope</param>
            <param name="simulation">Simulation to extract result from</param>
            <param name="results">Result from Apollo</param>
            <param name="bcInflationSize">Boundary condition protection distance from Topology Optimization that generated the result</param>
            <param name="smooth">Option to smooth the output faceted body or perform smoothing before converting to BRep</param>
            <param name="hideOriginalbody">Option to hide original simulation scope when conversion is complete</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractMultipleApolloResultsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractMultipleApolloResultsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.SetBidirectionalPullDirCommand">
            <summary>
            Applies a new geometry constraint to the Topology optimization plugin
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.SetBidirectionalPullDirCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.SetBidirectionalPullDirCommand"/> class.
            </summary>
            <param name="simulation">the current simulation with topology optionis to modify</param>
            <param name="setBidirectional">Set the pull direction constraint to bidirectional</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.SetBidirectionalPullDirCommand.Name">
            <inheritdoc />
            <summary>
            Name for this command
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.SetBidirectionalPullDirCommand.Apply">
            <summary>
            Applies command
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a simulation does not have
            topology optimization options present</exception>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyProtectedDepthCommand">
            <summary>
            Applies a new protected depth to the Topology optimization plugin
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyProtectedDepthCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,UnitsNet.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyProtectedDepthCommand"/> class.
            </summary>
            <param name="optimizationOption">The optimization entity to modify</param>
            <param name="scope">Location of protected surface</param>
            <param name="depth">the depth for the new protected surface</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyProtectedDepthCommand.Name">
            <inheritdoc />
            <summary>
            Name for this command
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyProtectedDepthCommand.Apply">
            <summary>
            Applies command
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a physics region does not have
            topology optimization options present</exception>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintValueCommand">
            <summary>
            Command that updates optimization constraints
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintValueCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity,UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintValueCommand"/> class.
            </summary>
            <param name="constraintEntity">Topology optimization constraint to modify</param>
            <param name="value">the type of constraint input to show / hide</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintValueCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintValueCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand">
            <summary>
            Command to change the value for topology optimization protected depth
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity,UnitsNet.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand"/> class.
            </summary>
            <param name="protectedDepthEntity">The protected depth entity to modify</param>
            <param name="depth">The new depth value</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand"/> class.
            </summary>
            <param name="protectedDepthEntity">The protected depth entity to modify</param>
            <param name="scope">The new location of the protected surface</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,UnitsNet.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand"/> class.
            </summary>
            <param name="protectedDepthEntity">The protected depth entity to modify</param>
            <param name="scope">The new location of the protected surface</param>
            <param name="depth">The new depth value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeProtectedDepthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateDefaultOptimizationOptions">
            <summary>
            Command used to create default optimization options
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateDefaultOptimizationOptions.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateDefaultOptimizationOptions"/> class.
            </summary>
            <param name="simulation">the simulation to apply default options to</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateDefaultOptimizationOptions.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateDefaultOptimizationOptions.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.SmoothFacetedBodyCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,SpaceClaim.IMesh)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.SmoothFacetedBodyCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="simulation">Simulation to extract result from</param>
            <param name="meshToSmooth">IMesh that was previously converted from Apollo result and has not been smoothed, implies it may have a reference map</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.SmoothFacetedBodyCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.SmoothFacetedBodyCommand.SmoothedMesh">
            <summary>
            Contains the smoothed IMesh if command was successfully executed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.SmoothFacetedBodyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Core.Utilities.ILongOperationMonitor,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Single[],UnitsNet.Length,SpaceClaim.IMesh,System.Boolean,System.Boolean,System.UInt32[],System.Nullable{System.UInt32})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="longOperationMonitor">Monitor to display progress of lengthy operations</param>
            <param name="locationService">The location service used to process bodies for the simulation scope</param>
            <param name="simulation">Simulation to extract result from</param>
            <param name="resultFloatArray">Result from Apollo</param>
            <param name="bcInflationSize">Boundary condition protection distance from Topology Optimization that generated the result</param>
            <param name="convertedResultMesh">IMesh that was previously converted from Apollo result, implies it may have a reference map</param>
            <param name="smooth">Option to smooth the output faceted body or perform smoothing before converting to BRep</param>
            <param name="hideOriginalbody">Option to hide original simulation scope when conversion is complete</param>
            <param name="triangleGroupMap">Mapping which indicates if a triangle belongs to a boundary condition face</param>
            <param name="bodyId"> Body ID</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand.ConvertedBody">
            <summary>
            Contains the converted result INominalBody or IMesh if command was successfully executed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ExtractApolloResultsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateValidationSimulationCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Repositories.StudyRepository,Ansys.Disco.Physics.Repositories.MonitorsRepository,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,SpaceClaim.IEvaluation,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Core.Persistence.ISessionAdapter,System.Collections.Generic.IDictionary{SpaceClaim.IEvaluation,SpaceClaim.IEvaluation})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateValidationSimulationCommand"/> class.
            </summary>
            <param name="window">Interaction window</param>
            <param name="studyRepo">StudyRepository to clone new simulation</param>
            <param name="insightRepo">MonitorsRepository to get cloned insights and edit scope</param>
            <param name="simulation">Original Simulation to clone from</param>
            <param name="targetBody">INominalBody or IMesh for new simulation scope</param>
            <param name="locationService">The location service used to process bodies for the simulation scope</param>
            <param name="session">The session where commands are executed</param>
            <param name="refsToNewRefs">Reference map to re-scope physics objects to <paramref name="targetBody"/></param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateValidationSimulationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.CreateValidationSimulationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyConstraintCommand">
            <summary>
            Applies a new geometry constraint to the Topology optimization plugin
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyConstraintCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyConstraintCommand"/> class.
            </summary>
            <param name="simulation">the current simulation with topology optionis to modify</param>
            <param name="constraint">the new constraint to add</param>
            <param name="setByUser">the user has modified the constraint</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyConstraintCommand.Name">
            <inheritdoc />
            <summary>
            Name for this command
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyConstraintCommand.Apply">
            <summary>
            Applies command
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a physics region does not have
            topology optimization options present</exception>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyMultipleConstraintsCommand">
            <summary>
            Applies multiple constraints to options at once. Used for setting all defaults
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyMultipleConstraintsCommand.#ctor(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity,System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyMultipleConstraintsCommand"/> class.
            </summary>
            <param name="options">the current topology options to modify</param>
            <param name="constraintsAndUserSetFlag">the new constraint to add with a corresponding flag that relates to if the user created the constraint</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyMultipleConstraintsCommand.Name">
            <inheritdoc />
            <summary>
            Name for this command
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ApplyMultipleConstraintsCommand.Apply">
            <summary>
            Applies command
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a physics region does not have
            topology optimization options present</exception>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeEnabledStateCommand">
            <summary>
            Command that will change the state of topology optimaztion
            on a physics region
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeEnabledStateCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeEnabledStateCommand"/> class.
            </summary>
            <param name="simulation">The simulation entity.</param>
            <param name="topologyOptimizationEnabled">the new state</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeEnabledStateCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeEnabledStateCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeObjectiveTypeCommand">
            <summary>
            Command to change the objective type for topology optimization
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeObjectiveTypeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.TopologyOptimization.OptimizationObjectiveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeObjectiveTypeCommand"/> class.
            </summary>
            <param name="simulation">Simulation entity.</param>
            <param name="objectiveType">the new objective type</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeObjectiveTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeObjectiveTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeBoundaryConditionInflationSizeCommand">
            <summary>
            Command to change the boundary condition inflation size for
            topology optimization options
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeBoundaryConditionInflationSizeCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,UnitsNet.Length,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeBoundaryConditionInflationSizeCommand"/> class.
            </summary>
            <param name="simulation">The simulation.</param>
            <param name="newBoundaryConditionLength">New length for the inflation</param>
            <param name="setByUser">User has set inflation size</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeReduceByPercentFlagCommand">
            <summary>
            Command that alters whether the optimizer should use a reduce by percent or a target volume constraint
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeReduceByPercentFlagCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeReduceByPercentFlagCommand"/> class.
            </summary>
            <param name="simulation">Simulation entity.</param>
            <param name="reduceByPercent">the input type for options is by percent</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeReduceByPercentFlagCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeReduceByPercentFlagCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.RemoveConstraintCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.TopologyOptimization.ConstraintType)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.RemoveConstraintCommand"/> class.
            </summary>
            <param name="simulation">the current simulation with topology optionis to modify</param>
            <param name="constraintType">the type of constraint to remove</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.RemoveConstraintCommand.Name">
            <inheritdoc />
            <summary>
            Name for this command
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.RemoveConstraintCommand.Apply">
            <summary>
            Applies command
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a physics region does not have
            topology optimization options present</exception>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintInputCommand">
            <summary>
            Command that updates optimization constraints
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintInputCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.TopologyOptimization.ConstraintType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintInputCommand"/> class.
            </summary>
            <param name="simulation">The simulation entity.</param>
            <param name="constraintType">the type of constraint input to show / hide</param>
            <param name="showInput">show or hide the given constraint input type (note: currrently this is only for pull direction and max thickness inputs)</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintInputCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.TopologyOptimization.ChangeConstraintInputCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand">
            <summary>
            Command to create a table row.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand.#ctor(Ansys.Disco.Physics.Tables.ITableStore,Ansys.Disco.Physics.Tables.ITable,System.Collections.Generic.IEnumerable{System.Object},Ansys.Disco.Core.Application.IUndoRedoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand"/> class.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="table">Table to add row to.</param>
            <param name="rowValues">Values for the new row.</param>
            <param name="undoRedoHelper">Undo/redo helper.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand.CreatedRow">
            <summary>
            The newly created row. Will be <see langword="null"/> until after this command has run.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.CreateTableRowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand">
            <summary>
            Command to remove table row(s).
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand.#ctor(Ansys.Disco.Physics.Tables.ITableStore,Ansys.Disco.Physics.Tables.TableRow,Ansys.Disco.Core.Application.IUndoRedoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand"/> class with a
            single row to remove.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableRow">The row to remove.</param>
            <param name="undoRedoHelper">Undo/redo helper.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Tables.TableRow},Ansys.Disco.Core.Application.IUndoRedoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand"/> class with
            multiple rows to remove.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableRows">The rows to remove.</param>
            <param name="undoRedoHelper">Undo/redo helper.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.RemoveTableRowsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Tables.ModifyTableRowCommand">
            <summary>
            Command to modify a table row.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.ModifyTableRowCommand.#ctor(Ansys.Disco.Physics.Tables.ITableStore,Ansys.Disco.Physics.Tables.TableRow,System.Collections.IEnumerable,Ansys.Disco.Core.Application.IUndoRedoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Tables.ModifyTableRowCommand"/> class.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableRow">Table row to modify.</param>
            <param name="rowValues">New values for the row.</param>
            <param name="undoRedoHelper">Undo/redo helper.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Tables.ModifyTableRowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Tables.ModifyTableRowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsWindowCommandBase.MarkDocumentDirty">
            <summary>
            Forces the document to be dirty so that Save document is enabled
            </summary>
            <remarks>
            This is useful when a command execution intends to modify the document,
            but does not add to the undo stack via BackUp().
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomMagnitudeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomMagnitudeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomMagnitudeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationDegreesOfFreedomMagnitudeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeAccelerationReferenceFrameCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationReferenceFrameCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationReferenceFrameCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationReferenceFrameCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeAccelerationTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationTypeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeAccelerationTypeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringPreloadFreeLengthCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadFreeLengthCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadFreeLengthCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadFreeLengthCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringPreloadLoadForceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadLoadForceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadLoadForceCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadLoadForceCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringPreloadRotationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadRotationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadRotationCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadRotationCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTorqueCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTorqueCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTorqueCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTorqueCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTypeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringPreloadTypeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessLongitudinalCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessLongitudinalCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessLongitudinalCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessLongitudinalCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessTorsionalCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessTorsionalCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessTorsionalCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringStiffnessTorsionalCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSpringTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringTypeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSpringTypeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomMagnitudeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomMagnitudeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomMagnitudeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityDegreesOfFreedomMagnitudeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityOverrideRotationAxisOriginCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityOverrideRotationAxisOriginCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityOverrideRotationAxisOriginCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityOverrideRotationAxisOriginCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityRotationAxisCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityRotationAxisCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityRotationAxisCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityRotationAxisCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityTypeCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityTypeCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeVelocityUserRotationAxisOriginCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityUserRotationAxisOriginCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityUserRotationAxisOriginCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeVelocityUserRotationAxisOriginCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ToggleAccelerationDegreesOfFreedomComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ToggleAccelerationDegreesOfFreedomComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ToggleVelocityDegreesOfFreedomComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ToggleVelocityDegreesOfFreedomComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeInterfaceDetectionDistanceHighCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeInterfaceDetectionDistanceHighCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousSpecificationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousSpecificationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousSpecificationCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousSpecificationCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectedPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectedPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeInterfaceDetectionGroupingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeInterfaceDetectionGroupingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionGroupingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionGroupingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupFilteredPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupFilteredPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupSuppressedPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupSuppressedPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupTemplateCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupTemplateCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactOffsetCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactOffsetCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeEntityIsUsingOriginPointCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeEntityIsUsingOriginPointCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousLossCoefficientsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousLossCoefficientsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangePorousPorosityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangePorousPorosityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionDistanceHighCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionDistanceHighCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionDistanceLowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactGroupDetectionDistanceLowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeBearingLoadAngleCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeBearingLoadAngleCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeBearingLoadAngleCommand.CorrectAngleValue(UnitsNet.Angle)">
            <summary>
            Adjusts angle value for values less than 0 and greater than 360 degrees.
            </summary>
            <param name="angle">Value of the angle to be adjusted.</param>
            <returns>Angle value within 0 and 360 degrees.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeBearingLoadRadialForceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeBearingLoadRadialForceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeBearingLoadThrustForceCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeBearingLoadThrustForceCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeConvectionCoefficientCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeConvectionCoefficientCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeConvectionExternalTemperatureCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeConvectionExternalTemperatureCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactDetectionRadiusFactorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactDetectionRadiusFactorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactStiffnessFactorCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactStiffnessFactorCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand.#ctor(System.Action{Ansys.Disco.Physics.Entities.Conditions.FlowEntity},Ansys.Disco.Physics.Entities.Conditions.FlowEntity,Ansys.Disco.Physics.Entities.Conditions.FlowDirection,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand" /> class.
            </summary>
            <param name="removeParameter">
            Provide a method for removing a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity" /> physics
            parameter.
            </param>
            <param name="flow">The flow entity.</param>
            <param name="flowDirection">Required flow direction.</param>
            <param name="unitSystemContext">
            Necessary when the correct unit system is required, i.e. Flow
            Sub-tool.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand.GetExecutableCommand">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowDirectionCommand.StartExecutableCommand">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowOptionEntityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowOptionEntityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowSpecificationCommand.#ctor(Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService,Ansys.Disco.Physics.Entities.Conditions.FlowEntity,Ansys.Disco.Physics.Entities.Conditions.FlowSpecification,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.ChangeFlowSpecificationCommand"/> class.
            </summary>
            <param name="physicsParametersService">
            Physics parameter service.
            </param>
            <param name="flowEntity">
            Selected Flow entity.
            </param>
            <param name="flowSpecification">
            Required flow specification.
            </param>
            <param name="unitSystemContext">
            Should be required in instances where we  need the correct
            unit system, i.e. the flow sub-tool.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowSpecificationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowSpecificationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSimulationThermalEffectsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSimulationThermalEffectsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeDisplacementDegreesOfFreedomCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeDisplacementDegreesOfFreedomCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeHeatPerAreaCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeHeatPerAreaCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeHeatPerVolumeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeHeatPerVolumeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeGravityToAlignToGlobalDirection.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeGravityToAlignToGlobalDirection.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeDisplacementDegreesOfFreedomMagnitudeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeDisplacementDegreesOfFreedomMagnitudeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Helpers.SelectionHelpers.AddToPrimarySelection(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Adds the entity to primary selection
            </summary>
            <param name="entity">The entity to add to selection</param>
            <returns>True if the entity was added to selection, false if the entity was already in selection.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Helpers.SelectionHelpers.RemoveFromPrimarySelection(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Removes the given entity from primary selection.
            </summary>
            <param name="entity">The entity to remove from selection</param>
            <returns>True if removed from selection. False if the entity was not in selection.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.MoveContactGroupPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.MoveContactGroupPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Notes.CreateNoteForEntityCommand">
            <summary>
            Command to create a note associated with a specified entity.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.CreateNoteForEntityCommand.#ctor(Ansys.Disco.Physics.Repositories.INoteRepository,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Notes.CreateNoteForEntityCommand"/> class.
            </summary>
            <param name="noteRepository">Note repository</param>
            <param name="associatedEntityId">The ID of the entity the note is associated with. If a note is already
            associated with this entity then a new note is not created</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Notes.CreateNoteForEntityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.CreateNoteForEntityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Notes.CreateNoteForLocationCommand">
            <summary>
            Command to create a note associated with a specified <see cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.CreateNoteForLocationCommand.#ctor(Ansys.Disco.Physics.Repositories.INoteRepository,Ansys.Disco.Physics.Repositories.INoteLocationReferenceRepository,Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Notes.CreateNoteForLocationCommand"/> class.
            </summary>
            <param name="noteRepository">Note repository</param>
            <param name="noteLocationReferenceRepository">Note location reference repository</param>
            <param name="associatedObject">Reference to the object the note is associated with. If
            a note is already associated with this entity then a new note is not created.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Notes.CreateNoteForLocationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.CreateNoteForLocationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Notes.ModifyNoteCommand">
            <summary>
            Command to modify an existing note.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.ModifyNoteCommand.#ctor(Ansys.Disco.Physics.Repositories.INoteRepository,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Notes.ModifyNoteCommand"/> class.
            </summary>
            <param name="noteRepository">Note repository</param>
            <param name="noteId">ID of the note to modify. If this doesn't exist in the repository, then nothing should
            happen</param>
            <param name="text">Complete new text for the note</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Notes.ModifyNoteCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.ModifyNoteCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.Notes.RemoveNoteCommand">
            <summary>
            Command to remove/delete a note.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.RemoveNoteCommand.#ctor(Ansys.Disco.Physics.Repositories.INoteRepository,Ansys.Disco.Physics.Repositories.INoteLocationReferenceRepository,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.Notes.RemoveNoteCommand"/> class.
            </summary>
            <param name="noteRepository">Note repository</param>
            <param name="noteLocationReferenceRepository">Note location reference repository</param>
            <param name="noteId">ID of the note to remove. If this doesn't exist in the repository, then nothing should
            happen</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.Notes.RemoveNoteCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.Notes.RemoveNoteCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.AddParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <summary>
            Adds a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> to the active <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being added as a parameter.
            </param>
            <param name="physicsParameterIdentifier">
            A unique string identifier linking the property with a method to
            get/set that property.
            </param>
            <returns>
            <see langword="true" />&gt; if the parameter was added or had been
            added previously.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.DeletePhysicsParameters(System.Guid)">
            <summary>
            Deletes <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> associated with
            <paramref name="simulationId" /> from the repository.
            </summary>
            <param name="simulationId">
            The id linking the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> to the
            simulation.
            </param>
            <returns>
            <see langword="true" /> if the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"
            /> was deleted.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.HasParameter(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Checks if the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> for the current
            <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> has <paramref name="parameter" />
            parameterized or not.
            </summary>
            <param name="parameter">The parameter being being checked.</param>
            <returns>
            <see langword="true" /> if the current <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> has <paramref name="parameter" />
            meaning <paramref name="parameter" /> is parameterized.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.HasParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <summary>
            Checks to see if a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> for condition and
            <paramref name="physicsParameterIdentifier" /> exists in the current
            <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being checked if parameter.
            </param>
            <param name="physicsParameterIdentifier">
            The condition property we are checking has a parameter.
            </param>
            <returns>
            <see langword="true" /> if the current <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> has a parameter given by <paramref
            name="physicsParameterIdentifier" /> and condition id defined.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.ParametersAvailable(System.Guid)">
            <summary>
            Checks if the type of <paramref name="conditionId" /> is one that
            has been implemented.
            </summary>
            <param name="conditionId">The condition id being checked.</param>
            <returns>
            <see langword="true" /> if the physics parameters feature has been
            implemented for <paramref name="conditionId" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.RemoveParameter(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Creates the command to remove a parameter while wrapping it in a
            SpaceClaim transaction.
            </summary>
            <param name="parameter">
            The <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> to be passed to the command when
            executed.
            </param>
            <returns>
            <see langword="true" /> if the parameter was removed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.RemoveParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <summary>
            Creates the command to remove a parameter while wrapping it in a
            SpaceClaim transaction.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being removed as a parameter.
            </param>
            <param name="physicsParameterIdentifier">
            The identifier for the condition property whose parameter is being
            removed.
            </param>
            <returns>
            <see langword="true" /> if the parameter was removed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.RemoveParametersForCondition(System.Guid,System.Guid)">
            <summary>
            Removes all <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s from the <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> associated with <paramref
            name="simulationId" /> that relate the <paramref name="conditionId"
            />.
            </summary>
            <param name="simulationId">
            The simulation whose <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> will be
            modified.
            </param>
            <param name="conditionId">
            The condition whose parameters should be removed.
            </param>
            <returns>
            A collection of <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s that have been
            removed, empty if nothing matched criteria.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.IPhysicsParametersService.RemoveParametersForCondition(System.Guid)">
            <summary>
            Removes all <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s from the <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> that have a <see
            cref="P:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.ConditionId" /> matching <paramref
            name="conditionId" />.
            </summary>
            <param name="conditionId">
            The condition whose parameters should be removed.
            </param>
            <returns>
            A collection of <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s that have been
            removed, empty if nothing matched criteria.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.AddParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.DeletePhysicsParameters(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.HasParameter(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.HasParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.ParametersAvailable(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.RemoveParameter(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.RemoveParameter(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.RemoveParametersForCondition(System.Guid,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.RemoveParametersForCondition(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.PhysicsParametersService.RemoveParameter(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.RemoveParameterForConditionCommand.#ctor(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,System.Guid)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.PhysicsParameters.RemoveParameterForConditionCommand"/> class.
            </summary>
            <param name="physicsParameters">
            The entity to remove items from.
            </param>
            <param name="conditionId">
            The condition whose parameters are being removed.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.RemoveParameterForConditionCommand.ParametersRemoved">
            <summary>
            A collection of <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter"/> objects removed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.RemoveParameterForConditionCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.RemoveParameterForConditionCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.DeletePhysicsParametersCommand.#ctor(Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref=
            "T:Ansys.Disco.Physics.Commands.PhysicsParameters.DeletePhysicsParametersCommand"/> class.
            Deletes a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> by removing it from
            the <see cref="T:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository"/>.
            </summary>
            <param name="physicsParametersRepository">
            The repository the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> will be
            removed from if it exists.
            </param>
            <param name="simulationId">
            <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/>s are filtered and removed
            based on this simulation id.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.DeletePhysicsParametersCommand.PhysicsParametersDeleted">
            <summary>
            After command execution, this property will be filled with deleted
            <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> ids.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.DeletePhysicsParametersCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand">
            <summary>
            Adds a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> to a <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand.#ctor(Ansys.Disco.Physics.Factories.PhysicsParameters.PhysicsParametersEntityFactory,Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand" /> class.
            </summary>
            <param name="factory">
            Factory to create a new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> if
            one does not exist.
            </param>
            <param name="repository">
            Repository to access existing <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"
            />.
            </param>
            <param name="simulation">
            The parent simulation to add the parameter to.
            </param>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being added as a parameter.
            </param>
            <param name="physicsParameterIdentifier">
            The unique identifier to associate a condition with the specific
            property being changed.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand.#ctor(Ansys.Disco.Physics.Factories.PhysicsParameters.PhysicsParametersEntityFactory,Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand" /> class.
            </summary>
            <param name="factory">
            Factory to create a new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> if
            one does not exist.
            </param>
            <param name="repository">
            Repository to access existing <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"
            />.
            </param>
            <param name="simulation">
            The parent simulation to add <paramref name="parameter" /> to.
            </param>
            <param name="parameter">
            The <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> being added.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand.ParameterAdded">
            <summary>
            Gets a value indicating whether if the parameter was added.
            </summary>
            <value><see langword="true" /> if the parameter was added.</value>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.AddPhysicsParameterCommand.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.RemovePhysicsParameterCommand.#ctor(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.PhysicsParameters.RemovePhysicsParameterCommand"/> class.
            Removes <paramref name="property"/> from <paramref name=
            "physicsParameters"/>.
            </summary>
            <param name="physicsParameters">
            The <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> to remove the <paramref
            name="property"/> from.
            </param>
            <param name="property">The physics parameter to be removed.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.RemovePhysicsParameterCommand.ParameterRemoved">
            <summary>
            <see langword="true"/> if the parameter was removed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.PhysicsParameters.RemovePhysicsParameterCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.PhysicsParameters.RemovePhysicsParameterCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeEntityLabelCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeEntityLabelCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.SavedScenes.ApplyBodyVisibilityCommand">
            <summary>
            Applies visibility configuration to bodies in the scene.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SavedScenes.ApplyBodyVisibilityCommand.#ctor(SpaceClaim.IPresentation,System.Collections.Generic.IDictionary{SpaceClaim.InstanceMonikerList,System.Collections.Generic.Dictionary{SpaceClaim.ObjectId,System.Nullable{System.Boolean}}},System.Collections.Generic.IList{SpaceClaim.IHasVisibility})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.SavedScenes.ApplyBodyVisibilityCommand"/> class.
            </summary>
            <param name="presentation">The SpaceClaim presentation.</param>
            <param name="visibilityDict">The visibility configuation to apply.</param>
            <param name="visObj">The objects to apply against.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.SavedScenes.ApplyBodyVisibilityCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SavedScenes.ApplyBodyVisibilityCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.SavedScenes.SetResultSuppressionCommand">
            <summary>
            Sets the suppression of results in a scene.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SavedScenes.SetResultSuppressionCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.SavedScenes.SetResultSuppressionCommand"/> class.
            </summary>
            <param name="simulationEntity">The simulation whose results are being set.</param>
            <param name="suppressedBodies">The bodies to suppress results for.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.SavedScenes.SetResultSuppressionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SavedScenes.SetResultSuppressionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.SuppressConditionCommand">
            <summary>
            Suppresses a physics condition for a given simulation preventing it from
            affecting solver results.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SuppressConditionCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Commands.SuppressConditionCommand" /> class.
            </summary>
            <param name="simulation">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> whose condition is being
            suppressed.
            </param>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> associated with <paramref
            name="simulation" />.
            </param>
            <param name="condition">
            The condition being suppressed for <paramref name="simulation" />.
            Condition must be applied to the simulation already.
            </param>
            <exception cref="T:System.ArgumentNullException">
            All parameters are checked for null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AssociatedSimulationId" /> must
            match <paramref name="condition" /> id.
            </exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.SuppressConditionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.SuppressConditionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ToggleDisplacementDegreesOfFreedomComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ToggleDisplacementDegreesOfFreedomComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ToggleSupportDegreesOfFreedomComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ToggleSupportDegreesOfFreedomComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSupportDegreesOfFreedomMagnitudeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSupportDegreesOfFreedomMagnitudeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSupportDegreesOfFreedomComponentCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSupportDegreesOfFreedomComponentCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactPairsCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactPairsCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactIdealizeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactIdealizeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeBoltPreloadTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeBoltPreloadTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactFrictionCoefficientCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactFrictionCoefficientCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactAdjustGapOrOverlapCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactAdjustGapOrOverlapCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointRotationXCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointRotationXCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointRotationYCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointRotationYCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointRotationZCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointRotationZCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointTranslationZCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointTranslationZCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointTranslationYCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointTranslationYCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointTranslationXCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointTranslationXCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeContactMakeJustTouchingCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeContactMakeJustTouchingCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeJointTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeJointTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeDisplacementTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeDisplacementTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowInletMassFlowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowInletMassFlowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowInletPressureCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowInletPressureCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ChangeFlowInletRotationalSpeedCommand">
            <summary>
            Command to change swirl rotational speed on flow velocity inlet.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ChangeFlowInletSwirlEffectsCommand">
            <summary>
            Command to enable/disable swirl effects on flow velocity inlet.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowInletVelocityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowInletVelocityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowOutletMassFlowCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowOutletMassFlowCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowOutletPressureCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowOutletPressureCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowOutletVelocityCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowOutletVelocityCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeFlowTemperatureCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeFlowTemperatureCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeGravityBuoyancyCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeGravityBuoyancyCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeGravitySelfWeightCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeGravitySelfWeightCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeHeatSpecificationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeHeatSpecificationCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ReverseGravityDirectionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ReverseGravityDirectionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeTotalHeatCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeTotalHeatCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeLabelCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeLabelCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeMomentCoordinateSystemDisplayType.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeMomentCoordinateSystemDisplayType.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.ChangeDualScopeCommand.UpdateOrigin">
            <summary>
            Used in this class to specify if this request is by the user
            or system. (e.g. automatic physics region changes).
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeDualScopeCommand.#ctor(SpaceClaim.UserInterface.IInteractionWindow,Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Int32,Ansys.Disco.Physics.Commands.ChangeDualScopeCommand.UpdateOrigin)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Commands.ChangeDualScopeCommand"/> class.
            Changes the location of a <see cref="T:Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity"/>.
            </summary>
            <param name="window">
            The window provider.
            </param>
            <param name="entity">
            The entity to change the location for.
            </param>
            <param name="scope">
            The scope to change to.
            </param>
            <param name="side">
            Whether it's the primary location, or the secondary location.
            </param>
            <param name="origin">
            Whether it's been initalized by the user or system. This is more
            pertinent towards monitors.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeDualScopeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeDualScopeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeSupportTypeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeSupportTypeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeWallSurfaceFrictionCommand.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeWallSurfaceFrictionCommand.Apply">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.ChangeScopeCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.ChangeScopeCommand.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Commands.UnsuppressConditionCommand">
            <summary>
            Unsuppresses a physics condition for a given simulation allowing it to
            affect solver results.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.UnsuppressConditionCommand.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see
            cref="T:c" /> class.
            </summary>
            <param name="simulation">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> whose condition is being
            unsuppressed.
            </param>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> associated with <paramref
            name="simulation" />.
            </param>
            <param name="condition">
            The condition being unsuppressed for <paramref name="simulation" />.
            Condition must be applied to the simulation already.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Commands.UnsuppressConditionCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Commands.UnsuppressConditionCommand.Apply">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentCreated.Scope">
            <summary>
            Scope of subject when deleted
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentCreated.SimulationRootId">
            <summary>
            ID of parent simulation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentDeleted.Scope">
            <summary>
            Scope of subject when created.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentDeleted.SimulationRootId">
            <summary>
            ID of parent simulation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentDeleted.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentScopeModified.CurrentScope">
            <summary>
            Scope of bolt assignment after modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentScopeModified.PreviousScope">
            <summary>
            Scope of bolt assignment before modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Bolts.BoltAssignmentScopeModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentCreated.Scope">
            <summary>
            Scope of subject when deleted
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentDeleted.Scope">
            <summary>
            Scope of subject when created.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentDeleted.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentScopeModified.CurrentScope">
            <summary>
            Scope of beam assignment after modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentScopeModified.PreviousScope">
            <summary>
            Scope of beam assignment before modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamAssignmentScopeModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Beams.BeamProfileCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Charts.ChartDataSeriesModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Charts.ChartModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Charts.ChartCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Charts.ChartCreated.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Charts.ChartRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionModified`1.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed">
            <summary>
            This event is raised when a physics condition has been unsuppressed. A
            suppressed condition should not affect solver results.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed.#ctor(Ansys.Disco.Physics.Repositories.IEntityRepository,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed" />
            class.
            </summary>
            <param name="repository">
            A repository of all entities to retrieve <see cref="T:Ansys.Disco.Core.DomainCore.IEntity" />
            objects using their ids.
            </param>
            <param name="condition">
            The condition being suppressed. Condition must be applied to the
            current <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed.#ctor(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed" />
            class.
            </summary>
            <param name="condition">
            The condition being suppressed. Condition must be applied to the
            current <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" />.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed.Condition">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition"/> that was unsuppressed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionUnsuppressed.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed">
            <summary>
            This event is raised when a physics condition has been suppressed. A
            suppressed condition should not affect solver results.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed.#ctor(Ansys.Disco.Physics.Repositories.IEntityRepository,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed" />
            class.
            </summary>
            <param name="repository">
            A repository of all entities to retrieve <see cref="T:Ansys.Disco.Core.DomainCore.IEntity" />
            objects using their ids.
            </param>
            <param name="condition">
            The condition being suppressed. Condition must be applied to the
            current <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed.#ctor(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed" />
            class.
            </summary>
            <param name="condition">
            The condition being suppressed. Condition must be applied to the
            current <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" />.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed.Condition">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition"/> that was suppressed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionSuppressed.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionApplied.SimulationParent">
            <summary>
            The simulation parent of the applied condition
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionApplied.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionRemoved.Suppressed">
            <summary>
            <see langword="true"/> if the condition was suppressed at the point of removal.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Conditions.ConditionRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Fidelity.FidelityAdjustmentSettingRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Monitors.TargetSpecificationModified">
            <summary>
            The domain event for target specification modification
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.TargetSpecificationModified.#ctor(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.ValueObjects.TargetSpecification,Ansys.Disco.Physics.ValueObjects.TargetSpecification,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Monitors.TargetSpecificationModified"/> class.
            </summary>
            <param name="monitor">The parent monitor that this target is attached to</param>
            <param name="newTarget">The new value object to set</param>
            <param name="oldTarget">The old value object to remove</param>
            <param name="propertyName">Property name within the target specification that has been modified</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.TargetSpecificationModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeChartResultAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.InsightsCloned.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.MonitorModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete">
            <summary>
            This event is fired after all the results from a solve have been added
            as a design change. For example, if we have 3 calculators for a
            structural simulation, all three calculator results are returned from
            the solve and each adds a result to the design change, which raises a
            <see cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultAdded"/>. At the end of those events, we
            expect this event to fire meaning the results are updated.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete.#ctor(Ansys.Disco.Physics.Entities.Monitors.InsightsEntity,System.Guid)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete"/> class.
            </summary>
            <param name="insights">
            The simulation this design change belongs to.
            </param>
            <param name="simulationId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity"/> which has all apollo results
            available.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete.SimulationId">
            <summary>
            The simulation this design change belongs to.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete.Insights">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity"/> which has all apollo results
            available.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangesResetForMonitor.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.MonitorSpecificationModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.InsightsEntityRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.MonitorRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.#ctor(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity,Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded"/>
            class.
            </summary>
            <param name="insights">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> being added to.
            </param>
            <param name="designChangeEntity">
            The <see cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.DesignChangeEntity"/> being added to <see
            cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.InsightsEntity"/>;
            </param>
            <param name="entityRepository">
            Repository to get up to date entities.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.#ctor(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded"/>
            class.
            </summary>
            <param name="insights">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> being added to.
            </param>
            <param name="designChangeEntity">
            The <see cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.DesignChangeEntity"/> being added to <see
            cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.InsightsEntity"/>;
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded"/>
            class.
            </summary>
            <param name="insightsId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> being added to.
            </param>
            <param name="designChangeId">
            The <see cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.DesignChangeEntity"/> being added to <see
            cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.InsightsEntity"/>;
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.DesignChangeEntity">
            <summary>
            The <see cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.DesignChangeEntity"/> being added to <see
            cref="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.InsightsEntity"/>;
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.DesignChangeAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.MonitorCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Monitors.MonitorCreated.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Monitors.InsightsEntityCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyMonitorColumnAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyMonitorColumnRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowsAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowsRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnSuppressed">
            <summary>
            Event raised when a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> is
            suppressed.
            </summary>
            <remarks>
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> are being suppressed when
            their associated condition is suppressed.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnSuppressed.Column">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> that was suppressed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnSuppressed.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnUnsuppressed">
            <summary>
            Event raised when a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> is
            unsuppressed.
            </summary>
            <remarks>
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> are being unsuppressed when
            their associated condition is unsuppressed.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnUnsuppressed.Column">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> that was
            unsuppressed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnUnsuppressed.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyCurrentRowModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseCellModified.UndoEvent">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseCellModified.IsValid">
            <inheritdoc/>
            <remarks>
            If a column or row is removed during an undo step cell modified
            events will still fire but the cell no longer exists.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseRowAdded.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,System.Guid,System.Collections.Generic.IList{Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation},System.String)">
            <remarks>
            Non type safe constructor required by TestCaseRowRemoved as the row
            object has been deleted by the time the undo event is constructed.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseRowAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseRowHeaderModified.UndoEvent">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.TestCaseRowRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyInputColumnAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyColumnHeaderModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyInputColumnRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.VariationHeaderModified.UndoEvent">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowOutputsModified.#ctor(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Raised when the output values of a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"
            /> row are modified.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> being modified.
            </param>
            <param name="row">The specific row being modified.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowOutputsModified.ParameterStudy">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose <see cref="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowOutputsModified.Row" /> is
            being modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowOutputsModified.Row">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose outputs have been
            modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowOutputsModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyRowRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyCellModified.UndoEvent">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyCellModified.IsValid">
            <inheritdoc/>
            <remarks>
            If a column or row is removed during an undo step cell modified
            events will still fire but the cell no longer exists.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionCompressibleFlowEnabledChanged.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionRemoved">
            <summary>
            Event published when a physics region is removed from a simulation
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionRemoved.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionRemoved"/> class.
            </summary>
            <param name="simulation">The simulation for which the physics region was removed.</param>
            <param name="physicsRegionId">The id of the removed physics region.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionRemoved.SimulationEntity">
            <summary>
            Simulation that the physics region was removed for
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationAutoSuppressionChanged.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationBodiesModified.Suppressed">
            <summary>
            If true, then all changes are to suppressed bodies.
            If false, active bodies in this simulation have been modified.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationSuppressedBodiesModified.Suppressed">
            <summary>
            If true, then all changes are modifications of suppressed bodies.
            If false, bodies in this simulation have been added to or removed from suppressed bodies
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationSuppressedBodiesModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationDeleted.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded">
            <summary>
            Event that is published when a physics region is added to a simulation
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded"/> class.
            </summary>
            <param name="simulation">The simulation for which the physics region was added.</param>
            <param name="physicsRegion">The added physics region.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded"/> class.
            </summary>
            <param name="simulation">The simulation for which the physics region was added.</param>
            <param name="physicsRegionId">The id of the added physics region.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.PhysicsRegionEntity">
            <summary>
            The physics region that has been added.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.SimulationEntity">
            <summary>
            The simulation for which the physics region has been added.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionAdded.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.SimulationDuplicated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Simulations.PhysicsRegionTypeChanged.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Materials.MaterialAssignmentScopeChanged">
            <summary>
            An event object that is raised when a material assignment scope change will affect the physics results.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialAssignmentScopeChanged.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialPropertyModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialReplaced.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialAddedToProject.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialAssignmentChanged.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialRemovedFromProject.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialAssigned.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.Materials.MaterialAssigned.IsValid">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Materials.MaterialAssignmentRemoved.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Notes.NoteCreated">
            <summary>
            Domain event for the creation of a new note.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Notes.NoteCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Notes.NoteLocationReferenceCreated">
            <summary>
            Domain event for the creation of a new note location reference.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Notes.NoteLocationReferenceCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Notes.NoteLocationReferenceRemoved">
            <summary>
            Domain event for the deletion of a note location reference.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Notes.NoteLocationReferenceRemoved.UndoEvent">
            <inheritdoc />>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.Notes.NoteRemoved">
            <summary>
            Domain event for the deletion of a note.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.Notes.NoteRemoved.UndoEvent">
            <inheritdoc />>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterDeleted.#ctor(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterDeleted"/> class.
            </summary>
            <param name="physicsParameters">
            The parent entity to remove <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter"/> from.
            </param>
            <param name="parameter">The parameter being removed.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated.#ctor(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated"/> class.
            </summary>
            <param name="physicsParameters">
            The parent entity to <paramref name="parameter"/>.
            </param>
            <param name="parameter">
            The physics parameter being added.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated.#ctor(Ansys.Disco.Physics.Repositories.IEntityRepository,Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated" /> class.
            </summary>
            <param name="repository">
            An <see cref="T:Ansys.Disco.Physics.Repositories.IEntityRepository" /> to pull up-to-date entities
            from.
            </param>
            <param name="physicsParameters">
            The parent entity to <paramref name="parameter" />.
            </param>
            <param name="parameter">The physics parameter being added.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated.Condition">
            <summary>
            Returns the condition this <see cref="P:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated.PhysicsParameter" /> has been
            created for.
            </summary>
            <returns>
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> that has had a <see
            cref="P:Ansys.Disco.Physics.Events.PhysicsParameters.PhysicsParameterCreated.PhysicsParameter" /> created. This is not expected to be <see
            langword="null" /> but is not protected against it.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified">
            <summary>
            The domain event for simulation goal modifications
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.SimulationOptions,Ansys.Disco.Physics.ValueObjects.SimulationOptions,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified"/> class.
            </summary>
            <param name="simulation">The simulation entity with this goal</param>
            <param name="newSimulationOptions">The simulation options that has the new modifications.</param>
            <param name="oldSimulationOptions">The simulation options prior to being modified.</param>
            <param name="propertyName">property name within the simulation goal that has been modified</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified.NewSimulationOptions">
            <summary>
            The new state of the modified simulation options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified.OldSimulationOptions">
            <summary>
            The previous state of the modified simulation options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified.Simulation">
            <summary>
            The simulation that has the attached simulation goal
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsReplaced">
            <summary>
            Event fired when a new simulation goal is set on a simulation entity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsReplaced.#ctor(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.SimulationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsReplaced"/> class.
            </summary>
            <param name="simulation">The simulation entity with this goal</param>
            <param name="simulationOptions">the simulation goal that has the new modifications</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsReplaced.SimulationOptions">
            <summary>
            The simulation that has been modified
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.SimulationOptions.SimulationOptionsReplaced.Simulation">
            <summary>
            The simulation that has the attached simulation goal
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DomainEntityEvent.SubjectId">
            <summary>
            The subject identifier
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DomainEntityEvent.DateTimeEventOccurred">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DomainEntityEvent.UndoEvent">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEntityEvent.IsValid">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEntityEvent.Resolve``1">
            <summary>
            Checks if the <see cref="T:Microsoft.Practices.ServiceLocation.ServiceLocator"/> exists before resolving
            the appropriate object.
            </summary>
            <typeparam name="TInstance">
            The type you are trying to resolve.
            </typeparam>
            <returns>
            The resolved object or default if <see cref="T:Microsoft.Practices.ServiceLocation.ServiceLocator"/> not
            available.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEntityEvent.GetSubject``1(System.Guid)">
            <summary>
            Retrieves a subject of the given type and id from the database
            </summary>
            <typeparam name="TSubject">The subject entity type</typeparam>
            <param name="id">The subject entity id</param>
            <returns>The subject</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.DomainEventsCache">
            <summary>
            Caches the latest <see cref="T:Ansys.Disco.Physics.Events.EventTopics.DomainEntityModified"/> event to be raised once a
            session command completed has been called.
            Prevents domain events from making nested calls while the def is being updated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DomainEventsCache.DecoratedObject">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DomainEventsCache.IsRollingEvents">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventsCache.PublishUndoEvents.GetRedoAction">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventsCache.PublishUndoEvents.Apply">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Events.DomainEventHelpers">
            <summary>
            Helpers for processing and querying domain events
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.#ctor(Ansys.Disco.Physics.Repositories.SimulationRepository,Ansys.Disco.Physics.Repositories.IMonitorsRepository,Ansys.Disco.Physics.Repositories.IParameterStudyRepository,Ansys.Disco.Physics.Repositories.INoteRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.DomainEventHelpers"/> class.
            </summary>
            <param name="simulationRepository">The simulation repository for retrieving the simulation.</param>
            <param name="monitorsRepository">The monitors repository for retrieving the monitors.</param>
            <param name="parameterStudyRepository">The parameter study repository for retrieving the parameter study.</param>
            <param name="noteRepository">The note repository for retrieving the notes.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.LabelModified(Ansys.Disco.Physics.Events.EventTopics.DomainEntityModified)">
            <summary>
            Checks if the <see cref="P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.Label"/> property was
            modified.
            </summary>
            <param name="entityModified">
            The domain event that might modify the <see cref=
            "P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.Label"/>.
            </param>
            <returns>
            True if the <see cref="P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.Label"/> property was modified
            in the <paramref name="entityModified"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.IsGeometryChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.IsParameterStudyChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.IsSimulationBodiesChangeAllSuppressed(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.GetAssociatedSimulations(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.GetAssociatedParameterStudy(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.GetAssociatedResults(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.GetAssociatedNote(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.IsPhysicsChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DomainEventHelpers.SignificantPhysicsChange(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.IDomainEventHelpers">
            <summary>
            Helpers for processing and querying domain events
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.IsGeometryChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Determines whether a given domain event is associated with a geometry change.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>True if the given event is associated with a geometry change.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.IsParameterStudyChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Determines whether a given event is associated with a parameter study change.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>True if the given event is associated with a parameter study change.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.IsPhysicsChangeEvent(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Determines whether a given domain event is associated with a physics change.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>True if the given event is associated with a physics change.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.IsSimulationBodiesChangeAllSuppressed(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Determines whether the given domain event is associated with suppressed bodies only.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>True if the change affects simulation suppressed bodies only.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.GetAssociatedSimulations(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Retrieves the associated simulations for the given domain event.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>The associated simulations, if any.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.GetAssociatedParameterStudy(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Retrieves the associated parameter study for the given domain event.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>The associated parameter study, if any.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.GetAssociatedResults(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Retrieves the associated results for the given domain event.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>The associated results, if any.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.GetAssociatedNote(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Retrieves the associated note for the given domain event.
            </summary>
            <param name="event">The event to be queried.</param>
            <returns>The associated note, if any.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.IDomainEventHelpers.SignificantPhysicsChange(Ansys.Disco.Core.DomainCore.IDomainEntityEvent)">
            <summary>
            Checks if a domain event is considered a significant physics
            change.
            A significant physics change is any event where the physics has been
            changed or the geometry of an unsuppressed body has changed.
            </summary>
            <param name="domainEvent">
            The <see cref="T:Ansys.Disco.Physics.Events.DomainEntityEvent"/> being reviewed.
            </param>
            <returns>
            <see langword="false"/> if <paramref name="domainEvent"/> is null or
            when the event is not a physics change or unsuppressed geometry
            change.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.DelegateReference">
            <summary>
            Represents a reference to a <see cref="T:System.Delegate" /> that may contain a
            <see cref="T:System.WeakReference" /> to the target.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Events.DelegateReference.#ctor(System.Delegate,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Events.DelegateReference"/> class.
            </summary>
            <param name="delegate">The original <see cref="T:System.Delegate" /> to create a reference for.</param>
            <param name="keepReferenceAlive">If <see langword="false" /> the class will create a weak reference to the delegate, allowing it to be garbage collected. Otherwise it will keep a strong reference to the target.</param>
            <exception cref="T:System.ArgumentNullException">If the passed <paramref name="delegate" /> is not assignable to <see cref="T:System.Delegate" />.</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.DelegateReference.Target">
            <summary>
            Gets the <see cref="T:System.Delegate" /> (the target) referenced by the current <see cref="T:Ansys.Disco.Physics.Events.DelegateReference" /> object.
            </summary>
            <value><see langword="null" /> if the object referenced by the current <see cref="T:Ansys.Disco.Physics.Events.DelegateReference" /> object has been garbage collected; otherwise, a reference to the <see cref="T:System.Delegate" /> referenced by the current <see cref="T:Ansys.Disco.Physics.Events.DelegateReference" /> object.</value>
        </member>
        <member name="T:Ansys.Disco.Physics.Events.DomainEvents">
             <summary>
             Some hints on the motivation for using domain events in Disco (not very
             compelling or illuminating, I'm afraid):
             http://msdn.microsoft.com/en-gb/magazine/ee236415.aspx#id0400046
            
             ToDo - Review order of events (Especially nesting and multithreading)
             ToDo - DomainEvents needs an unregister method to prevent timing issues, see link below
                    Bug: 125861.
             </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.EventTopics.DomainEntityCreated.Subject">
            <summary>
            The subject the event is associated with
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.EventTopics.DomainEntityCreated.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.EventTopics.DomainEntityDeleted.UndoEvent">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Events.EventTopics.DomainEntityDeleted.EntityType">
            <summary>
            The deleted entity type
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Events.EventTopics.DomainEntityModified.UndoEvent">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Contracts.StructureTree.Physics.IPhysicsTreeFrequencyNode">
            <summary>
            Interface used for natural frequency node
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Contracts.StructureTree.Physics.IPhysicsTreeOptimizationNode">
            <summary>
            Interface used for optimization option node
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.Unknown">
            <summary>
            Default unknown type
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.PhysicsRoot">
            <summary>
            Image type for Physics root node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.LockedPhysicsRoot">
            <summary>
            Image type for Physics root node that is locked
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.MaterialAssignment">
            <summary>
            Image type for material assignment node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.BeamAssignment">
            <summary>
            Image type for beam assignment node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.SupportCondition">
            <summary>
            Image type for support condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ForceCondition">
            <summary>
            Image type for force condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.WallCondition">
            <summary>
            Image type for wall condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.FlowConditionInlet">
            <summary>
            Image type for flow inlet condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.FlowConditionOutlet">
            <summary>
            Image type for flow outlet condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.PorousCondition">
            <summary>
            Image type for porous condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ContactCondition">
            <summary>
            Image type for contact condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.JointCondition">
            <summary>
            Image type for joint condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.PressureCondition">
            <summary>
            Image type for pressure condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.FluidPressureCondition">
            <summary>
            Image type for compressible flow operating pressure condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.BearingLoadCondition">
            <summary>
            Image type for bearing load condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.BoltPreloadCondition">
            <summary>
            Image type for bolt preload condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.HeatCondition">
            <summary>
            Image type for heat condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.InsulatedCondition">
            <summary>
            Image type for insultated condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.MonitorsNode">
            <summary>
            Image type for monitors node in ei tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ContourResultDefinition">
            <summary>
            Image type for contour result definition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.MomentCondition">
            <summary>
            Image type for moment condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.VelocityCondition">
            <summary>
            Image type for velocity condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.AccelerationCondition">
            <summary>
            Image type for acceleration condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.SpringCondition">
            <summary>
            Image type for spring condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.DisplacementCondition">
            <summary>
            Image type for displacement condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.GravityCondition">
            <summary>
            Image type for gravity condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ConvectionCondition">
            <summary>
            Image type for convection condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.TemperatureCondition">
            <summary>
            Image type for temperature condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.AddedMassCondition">
            <summary>
            Image type for mass condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.SymmetryCondition">
            <summary>
            Image type for symmetry condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.FidelitySetting">
            <summary>
            Image type for fidelity setting node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ContactReviewTool">
            <summary>
            Image type for automatic bonded contact node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationOption">
            <summary>
            Image type for topology optimization option node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.MonitorNode">
            <summary>
            Image type for monitor node in monitor tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.DefaultInterfaceCondition">
            <summary>
            Image type for default interface condition node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationProtectedDistance">
            <summary>
            Image type for topology optimization protected distance node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationOverhangPrevention">
            <summary>
            Image type for topology optimization protected distance node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationPullDirection">
            <summary>
            Image type for topology optimization pull direction node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationTableDirecton">
            <summary>
            Image type for topology optimization table direction node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationMaxThickness">
            <summary>
            Image type for topology optimization max thickness node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.NaturalFrequency">
            <summary>
            Image type for natural frequency node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.CircuitPort">
            <summary>
            Image type for circuit port node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.OptimizationMinThickness">
            <summary>
            Image type for topology optimization min thickness node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ElectromagneticRegion">
            <summary>
            Image type for electromagnetic region node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.BoltAssignment">
            <summary>
            Image type for bolt assignment node in structure tree
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Contracts.StructureTree.Physics.PhysicsTreeItemImageType.ModePort">
            <summary>
            Image type for mode port node in structure tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.Charts.IChartsTreeBaseItemNode.TryGetChartEntity(Ansys.Disco.Physics.Entities.Charts.IChartEntity@)">
            <summary>
            Attempts to get the <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> associated with the tree base item node.
            </summary>
            <param name="chart">The corresponding ChartEntity if exists.</param>
            <returns>True if ResultInsightEntity exists, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.Monitors.IMonitorsTreeBaseItemNode.TryGetMonitorEntity(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity@)">
            <summary>
            Attempts to get the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/> associated with the tree base item node.
            </summary>
            <param name="monitor">The corresponding MonitorEntity if exists.</param>
            <returns>True if ResultInsightEntity exists, false otherwise.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.UseParentGroupingThresholds">
            <summary>
            whether subgroups will use the same threshold and other rules as the parent group
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.DefaultGroupingThreshold">
            <summary>
            minimum number of items required to form a group <para>value of 0 or 1 groups immediately</para><para>value of -1 or lower never groups</para>
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.IsGroupingActive">
            <summary>
            shortcut check to see if there are any nonnegative thresholds
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.UseHierarchyOrdering">
            <summary>
            uses the order of the groups in the tree hierarchy to define the order of the nodes
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.CountIndirectChildren">
            <summary>
            If true, counts direct non-group children and counts each direct subgroup child as its indirect children, else counts each direct subgroup as 1
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.IgnoreThresholdAfterFirstSubGroup">
            <summary>
            when true, groups will ignore its threshold and will form immediately if it contains a subgroup and anything else.
            This will NOT happen if the group in question has a negative threshold
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.UseDeepGrouping">
            <summary>
            when true, grouping will be applied to the children of every node in the tree instead of just the root node
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.SetThresholdOverride(System.String,System.Int32)">
            <summary>
            sets the threshold for a specific group
            </summary>
            <param name="group">specific group to set the threshold of</param>
            <param name="value">minimum number of items required to form a group <para>value of 0 or 1 groups immediately</para><para>value of -1 or lower never groups</para></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.ClearThresholdOverrides">
            <summary>
            remove all threshold overrides, making the default threshold apply to all groups
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.GetGroupingThreshold(System.String)">
            <summary>
            returns the effective grouping threshold for the given group. The values of threshold overrides and <see cref="P:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.UseParentGroupingThresholds"/> will be used in the calculation
            </summary>
            <param name="group">the group</param>
            <returns>the minimum group size for the group</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.DefineCodependentSiblingGroups(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Defines a set of sibling groups which are not created unless a certain number of them are present (sibling threshold).
            ex: given groups A, B, and C with a sibling threshold of 2: A will never appear unless B or C is also present.
                given groups A, B, and C with a sibling threshold of 3: A, B, and C must all be present for any of them to appear.
            </summary>
            <param name="siblings"> the list of groups that are codependent </param>
            <param name="siblingThreshold">the minimum number of siblings that must be present in order for them to appear</param>
            <returns>returns false if the list includes groups that are not direct children of the same parent node or the sibling threshold is greater than the number of siblings listed or less than 2</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.GroupAll(System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},System.Func{System.String,System.Collections.Generic.List{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},Ansys.Disco.Physics.Contracts.StructureTree.IGroupNode})">
            <summary>
            Group all nodes passed in, using the supplied function to build the group nodes themselves
            </summary>
            <param name="nodes">the nodes to group</param>
            <param name="groupNodeBuilder">function to build the group nodes</param>
            <returns>the top level of the grouped result</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping.UnGroup(System.Collections.Generic.IEnumerable{Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeBaseItemNode})">
            <summary>
            removes all group nodes
            </summary>
            <param name="nodes">the grouped nodes to ungroup</param>
            <returns>the now ungrouped nodes</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteChart.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteDataSeriesDefinition.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Deletion.DeleteMaterialTable">
            <summary>
            Deleter for <see cref="T:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteMaterialTable.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteNote.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteNoteLocationReference.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteOptimizationProtectedDepth.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteOptimizationConstraint.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.ParameterSweeps.DeleteHistoryTrackingDimensionColumn.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.ParameterSweeps.DeleteTestCase.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.ParameterSweeps.DeleteDefinedVariation.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.ParameterSweeps.DeleteDrivingDimensionColumn.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.ParameterSweeps.DeletePhysicsParameterColumn.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteDesignChange.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Deletion.DeleteMalformedEntity">
            <summary>
            Allows a <see cref="T:Ansys.Disco.Physics.Persistence.MalformedEntity"/>
            or <see cref="T:Ansys.Disco.Physics.Persistence.ObsoleteEntity"/> to be deleted.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteInsightsRoot.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteMaterial.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteMaterialAssignment.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeletePhysicsRegion.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteMonitor.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteMonitorColumn.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Deletion.DeleteSimulation">
            <summary>
            TODO: DRC - Currently DeleteSimulation deletes all child entities, this works but should be reviewed
                 - 1. Should we just delete the simulation and all other entities are removed automatically due to a matching lifetime?
                 - 2. If we need to delete all child entities individually should this be handled automatically by the RootEntity?
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteSimulation.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Deletion.IDeleteEntity">
            <summary>
            This interface is used by entities to perform follow up actions and clean-up when the physics object is deleted directly by SpaceClaim.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.IDeleteEntity.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Handles deletion of the entity itself
            </summary>
            <param name="entity">The entity being deleted</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Deletion.DeleteConditions.Delete(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.CreateBeamProfilePart(Ansys.Disco.Physics.Entities.Beams.BeamEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.RemoveBeamProfilePart(Ansys.Disco.Physics.ValueObjects.Locations.PartLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.CreateBeams(Ansys.Disco.Physics.Entities.Beams.BeamEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.CreateBeams(Ansys.Disco.Physics.Entities.Beams.BeamEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Beams.BeamPosition},Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.ReplaceBeams(Ansys.Disco.Physics.Entities.Beams.BeamEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.ReplaceBeams(Ansys.Disco.Physics.Entities.Beams.BeamEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Beams.BeamPosition},Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.RemoveBeams(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.GetBeamProperties(Ansys.Disco.Physics.Entities.Beams.BeamEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.GetBeamProperties(Ansys.Disco.Physics.ValueObjects.Locations.PartLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.CloneExtractedBeamProfilePartFor(Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAdapter.SetExtractedProfileName(Ansys.Disco.Physics.Entities.Beams.BeamEntity)">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.Label">
            <inheritdoc cref="T:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem" />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.AssignedData">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity.Clone">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamEntity.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Beams.BeamEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Beams.BeamEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IHasFullScope">
            <summary>
            Interface for all entities that have any kind of scope, both single and dual
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IHasFullScope.GetFullScope">
            <summary>
            Retrieves the full scope of all locations associated with this object
            </summary>
            <returns>The full location of the scope</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IHasSecondaryScope">
            <summary>
            Interface for entities that have a secondary scope
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IHasSecondaryScope.SecondaryScope">
            <summary>
            Secondary scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IHasSecondaryScope.UseSecondaryScope">
            <summary>
            True if secondary scope should be used, otherwise false.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients">
            <summary>
            Represents porous loss coefficients in x, y and z directions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.X">
            <summary>
            Porous loss coefficients in the x direction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.Y">
            <summary>
            Porous loss coefficients in the y direction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.Z">
            <summary>
            Porous loss coefficients in the z direction
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.GetViscousResistanceVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <summary>
            Get viscous resistance as a cartesian vector
            </summary>
            <param name="specification">Porous specification</param>
            <param name="isConical">Is the reference frame conical</param>
            <returns>Viscous resistance vector</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.GetInertialResistanceVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <summary>
            Get inertial resistance as a cartesian vector
            </summary>
            <param name="specification">Porous specification</param>
            <param name="isConical">Is the reference frame conical</param>
            <returns>Inertial resistance vector</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients.GetPermeabilityVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <summary>
            Get permeability as a cartesian vector
            </summary>
            <param name="specification">Porous specification</param>
            <param name="isConical">Is the reference frame conical</param>
            <returns>Permeability vector</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin">
            <summary>
            Interface for physics conditions that can have a remote origin
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.CanUseOriginPoint">
            <summary>
            Whether this entity, with the current settings, can represent a remote force
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.IsUsingOriginPoint">
            <summary>
            Whether this entity represents a remote force
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.OriginX">
            <summary>
            X position of the origin for the entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.OriginY">
            <summary>
            Y position of the origin for the entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.OriginZ">
            <summary>
            Z position of the origin for the entity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.ICanHaveRemoteOrigin.GetOrigin(UnitsNet.Units.LengthUnit)">
            <summary>
            Origin position for the entity
            </summary>
            <param name="unit">The coordinate system length unit</param>
            <returns>The origin position for the entity</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.ICloneable`1">
            <summary>
            Interface for objects that can be cloned
            </summary>
            <typeparam name="T">The type to be cloned</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.ICloneable`1.Clone">
            <summary>
            Creates an identical clone of the object as a new instance and can be identified as a different object
            </summary>
            <returns>The cloned object</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.ICopyable`1">
            <summary>
            Interface for objects that can be copied
            </summary>
            <typeparam name="T">The type to be copied</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.ICopyable`1.Copy">
            <summary>
            Creates an identical copy of the object as a new instance and can be identified as the same object
            </summary>
            <returns>The copied object</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.ICanActAsFixedSupport.IsActingAsFixedSupport">
            <summary>
            whether the entity is used to implements a fixed support
            </summary>
            <returns>is the entity implementing a fixed support</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IDofEntity`2.DegreesOfFreedom">
            <summary>
            Degrees of freedom
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity">
            <summary>
            Interface for entities that have two scopes (e.g. contact)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity.Side1">
            <summary>
            First scope for the entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity.Side2">
            <summary>
            Second scope for the entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity.SidesShouldBeDistinct">
            <summary>
            Whether the sides should be distinct
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IFlowOptions">
            <summary>
            Flow options entity (child of flow entity)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IFlowOptions.GetFlowDirection">
            <summary>
            Flow Direction for the options
            </summary>
            <returns>FlowDirection</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IFlowOptions.GetFlowSpecification">
            <summary>
            Flow Specification for the options
            </summary>
            <returns>FlowSpecification</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem">
            <summary>
            Interface for items in the domain with user facing name
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.Label">
            <summary>
            Localized display name for this object.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.HasLabelBeenUserDefined">
            <summary>
            True if the <see cref="P:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem.Label"/> property has been set by a user.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IUpdatableEntity">
            <summary>
            Interface for updating entities with changes coming from SpaceClaim
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IUpdatableEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Updates locations with the given service
            </summary>
            <param name="locationService">The location service for updating locations</param>
            <returns>True if the update was successful</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IUpdateLocationMapping">
            <summary>
            Interface for handling updates for mapped locations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Behaviours.IUpdateLocationMapping.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <summary>
            Updates locations within the given service that holds mapping information for changed locations
            </summary>
            <param name="locationMappingService">The service for updating locations using mapped references</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Behaviours.IScopedEntity">
            <summary>
            Todo - Evaluate whether IScopedEntity should exist as a shared ValueObject
            ToDo - Remove ISolutionItem from here
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Behaviours.IScopedEntity.Scope">
            <summary>
            Scope for the entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.Label">
            <inheritdoc cref="T:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem" />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.AssignedData">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.BoltHoleLocations">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.AllBoltHoleLocations">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity.Clone">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.Name">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Bolts.BoltEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Charts.ChartResults">
            <summary>
            A collection of <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> and their associated lists of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.#ctor(System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />
            class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Add(Ansys.Disco.Physics.Entities.Charts.IChartEntity,Ansys.Disco.Physics.Entities.Results.ResultDataSeries)">
            <summary>
            Add a <paramref name="chart" /> and its <paramref name="resultSeries"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> whose <paramref name="resultSeries" />
            are being added. If <see langword="null" />, nothing is added.
            </param>
            <param name="resultSeries">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" /> being added for a given <paramref
            name="chart" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Add(Ansys.Disco.Physics.Entities.Charts.IChartEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries})">
            <summary>
            Add a <paramref name="chart" /> and its collection of <paramref name="resultSeries"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> whose <paramref name="resultSeries" />
            are being added. If <see langword="null" />, nothing is added.
            </param>
            <param name="resultSeries">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" /> being added for a given <paramref
            name="chart" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Add(System.Guid,Ansys.Disco.Physics.Entities.Results.ResultDataSeries)">
            <summary>
            Add a <paramref name="chartId" /> and its <paramref name="resultSeries"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
            <param name="chartId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> whose <paramref name="resultSeries" />
            are being added.
            </param>
            <param name="resultSeries">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" /> being added for a given <paramref
            name="chartId" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Add(System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries})">
            <summary>
            Add a <paramref name="chartId" /> and its collection of <paramref name="resultSeries"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
            <param name="chartId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> whose <paramref name="resultSeries" />
            are being added.
            </param>
            <param name="resultSeries">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" /> being added for a given <paramref
            name="chartId" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Clear">
            <summary>
            Clear all result data in this <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Any">
            <summary>
            Determines whether a <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" /> contains any elements.
            </summary>
            <returns>
            <see langword="true" /> if the <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />
            contains any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />; otherwise, <see
            langword="false" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.Any(System.Func{Ansys.Disco.Physics.Entities.Results.ResultDataSeries,System.Boolean})">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> exist matching
            <paramref name="predicate" />.
            </summary>
            <param name="predicate">
            A function to test each <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for a
            condition.
            </param>
            <returns>
            <see langword="true" /> if a <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />
            matching <paramref name="predicate" /> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.GetAllChartResults">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> and <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> collection pairs as a <see
            cref="T:System.Collections.Generic.IReadOnlyCollection`1" />.
            </summary>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> and <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />
            collection pairs as a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.GetResults(Ansys.Disco.Physics.Entities.Charts.IChartEntity)">
            <summary>
            Get all <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for <paramref
            name="chart" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> collection for.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for <paramref name="chart" />
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.GetResults(System.Guid)">
            <summary>
            Get all <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for <paramref
            name="chartId" />.
            </summary>
            <param name="chartId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for <paramref name="chartId"
            />
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.GetResults(Ansys.Disco.Physics.Entities.Charts.IChartEntity,System.String)">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> related to <paramref
            name="variable" /> for a <paramref name="chart" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for.
            </param>
            <param name="variable">
            The variable string the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> are associated with.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> related to <paramref
            name="variable" /> for a <paramref name="chart" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.GetResults(System.Guid,System.String)">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> related to <paramref
            name="variable" /> for a <paramref name="chartId" />.
            </summary>
            <param name="chartId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for.
            </param>
            <param name="variable">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> are associated with.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> related to <paramref
            name="variable" /> for a <paramref name="chartId" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.HasResultsFor(System.String)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> exist for
            <paramref name="variable" /> across all <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartResults" />.
            </summary>
            <param name="variable">
            The variable string associated with the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />.
            </param>
            <returns>
            <see langword="true" /> if a <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> for
            <paramref name="variable" /> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.HasResultsFor(Ansys.Disco.Physics.Entities.Charts.IChartEntity)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> exist for a
            given <paramref name="chart" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> we are checking for results.
            </param>
            <returns>
            <see langword="true" /> if results exist for <paramref
            name="chart" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.HasResultsFor(System.Guid)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> exist for a
            given <paramref name="chartId" />.
            </summary>
            <param name = "chartId" >
            ID of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> we are checking for results.
            </param>
            <returns>
            <see langword="true" /> if results exist for <paramref
            name="chartId" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.HasResultsFor(System.Guid,System.String)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> exist for a
            given <paramref name="chartId" /> and <paramref name="variable" />.
            </summary>
            <param name = "chartId" >
            ID of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> we are checking for results.
            </param>
            <param name="variable">
            The variable string associated with the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />.
            </param>
            <returns>
            <see langword="true" /> if results exist for <paramref
            name="chartId" /> and <paramref name="variable" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.TryGetResults(Ansys.Disco.Physics.Entities.Charts.IChartEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries}@)">
            <summary>
            Try to get <paramref name="resultSeries" /> for a <paramref
            name="chart" />.
            </summary>
            <param name="chart">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> we are trying to get <paramref
            name="resultSeries" /> for.
            </param>
            <param name="resultSeries">
            The collection of <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> being returned if found for
            <paramref name="chart" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="resultSeries" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.ChartResults.TryGetResults(System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries}@)">
            <summary>
            Try to get <paramref name="resultSeries" /> for a <paramref
            name="chartId" />.
            </summary>
            <param name="chartId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> we are trying to get <paramref
            name="resultSeries" /> for.
            </param>
            <param name="resultSeries">
            The collection of <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> being returned if found for
            <paramref name="chartId" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="resultSeries" /> are found for
            <paramref name="chartId" />. <paramref name="resultSeries" /> might
            still be null.
            </returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.QuantityDataSeriesDefinitionEntity`1.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.QuantityDataSeriesDefinitionEntity`1.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DataSeriesDefinitionEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DataSeriesDefinitionEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DualScopedDataSeriesDefinitionEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DualScopedDataSeriesDefinitionEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.ScopedDataSeriesDefinitionEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.ScopedDataSeriesDefinitionEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.ChartEntity.Label">
            <summary>
            Label that is obtained from associated calculator or generated by variable, function, and component
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.ChartEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.ChartEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification">
            <summary>
            Properties and methods common to all style specifications.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification.PrimaryColor">
            <summary>
            Primary color of the data series.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification.ChangePrimaryColor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> class with the updated primary color.
            </summary>
            <param name="newColor">Updated color of the data series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> class.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification.Copy">
            <summary>
            Creates a copy of this <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> class.
            </summary>
            <returns>A copied instance of the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> class.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.IElectromagneticPort">
            <summary>
            Defines common attributes and behaviors for all electromagnetic ports
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.IElectromagneticPort.PortProperties">
            <summary>
            Type of the electromagnetic port
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.IElectromagneticPort.Side1">
            <summary>
            The port's first edge
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.IElectromagneticPort.Side2">
            <summary>
            The port's second edge
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.IElectromagneticPort.FaceLocation">
            <summary>
            The port's face
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity">
            <summary>
            Entity representing a mode port
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">First edge for the entity</param>
            <param name="side2">Second edge for the entity</param>
            <param name="faceLocation">Face for the entity</param>
            <param name="portProperties">Properties of the mode port</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">First side for the entity</param>
            <param name="side2">Second side for the entity</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.PortProperties">
            <summary>
            Defines the properties of the mode port.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.FaceLocation">
            <summary>
            The face between edges Side1 and Side2 that the mode port is applied to
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.GetFullScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity">
            <summary>
            Entity representing an electromagnetic simulation region
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Frequency},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Frequency},Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions,SpaceClaim.Geometry.Box,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="startFrequency">Simulation bandwidth lower bound.</param>
            <param name="endFrequency">Simulation bandwidth upper bound.</param>
            <param name="userDefinedCushions">Cushion values overridden by user</param>
            <param name="extent">Extent of the simulation region.</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.#ctor(System.Guid,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.StartFrequency">
            <summary>
            Simulation bandwidth lower bound.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.EndFrequency">
            <summary>
            Simulation bandwidth upper bound.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Extent">
            <summary>
            Extent of the simulation region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Cushions">
            <summary>
            User-defined cushions for the simulation region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.SetDistancesAutomatically">
            <summary>
            True if using default values for all padding distances
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.DefaultCushion">
            <summary>
            Default cushion value for the simulation region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.SetExtentFromGeometryBounds(SpaceClaim.Geometry.Box)">
            <summary>
            Sets the electromagnetic region's extent to geometry bounds plus a cushion (user-defined or default) on each side.
            </summary>
            <param name="geometryBounds">The bounding region of the geometry.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.GetBoxEnclosureCushion">
            <summary>
            Returns the cushion values for all sides of the region
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity">
            <summary>
            Entity representing a circuit port
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">First edge for the entity</param>
            <param name="side2">Second edge for the entity</param>
            <param name="faceLocation">Face for the entity</param>
            <param name="portProperties">Properties of the circuit port</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">First side for the entity</param>
            <param name="side2">Second side for the entity</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.PortProperties">
            <summary>
            Defines the properties of the circuit port.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.FaceLocation">
            <summary>
            The face between edges Side1 and Side2 that the circuit port is applied to
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.GetFullScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity">
            <summary>
            Entity representing an acceleration condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.DefaultType">
            <summary>
            Default acceleration type.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Nullable{Ansys.Disco.Physics.Entities.Conditions.AccelerationType},Ansys.Disco.Physics.ValueObjects.DegreesOfFreedom{UnitsNet.Acceleration,UnitsNet.RotationalAcceleration},Ansys.Disco.Physics.ValueObjects.Triad,Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Length})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity.</param>
            <param name="scope">Scope for the entity.</param>
            <param name="accelerationType">Type of acceleration (translation, rotation or combined)</param>
            <param name="dof">Degrees of freedom of the acceleration</param>
            <param name="loadDirectionTriad">Load direction triad</param>
            <param name="referenceFrameOrigin">Reference frame origin</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.PhysicsType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.AccelerationType">
            <summary>
            Type of acceleration (translation, rotation or combined)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.DegreesOfFreedom">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.LoadDirectionTriad">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.AutoReferenceFrameOrigin">
            <summary>
            Origin of the reference frame determined from secondary selection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.OverrideReferenceFrameOrigin">
            <summary>
            True if user defined reference frame origin should be used, otherwise false.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.UserReferenceFrameOrigin">
            <summary>
            Origin of the reference frame determined from user definition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.ReferenceFrameOrigin">
            <summary>
            Origin of the reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.DetermineDefaultReferenceFrameOrigin(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Determine the default rotation axis origin for a acceleration condition from a given
            location set.
            </summary>
            <param name="locationSet">Location set</param>
            <param name="locationService">Location service</param>
            <returns>Rotation axis origin</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Suppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Unsuppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Suppressed">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.DetermineDefaultReferenceFrameOrigin(Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Determines the default rotation axis origin for the condition.
            </summary>
            <param name="locationService">Location service</param>
            <returns>Rotation axis origin</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationType">
            <summary>
            Define the type of acceleration
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationType.Translation">
            <summary>
            Acceleration is a translation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationType.Rotation">
            <summary>
            Acceleration is a rotation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationType.Combined">
            <summary>
            Acceleration is a combination of translation and rotations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity"/> class.
            </summary>
            <remarks>
            This parameterless constructor exists solely to support mocking of
            the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity"/> concrete type using Moq.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Length},Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="detectionDistanceHigh">Distance for interface detection upper tolerance, initialized from settings</param>
            <param name="creator">Whether the entity was created automatically or by the user</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.DetectionDistanceHigh">
            <summary>
            A factor for defining the upper bound of interface detection distance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.PhysicsConditionsExtensions">
            <summary>
            Static class to provide extension methods for IPhysicsCondition interface.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PhysicsConditionsExtensions.CanBeUsedToDeterminePhysics(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Checks whether the physics type of the condition is too broad to be used to determine region physics type.
            </summary>
            <param name="physicsCondition">Physics condition to check.</param>
            <returns>True if the condition can be used to determine region physics type, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PhysicsConditionsExtensions.CanBeUsedToDetermineMaterialType(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Checks whether the physics type of the condition is too broad to be used to determine the material type.
            </summary>
            <param name="physicsCondition">Physics condition to check.</param>
            <returns>True if the condition can be used to determine the material type, otherwise false.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity">
            <summary>
            Entity representing a uniformly distributed load normal to the surface it is applied to
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Pressure})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="pressureMagnitude">the magnitude of the pressure</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceType">
            <summary>
            Type of fluid interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceType.Prevented">
            <summary>
            Ignored by simulation
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity">
            <summary>
            Entity representing a fluid interface definition between two surfaces
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">Scope for side 1 of the entity</param>
            <param name="side2">Scope for side 2 of the entity</param>
            <param name="creator">flag for creation origin</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.ContactPairs">
            <summary>
            Contact pairs derived from single sided manual contact.
            Will not return null.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.PreventInterface">
            <summary>
            Allow separation and penetration of contact surfaces - i.e. no contact and will prevent bonded contact being generated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients">
            <inheritdoc cref="T:Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients"/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.X">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.Y">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.Z">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.GetViscousResistanceVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.GetInertialResistanceVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.GetPermeabilityVector(Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BasePorousDirectionalCoefficients.System#IEquatable{Ansys#Disco#Physics#Entities#Behaviours#IPorousDirectionalCoefficients}#Equals(Ansys.Disco.Physics.Entities.Behaviours.IPorousDirectionalCoefficients)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator,Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">Side1 for the entity</param>
            <param name="side2">Side2 for the entity</param>
            <param name="contactTemplate">A contact entity that holds the contact properties</param>
            <param name="creator">Whether the entity was created automatically or by the user</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.DetectionDistanceHigh">
            <summary>
            A factor for defining the higher bound of contact detection distance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.DetectionDistanceLow">
            <summary>
            A factor for defining the lower bound of contact detection distance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.DetectionNeeded">
            <summary>
            A flag indicating that contact detection is needed
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.DetectionGrouping">
            <summary>
            The detection grouping type used by the contact generation algorithm
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.ContactTemplate">
            <summary>
            A configuration template for condition to be converted
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.DetectedContactPairs">
            <summary>
            Detected contact pairs in the group.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.ContactPairs">
            <summary>
            Contact pairs in the group.
            Will not return null.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.FilteredContactPairs">
            <summary>
            Filtered contact pairs in the group.
            Will not return null.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.SuppressedContactPairs">
            <summary>
            Contact pairs for suppressed bodies
            Cannot be null
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.IsSplittable">
            <summary>
            The contacts in this group can be split into individual contacts
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.ToBeConverted(System.Collections.Generic.List{Ansys.Disco.Physics.Nominal.MarkerCollection.ContactPair},System.Collections.Generic.List{Ansys.Disco.Physics.Nominal.MarkerCollection.ContactPair},Ansys.Disco.Physics.Utilities.IContactFilterService)">
            <summary>
            TODO: Move this closer to the operation/tool
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity.GetFullScope">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory">
            <summary>
            Define category of CHT intefaces/contacts
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.FluidToFluid">
            <summary>
            Fluid to fluid region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.FluidToNone">
            <summary>
            Fluid to No Physics region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.FluidToThermal">
            <summary>
            Fluid to Thermal region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.ThermalToThermal">
            <summary>
            Thermal to Thermal region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.ThermalToNone">
            <summary>
            Thermal to No Physics region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.Overlaps">
            <summary>
            Fluid-thermal region interfaces that contains faces that overlaps thermal-thermal region
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.NoneToNone">
            <summary>
            No Physics to No Physics region interface
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntityCategory.Undefined">
            <summary>
            For null physics regions
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.PorousEntity">
            <summary>
            Entity representing a fluid porosity source
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Conditions.PorousSpecification,Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition,System.Nullable{System.Double},Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialStateProperties,Ansys.Disco.Physics.Entities.Conditions.GenericFilterCoefficients)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity.</param>
            <param name="scope">Scope for side 1 of the entity, the porous bodies.</param>
            <param name="porousSpecification">Whether the porous medium is specified as isotropic or bidirectional.</param>
            <param name="frameDefinition">Definition for the local reference frame.</param>
            <param name="porosity">The porosity.</param>
            <param name="mediaMaterialProperties">The material properties of the solid porous media.</param>
            <param name="genericFilterCoefficients">The loss coefficients to define a generic filter.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.PhysicsType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.SecondaryScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.UseSecondaryScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.SuggestedSecondaryScope">
            <summary>
            Suggested scope to use to define local reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.FrameDefinition">
            <summary>
            Definition of the local reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.IsCartesian">
            <summary>
            If true this <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousEntity"/> defines a cartesian reference frame
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.IsConical">
            <summary>
            If true this <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousEntity"/> defines a conical reference frame
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Specification">
            <summary>
            Whether the porous medium is specified as isotropic or bidirectional or orthotropic.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Porosity">
            <summary>
            The porosity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.MediaMaterialProperties">
            <summary>
            The material properties of the porous media
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.LossCoefficientsDefinition">
            <summary>
            The definition type of the porous loss coefficients
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.LossCoefficients">
            <summary>
            The loss coefficients to define the porous medium
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.UpdateSecondaryScope(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Update secondary scope from location
            </summary>
            <param name="newScope"></param>
            <param name="locationService"></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.DetermineFrameDefinition(Ansys.Disco.Physics.ValueObjects.Locations.ILocation,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Determine frame definition from given reference location.
            </summary>
            <param name="referenceLocation">Reference location</param>
            <param name="locationService">Location service</param>
            <returns>Frame definition</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PorousEntity.DetermineSuggestedSecondaryScope(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Helper for suggesting a secondary scope
            </summary>
            <param name="primaryScope"></param>
            <param name="locationService"></param>
            <param name="simulation"></param>
            <returns></returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.PorousSpecification">
            <summary>
            Specifies how the porous medium is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.PorousSpecification.Isotropic">
            <summary>
            Porous loss is the same in all directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.PorousSpecification.Bidirectional">
            <summary>
            Porous loss defined by stream-wise and cross-flow behavior
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.PorousSpecification.Orthotropic">
            <summary>
            Porous loss defined by coefficients in each direction (x, y, z)
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity">
            <summary>
            Entity representing the fluid initital temperature applied to participating bodies.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="magnitude">The default temperature magnitude</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="creator">The creator of the entity.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Magnitude">
            <summary>
            Defines the temperature value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Scope">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity.Clone">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GenericFilterCoefficients.X">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GenericFilterCoefficients.Y">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GenericFilterCoefficients.Z">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SpringEntity">
            <summary>
            Entity representing a spring condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.DefaultSpringType">
            <summary>
            Default spring type
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.DefaultSpringPreloadType">
            <summary>
            Default spring pre-load
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Nullable{Ansys.Disco.Physics.Entities.Conditions.SpringType},System.Nullable{Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType},Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SpringEntity"/>
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">Scope for side 1 of the entity</param>
            <param name="side2">Scope for side 2 of the entity</param>
            <param name="springType">Type of spring (longitudinal, torsional)</param>
            <param name="springPreloadType">Type of spring pre-load (none, load, free length)</param>
            <param name="creator">Flag for creation origin</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PhysicsType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.SpringType">
            <summary>
            Type of spring (longitudinal, torsional)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PreloadType">
            <summary>
            Type of spring pre-load (none, load, free length)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PreloadFreeLength">
            <summary>
            Pre-load length, if the pre-load type is set to FreeLength
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PreloadLoadForce">
            <summary>
            Pre-load force, if the pre-load type is set to Load
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PreloadTorque">
            <summary>
            Pre-load torque, if the pre-load type is set to Torque
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.PreloadRotation">
            <summary>
            Pre-load rotation angle, if the pre-load type is set to Rotation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.StiffnessTorsional">
            <summary>
            Stiffness for a torsional spring
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.StiffnessLongitudinal">
            <summary>
            Stiffness for a longitudinal spring
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.Suppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.Unsuppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.Suppressed">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SpringEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType">
            <summary>
            Defines the type of spring pre-load
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType.None">
            <summary>
            Spring has no pre-load
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType.Load">
            <summary>
            Spring pre-load is a load
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType.FreeLength">
            <summary>
            Spring pre-load is based on free length
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType.Torque">
            <summary>
            Spring pre-load is based on a torque force
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringPreloadType.Rotation">
            <summary>
            Spring pre-load is rotation based
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SpringType">
            <summary>
            Defines the type of spring
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringType.Longitudinal">
            <summary>
            Spring is longitudinal
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SpringType.Torsional">
            <summary>
            Spring is torsional
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.PhysicsType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity">
            <summary>
            Entity representing a velocity condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.DefaultType">
            <summary>
            Default velocity type.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Nullable{Ansys.Disco.Physics.Entities.Conditions.VelocityType},Ansys.Disco.Physics.ValueObjects.DegreesOfFreedom{UnitsNet.Speed,UnitsNet.RotationalSpeed},Ansys.Disco.Physics.ValueObjects.Triad,Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Length})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity.</param>
            <param name="scope">Scope for the entity.</param>
            <param name="velocityType">Type of velocity (translation, rotation or combined)</param>
            <param name="dof">Degrees of freedom of the velocity</param>
            <param name="loadDirectionTriad">Load direction triad</param>
            <param name="rotationAxisOrigin">Rotation axis origin</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.PhysicsType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.VelocityType">
            <summary>
            Type of velocity (translation, rotation or combined)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.DegreesOfFreedom">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.LoadDirectionTriad">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.AutoRotationAxisOrigin">
            <summary>
            Origin of the rotation axis determined from secondary selection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.OverrideRotationAxisOrigin">
            <summary>
            True if user defined rotation axis origin should be used, otherwise false.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.UserRotationAxisOrigin">
            <summary>
            Origin of the rotation axis determined from user definition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.RotationAxisOrigin">
            <summary>
            Origin of the rotation axis
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.DetermineDefaultRotationAxisOrigin(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Determine the default rotation axis origin for a velocity condition from a given
            location set.
            </summary>
            <param name="locationSet">Location set</param>
            <param name="locationService">Location service</param>
            <returns>Rotation axis origin</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.Suppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.Unsuppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.Suppressed">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity.DetermineDefaultRotationAxisOrigin(Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Determines the default rotation axis origin for the condition.
            </summary>
            <param name="locationService">Location service</param>
            <returns>Rotation axis origin</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.VelocityType">
            <summary>
            Define the type of velocity
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.VelocityType.Translation">
            <summary>
            Velocity is a translation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.VelocityType.Rotation">
            <summary>
            Velocity is a rotation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.VelocityType.Combined">
            <summary>
            Velocity is a combination of translation and rotations
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ISuppressible">
            <summary>
            Classes that implement this interface can be suppressed and
            unsuppressed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ISuppressible.Suppress">
            <summary>
            Suppresses the object.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ISuppressible.Unsuppress">
            <summary>
            Unsuppresses the object.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ISuppressible.Suppressed">
            <summary>
            Determines if the object has been suppressed or is unsuppressed.
            </summary>
            <returns>
            <see langword="true" /> if the object is suppressed.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficientsDefinition">
            <summary>
            Specifies how the filter loss terms are defined.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficientsDefinition.GenericFilter">
            <summary>
            Filter loss terms will be set directly.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficientsDefinition.Tabular">
            <summary>
            Filter loss will be calculated from tabular data.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity"/> class.
            </summary>
            <remarks>
            This parameterless constructor exists solely to support mocking of
            the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity"/> concrete type using Moq.
            The <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Category"/> property was also made <see
            langword="virtual"/> for the same reason.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.#ctor(System.Guid,System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="interfaces">Face pairs for the entity</param>
            <param name="creator">Whether the entity was created automatically or by the user</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Category">
            <summary>
            Gets the category this interface belongs to.
            </summary>
            <remarks>
            This property has been made <see langword="virtual"/> solely to
            allow the property to be mocked for testing. If overriding this
            property is no longer required, the <see langword="virtual"/> can
            be removed.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.DetectionGrouping">
            <summary>
            The detection grouping type used by the interface generation algorithm
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.ThermalConductance">
            <summary>
            A value for defining the thermal conductance across the interface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity.GetFullScope">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ContactEntity">
            <summary>
            Entity representing a contact definition for a surface or between two surfaces
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">Scope for side 1 of the entity</param>
            <param name="side2">Scope for side 2 of the entity</param>
            <param name="creator">flag for creation origin</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.FrictionCoefficient">
            <summary>
            Coefficient of friction between contact surfaces
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.SpecifyThermalConductance">
            <summary>
            Allow specification of thermal conductance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.ThermalContactConductance">
            <summary>
            Gets and sets the thermal conductance value
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Idealize">
            <summary>
            Idealize sliding between contact surfaces
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.AdjustGapOrOverlap">
            <summary>
            Adjust gap of contact surfaces or overlap
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.MakeJustTouching">
            <summary>
            Simulate closing of gaps between contact surfaces
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Offset">
            <summary>
            Offset for gap between contact surfaces
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.StiffnessFactor">
            <summary>
            Stiffness for sliding contacts
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.DetectionRadiusFactor">
            <summary>
            Detection radius factor for sliding contacts
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.ContactPairs">
            <summary>
            Contact pairs derived from single sided manual contact.
            Will not return null.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.PreventContact">
            <summary>
            Allow separation and penetration of contact surfaces - i.e. no contact and will prevent bonded contact being generated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ContactEntity.CreateNewContactWithSameOptions(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator,Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactEntity"/> class using the same options as the this object.
            </summary>
            <param name="side1">Scope for side 1 of the entity</param>
            <param name="side2">Scope for side 2 of the entity</param>
            <param name="creator">flag for creation origin</param>
            <param name="parentGroup">the group the contact might be template of, in order to pass on suppressed state</param>
            <returns>the new instance</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ContactType">
            <summary>
            Definition of how a Contact is constrained
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactType.Bonded">
            <summary>
            Movement is constrained in all six degrees of freedom
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactType.Sliding">
            <summary>
            Movement is constrained normal to the applied face, but free in the tangential direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactType.Prevented">
            <summary>
            Movement is completely free
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ContactDetectionGrouping">
            <summary>
            Define grouping for automatic contact detection
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactDetectionGrouping.ByBody">
            <summary>
            Grouping by body.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactDetectionGrouping.None">
            <summary>
            No grouping.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ContactDetectionGrouping.ByTopology">
            <summary>
            Grouping by topology.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity">
            <summary>
            Entity representing a temperature applied to a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="creator">Who is creating this</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.ConvectionOptions,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="convection">The default convection options</param>
            <param name="creator">Who is creating this</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.CoordinateSystemType">
            <summary>
            Determines how bolt preload is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.CoordinateSystemType.Global">
            <summary>
            Global Coordinate System
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.CoordinateSystemType.Local">
            <summary>
            Local Coordinate System
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity">
            <summary>
            Entity representing a displacement condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="locationService">Location service for handling value object.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Label">
            <inheritdoc cref="T:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem" />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.LoadDirectionTriad">
            <summary>
            Orientation of displacement
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.DisplacementType">
            <summary>
            Type of displacement
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.DegreesOfFreedom">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.CanUseOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.IsUsingOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.OriginX">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.OriginY">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.OriginZ">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.GetGlobalDirectionFromLocalCoordinates(System.Double,System.Double,System.Double,Ansys.Disco.Physics.ValueObjects.Triad)">
            <summary>
            get global direction local coordinates
            </summary>
            <param name="x">local x component</param>
            <param name="y">local y component</param>
            <param name="z">local z component</param>
            <param name="locationDirectionTriad">local coordinate system</param>
            <returns>The converted global Direction</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.IsActingAsFixedSupport">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity.GetOrigin(UnitsNet.Units.LengthUnit)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementType">
            <summary>
            Define the type of displacement
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Translation">
            <summary>
            Displacement is a translation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Rotation">
            <summary>
            Displacement is a rotation in one or more directions
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Combined">
            <summary>
            Displacement is a combination of translation and rotations
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions">
            <summary>
            Properties for distributed force condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Pressure})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions"/> class.
            </summary>
            <param name="magnitude">Magnitude of force</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Force})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions"/> class.
            </summary>
            <param name="magnitude">Magnitude of force</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.#ctor(UnitsNet.Force,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions"/> class.
            </summary>
            <param name="totalForce">The total force</param>
            <param name="direction">The total force direction</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.#ctor(UnitsNet.Pressure,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions"/> class.
            </summary>
            <param name="forcePerArea">The force per area</param>
            <param name="direction">The force per area direction</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Force},Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Pressure},Ansys.Disco.Physics.Entities.Conditions.ForceMagnitudeDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions"/> class.
            </summary>
            <param name="magnitude">Magnitude of force</param>
            <param name="forcePerArea">The force per area</param>
            <param name="definition">The force definition</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForcePerArea">
            <summary>
            The force per area
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce">
            <summary>
            The total force
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForceMagnitudeDefinition">
            <summary>
            Definition of the force magnitude as either total force or per unit area
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.GetTotalForceFromForcePerArea(UnitsNet.Area)">
            <summary>
            Calculate total force vector from ForcePerArea
            </summary>
            <param name="area">Area of scope force is applied to</param>
            <returns>Total force vector quantity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.GetForcePerAreaFromTotalForce(UnitsNet.Area)">
            <summary>
            Calculate force per area vector from TotalForce
            </summary>
            <param name="area">Area of scope force is applied to</param>
            <returns>Force per area vector quantity</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.FlowDirection">
            <summary>
            Specifies the direction for a flow
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.FlowDirection.In">
            <summary>
            Flow condition is an inlet
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.FlowDirection.Out">
            <summary>
            Flow condition is an outlet
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity">
            <summary>
            Entity representing a flow definition for a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Behaviours.IFlowOptions,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="flowOptions">Flow options for entity</param>
            <param name="locationService">Location service for handling value object.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.LoadDirection">
            <summary>
            Direction of load
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.FlowDirection">
            <summary>
            Flow Direction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.FlowSpecification">
            <summary>
            Flow Specification
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.FlowOptions">
            <summary>
            Flow option entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.GetTemperature">
            <summary>
            Easier way of encapsulating the temperature of the flow, when it can be specified.
            </summary>
            <returns>the temperature, or null if none specified</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.FlowEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.FlowSpecification">
            <summary>
            Specifies how a flow is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.FlowSpecification.Velocity">
            <summary>
            Flow is defined by velocity
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.FlowSpecification.MassFlow">
            <summary>
            Flow is defined by massflow
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.FlowSpecification.Pressure">
            <summary>
            Flow is defined by pressure
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ForceSpecification">
            <summary>
            Specifies how a force condition is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ForceSpecification.Distributed">
            <summary>
            Force is defined as distributed
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ForceSpecification.Torque">
            <summary>
            Force is defined as a torque
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.GravityEntity">
            <summary>
            Entity representing an acceleration scoped to all bodies
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.GravityEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.IncludeSelfWeight">
            <summary>
            Include Self Weight flag
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.IncludeBuoyancy">
            <summary>
            Include Buoyancy flag
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.GravityEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.HeatEntity">
            <summary>
            Entity representing a flow definition for a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.HeatProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.HeatEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="heatProperties">Quantity values for the different types of heat.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.HeatProperties">
            <summary>
            heat properties
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.HeatEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.HeatSpecification">
            <summary>
            Specifies how heat generation is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.HeatSpecification.TotalHeat">
            <summary>
            Heat Generation is defined by power
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.HeatSpecification.HeatPerUnitVolume">
            <summary>
            Heat Transfer is defined by power per unit volume
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions">
            <summary>
            Properties for flow inlet massflow condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.MassFlow},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions"/> class.
            </summary>
            <param name="massFlow">Mass flow for inlet flow</param>
            <param name="temperature">Temperature of inlet flow</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.#ctor(UnitsNet.MassFlow,UnitsNet.Temperature)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions"/> class.
            </summary>
            <param name="massFlow">Mass flow for inlet flow</param>
            <param name="temperature">Temperature of inlet flow</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.MassFlow">
            <summary>
            Mass flow for flow inlet
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.Temperature">
            <summary>
            Temperature of flow inlet
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions">
            <summary>
            Properties for flow inlet pressure condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Pressure},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions"/> class.
            </summary>
            <param name="pressure">Pressure for inlet velocity</param>
            <param name="temperature">Temperature of inlet velocity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.#ctor(UnitsNet.Pressure,UnitsNet.Temperature)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions"/> class.
            </summary>
            <param name="pressure">Pressure for inlet velocity</param>
            <param name="temperature">Temperature of inlet velocity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.Pressure">
            <summary>
            Pressure for flow inlet
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.Temperature">
            <summary>
            Temperature of flow inlet
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions">
            <summary>
            Properties for flow inlet velocity condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Speed},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions"/> class.
            </summary>
            <param name="speedExpression">Speed of inlet velocity</param>
            <param name="temperature">Temperature of inlet velocity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Speed},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.RotationalSpeed},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions"/> class.
            </summary>
            <param name="speedExpression">Speed of inlet velocity</param>
            <param name="temperature">Temperature of inlet velocity</param>
            <param name="rotationalVelocity">Rotational velocity for swirl</param>
            <param name="isSwirlActive">Is swirl active</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.SpeedExpression">
            <summary>
            Speed of inlet velocity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.Temperature">
            <summary>
            Temperature of inlet velocity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.RotationalVelocity">
            <summary>
            Rotational velocity for swirl
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.IsSwirlActive">
            <summary>
            Is swirl active
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity">
            <summary>
            Entity representing a temperature applied to a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition">
            <summary>
            Interface for physics conditions.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition.PhysicsType">
            <summary>
            The valid physics type for the condition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition.IsInitialCondition">
            <summary>
            Whether this physics condition represents an initial condition in transient analysis.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.JointEntity">
            <summary>
            Entity representing a joint definition for a node/edge/surface or between two nodes/edges/surfaces
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.JointEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Conditions.JointType)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.JointEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="side1">Scope for side 1 of the entity</param>
            <param name="side2">Scope for side 2 of the entity</param>
            <param name="jointType">Type of joint for the entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.JointType">
            <summary>
            Type of joint
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowTranslationX">
            <summary>
            For General type of Joint, allow translation in X
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowTranslationY">
            <summary>
            For General type of Joint, allow translation in Y
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowTranslationZ">
            <summary>
            For General type of Joint, allow translation in Z
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowRotationX">
            <summary>
            For General type of Joint, allow rotation in X
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowRotationY">
            <summary>
            For General type of Joint, allow rotation in Y
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.AllowRotationZ">
            <summary>
            For General type of Joint, allow rotation in Y
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.JointEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.JointEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.JointEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.JointEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.JointEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity">
            <summary>
            Entity representing a force load applied on a surface in a given direction
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.Geometry.Point3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="origin">Origin for the entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.CanUseOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.IsUsingOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.AddedMass">
            <summary>
            The AddedMass vector value in the global co-ordinate system
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.OriginX">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.OriginY">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.OriginZ">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.GetOrigin(UnitsNet.Units.LengthUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.MomentEntity">
            <summary>
            Entity representing a force load applied on a surface in a given direction
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.MomentEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="loadDirection">The load direction</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Torque})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.MomentEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity.</param>
            <param name="scope">Scope for the entity.</param>
            <param name="components">The torque components.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.GlobalComponents">
            <summary>
            The moment vector value in the global co-ordinate system
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.TranslateToGlobalFromLocal(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Torque})">
            <summary>
            Translates local components into components for the global co-ordinate system
            </summary>
            <param name="localComponents">The local components to be transformed</param>
            <returns>The converted global components</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.MomentEntity.TranslateToLocalFromGlobal(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Torque})">
            <summary>
            Translates global components into components for the local co-ordinate system
            </summary>
            <param name="globalComponents">The global components to be transformed</param>
            <returns>The converted local components</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.JointType">
            <summary>
            Definition of how a joint is constrained
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Fixed">
            <summary>
            Movement is constrained in all six degrees of freedom
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Hinged">
            <summary>
            Movement is constrained in all DOFs except rotation around the local z
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Spherical">
            <summary>
            All translations are locked while all rotations are free
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Translational">
            <summary>
            Movement is constrained in all DOFs except translation along the local x
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Slot">
            <summary>
            Movement is constrained in translation along local y and z
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Cylindrical">
            <summary>
            Movement is constrained in all DOFs except translation along local z and rotation around local z
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Universal">
            <summary>
            All translations are locked as well as rotations around local y
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.Planar">
            <summary>
            Rotations around x and y are locked as well as translation along z
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.JointType.General">
            <summary>
            Degrees of freedom can be chosen by the user
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.WallMotion">
            <summary>
            Define wall motion state.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallMotion.Stationary">
            <summary>
            No motion.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallMotion.Rotating">
            <summary>
            Rotating motion.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallMotion.Translating">
            <summary>
            linear motion.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions">
            <summary>
            Properties for flow outlet mass flow condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.MassFlow})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions"/> class.
            </summary>
            <param name="massFlow">Mass flow for outlet</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions.#ctor(UnitsNet.MassFlow)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions"/> class.
            </summary>
            <param name="massFlow">Mass flow for outlet</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions.MassFlow">
            <summary>
            Mass flow for flow inlet
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions">
            <summary>
            Properties for flow outlet pressure condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Pressure},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions"/> class.
            </summary>
            <param name="pressure">Pressure for outlet velocity</param>
            <param name="backFlowTemperature">Temperature of outlet velocity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.#ctor(UnitsNet.Pressure,UnitsNet.Temperature)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions"/> class.
            </summary>
            <param name="pressure">Pressure for outlet velocity</param>
            <param name="backFlowTemperature">Temperature of outlet velocity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.Pressure">
            <summary>
            Pressure for flow outlet
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.Temperature">
            <summary>
            Temperature of flow outlet
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.OutletVelocityOptions">
            <summary>
            Properties for flow outlet velocity condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.OutletVelocityOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Speed})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.OutletVelocityOptions"/> class.
            </summary>
            <param name="speedExpression">Speed of outlet velocity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.OutletVelocityOptions.SpeedExpression">
            <summary>
            Speed of outlet velocity
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ConditionStageCompatibility.Full">
            <summary>
            The condition is fully compatible with the stage
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ConditionStageCompatibility.Approximated">
            <summary>
            Some aspects of the condition will be ignored or applied differently for the current stage
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ConditionStageCompatibility.Ignored">
            <summary>
            The condition will be ignored and will have no affect on the solution for this stage.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SupportType">
            <summary>
            Definition of how a support is constrained
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Fixed">
            <summary>
            Movement is constrained in all six degrees of freedom
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Sliding">
            <summary>
            Movement is constrained normal to the applied face, but free in the tangential direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Hinged">
            <summary>
            Movement is constrained normal to the applied face, but free in the tangential direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Roller">
            <summary>
            Movement is constrained to a single translational degree of freedom, optionally may be free to rotate about this direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Ball">
            <summary>
            All translational dofs are fixed, all rotational dofs are free
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SupportType.Displaced">
            <summary>
            Ability to define a specific displacement in any of the 6 degrees of freedom
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions">
            <summary>
            Properties for torque force condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Torque})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions"/> class.
            </summary>
            <param name="magnitude">Magnitude of the force</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.#ctor(UnitsNet.Torque,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions"/> class.
            </summary>
            <param name="magnitude">THe torque magnitude</param>
            <param name="direction">The torque direction</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Torque">
            <summary>
            The torque magnitude vector
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity">
            <summary>
            Entity representing a temperature applied to a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature},System.Boolean,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="magnitude">The default temperature magnitude</param>
            <param name="isInitialCondition">Whether the entity represents an initial condition for transient analysis</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature},Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="magnitude">The default temperature magnitude</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Boolean,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="isInitialCondition">Whether the entity represents an initial condition for transient analysis</param>
            <param name="creator">flag to indicate who creates it</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Magnitude">
            <summary>
            Defines the temperature value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Scope">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification">
            <summary>
            Specify thermal behavior of Wall.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification.Insulated">
            <summary>
            Wall with insulated thermal condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification.Convection">
            <summary>
            Wall with convection thermal condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification.HeatFlux">
            <summary>
            Wall with heat flux thermal condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification.HeatFlow">
            <summary>
            Wall with heat flow thermal condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification.Temperature">
            <summary>
            Wall with temperature thermal condition.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SurfaceFriction">
            <summary>
            Define surface friction condition on wall.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SurfaceFriction.NoSlip">
            <summary>
            No slip wall condition.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.SurfaceFriction.FreeSlip">
            <summary>
            Free slip wall condition.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.WallEntity">
            <summary>
            Entity representing a wall definition for a surface
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Core.DomainCore.Creator,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.WallEntity" /> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="locationService">
            Location service for handling value object.
            </param>
            <param name="createdOnEnclosureExterior">
            Flag to identify (default) wall was created for the exterior of
            enclosure.
            </param>
            <param name="creator">
            Flag to identify if it was system or user created
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.MotionSpecification">
            <summary>
            Wall Motion Specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.RotationalVelocity">
            <summary>
            Wall Rotational Velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.TranslationalVelocity">
            <summary>
            Wall Translational velocity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.SurfaceFriction">
            <summary>
            Surface Friction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.WallEntity.ThermalProperties">
            <summary>
            Wall Thermal Properties.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Suppressed">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.WallEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity">
            <summary>
            Entity representing a bearing load distribution of force to be applied to a cylindrical surface
            </summary>
            <remarks>Bearing load direction is always perpendicular to the cylinder axis. Thrust direction is always
            parallel to the cylinder axis.</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="gravityDirection">The direction of entity representing gravity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,UnitsNet.Force,UnitsNet.Force,UnitsNet.Angle,Ansys.Disco.Physics.ValueObjects.LoadDirection)">
             <summary>
             Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity"/> class.
            
             Provide magnitude values for Bearing load.
             </summary>
             <param name="id">Unique identifier for the entity</param>
             <param name="scope">Scope for the entity</param>
             <param name="radialForceMagnitude">The radial force magnitude</param>
             <param name="thrustForceMagnitude">The thrust force magnitude</param>
             <param name="loadAngle">The angle applied to the load</param>
             <param name="gravityDirection">The direction of entity representing gravity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LoadDirection,Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Force},Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{UnitsNet.Force},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Angle})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity"/> class.
            </summary>
            <remarks>
            This constructor is for use with deserialization only.
            </remarks>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="gravityDirection">The direction of entity representing gravity</param>
            <param name="radialForce">The radial force vector</param>
            <param name="thrustForce">The thrust force vector</param>
            <param name="loadAngle">The angle applied to the load</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.RadialForce">
            <summary>
            Direction of the bearing load - always perpendicular to the cylinder axis (i.e. thrust direction)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.ThrustForce">
            <summary>
            Magnitude of force applied along the cylinder axis
            Direction of the bearing thrust - always parallel to the cylinder axis
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.LoadAngle">
            <summary>
            Rotation in the plane defined by a normal along the cylinder axis (i.e. thrust direction) between
            the datum and load direction. The datum is defined as the projection of the gravity direction onto
            the plane.
            </summary>
            <remarks>Until gravity direction is definable in the domain, a default of -z is assumed. If this is found to be
            parallel to the cylinder axis a fall back direction of -y is assumed.</remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity">
            <summary>
            Entity representing a bolt pre-tension load
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="bolt">Scope for the bolt body</param>
            <param name="unbonded">Scope for bodies / faces that are not to be bonded to the bolt</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Side1">
            <inheritdoc />
            <remarks> Should only be scoped to one or more cylindrical geometries</remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.BoltPreloadType">
            <summary>
            Define whether bolt preload is defined by axial force or by adjustment length
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadType">
            <summary>
            Determines how bolt preload is defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadType.AxialForce">
            <summary>
            Axial Force
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadType.LengthAdjustment">
            <summary>
            Length to adjust grip by
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadType.Torque">
            <summary>
            Tighten bolt to a specific Torque
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ForceMagnitudeDefinition">
            <summary>
            Defines how the force magnitude is calculated
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ForceMagnitudeDefinition.Total">
            <summary>
            Force magnitude is fixed regardless of surface area it is applied to
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.ForceMagnitudeDefinition.PerUnitArea">
            <summary>
            Force magnitude is proportional to the surface area that it is applied to
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.PressureEntity">
            <summary>
            Entity representing a uniformly distributed load normal to the surface it is applied to
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Pressure})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PressureEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="pressureMagnitude">The pressure magnitude.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.CountedTypeIndex">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.PressureEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.DirectionalFreedom">
            <summary>
            Define the degree of freedom for a particular direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DirectionalFreedom.Fixed">
            <summary>
            Movement is constrained for this direction
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Conditions.DirectionalFreedom.Free">
            <summary>
            Movement is not constrained for this direction
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity">
            <summary>
            Entity representing a force load applied on a surface in a given direction
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions,Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions,Ansys.Disco.Physics.Entities.Conditions.ForceSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="forceOptions">Distributed options for the force</param>
            <param name="torqueOptions">Torque options for the force</param>
            <param name="forceType">Is the force specified as a linear force, or a torque</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.Geometry.Point3D,UnitsNet.Units.LengthUnit,Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions,Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions,Ansys.Disco.Physics.Entities.Conditions.ForceSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="origin">Origin for the entity</param>
            <param name="originUnit">Unit for the origin coordinates</param>
            <param name="forceOptions">Distributed options for the force</param>
            <param name="torqueOptions">Torque options for the force</param>
            <param name="forceType">Is the force specified as a linear force, or a torque</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Length},Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions,Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions,Ansys.Disco.Physics.Entities.Conditions.ForceSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="originX">X position of the origin for the entity</param>
            <param name="originY">Y position of the origin for the entity</param>
            <param name="originZ">Z position of the origin for the entity</param>
            <param name="forceOptions">Distributed options for the force</param>
            <param name="torqueOptions">Torque options for the force</param>
            <param name="forceType">Is the force specified as a linear force, or a torque</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.CanUseOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.IsUsingOriginPoint">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.OriginX">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.OriginY">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.OriginZ">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.ForceSpecification">
            <summary>
            Force Specification
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.ForceEntity.GetOrigin(UnitsNet.Units.LengthUnit)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Conditions.SupportEntity">
            <summary>
            Support is a constraint to prescribe zero values to active degrees of freedom at a given location
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SupportEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
            <param name="locationService">Location service for handling value object.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.SupportType">
            <summary>
            Definition of support as fixed or frictionless
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.LoadDirectionTriad">
            <summary>
            Joint orientation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.PhysicsType">
            <summary>
            Valid physics type for entity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.IsInitialCondition">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.DegreesOfFreedom">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Suppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Unsuppress">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Suppressed">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Conditions.SupportEntity.IsActingAsFixedSupport">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.IReadOnlyEntityCollection`1.ElementAtOrDefault(System.Int32)">
            <summary>
            Gets the element at <paramref name="index" />.
            </summary>
            <param name="index">
            0 based index of the element being retrieved.
            </param>
            <returns>
            The element at <paramref name="index" />. Can be <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.IReadOnlyEntityCollection`1.ForEach(System.Action{`0})">
            <summary>
            Apply <paramref name="action"/> to each element.
            </summary>
            <param name="action">The action to perform on element.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentDefault">
            <summary>
            The type of default material assignment
            This is currently only used for electromagnetic material assignments, but can be extended in future.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentDefault.Unknown">
            <summary>
            Not an electromagnetic default material
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentDefault.Conducting">
            <summary>
            Default conducting material assignment
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentDefault.Dielectric">
            <summary>
            Default dielectric material assignment
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable">
            <summary>
            A table for density values dependent on temperature
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.#ctor(UnitsNet.Density)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable"/> class.
            </summary>
            <param name="firstDensity">The first density value to add to the table at default temperature.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.#ctor(UnitsNet.Temperature,UnitsNet.Density)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable"/> class.
            </summary>
            <param name="firstTemperature">The first temperature to be added.</param>
            <param name="firstDensity">The first density to be added at <paramref name="firstTemperature"/></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable"/> class.
            </summary>
            <param name="tableStore">The table store to restore our table from.</param>
            <param name="tableId">The id of the table.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.IsConstant">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.Ansys#Disco#Physics#ValueObjects#Quantities#IExpression#Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.EvaluateAt(UnitsNet.Temperature)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.GetAllValues">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable.Clone">
            <summary>
            Clones the table as a new object with a new id.
            </summary>
            <returns>The new table.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable">
            <summary>
            A table for relative permittivity values dependent on frequency
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.IsConstant">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.Ansys#Disco#Physics#ValueObjects#Quantities#IExpression#Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.EvaluateAt(UnitsNet.Frequency)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.GetAllValues">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.Clone">
            <summary>
            Clones the table as a new object with a new id.
            </summary>
            <returns>The new table.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.RelativePermittivityTable.RepairPermittivityColumnValues">
             <summary>
             Method to repair tables which have been mistakenly created with Permittivity quantities
             (a quantity type which represents absolute permittivity) instead of Ratio quantities
             (correct type for relative permittivity). Such tables may exist in files which were
             created after bug 628286 was introduced, but before it was fixed. In these files, the
             quantities have the correct value for the relative permittivity ratio, just stored with
             the wrong quantity type and unit.
            
             This method should be called once for each permittivity table after resume. If the
             table is already valid, this will do nothing.
             </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable">
            <summary>
            A table for specific heat values dependent on temperature
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.#ctor(UnitsNet.SpecificEntropy)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable"/> class.
            </summary>
            <param name="firstSpecificHeat">The first specific heat value to add to the table at default temperature.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.#ctor(UnitsNet.Temperature,UnitsNet.SpecificEntropy)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable"/> class.
            </summary>
            <param name="firstTemperature">The first temperature to be added.</param>
            <param name="firstSpecificHeat">The first specific heat to be added at <paramref name="firstTemperature"/></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.DensityTable"/> class.
            </summary>
            <param name="tableStore">The table store to restore our table from.</param>
            <param name="tableId">The id of the table.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.IsConstant">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.Ansys#Disco#Physics#ValueObjects#Quantities#IExpression#Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.EvaluateAt(UnitsNet.Temperature)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.GetAllValues">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.SpecificHeatTable.Clone">
            <summary>
            Clones the table as a new object with a new id.
            </summary>
            <returns>The new table.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable">
            <summary>
            A table for thermal conductivity values dependent on temperature
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.#ctor(UnitsNet.ThermalConductivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable"/> class.
            </summary>
            <param name="firstThermalConductivity">The first thermal conductivity value to add to the table at default temperature.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.#ctor(UnitsNet.Temperature,UnitsNet.ThermalConductivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable"/> class.
            </summary>
            <param name="firstTemperature">The first temperature to be added.</param>
            <param name="firstThermalConductivity">The thermal conductivity to be added at <paramref name="firstTemperature"/></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable"/> class.
            </summary>
            <param name="tableStore">The table store to restore our table from.</param>
            <param name="tableId">The id of the table.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.IsConstant">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.Ansys#Disco#Physics#ValueObjects#Quantities#IExpression#Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.EvaluateAt(UnitsNet.Temperature)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.GetAllValues">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.ThermalConductivityTable.Clone">
            <summary>
            Clones the table as a new object with a new id.
            </summary>
            <returns>The new table.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable">
            <summary>
            A table for young's modulus values dependent on temperature
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.#ctor(UnitsNet.Pressure)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable"/> class.
            </summary>
            <param name="firstYounngsModulus">The first young's modulus value to add to the table at default temperature.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.#ctor(UnitsNet.Temperature,UnitsNet.Pressure)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable"/> class.
            </summary>
            <param name="firstTemperature">The first temperature to be added.</param>
            <param name="firstYoungsModulus">The first young's modulus to be added at <paramref name="firstTemperature"/></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable"/> class.
            </summary>
            <param name="tableStore">The table store to restore our table from.</param>
            <param name="tableId">The id of the table.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.IsConstant">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.Ansys#Disco#Physics#ValueObjects#Quantities#IExpression#Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.Evaluate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.EvaluateAt(UnitsNet.Temperature)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.GetAllValues">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.YoungsModulusTable.Clone">
            <summary>
            Clones the table as a new object with a new id.
            </summary>
            <returns>The new table.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialInformationProperties.SourceMaterialId">
            <summary>
            This references the unique ID of the material in a given state from the library data.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialStateProperties.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialElectromagneticProperties.Equals(Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialElectromagneticProperties)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties">
            <summary>
            Mechanical properties used by a material
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties.YoungsModulus">
            <summary>
            The table of temperature and values for Youngs Modulus (Isotropic Elasticity)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties.PoissonsRatio">
            <summary>
            The value for Poisson's Ratio (Isotropic Elasticity)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties.ShearModulus">
            <summary>
            The value for Shear Modulus (Isotropic Elasticity)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties.BulkModulus">
            <summary>
            The value for Bulk Modulus (Isotropic Elasticity)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties.Equals(Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialMechanicalProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialPhysicalProperties.Equals(Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialPhysicalProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialThermalProperties.Equals(Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialThermalProperties)">
            <inheritdoc />
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.UserDefined">
            <summary>
            A material that has been created by the user
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.DefaultLibrary">
            <summary>
            A material that has been imported from the unlicensed library of default materials
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.LicensedLibrary">
            <summary>
            A material that has come from a licensed library, e.g. MDS
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.LocalLibrary">
            <summary>
            A material that has come from the user created local library
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.GrantaLibrary">
            <summary>
            A material that comes from an online MI database
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.Imported">
            <summary>
            A material that has been imported from SpaceClaim
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.SharedLibrary">
            <summary>
            A material that has come from the shared library
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialSource.Undefined">
            <summary>
            Undefined material source.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.Label">
            <inheritdoc cref="T:Ansys.Disco.Physics.Entities.Behaviours.ILabelledItem" />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.Scope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.AssignedData">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity.GetFullScope">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.Name">
            <summary>
            The name identifier for this material in a library, project or solution
            This may not be required...
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.Label">
            <summary>
            The label identifier for this material in a library, project or solution
            Copied from the name
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.MaterialLibrarySourceId">
            <summary>
            This references the unique ID of the source material library.
            For the material ID from that library, see information properties.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.MaterialProperties">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Materials.MaterialEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialState.Solid">
            <summary>
            The solid state of a given material
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialState.Liquid">
            <summary>
            The liquid state of a given material
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialState.Gas">
            <summary>
            The gas state of a given material
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Materials.MaterialState.Unknown">
            <summary>
            The given state of the material is not known
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults">
            <summary>
            A collection of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> and their associated <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.#ctor(System.Collections.Generic.IDictionary{System.Guid,Ansys.Disco.Physics.Entities.Monitors.SolverResults})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" />
            class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.Add(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Physics.Entities.Monitors.SolverResults)">
            <summary>
            Add a <paramref name="monitor" /> and its <paramref name="results"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> whose <paramref name="results" />
            are being added. If <see langword="null" />, nothing is added.
            </param>
            <param name="results">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> being added for a given <paramref
            name="monitor" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.Add(System.Guid,Ansys.Disco.Physics.Entities.Monitors.SolverResults)">
            <summary>
            Add a <paramref name="monitorId" /> and its <paramref name="results"
            /> to this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" />.
            </summary>
            <param name="monitorId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> whose <paramref name="results" />
            are being added.
            </param>
            <param name="results">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> being added for a given <paramref
            name="monitorId" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.Any">
            <summary>
            Determines whether a <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" /> contains any
            elements.
            </summary>
            <returns>
            <see langword="true" /> if the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" />
            contains any <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" />; otherwise, <see
            langword="false" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.Any(System.Func{Ansys.Disco.Physics.Entities.Results.SolverResultValue,System.Boolean})">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> exist matching
            <paramref name="predicate" />.
            </summary>
            <param name="predicate">
            A function to test each <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for a
            condition.
            </param>
            <returns>
            <see langword="true" /> if a <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" />
            matching <paramref name="predicate" /> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetMonitorResults">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> and <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> pairs as a <see
            cref="T:System.Collections.Generic.IReadOnlyCollection`1" />.
            </summary>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> and <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />
            pairs as a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetResults(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity)">
            <summary>
            Get all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for <paramref
            name="monitor" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for <paramref name="monitor" />
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetResults(System.Guid)">
            <summary>
            Get all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for <paramref
            name="monitorId" />.
            </summary>
            <param name="monitorId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for <paramref name="monitorId"
            />
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetResults(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="solver" /> for a <paramref name="monitor" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> are associated with.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="solver" /> for a <paramref name="monitor" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetResults(System.Guid,Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="solver" /> for a <paramref name="monitorId" />.
            </summary>
            <param name="monitorId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> are associated with.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="solver" /> for a <paramref name="monitorId" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.GetResults(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="variation" /> for a <paramref name="monitor" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> to get <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <param name="variation">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> we are getting <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for.
            </param>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> related to <paramref
            name="variation" /> for a <paramref name="monitor" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.HasResultsFor(Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> exist for
            <paramref name="solver" /> across all <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorResults" />.
            </summary>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> where the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> originated from.
            </param>
            <returns>
            <see langword="true" /> if a <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for
            <paramref name="solver" /> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.HasResultsFor(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity)">
            <summary>
            Checks to see if any <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> exist for a
            given <paramref name="monitor" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> we are checking for results.
            </param>
            <returns>
            <see langword="true" /> if results exist for <paramref
            name="monitor" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.TryGetResults(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Physics.Entities.Monitors.SolverResults@)">
            <summary>
            Try to get <paramref name="results" /> for a <paramref
            name="monitor" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> we are trying to get <paramref
            name="results" /> for.
            </param>
            <param name="results">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> being returned if found for
            <paramref name="monitor" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="results" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorResults.TryGetResults(System.Guid,Ansys.Disco.Physics.Entities.Monitors.SolverResults@)">
            <summary>
            Try to get <paramref name="results" /> for a <paramref
            name="monitorId" />.
            </summary>
            <param name="monitorId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> we are trying to get <paramref
            name="results" /> for.
            </param>
            <param name="results">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> being returned if found for
            <paramref name="monitorId" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="results" /> are found for
            <paramref name="monitorId" />. <paramref name="results" /> might
            still be null.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults">
            <summary>
            A collection of <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.#ctor(System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Results.SolverResultValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />
            class.
            </summary>
            <param name="results">
            The results being added to this collection.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Count">
            <summary>
            Gets the number of <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> contained in the
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.SolverResults.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> is
            read-only.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Add(Ansys.Disco.Physics.Entities.Results.SolverResultValue)">
            <summary>
            Adds a <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> to the end of the <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <param name="result">
            The <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> being added. <paramref
            name="result" /> can be <see langword="null" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Any(System.Func{Ansys.Disco.Physics.Entities.Results.SolverResultValue,System.Boolean})">
            <summary>
            Returns <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />
            matching <paramref name="predicate" />.
            </summary>
            <param name="predicate">
            A function to test each <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> for a
            condition.
            </param>
            <returns>
            <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> match
            <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.AsReadOnly">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> held
            in this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> held in this
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Clear">
            <summary>
            Clears the <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> in this <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Contains(Ansys.Disco.Physics.Entities.Results.SolverResultValue)">
            <summary>
            Determines whether <paramref name="result" /> is in <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <param name="result">
            The <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> to locate. Can be <see
            langword="null" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="result" /> is found in
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.CopyTo(Ansys.Disco.Physics.Entities.Results.SolverResultValue[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> to a compatible
            one-dimensional array, starting at the specified index of the target
            array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array" /> that is the destination of
            the elements copied from <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />. The <see
            cref="T:System.Array" /> must have zero-based indexing.
            </param>
            <param name="arrayIndex">
            The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.FindAll(System.Predicate{Ansys.Disco.Physics.Entities.Results.SolverResultValue})">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> that
            <paramref name="match" />.
            </summary>
            <param name="match">
            The <see cref="T:System.Predicate`1" /> delegate that
            defines the conditions of the <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> to
            search for.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> that
            <paramref name="match" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.For(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with
            all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref
            name="variation" />.
            </summary>
            <param name="variation">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> are being asked for.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref
            name="variation" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.For(Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with
            all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref
            name="solver" />.
            </summary>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> where the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> originated from.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref name="solver"
            />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.For(Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with
            all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref
            name="solver" />.
            </summary>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> where the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> originated from.
            </param>
            <param name="variation">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> are being asked for.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> with <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> associated with <paramref name="solver"
            />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <returns>
            An enumerator for the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.HasResultsFor(Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Returns <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> is
            associated with <paramref name="solver" />.
            </summary>
            <param name="solver">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> where the <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> originated from.
            </param>
            <returns>
            <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> is
            associated with <paramref name="solver" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.Remove(Ansys.Disco.Physics.Entities.Results.SolverResultValue)">
            <summary>
            Removes the first occurrence of a specific object from the <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </summary>
            <param name="result">
            The object to remove from the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />. The
            value can be <see langword="null" /> for reference types.
            </param>
            <returns>
            <see langword="true" /> if item is successfully removed; otherwise,
            <see langword="false" />. This method also returns <see
            langword="false" /> if item was not found in the <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.SolverResults.RemoveAll(System.Predicate{Ansys.Disco.Physics.Entities.Results.SolverResultValue})">
            <summary>
            Removes all <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> that <paramref
            name="match" />.
            </summary>
            <param name="match">
            The predicated which determines which <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue"
            /> to return.
            </param>
            <returns>
            The number of <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" /> removed.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Monitors.MonitorTargetExtensions">
            <summary>
            Extension class that helps modify the target specified for a monitor target specification.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorTargetExtensions.ToggleMinimumSpecified(Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified)">
            <summary>
            Returns the updated TargetsSpecified enum after modifying the state of minimum.
            </summary>
            <param name="oldTargetsSpecified">The state of active targets before toggling.</param>
            <returns>The updated targets that should be considered.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when enum case is not recognized.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorTargetExtensions.ToggleMaximumSpecified(Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified)">
            <summary>
            Returns the updated TargetsSpecified enum after modifying the state of maximum.
            </summary>
            <param name="oldTargetsSpecified">The state of active targets before toggling.</param>
            <returns>The updated targets that should be considered.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when enum case is not recognized.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorTargetExtensions.ToggleTargetSpecified(Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified)">
            <summary>
            Returns the updated TargetsSpecified enum after modifying the state of target.
            </summary>
            <param name="oldTargetsSpecified">The state of active targets before toggling.</param>
            <returns>The updated targets that should be considered.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when enum case is not recognized.</exception>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.None">
            <summary>
            No target specfied
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.MinimumSpecified">
            <summary>
            Minimum target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.MaximumSpecified">
            <summary>
            Maximum target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.TargetSpecified">
            <summary>
            General target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.MaxAndMin">
            <summary>
            Maximum and minimum target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.MinAndTarget">
            <summary>
            Minimum and general target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.MaxAndTarget">
            <summary>
            Maximum and general target on
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified.AllSpecfied">
            <summary>
            Maximum, minimum, and general target on
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MassMonitorEntity.#ctor(Ansys.Disco.Physics.Entities.Monitors.MassMonitorEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MassMonitorEntity"/> class.
            </summary>
            <param name="massResult">The mass monitor entity.</param>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.None">
            <summary>
            There is no trend so both arrows
            are not visible.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.TruePositive">
            <summary>
            This is a upwards trend that we want
            so we will show a green up arrow in
            the tree.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.TrueNegative">
            <summary>
            This is a downwards trend that we want
            so we will show a green down arrow in
            the tree.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.FalsePositive">
            <summary>
            This is an upwards trend that we
            don't want, so the tree will show
            a upwards red arrow.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.FalseNegative">
            <summary>
            This is a downwards trend that we don't
            want. So this will show a red down arrow
            in the tree.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.Increase">
            <summary>
            This is an upwards trend that we don't know
            if it's good or bad trend so this will
            be a white up arrow in the tree.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.Decrease">
            <summary>
            This is a downwards trend that we don't know
            if it's good or bad, so this will be a white
            down arrow in the tree.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults.RetainValue">
            <summary>
            Keeps the value the same as the last
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults"/> in the tree.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue.#ctor(System.Guid,System.Nullable{System.Guid},Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolveOrigin,Ansys.Disco.Physics.Entities.Results.ResultValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue" />
            class.
            </summary>
            <param name="monitorId">
            The result insight this value is associated with.
            </param>
            <param name="definedVariationId">
            The defined variation that is responsible for producing the
            </param>
            <param name="solverType">
            Solver responsible for producing the result.
            </param>
            <param name="solveOrigin">
            The invocation origin of the solver results.
            </param>
            <param name="resultValue">
            The details for the solve result.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="resultValue" /> is null.
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorExtensions.IsChildMonitor(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity)">
            <summary>
            Checks to see if this monitor is a child
            of another monitor.
            </summary>
            <param name="entity">The monitor to check for.</param>
            <returns>
            <see langword="true"/> if the monitor is a child.
            Otherwise if the monitor is <see landword="null"/> or not
            a child, then it returns <see langword="false"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.FactorOfSafetyResultsInsightEntityComparer.GetHashCode(Ansys.Disco.Physics.Entities.Monitors.FactorOfSafetyResultsInsightEntity)">
            <summary>
            If Equals() returns true for a pair of objects then GetHashCode() must return the same value for these objects.
            </summary>
            <param name="obj">O bject to get the hashcode for</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.AddResultValues(Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue[])">
            <summary>
            Adds a number of results to a single design change.
            This collection of <paramref name="insightResultValues"/> is
            considered a "transaction". Meaning, the result is considered
            complete once these results have been updated which will trigger a
            <see cref="T:Ansys.Disco.Physics.Events.Monitors.DesignChangeResultsComplete"/> event.
            </summary>
            <param name="insightResultValues">The results being added.</param>
            <returns>
            <see langword="false"/> if <paramref name="insightResultValues"/> is
            null.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.AddResultValueToPreviousDesignChange(Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue,System.Int32)">
            <summary>
            Adds the result value to a previous design change.
            </summary>
            <param name="insightsResultValue">The result being added.</param>
            <param name="designChangeIndex">
            The design change index to be modified.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.TryGetChartEntity(System.Guid,Ansys.Disco.Physics.Entities.Charts.ChartEntity@)">
            <summary>
            Gets the ChartEntity using the Guid.
            </summary>
            <param name="id">The Guid of the ChartEntity to retrieve.</param>
            <param name="chartEntity">The corresponding ChartEntity if exists.</param>
            <returns>True if ChartEntity exists, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.TryGetMonitorEntity(System.Guid,Ansys.Disco.Physics.Entities.Monitors.MonitorEntity@)">
            <summary>
            Gets the MonitorEntity using the Guid.
            </summary>
            <param name="id">The Guid of the MonitorEntity to retrieve.</param>
            <param name="monitorEntity">The corresponding MonitorEntity if exists.</param>
            <returns>True if MonitorEntity exists, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.RemoveResultValuesFromDesignChange(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <summary>
            Removes the solver results pertaining to the result insight entity.
            </summary>
            <param name="monitorEntity">The result insight entity we want to remove solver results for.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.HasResultsForSolver(Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Checks if our last design point has a result for the specified solver.
            </summary>
            <param name="type">The solver type.</param>
            <returns>True if design point contains the type's data, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.HasResultsForDefinedVariation(Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Checks if our last design point has a result for the specified solver,
            and defined variation.
            </summary>
            <param name="type">The solver type.</param>
            <param name="dv">The defined variation results are being checked for.</param>
            <returns>True if design point contains the type's data, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.HasResultsForChartDataSeries(System.Guid,System.String)">
            <summary>
            Checks if our last design point has a result for the specified chart and data series definition.
            </summary>
            <param name="entityId">The Id of the chart entity.</param>
            <param name="variable">The unique string used to store results for the data series</param>
            <returns>True if design point contains results for the data series, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.TryGetLatestValues(System.Guid,Ansys.Disco.Core.Context.ResultSourceType,System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Results.SolverResultValue}@,System.Nullable{System.Guid})">
            <summary>
            Tries to get the latest value for the specified <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> for the <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" />.
            </summary>
            <param name="monitorId">
            The Id of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" />
            </param>
            <param name="type">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> we want to get the latest result
            for. (e.g. Apollo/Artemis).
            </param>
            <param name="results">The quantities retrieved.</param>
            <param name="definedVariationId">
            To find a specific latest value pertaining to a defined variation.
            </param>
            <returns>
            <see langword="true" /> if we have found a quantity. <see
            langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.TryGetLatestValue(System.Guid,Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolverResultValue@,System.Nullable{System.Guid})">
            <summary>
            Tries to get the latest value for the specified <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> for the <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" />.
            </summary>
            <param name="monitorId">
            The Id of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" />
            </param>
            <param name="type">
            The <see cref="T:Ansys.Disco.Core.Context.ResultSourceType" /> we want to get the latest result
            for. (e.g. Apollo/Artemis).
            </param>
            <param name="result">The quantity retrieved.</param>
            <param name="definedVariationId">
            To find a specific latest value pertaining to a defined variation.
            </param>
            <returns>
            <see langword="true" /> if we have found a quantity. <see
            langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.GetLatestResultDataSeries(System.Guid,System.String)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries"/> to determine if the arrows in the
            Monitor Tree go Up/Down or Green/Red.
            </summary>
            <param name="entityId">The id of the associated entity for which result data is being requested.</param>
            <param name="variable">The string variable name for the requested results data.</param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity.GetResultQuality(System.Guid,Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults"/> to determine if the arrows in the
            Monitor Tree go Up/Down or Green/Red.
            </summary>
            <param name="monitorEntityId">
            The id of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/>
            </param>
            <param name="resultSourceType">The stage to get the result for.</param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.PressureDropResultsInsightEntityComparer.GetHashCode(Ansys.Disco.Physics.Entities.Monitors.PressureDropResultsInsightEntity)">
            <summary>
            If Equals() returns true for a pair of objects then GetHashCode() must return the same value for these objects.
            </summary>
            <param name="obj">O bject to get the hashcode for</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorEntityComparer.GetHashCode(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <summary>
            If Equals() returns true for a pair of objects then GetHashCode() must return the same value for these objects.
            </summary>
            <param name="obj">Object to get the hashcode for</param>
            <returns>Integer representing the hashcode of the object.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.PressureDropResultsInsightEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.#ctor(System.Guid,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />
            class.
            </summary>
            <param name="id">
            The id of this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />.
            </param>
            <param name="index">The initial index position.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.#ctor(System.Guid,System.Int32,System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Results.SolverResultValue}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />
            class.
            </summary>
            <param name="id">
            The id of this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />.
            </param>
            <param name="index">The initial index position.</param>
            <param name="insightToResultsMap">
            A dictionary of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> ids to list of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" />. Gets converted to a <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.MonitorResults" /> collection.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.#ctor(System.Guid,System.Int32,System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" /> class.
            </summary>
            <param name="id">
            The id of this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />.
            </param>
            <param name="index">The initial index position.</param>
            <param name="chartToResultsMap">
            A dictionary of <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> ids to list of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />. Gets converted to a <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.ChartResults" /> collection.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.#ctor(System.Guid,System.Int32,System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Results.SolverResultValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.ResultDataSeries}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />
            class.
            </summary>
            <param name="id">
            The id of this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />.
            </param>
            <param name="index">The initial index position.</param>
            <param name="insightToResultsMap">
            A dictionary of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> ids to list of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue" />. Gets converted to a <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.MonitorResults" /> collection.
            </param>
            <param name="chartToResultsMap">
            A dictionary of <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> ids to list of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />. Gets converted to a <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.ChartResults" /> collection.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.#ctor(System.Guid,System.Int32,Ansys.Disco.Physics.Entities.Monitors.MonitorResults,Ansys.Disco.Physics.Entities.Charts.ChartResults)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />
            class.
            </summary>
            <param name="id">
            The id of this <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" />.
            </param>
            <param name="index">The initial index position.</param>
            <param name="monitorResults">
            A collection of <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> and their <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" />. If <see langword="null" /> an empty <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.MonitorResults" /> is created.
            </param>
            <param name="chartResults">
            A collection of <see cref="T:Ansys.Disco.Physics.Entities.Charts.IChartEntity" /> and their collection of <see
            cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />. If <see langword="null" /> an empty <see
            cref="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.ChartResults" /> is created.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.MonitorResults">
            <summary>
            Collection of monitors and their results.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.ChartResults">
            <summary>
            Collection of charts and their results series.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.AddChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RemoveChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.AddMonitor(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RemoveMonitor(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.IncrementDesignChange(Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RemoveAllDesignChanges">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RemoveDesignChange(Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RestoreDesignChange(Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.AddResultValueToPreviousDesignChange(Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.AddResultValues(Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue[])">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.ClearDefaultMonitors">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.ClearDefaultCharts">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.RemoveResultValuesFromDesignChange(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <summary>
            Removes the solver results pertaining to the result insight entity.
            </summary>
            <param name="monitorEntity">The result insight entity we want to remove solver results for.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.TryGetChartEntity(System.Guid,Ansys.Disco.Physics.Entities.Charts.ChartEntity@)">
            <summary>
            Gets the ChartEntity using the Guid.
            </summary>
            <param name="id">The Guid of the ChartEntity to retrieve.</param>
            <param name="chartEntity">The corresponding ChartEntity if exists.</param>
            <returns>True if ChartEntity exists, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.TryGetMonitorEntity(System.Guid,Ansys.Disco.Physics.Entities.Monitors.MonitorEntity@)">
            <summary>
            Gets the MonitorEntity using the Guid.
            </summary>
            <param name="id">The Guid of the MonitorEntity to retrieve.</param>
            <param name="monitorEntity">The corresponding MonitorEntity if exists.</param>
            <returns>True if MonitorEntity exists, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.HasResultsForSolver(Ansys.Disco.Core.Context.ResultSourceType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.HasResultsForDefinedVariation(Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.TryGetLatestValues(System.Guid,Ansys.Disco.Core.Context.ResultSourceType,System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Results.SolverResultValue}@,System.Nullable{System.Guid})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.TryGetLatestValue(System.Guid,Ansys.Disco.Core.Context.ResultSourceType,Ansys.Disco.Physics.Entities.Results.SolverResultValue@,System.Nullable{System.Guid})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.GetLatestValueForBothSolvers(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.HasResultsForChartDataSeries(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.GetLatestResultDataSeries(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.GetResultQuality(System.Guid,Ansys.Disco.Core.Context.ResultSourceType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.GetResultQuality(UnitsNet.IQuantity,UnitsNet.IQuantity,Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults"/> depending on the
            previousValue, currentValue and the <see cref="T:Ansys.Disco.Core.Results.Types.ResultVariable"/>.
            </summary>
            <param name="previousValue">
            The previous quantity.
            </param>
            <param name="currentValue">
            The current quantity.
            </param>
            <param name="variable">
            The <see cref="T:Ansys.Disco.Core.Results.Types.ResultVariable"/> we are comparing.
            </param>
            <returns>
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.QualityOfTheResults"/>
            </returns>
            <remarks>
            We need the <see cref="T:Ansys.Disco.Core.Results.Types.ResultVariable"/> as this determines if the
            trend we are seeing is good or bad, which is reflected in the arrows
            displayed in the UI.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.Initialize(Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity.AddResultValue(Ansys.Disco.Physics.Entities.Monitors.InsightsResultValue,Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity,System.Guid)">
            <summary>
            Adds the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultValue"/> to <paramref
            name="designChange"/>.
            </summary>
            <param name="insightsResultValue">
            The value returned from the solver.
            </param>
            <param name="designChange">
            The design change we add a <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultValue"/> to.
            </param>
            <param name="simulationId">
            Associates the result with a simulation.
            </param>
            <returns>
            <see langword="false"/> if <paramref name="designChange"/> is <see
            langword="null"/> or <paramref name="insightsResultValue"/> does not
            have a value.
            </returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.Label">
            <summary>
            Label that is obtained from associated calculator or generated by variable, function, and component
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.Target">
            <summary>
            The current target setup
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.DifferenceCalculatedValueId">
            <summary>
            The guid used for the second calculator to take the difference from
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity.ModifyTargetQuantity(UnitsNet.IQuantity,Ansys.Disco.Physics.Entities.Monitors.TargetType)">
            <summary>
            Changes a target limit on the target specification.
            </summary>
            <param name="updatedQuantity">The new quantity to apply to the monitor target</param>
            <param name="associatedTarget">The quantity that should be changed</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection">
            <summary>
            A collection to manage all cells within the variations table.
            Maps <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.CellLocation"/>'s to cells.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection.Add(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <summary>
            Add a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell"/> to the location
            indexed via the given <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> and
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/>.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> the cell relates to.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> the cell relates to.
            </param>
            <param name="cell">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell"/> to be added.
            </param>
            <returns>
            <see langword="true"/> if the cell has successfully been added,
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection.Add(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell)">
            <summary>
            Add a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell"/> to the location
            indexed via the given <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> and
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/>.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> the cell relates to.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/> the cell relates to.
            </param>
            <param name="cell">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/> to be added.
            </param>
            <returns>
            <see langword="true"/> if the cell has successfully been added,
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection.Remove(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn)">
            <summary>
            Removes the cell indexed via the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/>
            and <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/>.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> of the cell to be removed.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/> of the cell to be removed.
            </param>
            <returns>
            <see langword="true"/> if the cell is successfully found and removed,
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection.TryGetCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell@)">
            <summary>
            Try fetch input cell referenced by the given <paramref name="row"/>
            and <paramref name="column"/>.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> related to the cell.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> related to the cell.
            </param>
            <param name="cell">
            When method returns, contains the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell"/>
            being fetched.
            </param>
            <returns>
            <see langword="true"/> if cell found.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.CellCollection.TryGetCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell@)">
            <summary>
            Try fetch output cell referenced by the given <paramref name="row"/>
            and <paramref name="column"/>.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> related to the cell.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> related to the cell.
            </param>
            <param name="cell">
            When method returns, contains the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/>
            being fetched.
            </param>
            <returns>
            <see langword="true"/> if cell found.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.CellLocation">
            <summary>
            Represents a cell location within the parameter study variations
            table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.CellLocation.RowId">
            <summary>
            <see cref="T:System.Guid"/> Id of the row associated with
            the location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.CellLocation.ColumnId">
            <summary>
            <see cref="T:System.Guid"/> Id of the column associated with
            the location.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity">
            <summary>
            Represents a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> column that can apply
            cell quantities to single driving dimension.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.Header">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.ParametersEqual(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.ApplyCell(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.IsActive(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.TrySetAppliedValue(UnitsNet.IQuantity)">
            <summary>
            Sets the applied value for a column. The applied value is the value
            of the parameter associated with this column as displayed on the
            model.
            </summary>
            <param name="appliedValue">The value to being set to.</param>
            <returns>
            <see langword="false"/> if the <paramref name="appliedValue"/> is
            null.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.ToString">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.TrySetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.HistoryTrackDimensionColumnEntity.Clone">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ITestCaseRow.Header">
            <summary>
            Row header/row name.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ITestCaseRow.Duplicate">
            <summary>
            Clones the object with a new id but same values.
            </summary>
            <returns>A cloned row.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange">
            <summary>
            Represents a single parameter value or a range of values with a start
            and end value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.#ctor(UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" /> class.
            </summary>
            <param name="value">An initial value to begin the range.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.End">
            <summary>
            The largest value for this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" />.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.IsRange">
            <summary>
            <see langword="true" /> if this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" />
            represents a range.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.Start">
            <summary>
            The smallest value for this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.AddValue(UnitsNet.IQuantity[])">
            <summary>
            Add <paramref name="values" /> to this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" />.
            </summary>
            <param name="values">The values being added.</param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" /> with <paramref name="values" />
            added to the existing list of values.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange.TolerantQuantityComparer.Compare(UnitsNet.IQuantity,UnitsNet.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity">
            <summary>
            Represents a single row intest case table map table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity.Header">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity.Duplicate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity.Clone(System.Guid)">
            <summary>
            Creates an identical clone of the object as a new instance and can be identified as a different object
            or the same object depending on <paramref name="id"/> supplied.
            </summary>
            <param name="id">Guid value used to create <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/></param>
            <returns>The cloned object</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.CellApplied">
            <summary>
            Describes the success/failure state that can occur when applying a cell
            value to the parameter to be modified.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.CellApplied.Success">
            <summary>
            Cell value was applied to parameter.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.CellApplied.CellEmpty">
            <summary>
            Cell has no value to be applied to parameter.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.CellApplied.CannotApplyCell">
            <summary>
            Cell value cannot be applied to parameter.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.RowSet">
            <summary>
            Success/failure states that can be returned while setting a row.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.RowSet.Success">
            <summary>
            The row was set.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.RowSet.FailedToSet">
            <summary>
            The cells values could not be applied to model.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.ParameterSweeps.RowSet.CellValuesDoNotMatchAppliedValues">
            <summary>
            The cells values were set to the model but differ from the values
            stored in the row's cells.
            </summary>
            <remarks>
            This situation can arise when applying one cell values changes an
            earlier applied value.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.ConditionId">
            <summary>
            Condition referenced by the column to get/set a specific boundary
            condition property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Header">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.ApplyCell(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.IsActive(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.ParametersEqual(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.GetAppliedValue(UnitsNet.IQuantity@)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.ToString">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.TrySetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Suppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Unsuppress">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Suppressed">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn">
            <summary>
            Outlines methods required to manipulate column parameter values.
            Parameter values only include driving dimensions for the time being.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn.ApplyCell(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <summary>
            Applies the <paramref name="cell"/> quantity to the underlying
            parameter.
            </summary>
            <param name="cell">The current cell with apply value.</param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.CellApplied"/> enum type describing success and failure
            states for applying a cell.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn.GetAppliedValue(UnitsNet.IQuantity@)">
            <summary>
            The parameter value from the model.
            </summary>
            <param name="appliedValue">
            Value return if value is available.
            </param>
            <returns>Returns true if the value exists.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn.IsActive(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <summary>
            Determines if the value recorded in the
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell"/> is currently applied to the model.
            </summary>
            <param name="cell">Cell providing the value.</param>
            <returns>True if the cell value matches that of the model.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn">
            <summary>
            Provides methods for a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> column that cannot modify the model.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.Header">
            <summary>
            Column header/column name.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.ParametersEqual(System.Object)">
            <summary>
            Predicate to check if the given parameter is part of the
            parameter study.
            </summary>
            <param name="parameter">Parameter being checked for
            presence in study.</param>
            <returns>True if present in study, false otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.TrySetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <summary>
            Tries to set the <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.Header"/> value. The <see
            cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.Header"/> cannot be null.
            </summary>
            <param name="header">
            The new <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn.Header"/> value for the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/>.
            </param>
            <returns><see langword="true"/> if the header was set.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation">
            <summary>
            Methods for a single row in a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.Header">
            <summary>
            Row header/row name.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.UpToDate">
            <summary>
            Property to determine if a row is out of date meaning
            the output results are no longer accurate.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.IsStarred">
            <summary>
            Property to determine if a row is starred.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.SelectedCase">
            <summary>
            Property to hold test case selected.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.Duplicate">
            <summary>
            Clones the object with a new id but same values.
            </summary>
            <returns>A cloned row.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.SetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader)">
            <remarks>
            Todo: 
            This is a hack to avoid a domain event being raised when
            generating new rows.
            
            Updating many headers slows down the generation.
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity">
            <summary>
            Output column with a reference to a result insight.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.Header">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.ParametersEqual(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.ToString">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.TrySetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity">
            <summary>
            Represents a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> column that can apply
            cell quantities to single driving dimension.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.Header">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.ParametersEqual(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.ApplyCell(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.IsActive(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.GetAppliedValue(UnitsNet.IQuantity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.ToString">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.TrySetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DrivingDimensionColumnEntity.Clone">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity">
            <summary>
            Represents a single row in a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.Header">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.IsStarred">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.UpToDate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.SetHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.Duplicate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity.Clone(System.Guid)">
            <summary>
            Creates an identical clone of the object as a new instance and can
            be identified as a different object or the same object depending on
            <paramref name="id" /> supplied.
            </summary>
            <param name="id">
            Guid value used to create <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" />
            </param>
            <returns>The cloned object</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity">
            <summary>
            The parameter study table, allows for manipulation of table rows,
            columns, and cells.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AddColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Added an <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> to the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />. Raises a <see
            cref="T:Ansys.Disco.Physics.Events.ParameterSweeps.ParameterStudyInputColumnAdded" /> event when column successfully
            added.
            </summary>
            <param name="inputColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> to be added to the
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> table.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AddColumnWithDefaults(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Adds the <paramref name="inputColumn" /> to the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> and populates the column cells with
            the applied parameter value from the column parameter.
            </summary>
            <param name="inputColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> to be added to the
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> table.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AddRange(System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity,System.Collections.Generic.Dictionary{Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,UnitsNet.IQuantity}}})">
            <summary>
            Adds a batch of rows to the table, where the user input columns are
            filled with the passed down input values.
            Row name is given based on the number of rows currently in the table.
            This method is specifically used via the generator for creating
            a set of populated variant rows.
            </summary>
            <param name="rowsAndQuantities">
            A list of tuples where each tuple is a combination of a
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity"/> that is to be added and its
            associated <see cref="T:System.Collections.Generic.Dictionary`2"/> of
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn"/> to <see cref="T:UnitsNet.IQuantity"/>'s.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AddRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Adds a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> to the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />. <see
            cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.Header" /> is given based on the number of
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> s currently in the table.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> to be added to the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="row" /> has already been added.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="row" /> is null
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AddRowWithDefaults(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Adds a row to the table, input columns are filled with their current
            values. Row name is given based on the number of rows currently in
            the table. If no current row is set, the newly added row is set to
            current.
            </summary>
            <param name="row">The row to be added to the parameter study.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the row has already been added.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="row" /> is null
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ApplyPhysicsParameterColumns(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Apply each <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> so the value
            stored in the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> is reflected by the
            model and physics tree.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> values will be applied to the
            model.
            </param>
            <returns>
            <see langword="true" /> if all <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> cell values were applied to
            the model.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ApplyRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Runs through each <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> in a
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> and applies the <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> value to the underlying parameters.
            </summary>
            <param name="row">The row being applied to the model.</param>
            <returns>
            False if any one of the cells was not successfully applied.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.CanSetRowCurrent(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Determines if <paramref name="row" /> can be set current or not.
            </summary>
            <param name="row">
            The row being checked to see if it can be set as current.
            </param>
            <returns>
            <see langword="true" /> if the row can be set as current.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.CaseIndex(System.Guid)">
            <summary>
            Gets the index of a test case. Index starts at 0;
            </summary>
            <param name="caseId">The case to get the index of.</param>
            <returns>The index of the case if available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ChangeCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <summary>
            Updates the value of an input cell in the parameter study table.
            </summary>
            <param name="row">Cell row.</param>
            <param name="column">Cell input column.</param>
            <param name="cell">
            The new cell value given the table location.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="row" /> or <paramref name="column" /> are null
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ChangeCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell)">
            <summary>
            Updates the value of an output cell in the parameter study table.
            </summary>
            <param name="row">Cell row.</param>
            <param name="monitorColumn">Cell output column.</param>
            <param name="monitorCell">
            The new cell value at the given table location.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="row" /> or <paramref name="monitorColumn" /> are
            null
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ChangeCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell)">
            <summary>
            Updates the value of an output cell in the parameter study table.
            </summary>
            <param name="row">Cell row.</param>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> relating to a <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" />.
            </param>
            <param name="monitorCell">
            The new cell value at the given table location.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="row" /> or <paramref name="monitor" /> are null
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.ColumnHeaders">
            <summary>
            Returns input and output column headers.
            </summary>
            <returns>Input and output column headers.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.Contains(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Checks if this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> contains
            <paramref name="inputColumn" />.
            </summary>
            <param name="inputColumn">The column being searched for.</param>
            <returns>
            <see langword="true" /> if <paramref name="inputColumn" /> is in
            this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.DuplicateRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Copies the cell values from <paramref name="row" /> into <paramref
            name="duplicatedRow" />.
            </summary>
            <param name="row">
            The row for which cell values are copied from.
            </param>
            <param name="duplicatedRow">
            New <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> to be added and cell values
            copied to.
            </param>
            <remarks>
            Does not copy the contents of the output columns as these are just a
            pointer to results associated with the DV.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetColumn(System.Func{Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,System.Boolean})">
            <summary>
            Searches all output columns given a predicate.
            </summary>
            <param name="predicate">
            Apply this predicate to filter column results.
            </param>
            <returns>Single column with matching predicate.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetColumn(System.Func{Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,System.Boolean})">
            <summary>
            Searches all input columns given a predicate.
            </summary>
            <param name="predicate">
            Apply this predicate to filter column results.
            </param>
            <returns>Single column with matching predicate.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetColumns">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/> added to this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IParameterStudyColumn"/> added to this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetInputCells(System.Int32)">
            <summary>
            Returns all input cells for a row.
            </summary>
            <param name="rowIndex">
            The index of the row to fetch the input cells for.
            </param>
            <returns>
            All input <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetInputCells(System.Guid)">
            <summary>
            Returns all input cells for a row.
            </summary>
            <param name="rowId">
            The ID identifying the row to fetch the input cells for.
            </param>
            <returns>
            All input <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetInputCells(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Returns all input cells for a row.
            </summary>
            <param name="row">
            The row all input cells are being fetched for.
            </param>
            <returns>
            All input <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetOutputCells(System.Int32)">
            <summary>
            Returns all output cells for a row.
            </summary>
            <param name="rowIndex">
            The index of the row to fetch the output cells for.
            </param>
            <returns>
            All output <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetOutputCells(System.Guid)">
            <summary>
            Returns all output cells for a row.
            </summary>
            <param name="rowId">
            The ID identifying the row to fetch the output cells for.
            </param>
            <returns>
            All output <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetOutputCells(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Returns all output cells for a row.
            </summary>
            <param name="row">
            The row all output cells are being fetched for.
            </param>
            <returns>
            All output <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" /> for the row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetRow(System.Guid)">
            <summary>
            Returns the row given a guid.
            </summary>
            <param name="rowId">Row guid.</param>
            <returns>A row with matching id if it exists.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.GetTestCaseById(System.Guid)">
            <summary>
            Returns the row given a guid.
            </summary>
            <param name="rowId">Row guid.</param>
            <returns>A row with matching id if it exists.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.HasInputColumnFor(System.Object)">
            <summary>
            Runs through each input column checking if the <paramref
            name="parameter" /> has a column created.
            </summary>
            <param name="parameter">The parameter being compared.</param>
            <returns>
            <see langword="true" /> if the parameter is being represented as an
            input column.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.IsRowCurrent(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Checks if a row is current.
            </summary>
            <param name="row">The row being checked if it is current.</param>
            <returns>
            <see langword="false" /> if the row is null or not current.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.MarkAllRowsOutOfDate">
            <summary>
            Marks all rows in <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.DefinedVariations" /> out of date.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.MarkRowOutOfDate(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation[])">
            <summary>
            Iterates through each row marking them out of date. Checks if rows
            exist in table.
            </summary>
            <param name="rows">List of rows to mark out of date.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.MarkRowUpToDate(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation[])">
            <summary>
            Iterates through each row marking them up to date. Checks if rows
            exist in table.
            </summary>
            <param name="rows">List of rows to mark up to date.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RemoveColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Remove an input column from the parameter study table.
            </summary>
            <param name="inputColumn">The input column to be removed.</param>
            <remarks>
            Also removes associated input cells for that column.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RemoveColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity)">
            <summary>
            Remove an output column from the parameter study table.
            </summary>
            <param name="monitorColumn">The output column to be removed.</param>
            <remarks>
            Also removes associated output cells for that column.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RemoveCurrentRow">
            <summary>
            Removes the current row, there will be no current row set for this
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RemoveRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Removes a row from the parameter study table.
            </summary>
            <param name="row">The row to be removed.</param>
            <remarks>
            Remove a row, then remove input and output column cells that relate
            to that row.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RenameColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <summary>
            Renames the column header for a column available to this study.
            </summary>
            <param name="monitorColumn">The column being modified.</param>
            <param name="header">The new column header.</param>
            <returns>
            <see langword="true" /> if the column header was set or already
            equal to <paramref name="header" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RenameColumn(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <summary>
            Renames the column header for a column available to this study.
            </summary>
            <param name="inputColumn">The column being modified.</param>
            <param name="header">The new column header.</param>
            <returns>
            <see langword="true" /> if the column header was set or already
            equal to <paramref name="header" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RowActive(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Checks all input columns for a row, if each column is active, the
            row is active.
            </summary>
            <param name="row">The row whose input columns are checked.</param>
            <returns>
            <see langword="true" /> If all input columns for <paramref
            name="row" /> are active.
            </returns>
            <remarks>
            An active row is a row where all input column cell values match the
            applied values for a column. A columns applied value is the
            parameter value being shown on the model.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.RowIndex(System.Guid)">
            <summary>
            Gets the index of a row. Index starts at 0;
            </summary>
            <param name="rowId">The row to get the index of.</param>
            <returns>The index of the row if available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.SetCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Attempts to set the current row for the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />.
            </summary>
            <param name="currentRow">The row to be set as current.</param>
            <returns>
            <see langword="false" /> if <paramref name="currentRow" /> is null,
            has not been added to the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" />, or is
            not current.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.SetRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Applies <paramref name="row" /> to the model, updating the current
            row or marking the row out of date depending on if that row was
            applied.
            </summary>
            <param name="row">The row being set.</param>
            <returns>
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.RowSet" /> enum value representing possible
            success/failure states.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.SetRowTestCase(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,System.Guid,System.Boolean)">
            <summary>
            Set <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity" /> Guid to the <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" />.
            </summary>
            <param name="row">The row is being set</param>
            <param name="testCase">The test case entity selected</param>
            <param name="raiseEvent">The flag for raise the event</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.SetRowUpToDate(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Sets <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation.UpToDate" /> to <see
            langword="true" />.
            </summary>
            <param name="row">The row being set up to date.</param>
            <returns>
            <see langword="true" /> if the row was set up to date.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.SuppressColumns(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Suppress <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> that have a
            <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> associated with <paramref
            name="condition" />.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> that has been suppressed and
            may be associated with a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"
            />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="condition" /> is <see langword="null" />.
            </exception>
            <remarks>
            Some refactoring is required to pretty this method up. Obviously,
            the type checking to distinguish different columns is not ideal. I
            will look to remedy this in the future.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetCell(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell@)">
            <summary>
            Tries to get the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> for a given
            <paramref name="row" /> and <paramref name="column" />.
            </summary>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> the <paramref name="cell" />
            belongs to.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> the <paramref
            name="cell" /> belongs to.
            </param>
            <param name="cell">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> returned if exists.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="cell" /> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetColumn(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn@)">
            <summary>
            Try to get the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> associated
            with <paramref name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> potentially matching a <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" />.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> returned if found.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="column" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetColumn(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn@)">
            <summary>
            Try to get the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> associated
            with <paramref name="physicsParameter" />.
            </summary>
            <param name="physicsParameter">
            The <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> potentially matching a <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" />.
            </param>
            <param name="column">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> returned if found.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="column" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation@)">
            <summary>
            Attempts to get the current row. The current row can be null.
            </summary>
            <param name="currentRow">The current row if one has been set.</param>
            <returns>
            <see langword="false" /> if the current row has not been set.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetMonitorColumn(System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity@)">
            <summary>
            Tries to get an <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> with parameter
            matching <paramref name="monitorId" />.
            </summary>
            <param name="monitorId">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> id used as a parameter for an <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" />.
            </param>
            <param name="monitorColumn">
            The column being returned if one is found.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="monitorColumn" /> is
            found and has a value.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetRange(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter,Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange@)">
            <summary>
            Tries to get a range of values for a given <paramref
            name="parameter" /> column.
            </summary>
            <param name="parameter">
            The <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> associated with a column of
            values.
            </param>
            <param name="range">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" /> returned if one exists.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="range" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetRange(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange@)">
            <summary>
            Tries to get a range of values for a given <paramref
            name="drivingDimension" /> column.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> associated with a column of
            values.
            </param>
            <param name="range">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ValueOrRange" /> returned if one exists.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="range" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.TryGetRowHeader(System.Int32,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader@)">
            <summary>
            Tries to return the row header for a row at <paramref
            name="rowIndex" />.
            </summary>
            <param name="rowIndex">
            The row index to get the header for. Index starts at 0.
            </param>
            <param name="header">The header returned if in range.</param>
            <returns>
            <see langword="false" /> if <paramref name="rowIndex" /> is out of
            range or if the header does not exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.UnsuppressColumns(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Unsuppress <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity" /> that have a
            <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> associated with <paramref
            name="condition" />.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> that has been unsuppressed and
            may be associated with a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity"
            />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="condition" /> is <see langword="null" />.
            </exception>
            <remarks>
            Some refactoring is required to pretty this method up. Obviously,
            the type checking to distinguish different columns is not ideal. I
            will look to remedy this in the future.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.UpdateDefinedVariationRowsAssociatedWithTestCase(Ansys.Disco.Physics.Entities.ParameterSweeps.ITestCaseRow,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,UnitsNet.IQuantity)">
            <summary>
            Change the value for a test case column in each defined variation
            associated with the test case. This also marks all output columns in
            those defined variations as OutOfDate.
            </summary>
            <param name="caseRow">Associated test case</param>
            <param name="column">The column being modified</param>
            <param name="quantity">The modified value</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.UpdateRowWithOnSelectedCase(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,System.Guid)">
            <summary>
            Copies the test case values from <paramref name="testCase" /> into
            <paramref name="row" />.
            </summary>
            <param name="row">The row is being set</param>
            <param name="testCase">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity" /> to change to
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.UpdateValueForCurrent(Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn)">
            <summary>
            Change the value for a column to current row and associated test
            case in the study. This is called on tree node parameter value
            changed
            </summary>
            <param name="inputColumn">The column being modified.</param>
            <returns><see langword="true" /> if the update is success</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.VariationsWithoutTestCases">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> that do not have a
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ITestCaseRow" /> associated with them.
            </summary>
            <returns>
            All <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> that do not have a <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ITestCaseRow" /> associated with them.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.Clone(System.Guid)">
            <summary>
            Clones the <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> using the given id.
            </summary>
            <param name="id">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> id to be copied to the
            cloned parameter study.
            </param>
            <returns>
            An exact copy of this <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> with the
            id provided.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Results.MeshStatisticsSpecification">
            <summary>
            Specification used for Mesh Numeric monitor
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries">
            <summary>
            A collection of (x, y) <see cref="T:UnitsNet.IQuantity" /> data points identified by a variable string.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.#ctor(System.String,System.Collections.Generic.Dictionary{UnitsNet.IQuantity,UnitsNet.IQuantity})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" /> class.
            </summary>
            <param name="variable">
            The variable string identified for this data collection.
            </param>
            <param name="dataPoints">
            The mapping of (x, y) <see cref="T:UnitsNet.IQuantity" /> data points.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.Variable">
            <summary>
            The variable string ID for this data series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.DataPoints">
            <summary>
            The mapping of (x, y) <see cref="T:UnitsNet.IQuantity" /> data points.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.Count">
            <summary>
            Gets the number of data points contained in the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.Clear">
            <summary>
            Clears the data points in this <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries" />.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType">
            <summary>
            Options for electromagnetic conductive losses.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType.BasedOnMaterial">
            <summary>
            Sets conductive losses based on the material conductivity.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType.PerfectElectric">
            <summary>
            Sets all materials in the simulation as perfect electric conductors.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption">
            <summary>
            Options for flow convergence stop criteria.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption.Engineering">
            <summary>
            Sets the stopping criteria to be engineering based
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption.Numeric">
            <summary>
            Sets the stopping criteria to numeric
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption.Monitors">
            <summary>
            Sets the stopping criteria to be based on user defined monitors
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting.ProgramControlled">
            <summary>
            Let the program decide what's best.  This could be at the solver or disco level.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting.UserSpecified">
            <summary>
            User specified
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption.Laminar">
            <summary>
            Sets the solver to use laminer flow settings and ignore any turbulence
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption.Turbulent_KE_Standard">
            <summary>
            Enables turbulence modeling.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption.ForcedLinear">
            <summary>
            Forces linear, even if non-linear input defined.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption.ForcedNonlinear">
            <summary>
            Forces non-linear behaviour, used for large displacement
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.SpringEntityExtensions">
            <summary>
            Extension methods for SpringEntity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SpringEntityExtensions.FindBodies(Ansys.Disco.Physics.Entities.Conditions.SpringEntity)">
            <summary>
            Find all bodies associated with the spring.
            </summary>
            <param name="springEntity">Spring entity.</param>
            <returns>List of all bodies associated with the spring.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.RegionInterfaceEntityExtensions">
            <summary>
            Extension methods for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.RegionInterfaceEntity"/>
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.DefaultInterfaceEntityExtensions">
            <summary>
            Extension methods for DefaultInterfaceEntity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.DefaultInterfaceEntityExtensions.GetPhysicsRegionPairs(Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity,System.Boolean)">
            <summary>
            Gets interface faces grouped by each side's parent bodies
            </summary>
            <param name="interfaceEntity">Default interface entity.</param>
            <param name="excludeSharedFaces">Whether to exclude shared faces.</param>
            <returns>A list with pairs of associated interface bodies as keys and their faces (in a single LocationSet).</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.WallEntityExtensions">
            <summary>
            Extension methods for WallEntity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.WallEntityExtensions.GetPhysicsRegion(Ansys.Disco.Physics.Entities.Conditions.WallEntity)">
            <summary>
            Gets physics region from entity scope
            </summary>
            <param name="wallEntity">Wall entity.</param>
            <returns>Physics region associated with the wall.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.Defaults.SimulationDefaults.MaterialType">
            <summary>
            Representation of the physics types for the default materials
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.Defaults.SimulationDefaults.MaterialType.Solid">
            <summary>
            Represents the default solid material
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.Defaults.SimulationDefaults.MaterialType.Fluid">
            <summary>
            Represents the default fluid material
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.Defaults.SimulationDefaults.IsIgnoredConditionForCHT(System.Type,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Checks if <paramref name="conditionType" /> created by <paramref
            name="conditionCreator" /> is ignored for CHT.
            </summary>
            <param name="conditionType">
            The type of the condition being used in CHT.
            </param>
            <param name="conditionCreator">The creator of the condition.</param>
            <returns>
            <see langword="true" /> if the condition is being ignored for CHT.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.FlowType">
            <summary>
            The types of flows
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.FlowType.None">
            <summary>
            No internal or external flow
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.FlowType.InternalFlow">
            <summary>
            Flow through an internal volume extract
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.FlowType.ExternalFlow">
            <summary>
            Flow outside the region, within an enclosure
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.ContactEntityExtensions">
            <summary>
            Extension methods for JointEntity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.ContactEntityExtensions.FindSide1Bodies(Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <summary>
            Find all bodies associated with side 1 of the contact.
            </summary>
            <param name="contactEntity">Contact entity.</param>
            <returns>List of bodies associated with side 1 of the contact.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.ContactEntityExtensions.FindSide2Bodies(Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <summary>
            Find all bodies associated with side 2 of the contact.
            </summary>
            <param name="contactEntity">Contact entity.</param>
            <returns>List of bodies associated with side 2 of the contact.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysicsExtensions.HasStructuralPhysics(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Determines if the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> defined for <paramref
            name="a" /> intersects with <see
            cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyStructuralPhysics" />.
            </summary>
            <param name="a">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> being compared.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="a" /> intersects with
            <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyStructuralPhysics" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysicsExtensions.HasFluidPhysics(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Determines if the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> defined for <paramref
            name="a" /> intersects with <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyFluidPhysics"
            />.
            </summary>
            <param name="a">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> being compared.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="a" /> intersects with
            <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyFluidPhysics" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysicsExtensions.HasElectromageticPhysics(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Determines if the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> defined for <paramref
            name="a" /> intersects with <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Electromagnetics"
            />.
            </summary>
            <param name="a">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> being compared.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="a" /> intersects with
            <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Electromagnetics" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysicsExtensions.HasSolidThermalUsingMAPDL(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Determines if the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> defined for <paramref
            name="a" /> intersects with <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.SolidThermal"/>
            but not <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.FluidThermal"/>, which means it's being 
            solved with MAPDL
            </summary>
            <param name="a">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics" /> being compared.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="a" /> intersects with
            <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.SolidThermal" /> and not <see cref="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.FluidThermal" />
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.JointEntityExtensions">
            <summary>
            Extension methods for JointEntity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.JointEntityExtensions.FindBodies(Ansys.Disco.Physics.Entities.Conditions.JointEntity)">
            <summary>
            Find all bodies associated with the joint.
            </summary>
            <param name="jointEntity">Joint entity.</param>
            <returns>List of all bodies associated with the joint.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity">
            <summary>
            This entity is just to capture the concept of an assembly within the domain.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.StudyEntity">
            <summary>
            Be aware we should not couple the lifetime of this Study directly to a document, that should be down to a saga
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.StudyEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="scope">Scope for the entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.PhysicsType">
            <summary>
            Physics type for the region.
            When setting use SetPhysicsType method if parent simulation is available.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.IsCompressibleFlowEnabled">
            <summary>
            Is compressible flow enabled for the region.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.SetPhysicsType(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Set region physics type and raise <see cref="T:Ansys.Disco.Physics.Events.Simulations.SimulationPhysicsTypeChanged"/> if this
            changes the simulation physics type.
            </summary>
            <param name="regionPhysicsType">New region physics type to set.</param>
            <param name="simulation">The simulation that the region belongs to.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.SetCompressibleFlow(System.Boolean,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Enables of disables ideal gas law and raise <see cref="T:Ansys.Disco.Physics.Events.Simulations.SimulationPhysicsTypeChanged"/>
            </summary>
            <param name="isCompressibleFlowEnabled">New state for Ideal Gas Enabled status.</param>
            <param name="simulation">The simulation that the region belongs to.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity.GetFullScope">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions">
            <summary>
            Extension methods for SimulationEntity.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyFluidThermalPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any fluid thermal physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any fluid thermal physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.GetBodyLocationForPhysicsRegionsForUnsuppressedResults(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns a LocationSet containing the active bodies that are used in the physics regions
            </summary>
            <param name="simulationEntity">The current SimulationEntity</param>
            <returns>The LocationSet containing the active bodies for the physics regions</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.GetBodyLocationForPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns a LocationSet containing the active bodies that are used in the physics regions
            </summary>
            <param name="simulationEntity">The current SimulationEntity</param>
            <returns>The LocationSet containing the active bodies for the physics regions</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.GetUnsuppressedBodyLocations(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Adjusts the given locationSet excluding bodies that are not included in physics.
            </summary>
            <param name="simulationEntity">The current Disco simulation</param>
            <param name="location">The location set to be check for suppressed bodies</param>
            /// <returns>The modified location set or the original set if there are no suppressed bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.GetUnsuppressedLocations(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Utilities.ILocationService)">
            <summary>
            Adjusts the given locationSet excluding bodies that are not included in physics. Also excludes from the location set faces and edges
            that belong to those bodies
            </summary>
            <param name="simulationEntity">The current Disco simulation</param>
            <param name="location">The location set to be check for suppressed bodies</param>
            <param name="locationService">The locationService to access utility methods</param>
            <returns>The modified location set or the original set if there are no suppressed bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyFluidPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Return whether the simulation entity contains any fluid physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <param name="includeFluidThermal">Whether to include fluid thermal.</param>
            <returns>True if simulation entity contains any fluid physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyFluidOrFluidThermalPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any fluid or fluid thermal physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any fluid or fluid thermal physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyStructuralThermalPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any structural thermal physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any structural thermal physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyStructuralPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean,System.Boolean)">
            <summary>
            Return whether the simulation entity contains any structural physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <param name="includeStructuralThermal">Check includes structural thermal</param>
            <param name="includeModal">Check includes modal.</param>
            <returns>True if simulation entity contains any structural physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyModalPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any modal physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any structural physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnySolidThermalPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any solid thermal physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any solid thermal physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyElectromagneticPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any electromagnetic physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any electromagnetic physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AnyCustomPhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Return whether the simulation entity contains any custom physics regions.
            </summary>
            <param name="simulationEntity">Simulation entity.</param>
            <returns>True if simulation entity contains any custom physics regions, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.ContainsCondition(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Guid)">
            <summary>
            Returns true if the given id matches a condition within the simulation
            </summary>
            <param name="simulation">The simulation to search</param>
            <param name="conditionId">The id of the condition to test for</param>
            <returns>True if the simulation contains the condition</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.ContainsMaterialAssignment(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Guid)">
            <summary>
            Returns true if the given id matches a material assignment within the simulation
            </summary>
            <param name="simulation">The simulation to search</param>
            <param name="materialAssignmentId">The id of the material assignment to test for</param>
            <returns>True if the simulation contains the material assignment</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasUnsuppressedConditionsForPhysics(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,System.Boolean)">
            <summary>
            Query to see whether current simulation has unsuppressed condition
            for the physics.
            </summary>
            <param name="simulation">Simulation entity.</param>
            <param name="physics">Physics to validate for</param>
            <param name="includeDefaultConditions">
            include the default conditions
            </param>
            <returns>
            Boolean signifying whether simulation has condition for the physics
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasConditionsForPhysics(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,System.Boolean)">
            <summary>
            Query to see whether current simulation has condition for the
            physics.
            </summary>
            <param name="simulation">Simulation entity.</param>
            <param name="physics">Physics to validate for</param>
            <param name="includeDefaultConditions">
            include the default conditions
            </param>
            <returns>
            Boolean signifying whether simulation has condition for the physics
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasConditionsEx(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Query to see whether simulation has any conditions
            </summary>
            <param name="simulation">Simulation entity.</param>
            <param name="ignoreAllDefaultConditions">Ignore default condition</param>
            <returns>Boolean signifying whether simulation has any conditions</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AllowFluidEntityCreation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Query to see whether fluid entities can be created
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether fluid entities can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AllowStructuralEntityCreation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Query to see whether structural entities can be created
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether structural entities can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AllowSolidThermalEntityCreation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Query to see whether thermal entities can be created
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether thermal entities can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AllowElectromagneticEntityCreation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Query to see whether electromagnetic entities can be created
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether electromagnetic entities can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AllowSymmetryEntityCreation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Query to see whether symmetry entities can be created
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether symmetry entities can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.IsTopologyOptimizationValid(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Determine whether topology optimization session can be enabled
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>Boolean signifying whether optimization session can be created</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.IsModalWithPreStress(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Validity.ICompatibilityProvider)">
            <summary>
            Determine if modal analysis in Analyse stage is pre-stress or not.
            A "Pre-stress" simulation has at least one boundary condition (force, support, non zero displacement) and at least one fixed support.
            </summary>
            <param name="simulation">The Simulation Entity.</param>
            <param name="compatibilityProvider">Used to determine if conditions are compatible with the current stage</param>
            <returns>If modal analysis is pre-stress</returns>
            <remarks>
            Requirement for Pre-stress :
            1. at least one pre-stress BC (loads, gravity, non zero displacement),
            2. at least one acting fixed support (fixed support or zero displacement)
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.DefaultPhysicsType">
            <summary>
            Gets the default PhysicsType of this simulation
            </summary>
            <returns>The physics Type of this simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasNoPhysicsType(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Checks to see if this simulation physics type is none
            </summary>
            <param name="simulation">Simulation Entity</param>
            <returns>Boolean signifying if this simulation has no type</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasPhysicsType(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Checks to see if this simulation has a defined physics type
            </summary>
            <param name="simulation">Simulation Entity</param>
            <returns>Boolean signifying if this simulation has a type</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.HasElectromagnetics(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Checks to see if this simulation physics type contains Electromagnetic physics
            </summary>
            <param name="simulation">Simulation Entity</param>
            <returns>Boolean signifying if this simulation has Electromagnetic physics</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.ToggleThermalEffects(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Update Fluids Physics Type - fluids physics type is determined by settings on the conditions, rather than
            the existence of combinations of conditions.
            </summary>
            <param name="simulation">Simulation Entity</param>
            <param name="updatedPhysicsType">Type to change to</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.ToggleIdealGasEffects(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Enables/disables compressible flows for the whole simulation.
            </summary>
            <param name="simulation">Simulation Entity</param>
            <param name="isIdealGasEnabled">enabled state</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.AddPhysicsType(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Add a Physics Type to a region (currently hardcoded as the default).  IF this is the first condition it will set it to be fluids
            or fluids thermal.  If it's a solid condition, it will combine - if needed - to set the correct combined physics type.
            </summary>
            <param name="simulation">Simulation Entity</param>
            <param name="addedPhysicsType">Type of physics to add to the region</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntityExtensions.GetCalculationType(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Uses the current goal criteria return the calculation type
            </summary>
            <param name="simulation">Simulation entity.</param>
            <returns>The current calculation type</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics">
            <summary>
            The types of physics
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.None">
            <summary>
            No physics defined
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Structural">
            <summary>
            Structural analysis (no thermal effects)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.StructuralThermal">
            <summary>
            Structural analysis with thermal effects (i.e. structural stress)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Fluid">
            <summary>
            Fluid analysis (no thermal effects)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.FluidThermal">
            <summary>
            Fluid analysis with thermal effects
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.SolidThermal">
            <summary>
            Solid thermal analysis
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Electromagnetics">
            <summary>
            Electromagnetics
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Modal">
            <summary>
            Modal
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Custom">
            <summary>
            Custom addin physics
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.Any">
            <summary>
            Any analyses
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyPhysicsExcludingElectromagnetics">
            <summary>
            Any analyses excluding Electromagnetics
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyStructuralPhysics">
            <summary>
            Any physics that is structural excluding Modal
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyStructuralPhysicsIncludingModal">
            <summary>
            Any physics that is structural including Modal
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnyFluidPhysics">
            <summary>
            Any physics that is fluid
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.AnySolidPhysics">
            <summary>
            Any physics that is solid
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.SolidThermalStructuralThermal">
            <summary>
            SolidThermal StructuralThermal
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.SolidThermalFluidThermal">
            <summary>
            SolidThermal FluidThermal - can be used for CHT at a simulation level, or to test for heat equation solutions (i.e. temperature results) on a per region level.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics.StructuralModal">
            <summary>
            Modal with structural constraints
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.Scope">
            <summary>
            The simulation scope
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SuppressedBodies">
            <summary>
            Scope for bodies suppressed from all physics
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SuppressedResultBodies">
            <summary>
            Scope for bodies suppressed from all result display
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.AllConditions">
            <summary>
            All conditions applied to this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" />.
            Includes suppressed and unsuppressed conditions.
            </summary>
            <remarks>
            Most of the application will probably want to ignore suppressed
            conditions. The <see cref="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.UnsuppressedConditions" /> method is
            appropriate for most situations.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.HasConditions">
            <summary>
            Determines whether this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> has any
            conditions applied.
            </summary>
            <returns>
            <see langword="true"/> if 1 or more conditions exist.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.HasCondition(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Checks to see if <paramref name="condition"/> has been added to this
            <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </summary>
            <param name="condition">The condition to check if added.</param>
            <returns>
            <see langword="true"/> if <paramref name="condition"/> has been
            added to this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>;
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.CanBeSuppressed(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Checks if <paramref name="condition"/> can be suppressed.
            </summary>
            <param name="condition">
            The condition to check if can be suppressed.
            </param>
            <returns>
            <see langword="true"/> if the <paramref name="condition"/> can be
            suppressed for this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.CanBeUnsuppressed(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Checks if <paramref name="condition"/> can be unsuppressed.
            </summary>
            <param name="condition">
            The condition to check if can be unsuppressed.
            </param>
            <returns>
            <see langword="true"/> if the <paramref name="condition"/> can be
            unsuppressed for this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SuppressCondition(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Suppresses a condition, prevents the condition from affecting solver
            results.
            </summary>
            <param name="condition">
            The physics condition being suppressed.
            </param>
            <returns>
            <see langword="true"/> if the condition was suppressed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.UnsuppressCondition(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Unsuppresses a condition, allows the condition to affect solver
            results.
            </summary>
            <param name="condition">
            The physics condition being unsuppressed.
            </param>
            <returns>
            <see langword="false"/> if the condition could not be unsuppressed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ConditionSuppressed(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Determines if a condition has been suppressed. A suppressed condtion
            will not affect solver results.
            </summary>
            <param name="condition">
            The physics condition being checked if suppressed.
            </param>
            <returns>
            <see langword="true"/> if the condition is suppressed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SuppressedConditions">
            <summary>
            Returns all conditions applied to this <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> that have been suppressed from affecting
            solver results.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing any
            conditions applied to this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> that have
            been suppressed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.UnsuppressedConditions">
            <summary>
            Returns a list of physics condition that are not suppressed.
            Conditions that are unsuppressed should affect solver results.
            </summary>
            <returns>
            A list of physics conditions that are not suppressed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.AllUserCreatedConditionsSuppressed">
            <summary>
            Checks if all <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" />s applied to this
            <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> are <see
            cref="M:Ansys.Disco.Physics.Entities.Conditions.ISuppressible.Suppressed" />.
            </summary>
            <returns>
            <see langword="true" /> if all <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" />s
            applied to this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> are <see
            cref="M:Ansys.Disco.Physics.Entities.Conditions.ISuppressible.Suppressed" />,
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.GetConditionsOfType``1">
            <summary>
            Gets conditions that have been applied to this <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> with type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">
            Any type. Conditions with this type will be returned.
            </typeparam>
            <returns>
            A list of conditions with type <typeparamref name="T"/>. An empty
            list is returned if conditions are <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.HasZeroOrOneConditions">
            <summary>
            Checks if zero or one conditions have been applied to this <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </summary>
            <returns>
            <see langword="true"/> if this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> has
            zero or one conditions applied.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.HasMoreThanOneCondition">
            <summary>
            Checks if more than one conditions have been applied to this <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </summary>
            <returns>
            <see langword="true"/> if this <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> has
            more than one conditions applied.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.GetConditionsCreatedBySystem">
            <summary>
            Gets all conditions that have been applied to this <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> that are created by the system.
            </summary>
            <returns>A list of conditions created by the system.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SetScope(Ansys.Disco.Physics.Utilities.ILocationService,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Sets the scope of the simulation
            </summary>
            <remarks>
            This method uses the given location service to track transforms of the given simulation bodies
            </remarks>
            <param name="locationService">The location service used to update the given scope with transform data</param>
            <param name="newScope">The new scope to apply to the simulation</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsFlowModel(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="flowModel">the goal criteria to modify</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsStructuralModel(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="structuralModel">the goal criteria to modify</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsCalculationType(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.CalculationTypeOption})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="calculationType">the goal criteria to modify</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsFlowConvergenceStop(Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="flowConvergenceStopOption">the goal criteria to modify</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsSolutionEndTime(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Duration})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="solutionEndTime">the solution end time IExpression that has been modified</param>
            <exception cref="T:System.ArgumentNullException">Thrown if solution end time is null</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsSpecificationOfSolutionProgression(Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="specificationOfSolutionProgression">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsNumericalConvergenceTarget(System.Double)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="numericalConvergenceTarget">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsNumericalConvergenceTargetEnergy(System.Double)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="numericalConvergenceTargetEnergy">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsNumericalConvergenceTargetMonitors(System.Double)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="numericalConvergenceTargetMonitors">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsTargetEngineeringConvergence(System.Double)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="targetEngineeringConvergence">the solution engineering Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsMaximumNumberOfIterations(System.Int32)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="maximumNumberOfIterations">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsInitialNumberOfSubsteps(System.Int32)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="initialNumberOfSubsteps">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationSettingSpecificationOfFlowConvergence(Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="specificationOfFlowConvergence">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsMaximumNumberOfSubsteps(System.Int32)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="maximumNumberOfSubsteps">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsMinimumNumberOfSubsteps(System.Int32)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="minimumNumberOfSubsteps">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsSpecifyEndTime(System.Boolean)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="specifyEndTime">Modified boolean that determines whether solvers respect the set end time</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsIncludeNewBodies(System.Boolean)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the goal criteria property modified
            </summary>
            <param name="includeNewBodies">the solution numerical Convergence Target</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionsImproveMesh(System.Boolean)">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the simulation option property modified
            </summary>
            <param name="improveMesh">solution option to improve mesh</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionElectromagneticConvergenceTarget(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the electromagnetic convergence target setting modified
            </summary>
            <param name="electromagneticConvergenceTarget">electromagnetic convergence target setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionMaximumSimulationDuration(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the maximum simulation duration setting modified
            </summary>
            <param name="maximumSimulationDuration">maximum simulation duration setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionNumberOfFarfieldFrequencyPoints(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the number of farfield frequency points setting modified
            </summary>
            <param name="numberOfFarfieldFrequencyPoints">number of farfield frequency points setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionNumberOfNearfieldFrequencyPoints(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the number of nearfield frequency points setting modified
            </summary>
            <param name="numberOfNearfieldFrequencyPoints">number of nearfield frequency points setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionNumberOfSParameterFrequencyPoints(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the number of s-parameter frequency points setting modified
            </summary>
            <param name="numberOfSParameterFrequencyPoints">number of s-parameter frequency points setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionPerfectConductivityThreshold(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the perfect conductivity threshold setting modified
            </summary>
            <param name="perfectConductivityThreshold">perfect conductivity threshold setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ModifySimulationOptionElectromagneticConductiveLossesType(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType})">
            <summary>
            Raises and event that notifies listeners that the value object SimulationOptions on this entity
            has had the electromagnetic conductive losses type setting modified
            </summary>
            <param name="electromagneticConductiveLossesType">electromagnetic conductive losses type setting</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.SetSimulationOptions(Ansys.Disco.Physics.ValueObjects.SimulationOptions)">
            <summary>
            Function that notifies the simulation goal has been replaced
            </summary>
            <param name="simulationOptions">The new simulation options</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.GetSimulationOptions">
            <summary>
            Get the simulation options for this simulation
            </summary>
            <returns>SimulationOptions for this entity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.AdjustAutoSuppressedBodies(Ansys.Disco.Physics.ValueObjects.LocationSet,System.Boolean)">
            <summary>
            Adjusts the suppressed bodies list to include or remove the auto-suppressed bodies.
            </summary>
            <param name="suppressedBodies">Updated list for the suppressed bodies</param>
            <param name="isAutoSuppress">True if bodies are being auto-suppressed, false if they are unsuppressed</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity.ElementAndNodeCache">
            <summary>
            Cache for the number of Elements (.Item1) and Nodes (.Item2) generated
            Only used for refine stage based solves
            Persisted
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo">
            <summary>
            Column information for material tables
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo.#ctor(UnitsNet.QuantityInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo"/> class.
            </summary>
            <param name="quantityInfo">The quantity info used to define the column.</param>
            <param name="label">The label for the column.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo.QuantityInfo">
            <summary>
            Information regarding the quantity used for the column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo.Name">
            <summary>
            The invariant name for the column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo.Label">
            <summary>
            The localized caption or label for the column.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity">
            <summary>
            Interface for an entity which represents a material table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.InputColumnInfo">
            <summary>
            Input column info of the table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.OutputColumnInfo">
            <summary>
            Output column info of the table.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.AddRow(Ansys.Disco.Physics.Tables.TableQuantity,Ansys.Disco.Physics.Tables.TableQuantity)">
            <summary>
            Add a row of quantities to the table.
            </summary>
            <param name="inputQuantity">Input quantity, should match <see cref="T:UnitsNet.IQuantity"/> type
            defined by <see cref="P:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.InputColumnInfo"/>.</param>
            <param name="outputQuantity">Output quantity, should match <see cref="T:UnitsNet.IQuantity"/> type
            defined by <see cref="P:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.OutputColumnInfo"/>.</param>
            <returns>The <see cref="T:System.Data.DataRow"/> that was created.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity.RemoveRow(System.Data.DataRow)">
            <summary>
            Remove a row from the table.
            </summary>
            <param name="row">The <see cref="T:System.Data.DataRow"/> to remove.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Tables.ITableReferenceEntity">
            <summary>
            Interface for an entity which stores a reference to a table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.ITableReferenceEntity.TableId">
            <summary>
            ID of the table.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.ITableReferenceEntity.GetTable">
            <summary>
            Get the table that this <see cref="T:Ansys.Disco.Physics.Entities.Tables.ITableReferenceEntity"/> refers to.
            </summary>
            <returns><see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity">
            <summary>
            Entity which represents a material table.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.#ctor(System.Guid,Ansys.Disco.Core.DomainCore.Creator,Ansys.Disco.Physics.Tables.ITableStore,Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo,Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity"/> class. This entity
            will manage the lifecycle of a table within a store - the table will be added on
            creation, and removed on deletion of the entity.
            </summary>
            <param name="id">Entity ID.</param>
            <param name="creator">Creator.</param>
            <param name="tableStore">Store to contain the table.</param>
            <param name="inputColumnInfo">Input column info of the table.</param>
            <param name="outputColumnInfo">Output column info of the table.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.InputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.OutputColumnInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.TableId">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.AddRow(Ansys.Disco.Physics.Tables.TableQuantity,Ansys.Disco.Physics.Tables.TableQuantity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.Clone">
            <summary>
            Returns a clone of the entity, which points to a clone of the original table.
            </summary>
            <returns>Clone of this entity.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.GetTable">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.RemoveRow(System.Data.DataRow)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.Results.SolverResultValue})">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation"/> class.
            </summary>
            <param name="monitorCell">
            The monitor cell being validated. This value cannot be <see langword="null"/>.
            </param>
            <param name="results">
            Collection of <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue"/> associated with the cell.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation.IsEmpty">
            <summary>
            Determines if the cell has a value or not.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation.Results">
            <summary>
            The cell quantity validation. Serializes a quantity to be compared
            during validation.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidationComparer.Equals(Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation,Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation)">
            <summary>
            Determines if two <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation"/> objects are equal to
            one another. A cell is considered equal if the cells are empty or
            the values of the cell are equal.
            </summary>
            <param name="x">
            The first <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation"/> being compared to
            <paramref name="y"/>.
            </param>
            <param name="y">
            The second <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation"/> being compared to
            <paramref name="x"/>.
            </param>
            <returns>
            <see langword="true"/> if both cells are empty or if their values
            are equal.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidationComparer.GetHashCode(Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.MonitorCellValidation)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.ResultValueValidationComparer.Equals(Ansys.Disco.Physics.Entities.Validation.ResultValueValidation,Ansys.Disco.Physics.Entities.Validation.ResultValueValidation)">
            <summary>
            Determines if two <see cref="T:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation"/> objects are
            equal to one another.
            </summary>
            <param name="x">
            The first <see cref="T:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation"/> being compared to
            <paramref name="y"/>.
            </param>
            <param name="y">
            The second <see cref="T:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation"/> being compared to
            <paramref name="x"/>.
            </param>
            <returns>
            <see langword="true"/> if both validation objects are equal.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.ResultValueValidationComparer.GetHashCode(Ansys.Disco.Physics.Entities.Validation.ResultValueValidation)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.SolverResultValidationComparer.Equals(Ansys.Disco.Physics.Entities.Validation.SolverResultValidation,Ansys.Disco.Physics.Entities.Validation.SolverResultValidation)">
            <summary>
            Determines if two <see cref="T:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation"/> objects are
            equal to one another.
            </summary>
            <param name="x">
            The first <see cref="T:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation"/> being compared to
            <paramref name="y"/>.
            </param>
            <param name="y">
            The second <see cref="T:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation"/> being compared to
            <paramref name="x"/>.
            </param>
            <returns>
            <see langword="true"/> if both validation objects are equal.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.SolverResultValidationComparer.GetHashCode(Ansys.Disco.Physics.Entities.Validation.SolverResultValidation)">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.DefinedVariationValidation.Label">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.DefinedVariationValidation.LabelPlural">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.DefinedVariationValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.DefinedVariationValidation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation.#ctor(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/>
            class.
            </summary>
            <param name="cell">
            The cell being validated. This value cannot be <see
            langword="null"/>.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation.IsEmpty">
            <summary>
            Determines if the cell has a value or not.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation.Quantity">
            <summary>
            The cell quantity validation. Serializes a quantity to be compared
            during validation.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation.From(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell,Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation@)">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/>.
            </summary>
            <param name="cell">
            The cell being validated. This value should not be <see
            langword="null"/>.
            </param>
            <param name="validation">
            The serialized <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/> returned if created.
            </param>
            <returns>
            <see langword="true"/> if <paramref name="validation"/> was created.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidationComparer.Equals(Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation,Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation)">
            <summary>
            Determines if two <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/> objects are equal to
            one another. A cell is considered equal if the cells are empty or
            the values of the cell are equal within a tolerance.
            </summary>
            <param name="x">
            The first <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/> being compared to <paramref
            name="y"/>.
            </param>
            <param name="y">
            The second <see cref="T:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation"/> being compared to <paramref
            name="x"/>.
            </param>
            <returns>
            <see langword="true"/> if both cells are empty or if their values
            are equal within a tolerance.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidationComparer.GetHashCode(Ansys.Disco.Physics.Entities.Validation.ParameterSweeps.CellValidation)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation.#ctor(Ansys.Disco.Physics.Entities.Results.ResultValue)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation"/> class.
            </summary>
            <param name="resultValue"><see cref="T:Ansys.Disco.Physics.Entities.Results.ResultValue"/> being validated.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation.Quantity">
            <summary>
            Quantity validation. Serializes a quantity to be compared during validation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation.ResultFunction">
            <summary>
            Result function.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation.ResultVariable">
            <summary>
            Result variable.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ResultValueValidation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation.#ctor(Ansys.Disco.Physics.Entities.Results.SolverResultValue)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation"/> class.
            </summary>
            <param name="solverResult">
            <see cref="T:Ansys.Disco.Physics.Entities.Results.SolverResultValue"/> being validated.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation.ResultValue">
            <summary>
            The result value. Serializes a result value to be compared during validation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation.Solver">
            <summary>
            Solver validation.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SolverResultValidation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation"/> class.
            (required for serialization)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation"/> class.
            </summary>
            <param name="obj">Physics object</param>
            <exception cref="T:System.ArgumentException">Throws if physics object does not contain <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity"/></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.AccelerationConditionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation">
            <summary>
            Used for jounal validation of the current state of optimization protected depth entity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation"/> class.
            Required for XML serialization
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation"/> class.
            </summary>
            <param name="obj">the current physics object with a optimization protected depth entity tied to it</param>
            <exception cref="T:System.ArgumentException">thrown if the IPhysicsObject is not a <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity"/></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.Scope">
            <summary>
            Scope validation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.Depth">
            <summary>
            Quantity validation used for comparing protected depth
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <summary>
            Compares optimization protected depth validations
            </summary>
            <param name="other">the validation wrapper to compare to</param>
            <param name="tolerance">not used</param>
            <returns>Match result of compare</returns>
            <exception cref="T:SpaceClaim.NotPossibleException">thrown if not comparing to another optimization protected depth validation</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationProtectedDepthValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation">
            <summary>
            Validation class for the Spring condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation"/> class.
            (required for serialization)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation"/> class.
            </summary>
            <param name="obj">Physics object</param>
            <exception cref="T:System.ArgumentException">Throws if physics object does not contain <see cref="T:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation"/></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SpringConditionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation"/> class.
            (required for serialization)
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation"/> class.
            </summary>
            <param name="obj">Physics object</param>
            <exception cref="T:System.ArgumentException">Throws if physics object does not contain <see cref="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity"/></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.VelocityConditionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.PorousLossCoefficientsValidation.Equals(Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.PorousLossCoefficientsValidation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.PorousConditionValidation.PorousLossCoefficientsValidation.ToString">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation">
            <summary>
            Provides a validation wrapper for symmetry entity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation"/> class.
            </summary>
            <param name="obj">The physics object to validate</param>
            <exception cref="T:System.ArgumentException">Throws if the entity is not a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity"/></exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.Scope">
            <summary>
            Validation property for entity scope
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.CreatedBy">
            <summary>
            Validation property for entity creator
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.SymmetryConditionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation">
            <summary>
            Validation wrapper for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation"/> class.
            Required for XML serialization
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.#ctor(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation"/> class.
            </summary>
            <param name="entity">The global fidelity settings entity to validate</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="entity"/> is null</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingMethod">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingMethod"/> property
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.UsePredefinedSettings">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.UsePredefinedSettings"/> property
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettings">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingSettings"/> property
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.AreCalculatedDefaults">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.AreCalculatedDefaults"/> property
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation">
            <summary>
            Validation wrapper for <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation"/> class.
            Required for serialization.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.#ctor(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation"/> class.
            </summary>
            <param name="settings">The FidelitySizingSettings instance to validate.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="settings"/> is null.</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.MinimumSize">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MinimumSize"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.MaximumSize">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumSize"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.MaximumFaceSize">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumFaceSize"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.GrowthRate">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.GrowthRate"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.CurvatureNormalAngle">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.CurvatureNormalAngle"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.ProximitySourcesOption">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.ProximitySourcesOption"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.NumberOfCellsAcrossGap">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.NumberOfCellsAcrossGap"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.MaximumBoundaryLayers">
            <summary>
            Validation property for the <see cref="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumBoundaryLayers"/> property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.op_Implicit(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)~Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation">
            <summary>
            Implicit operator to convert from <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> to <see cref="P:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettings"/>.
            </summary>
            <param name="settings">The settings to convert from.</param>
            <returns>The converted validation wrapper</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.GlobalFidelitySettingsValidation.SizingSettingsValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation">
            <summary>
            Used for jounal validation of the current state of optimization constraints
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation"/> class.
            </summary>
            <param name="obj">the current physics object with a optimization constraint entity tied to it</param>
            <exception cref="T:System.ArgumentException">thrown if the IPhysicsObject is not a Optimization constraint entity</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.#ctor(Ansys.Disco.Physics.TopologyOptimization.ConstraintType,Ansys.Disco.Core.Data.Vector3,UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation"/> class.
            Creates a validation string for journals
            </summary>
            <param name="constraintType">the current constraint type</param>
            <param name="vector">the current vector value</param>
            <param name="value">the current quantity value</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.#ctor(Ansys.Disco.Physics.TopologyOptimization.ConstraintType,UnitsNet.IQuantity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation"/> class.
            Creates a validation string for journals
            </summary>
            <param name="constraintType">the current constraint type</param>
            <param name="value">the current quantity value</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation"/> class.
            default constructor needed for serialization
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.TypeOfConstraint">
            <summary>
            The type of constraint to validate
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.Value">
            <summary>
            Used to validate the constraint's associated quantity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.Vector">
            <summary>
            Used to validate the constraint's associated vector
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <summary>
            Compares optimization option validations
            </summary>
            <param name="other">the validation wrapper to compare to</param>
            <param name="tolerance">not used</param>
            <returns>Match result of compare</returns>
            <exception cref="T:SpaceClaim.NotPossibleException">thrown if not comparing to another optimization option validation</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationConstraintValidation.ToString">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation">
            <summary>
            Used for jounal validation of the current state of optimization options
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation"/> class.
            Required for XML serialization
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation"/> class.
            </summary>
            <param name="obj">the current physics object with a optimization option entity tied to it</param>
            <exception cref="T:System.ArgumentException">thrown if the IPhysicsObject is not a Optimization option entity</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.IsOptimizationEnabled">
            <summary>
            Whether optimization is currently enabled
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.ObjectiveType">
            <summary>
            The overall optimization objective type
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.InflationSize">
            <summary>
            Quantity validation used for comparing protected distance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.Constraints">
            <summary>
            the list of constraints that also need validated
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.Compare(SpaceClaim.Commands.ValidationWrapper,SpaceClaim.Commands.ValidationWrapper.CompareTolerance)">
            <summary>
            Compares optimization option validations
            </summary>
            <param name="other">the validation wrapper to compare to</param>
            <param name="tolerance">not used</param>
            <returns>Match result of compare</returns>
            <exception cref="T:SpaceClaim.NotPossibleException">thrown if not comparing to another optimization option validation</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Validation.OptimizationOptionValidation.LabelPlural">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Validation.ToleranceDoubleComparer.IsWithinTolerance(System.Double,System.Double,System.Double)">
            <summary>
            Predicate to check if a given value is within a fixed tolerance
            percentage of the baseline value.
            </summary>
            <param name="actual">
            Value being compared against the expected <paramref name="baseline"/>.
            </param>
            <param name="baseline">
            The expected value.
            </param>
            <param name="tolerance">
            Decimal percentage representing the error margin either side of
            <paramref name="baseline"/> value.
            </param>
            <returns>
            <see langword="true"/> if <paramref name="actual"/> value is within
            tolerance of <paramref name="baseline"/>.
            </returns>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.BaseEntityEquality.MaxDepth">
            <summary>
            Protect against infinite recursion when comparing cyclic data
            structures.
            </summary>
            <remarks>
            The depth is arbitrary; pick a number that suits you.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.EntityCollection`1.ElementAtOrDefault(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.EntityCollection`1.ForEach(System.Action{`0})">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.IEntityCollection`1">
            <summary>
            An unordered set of entities.
            </summary>
            <typeparam name="T">
            The specific type of entity. Must be a reference type that is
            assignment-compatible with <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/>.
            </typeparam>
            <remarks>
            At runtime, each <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance is owned by the <see
            cref="P:Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject.Entity"/> property of an <see
            cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject"/> evaluation inside SpaceClaim. Entity storage
            has been implemented this way in order to integrate with SpaceClaim's
            undo-redo mechanism with the minimum hassle.
            <para>
            Unfortunately, the consequence of this design is that retrieving <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instances has at least O(N) time complexity, where N
            is the number of <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instances in the current
            project. This is because the only reliable way to find entities in
            SpaceClaim is to recursively walk the evaluation hierarchy from the
            project's root part. Thus the simple act of getting the <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> associated with a particular <see cref="P:Ansys.Disco.Core.DomainCore.IEntity.Id"/>
            can require a full walk through the entire part hierarchy. Consequently
            we must do everything we can to minimize the number of times that we go
            back to SpaceClaim for entities.
            </para>
            <para>
            This interface has been designed to make it easier to use the entity
            storage system more efficiently. Its creation was prompted by the
            realization that many common operations were exhibiting O(N^3) [sic]
            time complexity using the previous incarnation of <see
            cref="T:Ansys.Disco.Physics.Entities.EntityCollection`1"/>. This cubic time scaling was destroying
            performance for even modestly-sized projects.
            </para>
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Notes.INoteEntity">
            <summary>
            Interface for an entity which represents a user-written note which can
            be attached to another entity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.INoteEntity.AssociatedEntityId">
            <summary>
            ID of the entity that this note is associated with.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.INoteEntity.Text">
            <summary>
            The text of the note.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.INoteEntity.LastUpdated">
            <summary>
            UTC datetime of when the note was last updated.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity">
            <summary>
            An interface defining an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> which wraps an <see cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/>,
            to allow <see cref="T:Ansys.Disco.Physics.Entities.Notes.INoteEntity"/> to link to SpaceClaim objects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity.Location">
            <summary>
            SpaceClaim location referred to by this entity.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity.EqualsLocation(Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <summary>
            Check if this <see cref="T:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity"/> refers to
            a given location.
            </summary>
            <param name="otherLocation">The <see cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/> to check.
            </param>
            <returns><see langword="true"/> if <see cref="P:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity.Location"/> and
            <paramref name="otherLocation"/> refer to the same SpaceClaim
            object.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Notes.NoteEntity">
            <summary>
            An entity which represents a user-written note that can be attached
            to another entity.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Notes.NoteEntity.MaxLength">
            <summary>
            Maximum content length of a note entity.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteEntity.#ctor(System.Guid,Ansys.Disco.Core.DomainCore.Creator,System.Guid,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Notes.NoteEntity"/> class.
            </summary>
            <param name="id">ID</param>
            <param name="creator">Creator</param>
            <param name="associatedEntityId">ID of the entity that this note is associated with.</param>
            <param name="text">Initial text content of the note.</param>
            <param name="lastUpdated">Time the note was last updated, if not set then <see cref="P:Ansys.Disco.Physics.Entities.Notes.NoteEntity.LastUpdated"/>
            will be set to <see cref="P:System.DateTime.UtcNow"/>. This primarily should only be used in cases such as copying.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.NoteEntity.AssociatedEntityId">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.NoteEntity.Text">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.NoteEntity.LastUpdated">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity">
            <summary>
            An <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> which wraps an <see cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/>,
            to allow <see cref="T:Ansys.Disco.Physics.Entities.Notes.INoteEntity"/> to link to SpaceClaim objects.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.#ctor(System.Guid,Ansys.Disco.Core.DomainCore.Creator,Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity"/> class.
            </summary>
            <param name="id">ID</param>
            <param name="creator">Creator</param>
            <param name="location">SpaceClaim location this <see
            cref="T:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity"/> points to (not <see langword="null"/>).</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.Location">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.EqualsLocation(Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity.Initialize(Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity">
            <summary>
            Holds protected depth to modify a Topology Optimization solve
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.#ctor(Ansys.Disco.Physics.ValueObjects.LocationSet,UnitsNet.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity"/> class with new Id.
            </summary>
            <param name="scope">Location of condition</param>
            <param name="depth">Protection depth</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.LocationSet,UnitsNet.Length,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity"/> class.
            </summary>
            <param name="id">guid id</param>
            <param name="scope">Location of condition</param>
            <param name="depth">Protection depth</param>
            <param name="creator">Creater type</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.#ctor(System.Guid,UnitsNet.Length,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity"/> class.
            </summary>
            <param name="id">guid id</param>
            <param name="depth">Protection depth</param>
            <param name="creator">Creator type</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.Copy">
            <summary>
            Creates a deep copy of topology optimization protected depth entity
            </summary>
            <returns>The copied topology optimization protected depth entity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity.Clone">
            <summary>
            Creates an identical clone of the object as a new instance and can be identified as a different object
            </summary>
            <returns>The copied topology optimization protected depth entity</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity">
            <summary>
            Holds constraint to modify a Topology Optimization solve
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.#ctor(Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity"/> class with new Id.
            </summary>
            <param name="constraint">constraint for session</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.#ctor(System.Guid,Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity"/> class.
            </summary>
            <param name="id">guid id</param>
            <param name="constraint">constraint for session</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.Copy">
            <summary>
            Creates a deep copy of topology optimization constraint
            </summary>
            <returns>The copied topology optimization constraint</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity.Clone">
            <summary>
            Creates an identical clone of the object as a new instance and can be identified as a different object
            </summary>
            <returns>The copied topology optimization constraint</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntityExtensions">
            <summary>
            Extension methods for OptimizationOptionEntity.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity">
            <summary>
            Holds options to modify a Topology Optimization solve
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.#ctor(System.Guid,Ansys.Disco.Physics.TopologyOptimization.OptimizationObjectiveType,System.Boolean,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity"/> class.
            </summary>
            <param name="id">guid id</param>
            <param name="objectiveType">current objective type</param>
            <param name="isTopologyEnabled">is the plugin currently enabled</param>
            <param name="creator">The creator of the entity.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.ContainsIMesh(SpaceClaim.IMesh,SpaceClaim.IEvalContext)">
            <summary>
            Find corresponding bcs for given mesh if available
            </summary>
            <param name="mesh">Search for corresponding bcs</param>
            <param name="evalContext">The context to resolve evaluation from monikers</param>
            <returns>Collection of bcs if available</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.MaxNumberOfIterations">
            <summary>
            The max number of iterations that the optimization solver should use
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.ReduceByPercent">
            <summary>
            Determines whether the target volume constraint is reduced by percent or
            given a quantity value to reduce to.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.IsTopologyOptimizationEnabled">
            <summary>
            The overall flag that determines if optimization solve should occur
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.ObjectiveType">
            <summary>
            The overall objective type for an optimization session.
            NOTE: This does not directly correlate to the optimization plugin's objective type
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.BCInflationSize">
            <summary>
            The default protected distance for boundary conditions on the simulation geometry
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.DefaultProtectedDeptEntity">
            <summary>
            The default protected depth entity for boundary conditions on the simulation geometry
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.BCInflationUserSet">
            <summary>
            Indicates if the user has set the protected distance for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.TargetVolumeUserSet">
            <summary>
            Indicates if the user has set the target volume for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.PercentVolumeRedUserSet">
            <summary>
            Indicates if the user has set the percetnt volume reduction for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.PercentComplianceIncUserSet">
            <summary>
            Indicates if the user has set the percent compliance increase for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.TargetFrequencyUserSet">
            <summary>
            Indicates if the user has set the target frequency for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.MaxThicknessUserSet">
            <summary>
            Indicates if the user has set the maximum thickness for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.UseMaxThickness">
            <summary>
            Determines whether the max thickness input should be
            used in optimization solve
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.MinThicknessUserSet">
            <summary>
            Indicates if the user has set the minimum thickness for optimization.
            Needed for updating the default when the geometry changes and the user would like
            a sensible default
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.UseMinThickness">
            <summary>
            Determines whether the min thickness input should be
            used in optimization solve
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.UsePullDirection">
            <summary>
            Determines whether the pull direction input should be
            used in optimization solve
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.IsBiDirectionalPull">
            <summary>
            Determines whether the pull direction is bidirectional
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.UsePlateSurface">
            <summary>
            Determines whether the plate surface input should be
            used in optimization solve
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.UseOverhang">
            <summary>
            Determines whether the overhang input should be
            used in optimization solve
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.TargetValue">
            <summary>
            Returns current objective type target value
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.OptimizationDataGenerated">
            <summary>
            States if an optimization session has run and produced some level of
            data that would be lost if plugin is turned off
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.Copy">
            <summary>
            Creates a deep copy of topology optimization options
            </summary>
            <returns>The copied topology optimization options</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.Clone">
            <summary>
            Creates an identical clone of the object as a new instance and can be identified as a different object (Except constraints)
            </summary>
            <returns>The copied topology optimization options</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.AddProtectedDepth(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity)">
            <summary>
            Add  protected depth to options
            </summary>
            <param name="protectedDepth">The protected depth to add</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.RemoveProtectedDepth(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity)">
            <summary>
            Remove protected depth from options
            </summary>
            <param name="protectedDepth">The protected depth to remove</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.AddConstraint(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity)">
            <summary>
            Add geometry contraint to options
            </summary>
            <param name="constraint">The geometry constraint to add</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.RemoveConstraint(Ansys.Disco.Physics.TopologyOptimization.ConstraintType)">
            <summary>
            Removes the specified constraint type from the constraint collection
            </summary>
            <param name="type">the type of constraint to remove</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.AddMultipleConstraints(System.Collections.Generic.List{Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity})">
            <summary>
            Allows for multiple constraints to be added at once to the entity.
            Needed when setting many defaults at once as triggering multiple commands
            for each constraint type was noticiably slower
            </summary>
            <param name="constraints">the constraints to add</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.DoesConstraintExist(Ansys.Disco.Physics.TopologyOptimization.ConstraintType,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity})">
            <summary>
            Determines if a constraint type currently exists in the optimization constraints
            </summary>
            <param name="type">the type of constraint</param>
            <param name="constraintList">optimization constraints as a list</param>
            <returns>true if constraint type is present</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.GetConstraint(Ansys.Disco.Physics.TopologyOptimization.ConstraintType)">
            <summary>
            Gets a constraint from this entity
            </summary>
            <param name="type">the type of constraint to return</param>
            <returns>the constraint of the inputted type or null if not present</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.GetPullDirectionConstraint">
            <summary>
            Gets a constraint of Molding or Bidirectional Molding type from this entity
            </summary>
            <returns>Either the Molding constraint or BidirectionalMoldingConstraint</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.GetConstraintEntity(Ansys.Disco.Physics.TopologyOptimization.ConstraintType)">
            <summary>
            Gets a child constraint entity
            </summary>
            <param name="type">the type of constraint to return</param>
            <returns>the constraint entity of the inputted type or null if not present</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.GetPullDirectionConstraintEntity">
            <summary>
            Gets a child constraint entity of Molding or Bidirectional Molding constraint type
            </summary>
            <returns>the either the Molding constraint or BidirectionalMoldingConstraint entity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.GetUserModified(Ansys.Disco.Physics.TopologyOptimization.ConstraintType)">
            <summary>
            Determines if the given constraint type has been modified
            by the user
            </summary>
            <param name="constraintType">the optimization constraint type </param>
            <returns>true if user modified, false if not</returns>
            <exception cref="T:System.InvalidOperationException">thrown if the constraint type is not valid</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.SetUserModified(Ansys.Disco.Physics.TopologyOptimization.ConstraintType,System.Boolean)">
            <summary>
            Sets whether the given constraint type has been modified
            by the user
            </summary>
            <param name="constraintType">the constraint type</param>
            <param name="modifiedByUser">whether the user has changed this constraint</param>
            <exception cref="T:System.InvalidOperationException">thrown if the constraint type is not valid</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity.AddIMeshBcRefRelation(SpaceClaim.IMesh,System.Collections.Generic.Dictionary{SpaceClaim.IEvaluation,System.Tuple{System.Double,System.Boolean}})">
            <summary>
            Store bcRefs per meshbody
            </summary>
            <param name="inMesh">meshBody previously generated</param>
            <param name="bcRefs">corresponding boundary conidtion faces</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.ConditionLabel">
            <summary>
            Return the label for a condition given by the condition id.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.ConditionLabel.For(System.Guid,System.String@)">
            <summary>
            Attempts to get the <paramref name="label"/> for a <paramref
            name="conditionId"/>.
            </summary>
            <param name="conditionId">
            The id of the condition we are trying to get a label for.
            </param>
            <param name="label">
            If the condition has a label, that label populates this string, <see
            langword="null"/> otherwise.
            </param>
            <returns>
            <see langword="false"/> if the label cannot be found for <paramref
            name="conditionId"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor">
            <summary>
            Reads and writes a property of an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/>. The property
            is identified using the <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/>. The property can be
            a direct property of the entity (<c>PropertyPath = "Foo"</c>) or a
            nested sub-property (<c>PropertyPath = "Foo.Bar.Baz"</c>). At runtime
            the entity is accessed using the <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> property, whereas
            when serialized the entity is identified using the <see
            cref="T:System.Guid"/> stored in <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.FindEntity">
            <summary>
            A delegate that finds an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance using
            the supplied <see cref="T:System.Guid"/>.
            </summary>
            <param name="id">
            The id of the entity to find.
            </param>
            <returns>
            The <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> corresponding to the specified <see
            cref="T:System.Guid"/>, or <see langword="null"/> if no entity was found.
            </returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity">
            <summary>
            Gets or sets a delegate that returns the entity to use as the root
            object when getting or setting the property value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId">
            <summary>
            Gets or sets a <see cref="T:System.Guid"/> identifying the entity when the
            <see cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/> is serialized.
            <para>
            Note: The caller is responsible for keeping <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/>
            and <see cref="P:Ansys.Disco.Core.DomainCore.IEntity.Id"/> synchronized. An automatic connection
            between <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> and <see cref="P:Ansys.Disco.Core.DomainCore.IEntity.Id"/> is not
            practicable because of the multi-stage deserialization required
            when resuming entities from project files.
            </para>
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath">
            <summary>
            Gets or sets a string representing the path from the <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> to the property being accessed. The path can be a
            single property identifier (<c>"Foo"</c>) or a multi-part path with
            the individual property identifiers separated by dots
            (<c>"Foo.Bar.Baz"</c>).
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.ToSerializable(Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor)">
            <summary>
            Creates a single string encoding the <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> and the
            <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/>. This string can subsequently be passed
            to <see cref="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.TryFromSerializable(System.String)"/> to create a new <see
            cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/> instance containing these two values.
            <para>
            Note: This method makes no attempt to verify that the <see
            cref="P:Ansys.Disco.Core.DomainCore.IEntity.Id"/> property of the current <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/>
            matches <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/>. The <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> property
            is completely ignored here.
            </para>
            </summary>
            <param name="obj">
            The <see cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/> to encode.
            </param>
            <returns>
            A single string capturing the <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> and <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/> values.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.TryFromSerializable(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/> using the
            values of <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> and <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/>
            encoded in the <paramref name="serializedForm"/> parameter.
            <para>
            Note: The <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> property is not changed by this
            method. The caller is responsible for mapping the <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> to an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance.
            </para>
            </summary>
            <param name="serializedForm">
            A string created by <see cref="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.ToSerializable(Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor)"/>
            that encodes the pair of <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.EntityId"/> and <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/>.
            </param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/> instance if the supplied
            <paramref name="serializedForm"/> was valid, otherwise returns <see
            langword="null"/> to indicate failure.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.TryGetValue(System.Object@)">
            <summary>
            Attempts to read the value of the property indicated by the <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/> using <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> as the root
            object.
            </summary>
            <param name="value">
            The value returned by the final property in the <see
            cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/>, or <see langword="null"/> if anything went
            wrong.
            </param>
            <returns>
            Returns <see langword="true"/> if the read succeeded, or <see
            langword="false"/> if the read failed for any reason.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.TrySetValue(System.Object)">
             <summary>
             Attempts to write the supplied <paramref name="value"/> to the
             property indicated by the <see cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.PropertyPath"/> using <see
             cref="P:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Entity"/> as the root object.
            
             <para>
             If the runtime type of the supplied <paramref name="value"/> does
             not match the type of the target property, conversion will be
             attempted:
             <list type="bullet">
             <item>
             If the property is of type <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.IExpression`1"/> and the
             <paramref name="value"/> parameter is of type <see
             cref="T:UnitsNet.IQuantity"/>, the value will be wrapped with <see
             cref="T:Ansys.Disco.Physics.ValueObjects.ConstantExpression`1"/>. This simplifies updates to physics
             model properties such as <see cref="P:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity.Magnitude"/>.
             </item>
             <item>
             Alternatively, if the supplied <paramref name="value"/> parameter
             supports <see cref="T:System.IConvertible"/> then <see
             cref="M:System.Convert.ChangeType(System.Object,System.Type)"/> will be used to try to
             match the type of the value to the type of the property.
             </item>
             </list>
             If type conversion fails then this method will return <see
             langword="false"/>.
             </para>
            
             <para>
             When the target property is read-only and the property path is
             multi-level, special steps are taken to force the update:
             <list type="number">
             <item>
             The object that is hosting the target property is cloned.
             </item>
             <item>
             The read-only property of the cloned object is updated using
             reflection.
             </item>
             <item>
             The cloned object is assigned to the parent.
             </item>
             </list>
             If any step fails then this method returns <see langword="false"/>.
             </para>
             </summary>
             <param name="value">
             The value to write to the property.
             </param>
             <returns>
             Returns <see langword="true"/> if the write succeeded, or <see
             langword="false"/> if the write failed for any reason.
             </returns>
        </member>
        <member name="F:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor.Deserialization.Pattern">
            <summary>
            The <see cref="T:System.Text.RegularExpressions.Regex"/> used to parse the serialized form of
            the <see cref="T:Ansys.Disco.Physics.Entities.Accessors.PropertyAccessor"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.BaseDualScopedEntity">
            <summary>
            Provides a base implementation for an entity that has a scope and
            needs updating when the model is updated.  ie. faces split, edited,
            or new body created.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Side1">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Side2">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.SidesShouldBeDistinct">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Ansys#Disco#Physics#Entities#Behaviours#IHasSecondaryScope#SecondaryScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Ansys#Disco#Physics#Entities#Behaviours#IHasSecondaryScope#UseSecondaryScope">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.SecondaryScope">
            <inheritdoc cref="P:Ansys.Disco.Physics.Entities.Behaviours.IHasSecondaryScope.SecondaryScope"/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.UseSecondaryScope">
            <inheritdoc cref="P:Ansys.Disco.Physics.Entities.Behaviours.IHasSecondaryScope.UseSecondaryScope"/>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Update(Ansys.Disco.Physics.Utilities.ILocationService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseDualScopedEntity.GetFullScope">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.BaseEntityExtensions">
            <summary>
            This class provides extension methods for initializing our entities with Repository and DomainEvent access.
            </summary>
            <remarks>
            TODO: Remove initialization dependencies altogether.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntityExtensions.SetAlive(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Initializes and sets the entity to alive with default repository and events.
            </summary>
            <param name="entity">The entity to be initialized.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntityExtensions.SetAlive(Ansys.Disco.Core.DomainCore.IEntity,Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <summary>
            Initializes and sets the entity to alive with the given repository and events.
            </summary>
            <param name="entity">The entity to be initialized.</param>
            <param name="domainEvents">The domain events the entity uses to publish events for changes.</param>
            <param name="entityRepository">The repository the entity uses for accessing child objects from the document.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntityExtensions.SetRepository(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Initializes the entity with a repository only, and does not set to alive.
            </summary>
            <param name="entity">The entity to be initialized.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.BaseLabelledEntity">
            <summary>
            Provides a base implementation for an entity that has a scope and
            needs updating when the model is updated.  ie. faces split, edited,
            or new body created.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.#ctor(System.Guid,Ansys.Disco.Core.DomainCore.Creator)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.BaseLabelledEntity"/> class.
            </summary>
            <param name="id">The id to be assigned to this object.</param>
            <param name="creator">The creation method for this object.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.#ctor(Ansys.Disco.Physics.Entities.BaseLabelledEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.BaseLabelledEntity"/> class.
            </summary>
            <param name="entity">The entity to be copied.</param>
            <remarks>This is a copy constructor to transfer properties from the given entity.</remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.Label">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.HasLabelBeenUserDefined">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.CounterValue">
            <summary>
            The count of objects of this type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.TypeName">
            <summary>
            Name of the entity type used to create <see cref="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.Label"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.GetUserDefinedLabelOrEmpty">
            <summary>
            Retrieves the label if its user defined, or an empty string.
            </summary>
            <returns>A string if the label is assigned by the user, otherwise an empty string.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.RaiseLabelModified">
            <summary>
            Used by entities with a dynamically-built <see cref="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.Label"/>
            property to notify the domain that something affecting the label
            has changed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.RaiseLabelModifiedUnlessUserDefined">
            <summary>
            Does the same as <see cref="M:Ansys.Disco.Physics.Entities.BaseLabelledEntity.RaiseLabelModified"/>, but only if the
            entity has a default name. If the user has provided an explicit
            name, no event is raised. Used by entities where only the default
            <see cref="P:Ansys.Disco.Physics.Entities.BaseLabelledEntity.Label"/> is dynamically built.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.BaseScopedEntity">
            <summary>
            Provides a base implementation for an entity that has a scope and
            needs updating when the model is updated.  ie. faces split, edited,
            or new body created.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseScopedEntity.Scope">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseScopedEntity.Update(Ansys.Disco.Physics.Utilities.ILocationMappingService)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseScopedEntity.GetFullScope">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseEntity.Id">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.BaseEntity.IsAlive">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntity.GetParent">
            <summary>
            Finds the entity of the parent physics object, returns null if no parent found.
            </summary>
            <returns>The parent entity.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntity.Initialize(Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <summary>
            Initializes the entity with core dependencies for domain events and repositories
            </summary>
            <param name="domainEvents">The domain events</param>
            <param name="entityRepository">The entity repository</param>
            <remarks>Internal for unit testing purposes only</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.BaseEntity.SetRepository(Ansys.Disco.Physics.Repositories.IEntityRepository)">
            <summary>
            Initializes the entity with a repository only, and does not set to alive.
            </summary>
            <param name="entityRepository">The entity repository for looking up child items.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.EntityContextChanged`1">
            <summary>
            Delegate to use when the entity context is changed.
            </summary>
            <param name="owner">The owner of the entity</param>
            <param name="oldItem">The previously referenced entity.</param>
            <param name="newItem">The newly referenced entity.</param>
            <typeparam name="T">The type of the entity.</typeparam>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.EntityContext`1">
            <summary>
            Context wrapper to hold entity reference.
            </summary>
            <typeparam name="T">The type of the entity</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.EntityContext`1.#ctor(Ansys.Disco.Core.DomainCore.IEntity,System.Func{System.Guid,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.EntityContext`1"/> class.
            </summary>
            <param name="owner">The owner of the referenced entity.</param>
            <param name="entityQuery">A query returning the current entity instance, given the entity ID.</param>
        </member>
        <member name="E:Ansys.Disco.Physics.Entities.EntityContext`1.ContextChanged">
            <summary>
            Event executed when the context is changed to refer to a new entity.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.EntityContext`1.Get">
            <summary>
            Gets the current instance of the referenced entity using the given query.
            </summary>
            <returns>The current instance of the entity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.EntityContext`1.Set(`0)">
            <summary>
            Sets the entity reference.
            </summary>
            <param name="entity">The entity to reference.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity">
            <summary>
            Entity representing the global fidelity settings for the simulation.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/> class with default properties.
            </summary>
            <param name="id">Unique identifier for the entity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.#ctor(System.Guid,Ansys.Disco.Physics.Fidelity.FidelitySizingMethod,System.Boolean,Ansys.Disco.Physics.Fidelity.FidelitySizingSettings,System.Boolean,Ansys.Disco.Physics.Fidelity.GlobalFidelityApproachSetting,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="sizingMethod">The sizing method to use</param>
            <param name="usePredefinedSettings">Whether to use the predefined setting</param>
            <param name="sizingSettings">User defined sizing settings (can be null)</param>
            <param name="areCalculatedDefaults">Whether the sizing settings are calculated defaults.</param>
            <param name="fidelityApproachSetting">Fidelity multiplier for Explore stage.</param>
            <param name="fidelityMultiplier">Fidelity multiplier for Explore stage.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingMethod">
            <summary>
            The sizing method to use
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.UsePredefinedSettings">
            <summary>
            Whether to use the predefined settings
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.FidelityApproachSetting">
            <summary>
            pre-defined multiplier options
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.FidelityMultiplier">
            <summary>
            Multiplier when the setting is defined as custom.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SizingSettings">
            <summary>
            The sizing settings that can be set by the user
            To set, use SetSizingSettings method and specify whether these are calculated defaults or user defined
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.IsUsingCurvature">
            <summary>
            Whether the sizing settings method uses curvature
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.IsUsingProximity">
            <summary>
            Whether the sizing settings method uses proximity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.AreCalculatedDefaults">
            <summary>
            Whether the sizing settings are calculated defaults
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.SetSizingSettings(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings,System.Boolean)">
            <summary>
            Set the sizing settings and whether these have been set by the user
            </summary>
            <param name="sizingSettings">The new sizing settings to set</param>
            <param name="areCalculatedDefaults">Whether these sizing settings are calculated defaults</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity">
            <summary>
            Entity representing Local Mesh Fidelity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity.#ctor(System.Guid,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity"/> class.
            </summary>
            <param name="id">Unique identifier for the entity</param>
            <param name="size">Fidelity</param>
            <param name="scope">Scope</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity.Size">
            <summary>
            IExpression for Size of Local Fidelity
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity.CountedTypeIndex">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity.TypeName">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity.Copy">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.ParameterCount">
            <summary>
            The number of parameters held by the <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.SimulationId">
            <summary>
            The simulation id which this entity is a child of.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.Add(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Adds <paramref name="parameter" /> to the <see
            cref="N:Ansys.Disco.Physics.Entities.PhysicsParameters" /> entity.
            </summary>
            <param name="parameter">
            <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> to be added.
            </param>
            <returns>
            <see langword="true" /> if the parameter was added or has already
            been added.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.Clone">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.GetAll">
            <summary>
            Returns all <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s.
            </summary>
            <returns>A list of all <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> s.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.HasParameter(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Determines if a parameter has been added to this root entity.
            </summary>
            <param name="parameter">The parameter being checked if added.</param>
            <returns><see langword="true" /> if the parameter exists.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.HasParameterFor(System.Guid)">
            <summary>
            Check if a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> is available for
            condition with <paramref name="conditionId" />.
            </summary>
            <param name="conditionId">
            The condition being checked for parameterization.
            </param>
            <returns>
            <see langword="true" /> if a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> exists
            for <paramref name="conditionId" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.Remove(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <summary>
            Removes a <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> from the <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </summary>
            <param name="parameter">
            <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> to be removed.
            </param>
            <returns>
            True if the item was removed. False if the item was not found in the
            collection.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.TryGetCondition(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter,Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition@)">
            <summary>
            Tries to return the <paramref name="condition" /> associated with
            <paramref name="parameter" />.
            </summary>
            <param name="parameter">
            The parameter associated with a condition. Parameter must be added
            to this <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.
            </param>
            <param name="condition">
            The condition returned if found for <paramref name="parameter" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="condition" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.TryGetParameterFor(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter@)">
            <summary>
            Tries to return the <paramref name="parameter"/> associated with
            the given <paramref name="condition"/>.
            </summary>
            <param name="condition">
            The condition associated with a parameter within this entity.
            </param>
            <param name="parameter">
            The parameter returned if found for <paramref name="condition"/>.
            </param>
            <returns>
            <see langword="true" /> if an associated <paramref name="parameter"/>
            is not found, otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity.Clone(System.Guid)">
            <summary>
            Helper method to clone a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />
            given an <paramref name="id" />.
            </summary>
            <param name="id">The id to give the clone object.</param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> with values copied from
            this.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.PhysicsParameters.PhysicsParametersEntityFactory.#ctor(Ansys.Disco.Physics.Commands.Helpers.INominalPersistence,Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Factories.PhysicsParameters.PhysicsParametersEntityFactory" /> class.
            </summary>
            <param name="database">
            The database the new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> is to be
            added to.
            </param>
            <param name="repository">
            The repository the new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> is to
            be added to.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.PhysicsParameters.PhysicsParametersEntityFactory.Create(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Create a new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> while adding the
            entity to the database and repository.
            </summary>
            <param name="simulation">
            The parent <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> for the <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> being created.
            </param>
            <returns>A new <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Factories.ParameterSweeps.TestCaseFactory">
            <summary>
            Creates a new test case and adds it to parameter study test cases map. Handles
            spaceclaim transaction and database.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.ParameterSweeps.TestCaseFactory.#ctor(Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Factories.ParameterSweeps.TestCaseFactory"/> class.
            </summary>
            <param name="spaceClaimTransaction">
            Required to update the SpaceClaim document with created entities.
            </param>
            <param name="database">
            The <see cref="T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence"/> where entities are being added
            to.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.ParameterSweeps.TestCaseFactory.AddWithDefaults(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity)">
            <summary>
            Adds a test case to the <paramref name="parameterStudy"/>. A
            new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/> is created, added to
            <see cref="T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence"/>, added to the
            <paramref name="parameterStudy"/>, and then populated with default
            results.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> to add a new
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.TestCaseEntity"/> to.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Factories.ParameterSweeps.DefinedVariationFactory">
            <summary>
            Creates a new defined variation and adds it to a parameter study.
            Handles SpaceClaim transaction and database.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.ParameterSweeps.DefinedVariationFactory.#ctor(Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Factories.ParameterSweeps.DefinedVariationFactory" /> class.
            </summary>
            <param name="spaceClaimTransaction">
            Required to update the SpaceClaim document with created entities.
            </param>
            <param name="database">
            The <see cref="T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence" /> where entities are being
            added to.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.ParameterSweeps.DefinedVariationFactory.AddWithDefaults(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity)">
            <summary>
            Adds a defined variation to the <paramref name="parameterStudy" />.
            A new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> is created, added to
            <see cref="T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence" />, added to the <paramref
            name="parameterStudy" />, and then populated with default results.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> to add a new <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> to.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.ParameterSweeps.DefinedVariationFactory.AddCurrentWithDefaults(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity)">
            <summary>
            Adds a defined variation to the <paramref name="parameterStudy" />.
            A new <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> is created, added to
            <see cref="T:Ansys.Disco.Physics.Commands.Helpers.INominalPersistence" />, added to the <paramref
            name="parameterStudy" />, and then populated with default results.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> to add a new <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.DefinedVariationEntity" /> to.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Factories.SimulationService">
            <summary>
            TODO: DRC - This whole class should be removed, as it does not function as a good service or factory. And at the moment it just deletes a single simulation when importing from a saved database.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.SimulationService.#ctor(Ansys.Disco.Physics.Repositories.SimulationRepository,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Entities.Simulations.SimulationEntity},Ansys.Disco.Physics.Repositories.StudyRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Factories.SimulationService"/> class.
            </summary>
            <param name="simulationRepository"> The repository for simulation entities</param>
            <param name="currentSimulationContext">Application current simulation context</param>
            <param name="studyRepo">The repository for studies</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.SimulationService.RemoveAll">
            <summary>
            Remove from the repo all instances of simulations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.SimulationService.ResumeSavedSimulation">
            <summary>
            Replace in the repo the instance of simulation resumed from memory
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Factories.SimulationService.RemoveAllPhysics">
            <summary>
            Remove all the Physics from the Simulation and the Simulation
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Contacts.IContactsProvider">
            <summary>
            Detects and caches contacts found, refreshes when model geometry changes
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Contexts.ISimulationContext">
            <summary>
            Contains information regarding the current simulation and its context applied to the application
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.Contexts.ISimulationContext.ContextChanging">
            <summary>
            Event signaling simulation context is about to change, where argument is simulation to be activated
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetStage(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the current stage for the given simulation.
            </summary>
            <param name="simulation">The simulation.</param>
            <returns>The last user activity for the simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetSimulationStage(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the current stage for the given simulation.
            </summary>
            <param name="simulation">The simulation.</param>
            <returns>The last active stage for the given simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetProgress(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the current progress for the given simulation.
            </summary>
            <param name="simulation">The simulation.</param>
            <returns>The progress monitor for the simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetInsights(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the current insights for the given simulation.
            </summary>
            <param name="simulation">The simulation.</param>
            <returns>The insights for the simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetCurrentInsights">
            <summary>
            Returns the current insights for the given simulation.
            </summary>
            <returns>The insights for the simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.TryGetParameterStudy(System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <summary>
            Returns the current parameter study for the given simulation without
            active simulation.
            </summary>
            <param name="simulationId">The simulation id.</param>
            <param name="parameterStudy">The parameter study being returned.</param>
            <returns>
            <see langword="true"/> if <paramref name="parameterStudy"/> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.TryGetParameterStudy(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <summary>
            Returns the current parameter study for the given simulation without
            active simulation.
            </summary>
            <param name="parameterStudy">The parameter study being returned.</param>
            <returns>
            <see langword="true"/> if <paramref name="parameterStudy"/> exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetParameterStudy(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the current parameter study for the given simulation without
            active simulation .
            </summary>
            <param name="simulation">The simulation</param>
            <returns>The parameter study for the simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.GetParameterStudy">
            <summary>
            Returns the current parameter study for the given simulation
            </summary>
            <returns>The parameter study for the simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Contexts.ISimulationContext.TryGetPhysicsParameters(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity@)">
            <summary>
            Tries to retrieve the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> that is
            active for the current <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </summary>
            <param name="physicsParameters">
            If a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> exists, it is returned as
            an out parameter.
            </param>
            <returns>
            True if the <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> exists for the
            current simulation, false otherwise.
            </returns>
        </member>
        <member name="F:Ansys.Disco.Physics.Mirrorball.MirrorballControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Mirrorball.MirrorballControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Mirrorball.MirrorballControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.EmagResult.Variable">
            <summary>
            <see cref="P:Ansys.Disco.Physics.Entities.Results.ResultDataSeries.Variable"/>
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Mirrorball.MonitorResult">
            <summary>
            Represents a single monitor result.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Cause">
            <summary>
            Maps to <see cref="T:Ansys.Disco.Physics.Entities.Results.SolveOrigin"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Design">
            <summary>
            Maps to <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.DV">
            <summary>
            Maps to <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Monitor">
            <summary>
            Maps to <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Observer">
            <summary>
            Maps to <see cref="T:Ansys.Disco.Core.Context.ResultSourceType"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Timestamp">
            <summary>
            When the result was recorded.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Mirrorball.MonitorResult.Value">
            <summary>
            Maps to <see cref="P:Ansys.Disco.Physics.Entities.Results.ResultValue.Value"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DataSeriesDefinitionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DataSeriesDefinitionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DualScopedDataSeriesDefinitionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DualScopedDataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DualScopedDataSeriesDefinitionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.QuantityDataSeriesDefinitionEntitySurrogate`1.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.QuantityDataSeriesDefinitionEntity{`0})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.QuantityDataSeriesDefinitionEntitySurrogate`1.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ScopedDataSeriesDefinitionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.ScopedDataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ScopedDataSeriesDefinitionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ChartEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ChartEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DataSeriesDefinitionEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DataSeriesDefinitionEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DualScopedDataSeriesDefinitionEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.DualScopedDataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.DualScopedDataSeriesDefinitionEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ScopedDataSeriesDefinitionEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Charts.DataSeriesDefinition.ScopedDataSeriesDefinitionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Charts.ScopedDataSeriesDefinitionEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GlobalFidelitySettingsEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GlobalFidelitySettingsEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesDefinitionPropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesDefinitionPropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecificationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecificationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecificationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecificationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecificationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecificationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate.op_Implicit(Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate)~Ansys.Disco.Physics.Fidelity.FidelitySizingSettings">
            <summary>
            Implicit conversion from <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate"/> to <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/>.
            </summary>
            <param name="surrogate">The serialization surrogate to convert from.</param>
            <returns>The settings to convert to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate.Serialize(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <summary>
            Converts <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> to <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate"/>.
            </summary>
            <param name="obj">The settings to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate.Deserialize">
            <summary>
            Converts this to <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/>.
            </summary>
            <returns>The settings to convert to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogate.GetObjectData(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.op_Implicit(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)~Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2">
            <summary>
            Implicit conversion from <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> to <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2"/>.
            </summary>
            <param name="settings">The settings to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.op_Implicit(Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2)~Ansys.Disco.Physics.Fidelity.FidelitySizingSettings">
            <summary>
            Implicit conversion from <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2"/> to <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/>.
            </summary>
            <param name="surrogate">The serialization surrogate to convert from.</param>
            <returns>The settings to convert to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.Serialize(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <summary>
            Converts <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> to <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2"/>.
            </summary>
            <param name="obj">The settings to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.Deserialize">
            <summary>
            Converts this to <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/>.
            </summary>
            <returns>The settings to convert to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.FidelitySizingSettingsSurrogateV2.GetObjectData(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BoltLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.BoltLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BoltLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.CoordinateSystemLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.CoordinateSystemLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.CoordinateSystemLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.NamedSelectionLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.NamedSelectionLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.NamedSelectionLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.SketchCurveLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.SketchCurveLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.SketchCurveLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.ScriptDataSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.ScriptData)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.ScriptDataSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BeamLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.BeamLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BeamLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PartLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.PartLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PartLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BodyLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.BodyLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.BodyLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.LineLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.LineLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.LineLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.MeshLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.MeshLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.MeshLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PhysicsObjectLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.PhysicsObjectLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PhysicsObjectLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PlaneLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.PlaneLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PlaneLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PointLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.PointLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PointLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PolygonLocationSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Locations.PolygonLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.PolygonLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.LocationSetSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Locations.LocationSetSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.CellLocationSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.ParameterSweeps.CellLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.CellLocationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.MonitorOutputCellSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.MonitorOutputCellSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.HistoryTrackDimensionSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.HistoryTrackDimensionSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.ColumnHeaderSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.ColumnHeaderSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.ParameterStudyCellSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.ParameterStudyCellSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.RowHeaderSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.RowHeaderSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.DrivingDimensionSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ParameterSweeps.DrivingDimensionSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.RegionCushionsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.RegionCushionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettingsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettingsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.PortPropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.Electromagnetic.PortPropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.PhysicsParameters.PhysicsParameterSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.PhysicsParameters.PhysicsParameterSurrogate.GetObjectData(Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.PhysicsParameters.PhysicsParameterLabelSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.PhysicsParameters.PhysicsParameterLabel)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.PhysicsParameters.PhysicsParameterLabelSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.SimulationOptionsConvergenceSettingsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.SimulationOptionsConvergenceSettingsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.GoalCriteriaTupleConverter.Infer">
            <summary>
            Infer the calculation type
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.GoalCriteriaTupleConverter.LongTerm">
            <summary>
            Use a steady / static solution behavior
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.GoalCriteriaTupleConverter.SpecificDuration">
            <summary>
            Use the transient solution behavior
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.SimulationOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.SimulationOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.SimulationOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConstantExpressionSurrogate`1.GetObjectData(Ansys.Disco.Physics.ValueObjects.ConstantExpression{`0})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConstantExpressionSurrogate`1.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConvectionOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.ConvectionOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConvectionOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.DegreesOfFreedomSurrogate`2.GetObjectData(Ansys.Disco.Physics.ValueObjects.DegreesOfFreedom{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.DegreesOfFreedomSurrogate`2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.HeatPropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.HeatProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.HeatPropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.HeatTransferPropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.HeatTransferProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.HeatTransferPropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.RadiationOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.RadiationOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.RadiationOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.DegreeOfFreedomComponentSurrogate`1.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.DegreeOfFreedomComponentSurrogate`1.GetObjectData(Ansys.Disco.Physics.ValueObjects.DegreeOfFreedomComponent{`0})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.VectorQuantitySurrogate`1.GetObjectData(Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity{`0})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.VectorQuantitySurrogate`1.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.WallThermalPropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.ValueObjects.WallThermalProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.WallThermalPropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AccelerationEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AccelerationEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AccelerationEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AccelerationEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Beams.BeamEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Beams.BeamEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Beams.BeamEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Beams.BeamClassificationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Beams.BeamClassificationSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Beams.BeamDefinitions.BeamClassification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Bolts.BoltSpecificationSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Bolts.BoltSpecificationSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Bolts.BoltDefinitions.BoltSpecification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Bolts.BoltEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Bolts.BoltEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Bolts.BoltEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.ElectromagneticRegionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.ElectromagneticRegionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.ModePortEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.ModePortEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.CircuitPortEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Electromagnetic.CircuitPortEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FluidPressureEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FluidPressureEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.LabelledEntitySurrogate`1.GetObjectData(`0)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ModalSettingsEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.ModalSettingsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ModalSettingsEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialTableEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialTableEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Tables.MaterialTableEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationProtectedDepthEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationProtectedDepthEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationConstraintEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TableQuantityColumnInfoSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TableQuantityColumnInfoSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SpringEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SpringEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.SpringEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.VelocityEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.VelocityEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.VelocityEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.VelocityEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.VelocityEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.VelocityEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DefaultInterfaceOptionsEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceOptionsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DefaultInterfaceOptionsEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.Migrations.ConjugateHeatTransferMigration">
            <summary>
            This class handles post resume actions to adjust an older data model to be compatible with CHT.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.Migrations.ModalMonitorsMigration">
            <summary>
            This class handles post resume actions for an old pure modal simulation
            saved with default structural monitors. In these cases, we do not want
            these structural monitors are they are not applicable so we need
            to remove them.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.Migrations.ModalMonitorsMigration.RemoveDefaultStructuralMonitors(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity)">
            <summary>
            Remove the default structural monitors.
            </summary>
            <param name="insights">The insights with all the monitors for a specific simulation.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MonitorEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MonitorEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.MonitorColumnEntitySurrogate">
            <summary>
            Surrogate for <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/>. This is a rename
            of <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.ResultInsightColumnEntitySurrogate"/> to match
            up with the actual entity which was renamed as well.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.ResultInsightColumnEntitySurrogate">
            <summary>
            Deprecated surrogate for <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/>.
            We now use <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.MonitorColumnEntitySurrogate"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.PhysicsParameterColumnEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ParameterSweeps.PhysicsParameterColumnEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.ParameterSweeps.PhysicsParameterColumnEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.RegionInterfaceEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SymmetryEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SymmetryEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.PorousEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.op_Implicit(Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients)~Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate">
            <summary>
            Implicit conversion from <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients"/> to <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate"/>.
            </summary>
            <param name="coefficients">The loss coefficients to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.op_Implicit(Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate)~Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients">
            <summary>
            Implicit conversion from <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate"/> to <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients"/>.
            </summary>
            <param name="surrogate">The serialization surrogate to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.Serialize(Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients)">
            <summary>
            Converts <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients"/> to <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate"/>.
            </summary>
            <param name="coefficients">The loss coefficients to convert from.</param>
            <returns>The serialization surrogate converted to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.Deserialize">
            <summary>
            Converts this to <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients"/>.
            </summary>
            <returns>The settings to convert to.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PorousLossCoefficientsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.PorousLossCoefficients)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GenericFilterCoefficientsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GenericFilterCoefficientsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.GenericFilterCoefficients)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.NoteEntitySurrogate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.NoteEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.NoteEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Notes.NoteEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.NoteLocationReferenceEntitySurrogate">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.NoteLocationReferenceEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.NoteLocationReferenceEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Notes.NoteLocationReferenceEntity)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.ContactGroupEntitySurrogate">
            <summary>
            Replaces <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.AutomaticContactEntitySurrogate"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactGroupEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactGroupEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FluidTemperatureEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FluidTemperatureEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SolidTemperatureEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SolidTemperatureEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DefaultInterfaceEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DefaultInterfaceEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MassResultInsightEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.MassMonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MassResultInsightEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GlobalFidelitySettingsEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.FidelitySetting.GlobalFidelitySettingsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GlobalFidelitySettingsEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogateV2._resultInsights">
            <summary>
            In the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity"/> this
            field is now renamed to monitors.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogateV2._defaultResultInsights">
            <summary>
            This field is now deprecated as we now use
            the <see cref="T:Ansys.Disco.Core.DomainCore.Creator"/>
            to check if it is default.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogateV2.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.InsightsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogateV2.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PhysicsParameters.PhysicsParametersEntitySurrogate.CreateRealObject">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PhysicsParameters.PhysicsParametersEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate">
            <summary>
            Surrogate used to save an optimization constraint
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate.Serialize(Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper)">
            <summary>
            serializes a constraint for saving into the database
            </summary>
            <param name="obj">the constraint wrapper to serialize</param>
            <returns>a serialzable surrogate</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate.Deserialize(Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate)">
            <summary>
            Deserializes a optimization constraint surrogate
            </summary>
            <param name="surrogate">the surrogate to deserialize</param>
            <returns>the real constraint wrapper object</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationConstraintSurrogate.GetObjectData(Ansys.Disco.Physics.TopologyOptimization.Wrappers.ConstraintWrapper)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationOptionSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OptimizationOptionSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase">
            <summary>
            A base class for <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogate`1"/>.
            </summary>
            <remarks>
            This class exists so we can define shared static property <see
            cref="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.IssueLogger"/> without getting caught
            be the rather tricky C# behavior where a static property on a generic
            class is not shared between specializations. If the logging design is
            changed and a static logger is no longer required then this base class
            can be eliminated. For more information on static properties in generic
            classes, see: https://rules.sonarsource.com/csharp/RSPEC-2743
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.IssueLogger">
            <summary>
            Gets a value representing a <see cref="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.IssueLogger"/>  that can be
            used for logging persistence issues. This property is permitted to
            be <see langword="null"/>.
            </summary>
            <remarks>
            We're using a static property here because serialization surrogates
            are created directly by SpaceClaim and so have no opportunity to
            inject a logger instance before SpaceClaim asks the surrogate to
            perform serialization and deserialization actions. We need the
            surrogate to be able to log any issues that occur during these
            actions and so we need to provide a way to log issues that doesn't
            require constructor injection. We could use a service locator
            pattern, but just putting the logger on a static property involves
            the smallest number of collaborators. A disadvantage of the static
            property approach is that it makes it harder to parallelize
            persistence operations and unit tests.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.SetIssueLogger(Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Sets a <see cref="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.IssueLogger"/> delegate for logging persistence
            issues.
            </summary>
            <param name="issueLogger">
            A <see cref="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase.IssueLogger"/> instance, or <see langword="null"/> to
            disable issue logging.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AssemblyEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AssemblyEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.AutomaticContactEntitySurrogate">
            <summary>
             Replaced by <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ContactGroupEntitySurrogate"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AutomaticContactEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AutomaticContactEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.BearingLoadEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.BearingLoadEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.BoltPreloadEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.BoltPreloadEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.CalculatedResultEntitySurrogate">
            <summary>
            We can't delete this class due to backwards compatibility, so
            this is being ignored on resume.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.CalculatedResultEntitySurrogate.GetObjectData(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.CalculatedResultEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ContactEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ConvectionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ConvectionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DesignChangeEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DesignChangeEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DistributedForceOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DistributedForceOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.EntityReferenceRestorationUtility.AddBackwardsCompatibilityHandler(System.Action)">
            <summary>
            Use if new entities are created and set on aggregate when created as these will
            not have a saved Id
            </summary>
            <param name="handler">The handler to add the new default entity to the aggregate</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.InsightsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsightsEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialStatePropertiesSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialStateProperties)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialStatePropertiesSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletPressureOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletPressureOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletMassFlowOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.OutletMassFlowOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletMassFlowOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletPressureOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletPressureOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletMassFlowOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletMassFlowOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletVelocityOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.OutletVelocityOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletVelocityOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.OutletVelocityOptionsSurrogate.DeserializeSpeedExpression(Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.VectorQuantitySurrogate{UnitsNet.Speed},Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConstantExpressionSurrogate{UnitsNet.Speed})">
            <summary>
            Attempts to deserialize either a velocity or a speed magnitude
            depending on which backwards compatible file we are trying to
            resume.
            </summary>
            <param name="velocitySurrogate">
            The velocity surrogate, can be null.
            </param>
            <param name="speedSurrogate">
            The speed expression surrogate, can be null.
            </param>
            <returns>
            A derserialized <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.IExpression`1"/> from either
            <paramref name="velocitySurrogate"/> or  <paramref
            name="speedSurrogate"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletVelocityOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletVelocityOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InletVelocityOptionsSurrogate.DeserializeSpeedExpression(Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.VectorQuantitySurrogate{UnitsNet.Speed},Ansys.Disco.Physics.Nominal.Persistence.ValueObjects.ConstantExpressionSurrogate{UnitsNet.Speed})">
            <summary>
            Attempts to deserialize either a velocity or a speed magnitude
            depending on which backwards compatible file we are trying to
            resume.
            </summary>
            <param name="velocitySurrogate">
            The velocity surrogate, can be null.
            </param>
            <param name="speedSurrogate">
            The speed expression surrogate, can be null.
            </param>
            <returns>
            A derserialized <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.IExpression`1"/> from either
            <paramref name="velocitySurrogate"/> or  <paramref
            name="speedSurrogate"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialAssignmentEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialAssignmentEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Materials.MaterialEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MaterialEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DisplacementEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.DisplacementEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FactorOfSafetyResultsInsightEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.FactorOfSafetyResultsInsightEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FactorOfSafetyResultsInsightEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FidelityAdjustmentSettingEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FidelityAdjustmentSettingEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FlowEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.FlowEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.FlowEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsulatedEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.InsulatedEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.JointEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.JointEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.JointEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PhysicsRegionEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PhysicsRegionEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PressureDropResultsInsightEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.PressureDropResultsInsightEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PressureDropResultsInsightEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AddedMassEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.AddedMassEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ResultInsightEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ResultInsightEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ResultsEntitySurrogate.GetObjectData(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ResultsEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute">
            <summary>
            Indicates that a class is a serialization surrogate for the class
            provided to the attribute constructor.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute"/> class.
            </summary>
            <param name="surrogateFor">
            The type that this class is a serialization surrogate for. For
            example, <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.ForceEntitySurrogate"/> is a surrogate for <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/>.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute.SurrogateFor">
            <summary>
            Gets a value representing the type serialized by the class
            containing the <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute"/>.
            This value cannot be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute.GetSurrogatePairs(System.Reflection.Assembly)">
            <summary>
            Queries an assembly for classes that have the <see
            cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute"/> and returns a list of
            the (surrogate => original) type mappings.
            </summary>
            <param name="assembly">
            The assembly containing the surrogates.
            </param>
            <returns>
            A list of (surrogate => original) type mappings. The surrogate type
            is guaranteed to belong to the <paramref name="assembly"/>
            specified, but it's permissible for the original type to be defined
            in another assembly. Note also that it is possible for a single
            original type to have multiple surrogates. This situation can occur
            when an existing entity is modified in such a way as to require a
            new surrogate but the <see
            cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute"/> was not removed from
            the previous surrogate class. There is a unit test to prevent this
            situation from going undetected.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="assembly"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Reflection.ReflectionTypeLoadException">
            The assembly contains one or more types that cannot be loaded.
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SimulationEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SimulationEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.StudyEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Simulations.StudyEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.StudyEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SupportEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.SupportEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.SupportEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TorqueForceOptionsSurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TorqueForceOptionsSurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.HeatEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.HeatEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.HeatEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MomentEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.MomentEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.MomentEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GravityEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.GravityEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.GravityEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TemperatureEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.TemperatureEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ForceEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.ForceEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.ForceEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PressureEntitySurrogate.GetObjectData(Ansys.Disco.Physics.Entities.Conditions.PressureEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Persistence.PressureEntitySurrogate.CreateRealObject">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.SpringAnnotation.BuildLocationSet(SpaceClaim.IEvalContext,Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity)">
            <summary>
            Builds the location of the markers/annotations
            </summary>
            <param name="context">The eval context</param>
            <param name="entity">The entity with dual scope</param>
            <returns>A collection of annotation locations</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.Annotations.Handlers.AnnotationUpdateHandler">
            <summary>
            A class to force annotations to update when linked external conditions change
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.Handlers.AnnotationUpdateHandler.#ctor(Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Contexts.ISimulationContext,Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Core.ToMoveToDiscoPhysics.ISolutionItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Nominal.Annotations.Handlers.AnnotationUpdateHandler"/> class.
            </summary>
            <param name="domainEvents">The domain events to listen to.</param>
            <param name="simulationContext">The current simulation context.</param>
            <param name="dataAccess">The data access for the conditions.</param>
            <param name="itemContext">The context for the current solution item.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.TryGetFaceCenterAndNormal(SpaceClaim.IEvaluation,SpaceClaim.Geometry.Point3D@,SpaceClaim.Geometry.Direction@)">
            <summary>
            Gets center and normal for supported IEvaluation
            </summary>
            <param name="evaluation">
            IEvaluation from which to get center and normal. Supports INominalFace and IPersistentMeshPoint.
            </param>
            <param name="center">
            Output will contain center of INominalFace or center of facets of IPersistentMeshPoint if successful.
            </param>
            <param name="normal">
            Output will contain normal direction of INomainalFace or average normal of facets for IPersistentMeshPoint if successful.
            </param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.GetAnchor(SpaceClaim.IEvaluation,System.Boolean)">
            <summary>
            Creates Anchor Point for supported IEvaluation
            </summary>
            <param name="evaluation">
            IEvaluation from which to get anchor point. Supports INominalBody, INominalFace, IMesh and IPersistentMeshPoint.
            </param>
            <param name="ensureOnFace">
            Ensures that anchor point is on nominal face. Set to false to get midpoint.
            </param>
            <returns>Anchor Point</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.GetAnchor">
            <summary>
            Creates Anchor Point on All Bodies
            </summary>
            <returns>Anchor Point</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.GetAxis(SpaceClaim.IEvaluation,System.Boolean)">
            <summary>
            Gets axis origin from possible revolved/cylindrical face or cylindrical mesh region
            </summary>
            <param name="pssibleHasAxis">
            IEvaluation from which to get axis. Supports INominalFace and IPersistentMeshPoint.
            </param>
            <param name="cylinderOnly">
            Return axis only if IEvaluation is a cylinder when set to True. Otherwise will return axis
            if there is one. Applicable only to INominalFace. IPersistentMeshPoint only returns
            axis if a cylinder can be fitted onto facets.
            </param>
            <returns>Axis origin or an undefined point if <paramref name="pssibleHasAxis"/> has no axis.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.TryGetAxisOriginAndDirection(SpaceClaim.IEvaluation,System.Boolean,SpaceClaim.Geometry.Point3D@,SpaceClaim.Geometry.Direction@)">
            <summary>
            Get origin and direction of axis from possible revolved face or mesh region
            </summary>
            <param name="possibleHasAxis">
            IEvaluation from which to get axis. Supports INominalFace and IPersistentMeshPoint.
            </param>
            <param name="cylinderOnly">
            Return axis only if IEvaluation is a cylinder when set to True. Otherwise will return axis
            if there is one. Applicable only to INominalFace. IPersistentMeshPoint only returns
            axis if a cylinder can be fitted onto facets.
            </param>
            <param name="origin">
            Output parameter containing origin of axis of <paramref name="possibleHasAxis"/> if successful, otherwise it is undefined.
            </param>
            <param name="direction">
            Output parameter containing direction of axis of <paramref name="possibleHasAxis"/> if successful, otherwise it has zero direction.
            </param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayExtensionMethods.ProjectOnAxis(SpaceClaim.Geometry.Point3D,SpaceClaim.IEvaluation,System.Boolean)">
            <summary>
            Projects a point onto the axis of possible revolved face or mesh region
            </summary>
            <param name="originalPoint">
            Point to project onto axis of <paramref name="possibleHasAxis"/>. If evaluation has axis, <paramref name="originalPoint"/> is projected onto said axis. Supports INominalFace and IPersistentMeshPoint.
            </param>
            <param name="possibleHasAxis">
            IEvaluation from which to get axis. If evaluation has axis, <paramref name="originalPoint"/> is projected onto said axis. Supports INominalFace and IPersistentMeshPoint.
            </param>
            <param name="cylinderOnly">
            Return axis only if IEvaluation is a cylinder when set to True. Otherwise will return axis
            if there is one. Applicable only to INominalFace. IPersistentMeshPoint only returns
            axis if a cylinder can be fitted onto facets.
            </param>
            <returns><paramref name="originalPoint"/> projected onto axis or <paramref name="originalPoint"/> itself if <paramref name="possibleHasAxis"/> has no axis.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.JointAnnotation.BuildLocationSet(SpaceClaim.IEvalContext,Ansys.Disco.Physics.Entities.Behaviours.IDualScopedEntity)">
            <summary>
            Builds the location of the markers/annotations
            </summary>
            <param name="context">The eval context</param>
            <param name="entity">The entity with dual scope</param>
            <returns>A collection of annotation locations</returns>
            <remarks>This should build a location from Side1 only, otherwise Side2 will offset this midpoint</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayInfo.AddLocationsForEntity(System.Boolean)">
            <summary>
            Creates a hot point (white sphere) on each scoped locations where Annotations are defined
            currently supports only IScopedEntities and IDualScopedEntities
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.Annotations.AnnotationDisplayInfo.GetAnchor(SpaceClaim.IEvaluation)">
            <summary>
            Creates Anchor Point for supported IEvaluation
            </summary>
            <param name="evaluation">
            IEvaluation from which to get anchor point. Supports INominalBody, INominalFace, IMesh and IPersistentMeshPoint.
            </param>
            <returns>Anchor Point</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot">
            <summary>
            Provides mappings between annotations (physics objects) and anchor points in the current simulation
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.#ctor(Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot"/> class.
            </summary>
            <param name="windowProvider">The window provider</param>
            <param name="parent">The physics object parent</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.Anchors">
            <summary>
            The number of anchors mapped to one or more conditions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.Conditions">
            <summary>
            The number of conditions mapped to one or more anchors
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.PhysicsConditions">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.MarkerCollections">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.ContactPairs">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.UnfilteredContactPairs">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.Contains(SpaceClaim.Geometry.Point3D)">
            <summary>
            Checks for existence of anchor in mappings
            </summary>
            <param name="anchor">The 3D location of the anchor</param>
            <returns>Whether or not it has any mappings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.Contains(SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Checks for existence of condition in mappings
            </summary>
            <param name="condition">The condition object</param>
            <returns>Whether or not it has any mappings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetAllConditions">
            <summary>
            Gets all conditions with mappings
            </summary>
            <returns>A list of conditions that have mappings to anchors</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetFilteredContactPairs">
            <summary>
            Gets filtered contact pairs
            </summary>
            <returns>A list of contact pairs filtered by body/face</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetUnfilteredContactPairs">
            <summary>
            Gets unfiltered contact pairs
            </summary>
            <returns>A list of all contact pairs (before filtering by body/face)</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetAllAnchors">
            <summary>
            Gets all anchors with mappings
            </summary>
            <returns>A list of Anchors that have mappings to conditions</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetAllMarkerCollections">
            <summary>
            Gets all Marker Collection objects
            </summary>
            <returns>a list of marker collection objects</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetMarkerCollection(SpaceClaim.Geometry.Point3D)">
            <summary>
            Gets the marker collection assigned to an anchor if one exists
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <returns>a marker collection object</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.HasMarkerCollection(SpaceClaim.Geometry.Point3D)">
            <summary>
            Checks whether an anchor has a marker collection assigned to it
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <returns>Whether or not a marker collection has been created for it</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.AddMapping(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Add a mapping between an condition and an anchor
            </summary>
            <param name="anchor">The 3D location of the anchor</param>
            <param name="condition">The condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.AddPair(SpaceClaim.IPhysicsConditionDisplay,SpaceClaim.AssociatedPair)">
            <summary>
            Add a contact pair for a condition
            </summary>
            <param name="condition">The condition object</param>
            <param name="pair">The contact pair</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.AddUnfilteredContactPair(SpaceClaim.IPhysicsConditionDisplay,SpaceClaim.AssociatedPair)">
            <summary>
            Add a contact pair for a condition
            </summary>
            <param name="condition">The condition object</param>
            <param name="pair">The contact pair</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.ClearPairs(SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Clear contact pairs for this condition
            </summary>
            <param name="condition">The condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.RemoveMapping(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Remove the mapping between an condition and an anchor.
            If either the condition or anchor has no more mappings, it will be removed entirely
            </summary>
            <param name="anchor">The 3D location of the anchor</param>
            <param name="condition">The condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.RemoveAnchor(SpaceClaim.Geometry.Point3D)">
            <summary>
            Remove all mappings for an anchor.
            If any of the conditions that were mapped to the anchor have no more mappings, they will be removed entirely
            </summary>
            <param name="anchor">The 3D location of the anchor</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.RemoveCondition(SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Remove all mappings for a condition including the given condition
            If any of the anchors that were mapped to the condition have no more mappings, they will be removed entirely
            </summary>
            <param name="condition">The condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.ClearAnchors(SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Clear all anchor mappings for an condition
            If any of the anchors that were mapped to the condition have no more mappings, they will be removed entirely
            </summary>
            <param name="condition">The condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetAnchors(SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            Get all anchors mapped to an condition
            </summary>
            <param name="condition">The condition object</param>
            <returns>A list of anchors, empty if the condition is null or has no mappings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.GetConditions(SpaceClaim.Geometry.Point3D)">
            <summary>
            Get all conditions mapped to an anchor
            </summary>
            <param name="anchor">The 3D location of the anchor</param>
            <returns>A list of conditions, empty if the anchor has no mappings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.IsSuppressed(SpaceClaim.IEvaluation)">
            <summary>
            Check if a body is suppressed
            </summary>
            <param name="eval">The evaluation</param>
            <returns>true is body is suppressed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.HasSuppressedBodies">
            <summary>
            Check if a simulation has suppressed bodies
            </summary>
            <returns>true simulation has suppressed bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.AddConditionToAnchor(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            adds condition to list of conditions mapped to anchor, updating anchor's marker collection as needed
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <param name="condition">the condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.AddAnchorToCondition(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            adds anchor to list of anchors mapped to condition
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <param name="condition">the condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.RemoveConditionFromAnchor(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            removes condition from list of conditions mapped to anchor, updating anchor's marker collection as needed
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <param name="condition">the condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.RemoveAnchorFromCondition(SpaceClaim.Geometry.Point3D,SpaceClaim.IPhysicsConditionDisplay)">
            <summary>
            removes anchor from list of anchors mapped to condition
            </summary>
            <param name="anchor">the 3D location of the anchor</param>
            <param name="condition">the condition object</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.IsSideValid(System.Collections.Generic.IList{SpaceClaim.IEvaluation})">
            <summary>
            check if sides have valid faces
            </summary>
            <param name="side">the list of side faces</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.MarkerCollection.PhysicsRoot.PointComparer">
            <summary>
            the Point3D class does not implement GetHashCode, so this comparer provides one <para />
            the GetHashCode method is a preliminary equality check used by the Dictionary class before checking Equals
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.MarkerCollection.MarkerCollection.Anchor">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObjectDef.ReplaceScopedReferences(System.Collections.Generic.IDictionary{SpaceClaim.IEvaluation,SpaceClaim.IEvaluation})">
            <summary>
            Allows the replacement of scoped references when a move or copy
            occurs.
            </summary>
            <param name="map">
            The map of replacements, where the key is the original, and the
            value is the replacement.
            </param>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.SerializationInfoNameForEntity">
            <summary>
            The name used to store the serialized form of an <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> within a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>. This
            name must <b>never</b> be changed because it is a fundamental part
            of the application project file format.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef._issueLogger">
            <summary>
            A place to log issues.
            </summary>
            <remarks>
            For the rationale for using a static property, see <see
            cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase"/>.
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef._tryGetSurrogateFor">
            <summary>
            Maps original object type to a <see
            cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> instance capable of persisting the
            original.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef"/>
            class. Copy constructor - Needs to take a deep copy on backup.
            </summary>
            <param name="other">
            The other object to copy.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes <see cref="P:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.Entity"/> to the supplied
            <see cref="T:System.Runtime.Serialization.SerializationInfo"/> using the format that the
            SpaceClaim serializer expects.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/>. Must not be <see langword="null"
            />.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/>. This parameter exists only to
            satisfy SpaceClaim's calling convention. The value of this
            parameter is ignored.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.ReplaceScopedReferences(System.Collections.Generic.IDictionary{SpaceClaim.IEvaluation,SpaceClaim.IEvaluation})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.SetIssueLogger(Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Sets the <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance that this class should
            use for reporting persistence issues.
            </summary>
            <param name="logIssue">
            A <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance, or <see langword="null"/> to
            disable issue logging.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.SetTryGetSurrogateFor(Ansys.Disco.Physics.Persistence.TryGetSurrogateFor)">
            <summary>
            Sets the delegate used to map from an original object type to an
            instance of <see cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> suitable for
            persisting the original.
            </summary>
            <param name="tryGetSurrogateFor">
            A <see cref="T:Ansys.Disco.Physics.Persistence.TryGetSurrogateFor"/> delegate. This parameter is
            permitted to be <see langword="null"/>.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.TrySerializeEntity(Ansys.Disco.Core.DomainCore.IEntity,Ansys.Disco.Physics.Persistence.TryGetSurrogateFor,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Attempts to convert the supplied <paramref name="entity"/> to an
            object that SpaceClaim's serializer is able to store in the
            document.xml file within the .dsco (project) file.
            </summary>
            <param name="entity">
            The <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance to serialize. This property may
            be <see langword="null"/>.
            </param>
            <param name="tryGetSurrogateFor">
            A <see cref="T:Ansys.Disco.Physics.Persistence.TryGetSurrogateFor"/> delegate for mapping original
            objects to their corresponding <see
            cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> objects.
            </param>
            <param name="issueLogger">
            A <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance. This parameter may be <see
            langword="null"/>.
            </param>
            <returns>
            If successful, returns an object instance that implements the
            standard .NET serialization protocol for SpaceClaim to serialize to
            the project file. If the <paramref name="entity"/> cannot be
            converted to a serializable form, <see langword="null"/> is
            returned and one or more issues will be logged via <paramref
            name="issueLogger"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1">
            <summary>
            The deserialization proxy for the <see cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1._issueLogger">
            <summary>
            A place to log issues.
            </summary>
            <remarks>
            For the rationale for using a static property, see <see
            cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateBase"/>.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.Entity">
            <summary>
            Accessor for the <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> object.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Attempts to deserialize an IEntity object from the information
            stored in a <see cref="T:System.Runtime.Serialization.SerializationInfo"/>. If an issue occurs
            during deserialization, details will be logged to <see
            cref="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1._issueLogger"/> (if defined). If an entity cannot be
            recreated, <see cref="P:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.Entity"/> will be set to
            an instance of <see cref="T:Ansys.Disco.Physics.Persistence.MalformedEntity"/> to avoid issues where
            clients of <see cref="P:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.Entity"/> are not
            prepared to handle a <see langword="null"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> containing the serialized entity
            information. The <paramref name="info"/> is expected to contain a
            single value named for <see
            cref="F:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef.SerializationInfoNameForEntity" />.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/>. This parameter exists only to
            satisfy the <see cref="T:SpaceClaim.Serialization.IDeserializationProxy"/> interface. The
            value of this parameter is ignored.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.GetRealObject">
            <summary>
            Creates the real object from the deserialized data.
            </summary>
            <returns>The instance of the revived <see cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef"/> object.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.SetObjectData(System.Object)">
            <summary>
            Sets the persisted object data to be serialized.
            </summary>
            <param name="obj">The <see cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef"/> instance to be serialized.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.SetIssueLogger(Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Sets the <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance that this class should
            use for reporting persistence issues.
            </summary>
            <param name="issueLogger">
            The <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance, or <see langword="null"/>
            to disable issue logging.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.TryUnpackEntity(System.Runtime.Serialization.SerializationInfo,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Attempts to extract an IEntity from the <see
            cref="T:System.Runtime.Serialization.SerializationInfo"/> that SpaceClaim gives us in <see
            cref="M:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObjectDef_v1.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> provided by SpaceClaim. We are
            expecting our entity to be stored against the <c>entity</c> name.
            </param>
            <param name="issueLogger">
            A <see cref="T:Ansys.Disco.Core.Issues.IIssueLogger"/> instance. This parameter may be <see
            langword="null"/>.
            </param>
            <returns>
            An <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance, or null if there was a problem.
            </returns>
            <remarks>
            This method is surprisingly long for such a simple activity, but
            there are a number of ways that things can go wrong so care is
            taken to record as much useful information as possible in the
            failure cases.
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Suppression.IPhysicsSuppressionAttributeTransfer">
            <summary>
            Handle Physics Suppression Attribute Transfer
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.IPhysicsSuppressionAttributeTransfer.TransferSuppressedBodies(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Retrieves, and clears the suppressed bodies in a document and transfers the suppression to the given simulation
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Suppression.ISuppressedAttributeHelper">
            <summary>
            Helper for handling suppression attributes in SpaceClaim
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.ISuppressedAttributeHelper.GetSuppressedForPhysicsBodies(SpaceClaim.IDocument)">
            <summary>
            Retrieves all the legacy suppressed physics bodies in SpaceClaim
            </summary>
            <param name="document">The current document.</param>
            <returns>A collection of evaluation bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.ISuppressedAttributeHelper.RemoveSuppressedForPhysicsAttribute(SpaceClaim.IEvaluation)">
            <summary>
            Removes legacy suppression state from bodies in SpaceClaim.
            </summary>
            <param name="eval">The evaluation body to remove the suppression from.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer">
            <summary>
            This class can be used to clear and transfer any legacy SpaceClaim SCDOC suppression attributes to Discovery simulations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.#ctor(Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Physics.Suppression.ISuppressedAttributeHelper,Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService,Ansys.Disco.Core.Persistence.ISessionAdapter,Prism.Logging.ILoggerFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer"/> class.
            </summary>
            <param name="windowProvider">The interaction window provider, used to get access to the active document.</param>
            <param name="suppressionHelper">A helper to retrieve and clear suppression attribute states in SpaceClaim.</param>
            <param name="physicsSuppressionService">The physics body suppression service.</param>
            <param name="session">The session used to execute commands for clearing suppression state.</param>
            <param name="logger">A logger, used to log and capture any exceptions as a result of transferring suppression state.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.TransferSuppressedBodies(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Retrieves, and clears the suppressed bodies in a document and transfers the suppression to the given simulation
            </summary>
            <param name="simulation">The simulation to suppress bodies for</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.RetrieveAndClearSuppressedBodies">
            <summary>
            This method will find all of the bodies in the SpaceClaim document that have a "SuppressedAttribute" applied,
            and clear them as we do not use it in Discovery.
            </summary>
            <remarks>
            The "SuppressedAttribute" is a legacy flag that SpaceClaim would use to control the bodies transferred and applied to physics in other applications,
            such as AIM. ModelManager and Refine are still reading this attribute, and is it no longer required when we send geometry from Discovery.
            We therefore need to find all suppressed bodies, and clear the "SuppressedAttribute" from them, so that we control the suppression state in Discovery.
            Using the returned suppressed bodies, we can then set our own suppressed state on the simulation.
            </remarks>
            <returns>A list of the suppressed bodies that were found.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.TransferSuppressedBodies(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Collections.Generic.IList{SpaceClaim.IEvaluation})">
            <summary>
            Transfers the suppressed bodies to the given simulation
            </summary>
            <param name="simulation">The simulation to suppress bodies for</param>
            <param name="suppressedBodies">The suppressed bodies to apply</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.DoRetrieveAndClearSuppressedBodies">
            <inheritdoc cref="M:Ansys.Disco.Physics.Suppression.PhysicsSuppressionAttributeTransfer.RetrieveAndClearSuppressedBodies"/>
        </member>
        <member name="T:Ansys.Disco.Physics.Suppression.SuppressedAttributeHelper">
            <inheritdoc cref="T:Ansys.Disco.Physics.Suppression.ISuppressedAttributeHelper"/>
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.SuppressedAttributeHelper.GetSuppressedForPhysicsBodies(SpaceClaim.IDocument)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Suppression.SuppressedAttributeHelper.RemoveSuppressedForPhysicsAttribute(SpaceClaim.IEvaluation)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties">
            <summary>
            Common properties for chart data series definition entities.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties.#ctor(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Core.Results.Types.ResultComponent,Ansys.Disco.Core.Results.Types.ResultDimension)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties"/> class.
            </summary>
            <param name="variable">Variable of the data series</param>
            <param name="component">Component of the data series</param>
            <param name="dimension">Dimension of the data series</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties"/> class for Total Gain.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties.Component">
            <summary>
            Component
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesDefinitionProperties.Dimension">
            <summary>
            Dimension
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification">
            <summary>
            Style properties for a bar chart data series.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification"/> class.
            </summary>
            <param name="barColor">Color of the bar series</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.BarColor">
            <summary>
            Bar color
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.PrimaryColor">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.ChangePrimaryColor(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.ChangeBarColor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification"/> class with the updated color.
            </summary>
            <param name="newColor">Updated color of the bar series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.BarSeriesStyleSpecification.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification">
            <summary>
            Style properties for a line chart data series.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class.
            </summary>
            <param name="lineColor">Color of the data series line</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.#ctor(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyle,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class.
            </summary>
            <param name="lineStyle">Style of the data series line</param>
            <param name="lineColor">Color of the data series line</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.#ctor(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyle,System.Drawing.Color,System.Boolean,System.Drawing.Color,Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.PointGeometry,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class.
            </summary>
            <param name="lineStyle">Style of the data series line</param>
            <param name="lineColor">Color of the data series line</param>
            <param name="showDataPoints">Show or hide the data points along series line</param>
            <param name="pointColor">Color of the data point geometry</param>
            <param name="pointGeometry">Shape of the data point geometry</param>
            <param name="geometrySize">Size of the data point geometry</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.LineStyle">
            <summary>
            Line style
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.LineColor">
            <summary>
            Line color
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ShowDataPoints">
            <summary>
            Show or hide data points
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.PointColor">
            <summary>
            Point color
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.PointGeometry">
            <summary>
            Point geometry
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.GeometrySize">
            <summary>
            Geometry size
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.PrimaryColor">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangePrimaryColor(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangeLineStyle(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyle)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class with the updated line style.
            </summary>
            <param name="newStyle">Updated style of the line series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangeLineColor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class with the updated line color.
            </summary>
            <param name="newColor">Updated color of the line series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangePointColor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class with the updated point color.
            </summary>
            <param name="newColor">Updated geometry color of the line series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangePointGeometry(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.PointGeometry)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class with the updated point geometry shape.
            </summary>
            <param name="newGeometry">Updated geometry shape of the line series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.ChangeGeometrySize(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class with the updated point geometry size.
            </summary>
            <param name="newSize">Updated geometry size of the line series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.LineSeriesStyleSpecification.Copy">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification">
            <summary>
            Style properties for a scatter chart data series.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class.
            </summary>
            <param name="pointColor">Color of the data points</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.#ctor(System.Drawing.Color,Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.PointGeometry,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class.
            </summary>
            <param name="pointColor">Color of the data point geometry</param>
            <param name="pointGeometry">Shape of the data point geometry</param>
            <param name="geometrySize">Size of the data point geometry</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.PointColor">
            <summary>
            Point color
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.PointGeometry">
            <summary>
            Point geometry
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.GeometrySize">
            <summary>
            Geometry size
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.PrimaryColor">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.ChangePrimaryColor(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.ChangePointColor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class with the updated point color.
            </summary>
            <param name="newColor">Updated color of the scatter series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.ChangePointGeometry(Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.PointGeometry)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class with the updated point geometry shape.
            </summary>
            <param name="newGeometry">Updated geometry shape of the scatter series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.ChangeGeometrySize(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class with the updated point geometry size.
            </summary>
            <param name="newSize">Updated geometry size of the scatter series</param>
            <returns>A new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification"/> class</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Charts.DataSeriesStyleSpecification.ScatterSeriesStyleSpecification.Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.DetailedLocationSetComparer.Equals(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.DetailedLocationSetComparer.GetHashCode(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.CushionDirection">
            <summary>
            Specifies one of the six sides of the bounding cube for the electromatic region.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions">
            <summary>
            User defined cushion values for electromagnetic region
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions"/> class.
            </summary>
            <param name="cushionValue">Cushion value in all directions</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Ansys.Disco.Physics.ValueObjects.Electromagnetic.CushionDirection,System.Double}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions"/> class.
            </summary>
            <param name="cushionMap">A mapping of cushion values and their directions</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions"/> class with no cushion values.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.CushionValues">
            <summary>
            Map of cushion amount for each side with a custom cushion value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.TryGetCushionValue(Ansys.Disco.Physics.ValueObjects.Electromagnetic.CushionDirection,System.Double@)">
            <summary>
            Get cushion value for a given cushion direction
            </summary>
            <param name="cushionDirection">Direction of required cushion</param>
            <param name="cushionValue">Cushion value in requested direction if it exists</param>
            <returns>True if a cushion value in requested direction is stored</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.ResetDirection(Ansys.Disco.Physics.ValueObjects.Electromagnetic.CushionDirection)">
            <summary>
            Removes stored cushion value in given direction (so default can be used)
            </summary>
            <param name="direction">Direction of cushion value to be reset</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.RegionCushions.ChangeCushion(Ansys.Disco.Physics.ValueObjects.Electromagnetic.CushionDirection,System.Double)">
            <summary>
            Updates or adds a cushion value for a given cushion direction
            </summary>
            <param name="cushionDirection">Direction of required cushion</param>
            <param name="cushionValue">Cushion value in requested direction if it exists</param>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings">
            <summary>
            Electromagnetic solver settings
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.#ctor(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Double},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,UnitsNet.Duration},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,UnitsNet.ElectricConductivity},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.ElectromagneticConductiveLossesType})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings"/> class.
            </summary>
            <param name="electromagneticConvergenceTarget">Electromagnetic convergence target</param>
            <param name="maximumSimulationDuration">Maximum simulation duration</param>
            <param name="numberOfFarfieldFrequencyPoints">Number of farfield frequency points</param>
            <param name="numberOfNearfieldFrequencyPoints">Number of nearfield frequency points</param>
            <param name="numberOfSParameterFrequencyPoints">Number of s-parameter frequency points</param>
            <param name="perfectConductivityThreshold">Perfect conductivity threshold</param>
            <param name="electromagneticConductiveLossesType">Electromagnetic conductive losses type</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings"/> class
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.ElectromagneticConvergenceTarget">
            <summary>
            Target numerical convergence
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.MaximumSimulationDuration">
            <summary>
            Maximum simulation duration
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.NumberOfFarfieldFrequencyPoints">
            <summary>
            Number of farfield frequency points
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.NumberOfNearfieldFrequencyPoints">
            <summary>
            Number of nearfield frequency points
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.NumberOfSParameterFrequencyPoints">
            <summary>
            Number of s-parameter frequency points
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.PerfectConductivityThreshold">
            <summary>
            Perfect conductivity threshold
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings.ElectromagneticConductiveLossesType">
            <summary>
            Conductive losses type
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties">
            <summary>
            Properties for electromagnetic port
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.ElectricResistance},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.ElectricPotential},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Angle},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties"/> class.
            </summary>
            <param name="impedance">Impedance of the port</param>
            <param name="magnitude">Magnitude of the port</param>
            <param name="phase">Phase of the port</param>
            <param name="passive">Passive port</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.Default">
            <summary>
            Creates a default instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties"/> class with a 50 Ohm impedance, 0 Watt power and 0 radians phase.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.Impedance">
            <summary>
            Impedance
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.Magnitude">
            <summary>
            Magnitude
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Electromagnetic.PortProperties.Passive">
            <summary>
            Passive
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation.GetFields">
            <summary>
            Retrieves the fields used for ValueObject equality
            </summary>
            <remarks>FaceLocation equality should only be determined by the moniker and update state from the base class</remarks>
            <returns>A collection of fields used to check for equality</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ColumnHeader">
            <summary>
            The parameter study column header/column name.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension">
            <summary>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/> wraps the HistoryTrack parameters, that can
            drive model changes.
            </summary>
            <remarks>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService"/> maintains external dependencies
            required to manipulate
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension"/>'s.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension.ScriptName">
            <summary>
            Unique identifier for parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension.FromBlock(SpaceClaim.Scripting.IBlockBase)">
            <summary>
            Create dimension from History Track block
            </summary>
            <param name="blockBase">Block that defines parameter</param>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService">
            <summary>
            Contains dependencies and methods required to retrieve and change the
            values of a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/>.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.HistoryTrackDimensionCreated">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.HistoryTrackDimensionDeleted">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.HistoryTrackDimensionModified">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.SetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension,UnitsNet.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.GetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.GetDimensionType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.GetValueType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.GetAllHistoryTrackDimensions">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService.GetHistoryTrackDimensionHeader(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService">
            <summary>
            Contains dependencies and methods required to retrieve and change the
            values of a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" />.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.DrivingDimensionCreated">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.DrivingDimensionDeleted">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.DrivingDimensionModified">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetAllDrivingDimensions">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetDimensionType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetDrivingDimensionName(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetLocation(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.GetValueType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.HasDrivingDimension">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.SetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,UnitsNet.IQuantity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.TryGetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,UnitsNet.IQuantity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService.InvokeAfterCommandCompleted(SpaceClaim.Task)">
             <remarks>
             Using the <see cref="T:Ansys.Disco.CoreUI.Adapters.IInvokeHelper"/> we delay execution of tasks,
             such as raising a driving dimension events, until after the currently
             executing command has completed.
            
             We do this to avoid the potential of the associated handlers attempting
             to grab the value related to the driving-dimension during the command
             and altering the current command properties; this occurs as to
             get the value the pull-tool is invoked in the background.
            
             Alongside the above reason this delayed invoke makes the behavior
             between these standard events related to driving-dimensions and
             our internal domain events closer to one another, i.e. executed
             after the command has completed.
             </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService">
            <summary>
            Header interface for <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimensionService" />.
            </summary>
            <remarks>Being used for unit tests.</remarks>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.DrivingDimensionCreated">
            <summary>
            Event thrown when a driving dimension has been created.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.DrivingDimensionDeleted">
            <summary>
            Event thrown when a driving dimension has been deleted.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.DrivingDimensionModified">
            <summary>
            Event thrown when a driving dimension has been modified.
            </summary>
            <remarks>
            Currently only being used to respond to name changes.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.GetDimensionType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <summary>
            Try to get the <see cref="T:SpaceClaim.Geometry.DimensionType" /> of <paramref
            name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> to grab <see
            cref="T:SpaceClaim.Geometry.DimensionType" /> from.
            </param>
            <returns>
            The <see cref="T:SpaceClaim.Geometry.DimensionType" /> of <paramref
            name="drivingDimension" /> or null if unsuccessful.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.OnDrivingDimensionNameModified(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <summary>
            Check if the name <paramref name="drivingDimension"/> is modifying
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> whose name is being asked
            for.
            </param>
            <returns>
            True if name is modifying.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.GetLocation(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <summary>
            Gets the location of <paramref name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> whose location is being asked
            for.
            </param>
            <returns>
            A <see cref="T:Ansys.Disco.Physics.ValueObjects.LocationSet" /> for <paramref name="drivingDimension"
            />. An empty <see cref="T:Ansys.Disco.Physics.ValueObjects.LocationSet" /> is returned if a proper
            location cannot be found.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.GetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <summary>
            Try to get the value of <paramref name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> to grab value from.
            </param>
            <returns>
            A (bool success, IQuantity quantity) tuple. Success will be true if
            the quantity value was populated.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.GetValueType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension)">
            <summary>
            Try to get the <see cref="T:SpaceClaim.Geometry.DimensionValueType" /> of <paramref
            name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> to grab <see
            cref="T:SpaceClaim.Geometry.DimensionValueType" /> from.
            </param>
            <returns>
            The <see cref="T:SpaceClaim.Geometry.DimensionValueType" /> of <paramref
            name="drivingDimension" /> or null if unsuccessful.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.HasDrivingDimension">
            <summary>
            Checks if greater than or equal to 1 driving dimensions exists.
            </summary>
            <returns>
            <see langword="true" /> if greater than or equal to 1 driving
            dimensions exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.SetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,UnitsNet.IQuantity)">
            <summary>
            Try to set the value of the <paramref name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> being set.
            </param>
            <param name="quantity">
            The value to set <paramref name="drivingDimension" /> to.
            </param>
            <returns>False if the value was not set.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService.TryGetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension,UnitsNet.IQuantity@)">
            <summary>
            Try to get the value of <paramref name="drivingDimension" />.
            </summary>
            <param name="drivingDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension" /> to grab value for.
            </param>
            <param name="value">
            The <see cref="T:UnitsNet.IQuantity" /> returned if found.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="value" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension">
            <summary>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension"/>'s in Disco wrap <see cref=
            "T:SpaceClaim.INamedSelection"/>'s from SpaceClaim in order make changes and retrieve
            values.
            </summary>
            <remarks>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IDrivingDimensionService"/> maintains external dependencies
            required to manipulate
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.DrivingDimension"/>'s.
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService">
            <summary>
            Header interface for <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimensionService"/>.
            </summary>
            <remarks>Being used for unit tests.</remarks>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.HistoryTrackDimensionCreated">
            <summary>
            Event thrown when a history track dimension has been created.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.HistoryTrackDimensionDeleted">
            <summary>
            Event thrown when a history track dimension has been deleted.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.HistoryTrackDimensionModified">
            <summary>
            Event thrown when a history track dimension has been modified.
            </summary>
            <remarks>Currently only being used to respond to name changes.</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.GetDimensionType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <summary>
            Try to get the <see cref="T:SpaceClaim.Geometry.DimensionType"/> of <paramref name="historyTrackDimension"/>.
            </summary>
            <param name="historyTrackDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/> to grab <see
            cref="T:SpaceClaim.Geometry.DimensionType"/> from.
            </param>
            <returns>
            The <see cref="T:SpaceClaim.Geometry.DimensionType"/> of <paramref
            name="historyTrackDimension"/> or null if unsuccessful.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.GetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <summary>
            Try to get the value of <paramref name="historyTrackDimension"/>.
            </summary>
            <param name="historyTrackDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/> to grab value from.
            </param>
            <returns>
            A (bool success, IQuantity quantity) tuple. Success will be true if
            the quantity value was populated.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.GetValueType(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension)">
            <summary>
            Try to get the <see cref="T:SpaceClaim.Geometry.DimensionValueType"/> of <paramref name="historyTrackDimension"/>.
            </summary>
            <param name="historyTrackDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/> to grab <see
            cref="T:SpaceClaim.Geometry.DimensionValueType"/> from.
            </param>
            <returns>
            The <see cref="T:SpaceClaim.Geometry.DimensionValueType"/> of <paramref
            name="historyTrackDimension"/> or null if unsuccessful.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IHistoryTrackDimensionService.SetValue(Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension,UnitsNet.IQuantity)">
            <summary>
            Try to set the value of the <paramref name="historyTrackDimension"/>.
            </summary>
            <param name="historyTrackDimension">
            The <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.HistoryTrackDimension"/> being set.
            </param>
            <param name="quantity">
            The value to set <paramref name="historyTrackDimension"/> to.
            </param>
            <returns>False if the value was not set.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService">
            <summary>
            Header interface for <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService" />.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ForceScriptParameterRedraw">
            <summary>
            Event to force UI redraw of script parameters table.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ScriptParameterCreated">
            <summary>
            Event thrown when a script parameter has been created.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ScriptParameterDeleted">
            <summary>
            Event thrown when a script parameter has been deleted.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ScriptParameterModified">
            <summary>
            Event thrown when a script parameter has been modified.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ScriptAutoExecutionEnabled">
            <summary>
            Event thrown when script auto execution has been enabled.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ScriptAutoExecutionDisabled">
            <summary>
            Event thrown when script auto execution has been disabled.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.GetAllScriptParameters">
            <summary>
            Fetches the list of all script parameters.
            </summary>
            <returns>
            List containing all <see cref="T:SpaceClaim.INamedScriptParameter"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.AddScriptGroup">
            <summary>
            Adds a new <see cref="T:SpaceClaim.INamedScriptGroup"/> to the
            SpaceClaim document.
            </summary>
            <returns>
            The added <see cref="T:SpaceClaim.INamedScriptGroup"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.AddDefaultScriptParameter">
            <summary>
            Adds a new defaulted <see cref="T:SpaceClaim.INamedScriptParameter"/> to the
            SpaceClaim document.
            </summary>
            <returns>
            The added <see cref="T:SpaceClaim.INamedScriptParameter"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.RemoveScriptParameter(SpaceClaim.INamedScriptParameter)">
            <summary>
            Removes the given <see cref="T:SpaceClaim.INamedScriptParameter"/> from the
            SpaceClaim document.
            </summary>
            <param name="scriptParameter">
            <see cref="T:SpaceClaim.INamedScriptParameter"/> to be removed.
            </param>
            <returns>
            <see langword="true"/> if the script parameter is successfully
            removed, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.EditScriptParameterName(SpaceClaim.INamedScriptParameter,System.String)">
            <summary>
            Change the name of a given script parameter.
            </summary>
            <param name="scriptParameter">
            <see cref="T:SpaceClaim.INamedScriptParameter"/> whose name is being edited.
            </param>
            <param name="name">
            New name for the script parameter.
            </param>
            <returns>
            <see langword="true"/> if the script parameters name is
            successfully changed, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.EditScriptParameterValue(SpaceClaim.INamedScriptParameter,System.Double)">
            <summary>
            Change the value of a given script parameter.
            </summary>
            <param name="scriptParameter">
            <see cref="T:SpaceClaim.INamedScriptParameter"/> whose value is being edited.
            </param>
            <param name="value">
            New value for the script parameter.
            </param>
            <returns>
            <see langword="true"/> if the script parameters value is
            successfully changed, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.EditScriptParameterUnit(SpaceClaim.INamedScriptParameter,SpaceClaim.NamedScriptParameterUnitType)">
            <summary>
            Change the unit of a given script parameter.
            </summary>
            <param name="scriptParameter">
            <see cref="T:SpaceClaim.INamedScriptParameter"/> whose unit is being edited.
            </param>
            <param name="unit">
            New unit for the script parameter.
            </param>
            <returns>
            <see langword="true"/> if the script parameters unit is
            successfully changed, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.PauseEmbeddedScript">
            <summary>
            Pauses auto execution of embedded script group.
            </summary>
            <returns>
            <see langword="true"/> if the script group auto execution is
            paused, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.UnpauseEmbeddedScript">
            <summary>
            Unpauses auto execution of embedded script group.
            </summary>
            <returns>
            <see langword="true"/> if the script group auto execution is
            unpaused, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.IsCurrentScriptGroupPaused">
            <summary>
            Returns a boolean indicating if the current script group is paused.
            </summary>
            <returns>
            <see langword="true"/> if the script group auto execution is
            paused, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.IScriptParameterService.ProjectContainsEmbeddedScript">
            <summary>
            Returns a boolean indicating if the project contains an embedded
            script group.
            </summary>
            <returns>
            <see langword="true"/> if the project contains an embedded
            <see cref="T:SpaceClaim.INamedScriptGroup"/>, otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell">
            <summary>
            Represents a single output cell in a parameter study table. An output
            cell is keying information to associated solver result values.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell.Empty">
            <summary>
            Create an empty <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/>.
            </summary>
            <returns>
            A <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/> initialized without data.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell.FromReference(System.Guid,System.Guid,System.Guid)">
            <summary>
            Create a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/>.
            </summary>
            <param name="variationId">
            Id of variation the output cell is associated with.
            </param>
            <param name="monitorId">
            Id of monitor the output cell is associated with.
            </param>
            <param name="designChangeId">
            Id of design change entity the referenced.
            </param>
            <returns>
            A <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell"/> initialized with data.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache">
            <summary>
            Stores a collection of <see cref="T:SpaceClaim.INamedSelection" />.
            </summary>
            <remarks>
            This cache exists to associate a <see cref="T:SpaceClaim.INamedSelection" /> with its
            own <see cref="T:SpaceClaim.CachedDataState" />. The <see cref="T:SpaceClaim.CachedDataState" />
            struct has to be initialized before the update state can be compared.
            When a <see cref="T:SpaceClaim.INamedSelection" /> is added to this cache, the <see
            cref="T:SpaceClaim.CachedDataState" /> is initialized and can be retrieved to compare
            states.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />
            class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.Count">
            <summary>
            Returns the number of <see cref="T:SpaceClaim.INamedSelection" /> stored in this
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.Add(SpaceClaim.INamedSelection)">
            <summary>
            Adds <paramref name="namedSelection" /> to the <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            </summary>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection" /> being added. If <see
            langword="null" />, nothing is added to the cache and the method
            returns.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.Clear">
            <summary>
            Clears all <see cref="T:SpaceClaim.INamedSelection" /> from the cache <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.GetCachedDataState(SpaceClaim.INamedSelection)">
            <summary>
            Gets the <see cref="T:SpaceClaim.CachedDataState" /> for a given <paramref
            name="namedSelection" />.
            </summary>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection" /> whose <see cref="T:SpaceClaim.CachedDataState"
            /> is to be returned.
            </param>
            <returns>
            The <see cref="T:SpaceClaim.CachedDataState" /> of <paramref
            name="namedSelection" />. Returns <see langword="null" /> if
            <paramref name="namedSelection" /> does not exist in the <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache.Remove(SpaceClaim.INamedSelection)">
            <summary>
            Removed <paramref name="namedSelection" /> from <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            </summary>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection" /> being removed.
            </param>
            <returns>
            <see langword="false" /> if <paramref name="namedSelection" /> is
            null or does not exist in this <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.NamedSelectionCache" />.
            Returns <see langword="true" /> if <paramref name="namedSelection"
            /> was removed.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell">
            <summary>
            Represents a single cell in a parameter study table. A cell has a
            quantity value but can be created empty. An empty cell has no quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell.IsEmpty">
            <summary>
            Returns true if a cell has no value.
            </summary>
            <remarks>TryGetQuantity can be used instead.</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell.FromQuantity(UnitsNet.IQuantity)">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> given <paramref
            name="quantity" />.
            </summary>
            <param name="quantity">The cell value.</param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> with value <paramref
            name="quantity" />
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="quantity" /> cannot be null, use
            ParameterCell.Empty() instead.
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell.ChangeQuantity(UnitsNet.IQuantity)">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> with given <paramref
            name="quantity" />.
            </summary>
            <param name="quantity">The cell value.</param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> with value <paramref
            name="quantity" />
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell.TryGetQuantity">
            <summary>
            Tries to get cell quantity.
            </summary>
            <returns>
            If cell is empty, success returns false, quantity is null.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell.TryGetQuantity(UnitsNet.IQuantity@)">
            <summary>
            Tries to get the value of this <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" />. A
            value is not returned if the cell is empty.
            </summary>
            <param name="quantity">
            The <see cref="T:UnitsNet.IQuantity" /> value being returned if cell is not
            empty.
            </param>
            <returns>
            <see langword="true" /> if the cell quantity is not empty.
            </returns>
        </member>
        <member name="F:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterNameValidator.PythonKeywords">
            <summary>
            List of restricted keywords within Python.
            </summary>
            <remarks>
            List of Python keywords can be found at (09-21-2021):
            https://docs.python.org/3/reference/lexical_analysis.html?highlight=keywords
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterNameValidator.VariablePattern">
            <summary>
            Regular expression pattern for valid Python variable names.
            </summary>
            <remarks>
            List of Python variable name constraints can be found at (09-21-2021):
            https://docs.python.org/3/reference/lexical_analysis.html?#identifiers
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterNameValidator.Valid(System.String)">
            <summary>
            Predicate to check if a <see cref="T:SpaceClaim.INamedScriptParameter"/> name
            is valid.
            </summary>
            <remarks>
            Script parameters are used within IronPython scripts and as such
            have to respect the naming requirements set out in Python.
            </remarks>
            <returns>
            <see langword="true"/> if input string is a valid identifier,
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService">
            <summary>
            Service to handle interaction with script parameters in the SpaceClaim
            document.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ForceScriptParameterRedraw">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ScriptParameterCreated">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ScriptParameterDeleted">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ScriptParameterModified">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ScriptAutoExecutionEnabled">
            <inheritdoc />
        </member>
        <member name="E:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ScriptAutoExecutionDisabled">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.GetAllScriptParameters">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.AddScriptGroup">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.AddDefaultScriptParameter">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.EditScriptParameterName(SpaceClaim.INamedScriptParameter,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.EditScriptParameterValue(SpaceClaim.INamedScriptParameter,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.EditScriptParameterUnit(SpaceClaim.INamedScriptParameter,SpaceClaim.NamedScriptParameterUnitType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.RemoveScriptParameter(SpaceClaim.INamedScriptParameter)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.PauseEmbeddedScript">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.UnpauseEmbeddedScript">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.IsCurrentScriptGroupPaused">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.ProjectContainsEmbeddedScript">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ScriptParameterService.PauseAutoExecutionOfScripts">
            <summary>
            Pauses auto-execution of all but the first embedded script.
            </summary>
            <remarks>
            Disco only supports a singular embedded script but SpaceClaim
            supports an arbitrary amount, as such a project with more than one
            is still considered valid hence we just disable the 'extras'.
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader">
            <summary>
            The parameter study row header/row name.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader.Empty">
            <summary>
            Creates a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with an empty value.
            </summary>
            <returns>A <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with no value.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader.WithValue(System.String)">
            <summary>
            Creates a <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with a value.
            </summary>
            <param name="value">Non-empty string for header value.</param>
            <returns>A <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with value.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader.TryGetValue">
            <summary>
            Tries to get the <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> value.
            </summary>
            <returns>
            A tuple with a boolean for whether the value exists or not and the
            value if true.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader.ChangeValue(System.String)">
            <summary>
            Returns a new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with updated value.
            </summary>
            <param name="value">
            Non-empty string value for <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/>.
            </param>
            <returns>
            A new <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.RowHeader"/> with updated <paramref name="value"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions">
            <summary>
            Static extension methods for <see cref="T:Ansys.Disco.Physics.ValueObjects.LocationSet"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.AllFacesCylindrical(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Checks that all locations within the set are cylindrical faces
            </summary>
            <param name="locationSet">The location set to be checked</param>
            <returns>True if the location set contains only cylindrical faces</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.AllFacesSpherical(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Checks that all locations within the set are spherical faces
            </summary>
            <param name="locationSet">The location set to be checked</param>
            <returns>True if the location set contains only spherical faces</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.AllFacesPlanar(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Checks that all locations within the set are planar faces
            </summary>
            <param name="locationSet">The location set to be checked</param>
            <returns>True if the location set contains only planar faces</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetLocationWithFacesOfBodies(Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.IEvalContext)">
            <summary>
            Replaces the bodies of a location set with faces of bodies
            </summary>
            <param name="locationSet">The original location set</param>
            <param name="evalContext">EvalContext</param>
            <returns>The original location set but with the bodies replaced by their faces</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetLocationsFacesOnNonSmartBodiesOnly(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Exclude faces of smart bodies from a face only LocationSet
            </summary>
            <param name="locationSet">The original location set</param>
            <returns>The original location set but with any faces on not on smart bodies removed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.HasFacesOnNonSmartBodies(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Checks to see if any faces are on non-smart bodies
            </summary>
            <param name="locationSet">The original location set</param>
            <returns>True if any faces are on smart bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetBodyLocationsInFluidVolume(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Gets bodies in a fluid body location set
            </summary>
            <param name="locationSet">External fluid body location set</param>
            <returns>The location set of the bodies in the fluid body</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetPhysicsRegionLocationSet(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Converts a location of type PhysicsRegion to a location of the physics regions
            </summary>
            <param name="locationSet">The location of type PhysicsRegion</param>
            <returns>If PhysicsRegion type, returns the location of the physics regions. Otherwise, returns the original location</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetParentBodies(Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.IEvalContext)">
            <summary>
            Converts a LocationSet of unspecified contents and finds the set of bodies that contain the locations in the set
            </summary>
            <param name="set">The original LocationSet (may have any combination of locations)</param>
            <param name="context">The context in which to resolve the Monikers</param>
            <returns>A collection holding the parent bodies of the original LocationSet</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSetExtensions.GetSuppressingBodies(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Returns the list of parent parts that are causing the given
            location set to be suppressed.
            </summary>
            <param name="locations">LocationSet being checked for suppression</param>
            <param name="sim">Simulation entity containing suppressed bodies</param>
            <returns>List of <see cref="T:SpaceClaim.INominalBody"/> that are causing
            locations to be suppressed</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.ReferenceLocations">
            <summary>
            Reference locations used to define the reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.IsConical">
            <summary>
            If true if this defines a conical reference frame, otherwise false
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.PrimaryDirection">
            <summary>
            The primary direction to define a cartesian reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.SecondaryDirection">
            <summary>
            The secondary direction to define a cartesian reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.LocalTriad">
            <summary>
            The local triad to define a cartesian reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.ConeAxisDirection">
            <summary>
            Axis direction to define a conical reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.ConeAxisOrigin">
            <summary>
            Axis origin to define a conical reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.PorousFrameDefinition.ConeHalfAngle">
            <summary>
            Cone half angle to define a conical reference frame.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Quantities.ITableExpression`2">
            <summary>
            Expression with simple 2 column table support.
            </summary>
            <typeparam name="TIn">The input quantity.</typeparam>
            <typeparam name="TOut">The output quantity.</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Quantities.ITableExpression`2.GetAllValues">
            <summary>
            Retrieves all values in the table.
            </summary>
            <returns>An enumerable of quantity pairs</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Quantities.ITableExpression`2.EvaluateAt(`0)">
            <summary>
            Evaluates the output for a given input
            </summary>
            <remarks>
            Note that this could use interpolation and potentially be expensive.
            </remarks>
            <param name="value">The input value to retrieve an output for.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Quantities.ITableExpression`2.GetTable">
            <summary>
            Retrieves the <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance.
            </summary>
            <returns>The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance containing all the values.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1">
            <summary>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ValueObject`1"/> representing a vector with Magnitude, Direction, and X, Y, Z components.
            </summary>
            <remarks>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1"/> will round the component values of a given direction when creating
            components from a magnitude + direction.  A flag is maintained while creating a
            <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1"/> that will flip false if values are changes after the vector was created.
            </remarks>
            <typeparam name="T">Quantity type of the vector being constructed.</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1.ComputeComponent(`0,System.Double,System.Boolean)">
            <summary>
            Computes a single component value of a vector by scaling the magnitude by the direction component value.
            This method applies precision rounding when the <see cref="P:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1.UseTrimmedVector"/> flag is true and
            precision is set to a value different to null.
            </summary>
            <param name="magnitude">Vector magnitude to compute component for.</param>
            <param name="scaleValue">Direction value used to scale the magnitude value.</param>
            <param name="useTrimmedVector">Flag set true if rounding of the scaleValue is required, false if full
            precision needed.</param>
            <returns>Single component of a magnitude value given the scaleValue.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1.FromMagnitudeAndDirection(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{`0},Ansys.Disco.Physics.ValueObjects.LoadDirection,System.Boolean)">
            <summary>
            Creates a <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1"/> given a magnitude and direction, rounding applied if
            useTrimmedVector is set to true.
            </summary>
            <param name="magnitude">Required magnitude of vector.</param>
            <param name="loadDirection">Direction vector is pointing.</param>
            <param name="useTrimmedVector">Flag set true if rounding of the scaleValue is required, false if full
            precision needed.</param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.ValueObjects.Quantities.VectorQuantity`1"/> with components derived from the magnitude and direction
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ConstantExpression`1.Equals(Ansys.Disco.Physics.ValueObjects.ConstantExpression{`0})">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ConvectionOptions">
            <summary>
            Properties for heat transfer convection condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.HeatTransferCoefficient},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.ConvectionOptions"/> class.
            </summary>
            <param name="convectionCoefficient">convection coefficient value</param>
            <param name="externalTemperature">external temperature value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ConvectionCoefficient">
            <summary>
            Coefficient for heat transfer convection condition
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ExternalTemperature">
            <summary>
            External Temperature for heat transfer convection condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.FromDefaults">
            <summary>
            Returns the default convection options value.
            </summary>
            <returns>
            Convection options with default <see cref="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ConvectionCoefficient"/> and <see cref="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ExternalTemperature"/> values.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.HeatProperties">
            <summary>
            Properties for heat condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.HeatProperties.#ctor(Ansys.Disco.Physics.Entities.Conditions.HeatSpecification,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Power},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.PowerDensity},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.HeatFlux})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.HeatProperties"/> class.
            </summary>
            <param name="heatSpecification">Specification for heat generation</param>
            <param name="totalHeat">Total heat generation</param>
            <param name="heatPerUnitVolume">Heat generation per unit volume</param>
            <param name="heatPerUnitArea">Heat flux for heat transfer.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatSpecification">
            <summary>
            Specification for heat generation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat">
            <summary>
            Power specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitVolume">
            <summary>
            Total heat generation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea">
            <summary>
            Heat Flux specification for heat transfer
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties">
            <summary>
            Properties for heat transfer condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.#ctor(Ansys.Disco.Physics.Entities.Conditions.WallThermalSpecification,Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.HeatFlux},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Power},Ansys.Disco.Physics.ValueObjects.ConvectionOptions,System.Boolean,Ansys.Disco.Physics.ValueObjects.RadiationOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties"/> class.
            </summary>
            <param name="heatTransferSpecification">Specification for heat transfer</param>
            <param name="temperatureMagnitude">Temperature value for heat transfer condition</param>
            <param name="heatFluxMagnitude">heat Flux value for heat transfer condition</param>
            <param name="heatFlowMagnitude">heat Flow value for heat transfer condition</param>
            <param name="hasRadiation">Has radiation (with convection) value flag</param>
            <param name="convectionOptions">convection properties for heat transfer condition</param>
            <param name="radiationOptions">radiation properties for heat transfer condition</param>
            <param name="isDefaultValue">Default value flag</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.HeatTransferSpecification">
            <summary>
            Specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.TemperatureMagnitude">
            <summary>
            Temperature specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.HeatFluxMagnitude">
            <summary>
            Heat Flux specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.HeatFlowMagnitude">
            <summary>
            Heat Flow specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.ConvectionOptions">
            <summary>
            Convection specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.HasRadiation">
            <summary>
            Radiation is enabled with convection
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.RadiationOptions">
            <summary>
            Radiation specification for heat transfer
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.HeatTransferProperties.IsDefaultValue">
            <summary>
            Default value flag
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.GetParentBodies(Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.IEvalContext)">
            <summary>
            Converts a LocationSet of unspecified contents and finds the set of bodies that contain the locations in the set
            </summary>
            <param name="set">The original LocationSet (may have any combination of locations)</param>
            <param name="context">The context in which to resolve the Monikers</param>
            <returns>A new LocationSet holding the parent bodies of the original LocationSet</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.Union(Ansys.Disco.Physics.ValueObjects.LocationSet[])">
            <summary>
            Joins together two collections of locations into a new single location
            </summary>
            <param name="items">The collection of items</param>
            <returns>The combined location</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllFacesConicalWithCoLinearAxesAndEqualHalfAngle">
            <summary>
            Determines whether all locations in the location set are conical faces with co-linear
            axes and equal half angles (cylinders are considered cones with a half angle of 0)
            </summary>
            <returns>True if location set only contains conical faces with co-linear axes and equal
            half angles, otherwise false</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllFacesHaveCoLinearAxesAndEqualHalfAngle">
            <summary>
            Determines whether all locations are faces with colinear axes and equal half angles
            (will also return true if no faces are cylindrical/conical)
            </summary>
            <returns>True if location set only contains faces with colinear axes and equal half angles,
            otherwise false</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllFacesParallel(SpaceClaim.IEvalContext)">
            <summary>
            Checks whether all faces in the location set are parallel.
            </summary>
            <param name="context">Active window eval context.</param>
            <returns>True if all faces are parallel, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllFacesOnSamePlane(SpaceClaim.IEvalContext)">
            <summary>
            Checks whether all faces in the locations set are on the same plane.
            </summary>
            <param name="context">Active window eval context.</param>
            <returns>True if all faces are on the same plane, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AddAllFacesOnSamePlaneForParentBodies(SpaceClaim.IEvalContext)">
            <summary>
            Gets faces on the same plane on the same bodies as the current faces.
            </summary>
            <param name="context">Active window eval context.</param>
            <returns>Location set containing all faces on the same plane on the same bodies as the current faces.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllBodiesAreSurfaces(SpaceClaim.IEvalContext)">
            <summary>
            Checks whether all bodies in the locations set are surface bodies.
            </summary>
            <param name="context">Active window eval context.</param>
            <returns>True if all bodies are surface bodies, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.AllFacesOnSurfaceBodies(SpaceClaim.IEvalContext)">
            <summary>
            Checks whether all faces in the locations set are on surface bodies.
            </summary>
            <param name="context">Active window eval context.</param>
            <returns>True if all faces are on surface bodies, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.Equals(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.LocationComparer.Equals(Ansys.Disco.Physics.ValueObjects.Locations.ILocation,Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LocationSet.LocationComparer.GetHashCode(Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.LoadDirection">
            <summary>
            Load direction definition - can be defined
            as global x/y/z coordinates
            as normal to a face (may not resolve to a single direction e.g. for curved surfaces)
            from a scope (e.g. along an edge or normal to a face) - this should be updated for any changes to the geometry
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.CreateGlobalComponentLoadDirection(SpaceClaim.Geometry.Direction,System.Boolean)">
            <summary>
            Create direction for load defined by global x/y/z components
            </summary>
            <param name="direction">Direction defining load x/y/z components</param>
            <param name="reversible">Boolean signifying whether the direction vector may be reversed</param>
            <returns>LoadDirection defining the load direction by global x/y/z/ components</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.CreateGlobalComponentLoadDirection(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Create direction for load defined by global x/y/z components
            </summary>
            <param name="x">X component of direction vector</param>
            <param name="y">Y component of direction vector</param>
            <param name="z">Z component of direction vector</param>
            <param name="reversible">Boolean signifying whether the direction vector may be reversed</param>
            <returns>LoadDirection defining the load direction by global x/y/z/ components</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.CreateNonReversibleGlobalComponentLoadDirection(SpaceClaim.Geometry.Direction)">
            <summary>
            Create non-reversable direction for load defined by global x/y/z components
            </summary>
            <param name="direction">Direction defining load x/y/z components</param>
            <returns>Non-reversable LoadDirection defining the load direction by global x/y/z/ components</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.CreateGeometryDefinedLoadDirection(Ansys.Disco.Physics.ValueObjects.LocationSet,System.Boolean)">
            <summary>
            Create direction for load defined by geometry (e.g. edge or face normal). The
            direction will be updated as the geometry changes.
            </summary>
            <param name="directionScope">Geometry used to define the load direction</param>
            <param name="reversed">Boolean signifying whether the direction is in the opposite direction to the geometry definition</param>
            <returns>LoadDirection defining the load direction by geometry</returns>
            <remarks>Note that the geometry used to define the direction isn't necessarily the same as the load scope</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.CreateNormalLoadDirection(System.Boolean)">
            <summary>
            Create a load direction normal to a face.
            </summary>
            <param name="reversed">Boolean signifying whether the direction is in or out of the face</param>
            <returns>LoadDirection defining the a load direction normal to face (either in or out)</returns>
            <remarks>Note that this load direction may not necessarily resolve to a single vector, e.g. if the load is applied to a cylindrical face</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.GetDirection">
            <summary>
            Get direction for load - not available if load is defined as normal to a face
            </summary>
            <returns>Direction of load</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.ReverseDirection">
            <summary>
            Reverses direction of load
            </summary>
            <returns>New LoadDirection with reversed direction</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.IsNormal">
            <summary>
            Test if load is normal to face
            </summary>
            <returns>Boolean signifying whether load is normal to face</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.IsReversed">
            <summary>
            Test if load direction has been reversed
            </summary>
            <returns>Boolean signifying whether is in opposite direction to geometric definition</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.IsReversible">
            <summary>
            Test if load direction can be reversed
            </summary>
            <returns>Boolean signifying whether load can be reversed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.LoadDirection.Create(SpaceClaim.Geometry.Direction,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Boolean,System.Boolean)">
            <summary>
            Creates an instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.LoadDirection"/> class. This
            method exists solely to circumvent the private visibility of this
            class's parameterized constructor and should only be called from a
            serialization surrogate.
            </summary>
            <param name="direction">
            The direction.
            </param>
            <param name="directionScope">
            The direction scope.
            </param>
            <param name="reversed">
            Whether reversed or not.
            </param>
            <param name="reversible">
            Whether reversible for not.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.RadiationOptions">
            <summary>
            Properties for heat transfer convection radiation condition
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.RadiationOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Ratio})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.RadiationOptions"/> class.
            </summary>
            <param name="emissivity">emissivity coefficient value</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.RadiationOptions.#ctor(Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Ratio},Ansys.Disco.Physics.ValueObjects.Quantities.IExpression{UnitsNet.Temperature})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.RadiationOptions"/> class.
            </summary>
            <param name="emissivity">emissivity coefficient value</param>
            <param name="radiationTemperature">external radiation temperature value</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.RadiationOptions.Emissivity">
            <summary>
            Emissivity coefficient for heat transfer radiation
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.RadiationOptions.RadiationTemperature">
            <summary>
            Far field temperature for heat transfer radiation
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.SimulationOptions">
            <summary>
            Controls solver behavior
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ValueObjects.SimulationOptions.DefaultSolutionEndTimeInSeconds">
            <summary>
            The default solution end time
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.SimulationOptions"/>
            class with safe defaults.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.#ctor(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,UnitsNet.Duration},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.CalculationTypeOption},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption},System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption},Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings,System.Boolean,System.Boolean,Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.SimulationOptions"/> class.
            Value object that holds various simulation end time and goal properties
            </summary>
            <param name="timeDependentDurationSetting">The time dependent duration setting</param>
            <param name="calculationType">The calculation type.</param>
            <param name="flowModel">Model used for flow regions</param>
            <param name="structuralModel">Model used for structural regions</param>
            <param name="simulationOptionsConvergenceSettings">The simulation options convergence settings.</param>
            <param name="includeNewBodies">Whether to include new bodies</param>
            <param name="improveMesh">Whether to improve mesh</param>
            <param name="electromagneticSettings">Solver settings for electromagnetic simulations</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.FlowModel">
            <summary>
            The type model used for flow regions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.StructuralModel">
            <summary>
            The type model used for structural regions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.CalculationType">
            <summary>
            The type model used for structural regions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.TimeDependentDurationSetting">
            <summary>
            The type model used for structural regions
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.SimulationOptionsConvergenceSettings">
            <summary>
            The simulation convergence settings
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.IncludeNewBodies">
            <summary>
            The simulation convergence settings
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ImproveMesh">
            <summary>
            Auto-adjust quality in low fidelity areas
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ElectromagneticSettings">
            <summary>
            Solver settings for electromagnetic simulations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeCalculationType(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.CalculationTypeOption})">
            <summary>
            Method used to modify the goal criteria
            </summary>
            <param name="calculationType">Criteria to update with</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeFlowModel(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.FlowModelOption})">
            <summary>
            Method used to modify the goal criteria
            </summary>
            <param name="flowModel">Criteria to update with</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeStructuralModel(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.StructuralModelOption})">
            <summary>
            Method used to modify the goal criteria
            </summary>
            <param name="structuralModel">Criteria to update with</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeTimeDependentDurationSetting(System.Tuple{Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,UnitsNet.Duration})">
            <summary>
            Method used to modify the goal criteria
            </summary>
            <param name="timeDependentDurationSetting">Criteria to update with</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeConvergenceSettings(Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings)">
            <summary>
            Method used to modify specify end time
            </summary>
            <param name="simulationOptionsConvergenceSettings">Specify convergence settings</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeNewBodyScoping(System.Boolean)">
            <summary>
            Method used to modify new body scoping
            </summary>
            <param name="includeNewBodies">Specify whether new bodies are included in this simulation</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeImproveMesh(System.Boolean)">
            <summary>
            Method used to modify the mesh improvement option
            </summary>
            <param name="improveMesh">Specify whether mesh should be auto-adjusted in low fidelity areas</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.ChangeElectromagneticSettings(Ansys.Disco.Physics.ValueObjects.Electromagnetic.SimulationOptionsElectromagneticSettings)">
            <summary>
            Method used to modify the electromagnetic settings
            </summary>
            <param name="electromagneticSettings">Criteria to update with</param>
            <returns>The modified simulation options object</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.Copy">
            <summary>
            Creates a deep copy of this simulation goal
            </summary>
            <returns>The copied simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptions.IsTransient">
            <summary>
            Returns <see langword="true" /> if the <see cref="T:Ansys.Disco.Physics.ValueObjects.SimulationOptions"
            /> is transient.
            </summary>
            <returns><see langword="true" /> if transient.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings">
            <summary>
            Controls solver behavior
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.SimulationOptions"/>
            class with safe defaults.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.#ctor(Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,System.Int32,System.Int32,System.Int32,Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting,Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings"/> class.
            Value object that holds various simulation convergence settings
            </summary>
            <param name="specificationOfSolutionProgression">overrideDefaultSubsteps</param>
            <param name="initialNumberOfSubsteps">initialNumberOfSubsteps</param>
            <param name="maximumNumberOfSubsteps">maximumNumberOfSubsteps</param>
            <param name="minimumNumberOfSubsteps">minimumNumberOfSubsteps</param>
            <param name="specificationOfFlowConvergence">overrideDefaultFlowConvergence</param>
            <param name="flowConvergenceStop">flowConvergenceStop</param>
            <param name="maximumNumberOfIterations">maximumNumberOfIterations</param>
            <param name="numericalConvergenceTarget">numericalConvergenceTarget</param>
            <param name="numericalConvergenceTargetMonitors">numericalConvergenceTargetMonitors</param>
            <param name="numericalConvergenceTargetEnergy">numericalConvergenceTargetEnergy</param>
            <param name="targetEngineeringConvergence">targetEngineeringConvergence</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.SpecificationOfSolutionProgression">
            <summary>
            The type of solution
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.InitialNumberOfSubsteps">
            <summary>
            The type of solution
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.MaximumNumberOfSubsteps">
            <summary>
            End time for transient solution
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.MinimumNumberOfSubsteps">
            <summary>
            Boolean that decides whether the Solution end time is used
            or if the default solution end time is used
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.SpecificationOfFlowConvergence">
            <summary>
            If flow convergence values are to be defaulted, or specified
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.FlowConvergenceStop">
            <summary>
            The basis on which to stop fluids simulations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.MaximumNumberOfIterations">
            <summary>
            The max number of iterations for fluids simulations
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.NumericalConvergenceTarget">
            <summary>
            The convergence target
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.NumericalConvergenceTargetEnergy">
            <summary>
            The energy (temperature) convergence value
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.NumericalConvergenceTargetMonitors">
            <summary>
            The convergence for monitored engineering quantities (monitors)
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.TargetEngineeringConvergence">
            <summary>
            The engineering convergence target
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeSpecificationOfSolutionProgression(Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Method used to define if the default substeps settings should be used or not
            </summary>
            <param name="specificationOfSolutionProgression">overrideDefaultSubsteps</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeInitialNumberOfSubsteps(System.Int32)">
            <summary>
            Method used to modify convergence setting for initialNumberOfSubsteps
            </summary>
            <param name="initialNumberOfSubsteps">initialNumberOfSubsteps</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeMaximumNumberOfSubsteps(System.Int32)">
            <summary>
            Method used to modify convergence setting for maximumNumberOfSubsteps
            </summary>
            <param name="maximumNumberOfSubsteps">maximumNumberOfSubsteps</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeMinimumNumberOfSubsteps(System.Int32)">
            <summary>
            Method used to modify convergence setting for minimumNumberOfSubsteps
            </summary>
            <param name="minimumNumberOfSubsteps">minimumNumberOfSubsteps</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeSpecificationOfFlowConvergence(Ansys.Disco.Physics.Entities.SimulationOption.OptionSetting)">
            <summary>
            Method used to define if the default substeps settings should be used or not
            </summary>
            <param name="specificationOfFlowConvergence">overrideDefaultSubsteps</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeFlowConvergenceStop(Ansys.Disco.Physics.Entities.SimulationOption.FlowConvergenceStopOption)">
            <summary>
            Method used to modify specify end time
            </summary>
            <param name="flowConvergenceStop">Specify convergence settings</param>
            <returns>The modified simulation goal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeMaximumNumberOfIterations(System.Int32)">
            <summary>
            Method used to modify convergence setting for maximumNumberOfIterations
            </summary>
            <param name="maximumNumberOfIterations">maximumNumberOfIterations</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeNumericalConvergenceTarget(System.Double)">
            <summary>
            Method used to modify convergence setting for numericalConvergenceTarget
            </summary>
            <param name="numericalConvergenceTarget">numericalConvergenceTarget</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeNumericalConvergenceTargetEnergy(System.Double)">
            <summary>
            Method used to modify convergence setting for numericalConvergenceTargetEnergy
            </summary>
            <param name="numericalConvergenceTargetEnergy">numericalConvergenceTargetEnergy</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeNumericalConvergenceTargetMonitors(System.Double)">
            <summary>
            Method used to modify convergence setting for numericalConvergenceTargetMonitors
            </summary>
            <param name="numericalConvergenceTargetMonitors">numericalConvergenceTargetMonitors</param>
            <returns>The modified simulation goal convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.ChangeTargetEngineeringConvergence(System.Double)">
            <summary>
            Method used to modify convergence setting for targetEngineeringConvergence
            </summary>
            <param name="targetEngineeringConvergence">targetEngineeringConvergence</param>
            <returns>The modified simulation goal engineering convergence settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsConvergenceSettings.Copy">
            <summary>
            Creates a deep copy of this simulation goal convergence settings
            </summary>
            <returns>The copied simulation goal convergence settings</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.InitialNumOfSubSteps">
            <summary>
            Default number of initial sub-steps, in regards to the solution progression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.MaxNumOfSubSteps">
            <summary>
            Default maximum number of sub-steps, in regards to the solution progression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.MinNumOfSubSteps">
            <summary>
            Default minimum number of sub-steps, in regards to the solution progression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.SolutionProgressionControls">
            <summary>
            Default option settings for structural solution progression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.FlowConvergenceStopCriteria">
            <summary>
            Default 'stop on' criteria for flow convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.FlowModelingOption">
            <summary>
            Default fluid flow modeling method.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.MaxNumOfConvergenceIterations">
            <summary>
            Default maximum number of iterations for convergence settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.TargetNumericConvergence">
            <summary>
            Default target numerical convergence value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.TargetNumericConvergenceEnergy">
            <summary>
            Default target numeric convergence energy value
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.TargetEngineeringConvergence">
            <summary>
            Default target engineering convergence value
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.ApplySettings(Ansys.Disco.Core.Environment.IAppUserSettings)">
            <summary>
            Retrieves and applies default values from the user settings
            </summary>
            <param name="userSettings">The user settings</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.Reset">
            <summary>
            Resets all the default settings back to their original values
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.GetRecommendedInitialNumOfSubStepsIfProgramControlled">
            <summary>
            Get the Default InitialNumOfSubSteps value
            If this has been edited in the active simulation, then return the edited value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.GetRecommendedMaxNumOfSubStepsIfProgramControlled">
            <summary>
            Get the Default MaximumNumberOfSubsteps value
            If this has been edited in the active simulation, then return the edited value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.SimulationOptionsDefaults.GetRecommendedMinNumOfSubStepsIfProgramControlled">
            <summary>
            Get the Default MinimumNumberOfSubSteps value
            If this has been edited in the active simulation, then return the edited value.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.TargetSpecification">
            <summary>
            Controls monitor target values.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.TargetSpecification.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.TargetSpecification.#ctor(Ansys.Disco.Physics.Entities.Monitors.TargetsSpecified,UnitsNet.IQuantity,UnitsNet.IQuantity,UnitsNet.IQuantity)">
            <summary>
            Constructs a target specification value object.
            </summary>
            <param name="targetsSpecified">Enum declaring which limits are active</param>
            <param name="minimumLimit">The minimum limit</param>
            <param name="maximumLimit">The maximum limit</param>
            <param name="target">The general target</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.TargetSpecification.TargetsSpecified">
            <summary>
            Declares which targets should be currently considered.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.TargetSpecification.MinimumLimit">
            <summary>
            Minimum target limit.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.TargetSpecification.MaximumLimit">
            <summary>
            Maximum target limit.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.TargetSpecification.Target">
            <summary>
            General target.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.TargetSpecification.Equals(Ansys.Disco.Physics.ValueObjects.TargetSpecification)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.#ctor(SpaceClaim.Geometry.Direction,SpaceClaim.Geometry.Direction,SpaceClaim.Geometry.Direction)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Triad"/> class.
            </summary>
            <param name="x">Local x direction</param>
            <param name="y">Local y direction</param>
            <param name="z">Local z direction</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ValueObjects.Triad"/> class.
            Constructor required for spaceclaim serialization only - do not use!
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Triad.X">
            <summary>
            Local X direction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Triad.Y">
            <summary>
            Local Y direction
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ValueObjects.Triad.Z">
            <summary>
            Local Z direction
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.InitialiseTriadWithNormalAsLocalX(SpaceClaim.Geometry.Direction)">
            <summary>
            Initialize triad from normal
            Normal is used as the local x direction. The global z (or global y if the local x direction is
            Parallel to the global z direction) is projected onto the plane defined by the normal to determine
            the local y direction. The local z is the cross product of the local x and y.
            </summary>
            <param name="normal">Normal used to define orientation for new triad</param>
            <returns>A triad whose orientation is determined by the normal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.InitialiseTriadWithNormalAsLocalY(SpaceClaim.Geometry.Direction)">
            <summary>
            Initialize triad from normal
            Normal is used as the local y direction. The global z (or global x if the local z direction is
            Parallel to the global y direction) is projected onto the plane defined by the normal to determine
            the local z direction. The local x is the cross product of the local y and z.
            </summary>
            <param name="normal">Normal used to define orientation for new triad</param>
            <returns>A triad whose orientation is determined by the normal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.InitialiseTriadWithNormalAsLocalZ(SpaceClaim.Geometry.Direction)">
            <summary>
            Initialize triad from normal
            Normal is used as the local z direction. The global y (or global x if the local y direction is
            parallel to the global z direction) is projected onto the plane defined by the normal to determine
            the local y direction. The local x is the cross product of the local z and y.
            </summary>
            <param name="normal">Normal used to define orientation for new triad</param>
            <returns>A triad whose orientation is determined by the normal</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ValueObjects.Triad.InitialiseGlobalTriad">
            <summary>
            Initialize global triad
            </summary>
            <returns>A triad whose orientation is aligned with the global coordinate system</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ValueObjects.ValueObject`1">
            <summary>
            This base class comes from Jimmy Bogard
            http://grabbagoft.blogspot.com/2007/06/generic-value-object-equality.html
            </summary>
            <typeparam name="T">The type of the value object</typeparam>
        </member>
        <member name="T:Ansys.Disco.Physics.Fidelity.GlobalFidelityApproachSetting">
            <summary>
            Defines the agressiveness of the fidelity control in Explore stage
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption">
            <summary>
            Defines the proximity size function sources for calculating mesh.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption.Faces">
            <summary>
            Use faces.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption.Edges">
            <summary>
            Use edges.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption.FacesAndEdges">
            <summary>
            Use both faces and edges.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod">
            <summary>
            Defines the method for calculating fidelity mesh sizing.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod.Auto">
            <summary>
            Determine sizing method automatically.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod.Curvature">
            <summary>
            Use curvature sizing function.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod.Proximity">
            <summary>
            Use proximity sizing function.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod.CurvatureAndProximity">
            <summary>
            Use both curvature and proximity functions.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Fidelity.FidelitySizingMethod.Fixed">
            <summary>
            Use only fixed function.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings">
            <summary>
            Fidelity sizing settings values to use when calculating mesh sizing.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> class with default values.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.#ctor(Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},System.Double,Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Angle},Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption,System.Int32,System.Int32,Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> class.
            </summary>
            <param name="minimumSize">The minimum size.</param>
            <param name="maximumSize">The maximum size.</param>
            <param name="maximumFaceSize">The maximum face size.</param>
            <param name="growthRate">The growth rate.</param>
            <param name="curvatureNormalAngle">The curvature normal angle.</param>
            <param name="proximitySourcesOption">The proximity sources option.</param>
            <param name="numberOfCellsAcrossGap">The number of cells across gap.</param>
            <param name="maximumBoundaryLayers">The maximum number of boundary layers.</param>
            <param name="minimumFeatureSize">The minimum feature size for electromagnetic simulation.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.#ctor(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,System.Double,UnitsNet.Angle,Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption,System.Int32,System.Int32,UnitsNet.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> class.
            </summary>
            <param name="minimumSize">The minimum size.</param>
            <param name="maximumSize">The maximum size.</param>
            <param name="maximumFaceSize">The maximum face size.</param>
            <param name="growthRate">The growth rate.</param>
            <param name="curvatureNormalAngle">The curvature normal angle.</param>
            <param name="proximitySourcesOption">The proximity sources option.</param>
            <param name="numberOfCellsAcrossGap">The number of cells across gap.</param>
            <param name="maximumBoundaryLayers">The maximum number of boundary layers.</param>
            <param name="minimumFeatureSize">The minimum feature size for electromagnetic simulation.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MinimumSize">
            <summary>
            The minimum size.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumSize">
            <summary>
            The maximum size.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumFaceSize">
            <summary>
            The maximum face size.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.GrowthRate">
            <summary>
            The growth rate.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MaximumBoundaryLayers">
            <summary>
            The maximum number of boundary layers.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.CurvatureNormalAngle">
            <summary>
            The curvature normal angle.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.MinimumFeatureSize">
            <summary>
            The minimum feature size for Electromagnetic simulations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.ProximitySourcesOption">
            <summary>
            The proximity sources option.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.NumberOfCellsAcrossGap">
            <summary>
            The number of cells across gap.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.Clone(Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length},System.Nullable{System.Double},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Angle},System.Nullable{Ansys.Disco.Physics.Fidelity.FidelitySizingProximitySourcesOption},System.Nullable{System.Int32},System.Nullable{System.Int32},Ansys.Disco.Physics.ValueObjects.ConstantExpression{UnitsNet.Length})">
            <summary>
            Creates a new <see cref="T:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings"/> instance with the existing settings values.
            New settings values can be provided to use with the new instance.
            </summary>
            <param name="minimumSize">Optional, the new minimum size value to use.</param>
            <param name="maximumSize">Optional, the new maximum size value to use.</param>
            <param name="maximumFaceSize">Optional, the new maximum face size value to use.</param>
            <param name="growthRate">Optional, the new growth rate value to use.</param>
            <param name="curvatureNormalAngle">Optional, the new curvature normal angle value to use.</param>
            <param name="proximitySourcesOption">Optional, the new proximity sources option value to use.</param>
            <param name="numberOfCellsAcrossGap">Optional, the new number of cells across gap value to use.</param>
            <param name="maximumBoundaryLayers">Optional, the new maximum number of boundary layers value to use.</param>
            <param name="minimumFeatureSize">The minimum feature size for electromagnetic simulations.</param>
            <returns>The cloned settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.Equals(Ansys.Disco.Physics.Fidelity.FidelitySizingSettings)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.Ansys#Disco#Physics#Entities#Behaviours#ICopyable{Ansys#Disco#Physics#Fidelity#FidelitySizingSettings}#Copy">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.FidelitySizingSettings.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Fidelity.IFidelitySettingsCalculator">
            <summary>
            Calculates default fidelity settings.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Fidelity.IFidelitySettingsCalculator.CalculateDefaultGlobalFidelitySizingSettings">
            <summary>
            Calculates default global fidelity sizing settings.
            </summary>
            <returns>Default global fidelity sizing settings</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.IDefaultMaterialProvider.GetDefaultSolidMaterial">
            <summary>
            This provider method gets the default solid material entity for the project.
            </summary>
            <returns>The default solid material for the project</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.IDefaultMaterialProvider.GetDefaultFluidMaterial">
            <summary>
            This provider method gets the default fluid material entity for the project.
            </summary>
            <returns>The default solid material for the project</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.IDefaultMaterialProvider.GetDefaultConductingMaterial">
            <summary>
            This provider method gets the default conducting material entity for the project.
            </summary>
            <returns>The default conducting material for the project</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.IDefaultMaterialProvider.GetDefaultDielectricMaterial">
            <summary>
            This provider method gets the default dielectric material entity for the project.
            </summary>
            <returns>The default dielectric material for the project</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.IDefaultMaterialProvider.GetDefaultMaterial(Ansys.Disco.Physics.Entities.Simulations.Defaults.SimulationDefaults.MaterialType)">
            <summary>
            This provider method gets the default material for the project for the given type.
            </summary>
            <param name="materialType">The desired material type.</param>
            <returns>The default material for the project.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Materials.ScMaterialConverter">
            <summary>
            Static class to convert materials to and from SpaceClaim materials.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.ScMaterialConverter.CreateMaterialEntity(SpaceClaim.IMaterial)">
            <summary>
            Convert <see cref="T:SpaceClaim.IMaterial"/> to <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/>.
            </summary>
            <param name="material">Material to convert</param>
            <returns>Converted material</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.ScMaterialConverter.CreateScMaterial(Ansys.Disco.Physics.Entities.Materials.MaterialEntity,SpaceClaim.IEvalContext)">
            <summary>
            Convert <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/> to <see cref="T:SpaceClaim.IMaterial"/>.
            </summary>
            <param name="materialEntity">Material to convert</param>
            <param name="evalContext">Evaluation context</param>
            <returns>Converted material</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.ScMaterialConverter.CreateScMaterial(System.String,Ansys.Disco.Physics.Entities.Materials.MaterialState,Ansys.Disco.Physics.Entities.Materials.MaterialProperties.MaterialStateProperties,SpaceClaim.IEvalContext)">
            <summary>
            Convert <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/> properties to <see cref="T:SpaceClaim.IMaterial"/>.
            </summary>
            <param name="name">Material name</param>
            <param name="state">Material state</param>
            <param name="properties">Material properties for state</param>
            <param name="evalContext">Evaluation context</param>
            <returns>Converted material</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Materials.IMaterialTransfer">
            <summary>
            This can be used to transfer legacy SpaceClaim .scdoc materials to Discovery simulations
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Materials.MaterialTransfer">
            <summary>
            This class can be used to transfer legacy SpaceClaim .scdoc materials to Discovery simulations
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Materials.MaterialTransfer.#ctor(Ansys.Disco.Physics.Repositories.IMaterialProjectRepository,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Persistence.ISessionAdapter,Prism.Logging.ILoggerFacade,Ansys.Disco.Core.Input.IGeometryHelperProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Materials.MaterialTransfer"/> class.
            </summary>
            <param name="materialProjectRepository">The MaterialProjectRepository.</param>
            <param name="windowProvider">The interaction window provider, used to get access to the active document.</param>
            <param name="session">The session used to execute commands for clearing suppression state.</param>
            <param name="logger">A logger, used to log and capture any exceptions as a result of transferring suppression state.</param>
            <param name="geometryHelperProvider">Geometry helper used to retrieve simulation bodies</param>
        </member>
        <member name="T:Ansys.Disco.Physics.ParameterSweeps.IMonitor">
            <summary>
            Abstraction over the monitor feature for use by the parameter sweep
            feature.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.IMonitor.GetMonitors">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IList`1" /> that are currently
            enabled according to an <see cref="T:Ansys.Disco.Physics.Validity.ICompatibilityProvider" />.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IList`1" /> that are currently enabled
            according to an <see cref="T:Ansys.Disco.Physics.Validity.ICompatibilityProvider" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.IMonitor.HasResults(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Core.Context.ResultSourceType)">
            <summary>
            Returns <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity" />
            has results for the given defined variation.
            </summary>
            <param name="variation">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> that is being checked for if
            results exist.
            </param>
            <param name="solver">
            Determine which solver we are checking results for.
            </param>
            <returns>
            <see langword="true" /> if <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity" /> has
            results.
            </returns>
            <exception cref="T:System.NullReferenceException">
            <paramref name="variation" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.IMonitor.TryGetLatestValue(Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,UnitsNet.IQuantity@)">
            <summary>
            Given a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" />, get the latest <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity" /> value.
            </summary>
            <param name="monitorColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> which references a <see
            cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity" /> from which to grab latest result from.
            </param>
            <param name="dv">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> that the latest results are
            trying to be fetched for.
            </param>
            <param name="value">The value being returned if found.</param>
            <returns>
            <see langword="true" /> if <paramref name="value" /> is not <see
            langword="null" />.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.IMonitor.TryGetLatestValue(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Core.Context.ResultSourceType,UnitsNet.IQuantity@,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Attempts to get the latest value for <paramref name="monitor" />
            given the <paramref name="solver" /> and a <paramref
            name="variation" /> if given.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.ParameterSweeps.IMonitor" /> we are grabbing values from.
            </param>
            <param name="solver">The solver results we are looking for.</param>
            <param name="value">
            The <see cref="T:UnitsNet.IQuantity" /> returned if found.
            </param>
            <param name="variation">
            An optional <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> to get results for.
            </param>
            <returns>
            <see langword="false" /> if <paramref name="value" /> is <see
            langword="null" />.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ParameterSweeps.VariationOutput">
            <summary>
            A variation output consists of a monitor reference and a value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.VariationOutput.#ctor(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ParameterSweeps.VariationOutput"/> class.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity"/> that <paramref name="monitorCell"/>
            belongs to.
            </param>
            <param name="monitorCell">The cell for a monitor.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="monitor"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:Ansys.Disco.Physics.ParameterSweeps.VariationOutput.MonitorId">
            <summary>
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity"/> who created the output value.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ParameterSweeps.VariationOutput.Deconstruct(System.Guid@,Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell@)">
            <summary>
            Allows <see cref="T:Ansys.Disco.Physics.ParameterSweeps.VariationOutput"/> to be deconstructed like a tuple.
            </summary>
            <param name="monitorId">Returns the <see cref="P:Ansys.Disco.Physics.ParameterSweeps.VariationOutput.MonitorId"/>.</param>
            <param name="monitorCell">Returns the <see cref="P:Ansys.Disco.Physics.ParameterSweeps.VariationOutput.MonitorCell"/>.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.SceneNumber">
            <summary>
            A single scene number.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.SceneNumber.SimulationId">
            <summary>
            The simulation for the number.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.SceneNumber.Number">
            <summary>
            The scene number.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer">
            <summary>
            A <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer"/> for <see cref="T:SpaceClaim.BasicMoniker`1"/> instances.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer.SerializedId">
            <summary>
            Gets the unique identifier for monikers serialized by this class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer.DeserializeMonikerData(System.String,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerInstanceSerializer.SerializeMonikerData(SpaceClaim.IMoniker,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer">
            <summary>
            A <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer"/> for <see cref="T:SpaceClaim.BasicMoniker`1"/> instances.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer.SerializedId">
            <summary>
            Gets the unique identifier for monikers serialized by this class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer.DeserializeMonikerData(System.String,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.BasicMonikerNominalBodySerializer.SerializeMonikerData(SpaceClaim.IMoniker,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.BodyVisbilityEntry">
            <summary>
            Details a single body visibility entry.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.BodyVisbilityEntry.MonikerKey">
            <summary>
            The key for the body visibility entry.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.BodyVisbilityEntry.Value">
            <summary>
            The visibility values for each body.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.BodyVisibility">
            <summary>
            DTO for body visibility serialization.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.BodyVisibility.VisibilityEntries">
            <summary>
            The body visibility entries.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerList">
            <summary>
            A list of serialized monikers.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerList.Monikers">
            <summary>
            The list of serialized monikers.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.ObjectVisibility">
            <summary>
            The visibility data for one object.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.ObjectVisibility.ObjectId">
            <summary>
            The object id.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.ObjectVisibility.Visibility">
            <summary>
            Whether the object is visible.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.ResultVisibility">
            <summary>
            The set of result visibility information.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.ResultVisibility.Monikers">
            <summary>
            The set of monikers for the results that are non-visible.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.SerializableObjectId">
            <summary>
            An Object Id that can be serialized.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.SerializableObjectId.VersionIndex">
            <summary>
            The version index of the object id.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.SerializableObjectId.Id">
            <summary>
            The id of the object id.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService">
            <summary>
            Provides de/serialization for <see cref="T:SpaceClaim.IMoniker"/>s.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService.Deserialize(System.String)">
            <summary>
            Takes the serialized form of a moniker and reconstructs it.
            </summary>
            <param name="serializedMoniker">The serialized moniker.</param>
            <returns>
            The deserialized moniker if deserialization succeeded. <see langword="null"/> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService.Deserialize``1(System.String)">
            <summary>
            Takes the serialized form of a moniker and reconstructs it.
            </summary>
            <typeparam name="TMoniker">The expected type of the moniker.</typeparam>
            <param name="serializedMoniker">The serialized moniker.</param>
            <returns>
            The deserialized moniker if deserialization succeeded, and the type of the moniker
            matches the expected type. <see langword="null"/> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService.Serialize(SpaceClaim.IMoniker)">
            <summary>
            Serializes the given moniker into a string form.
            </summary>
            <param name="moniker">The moniker to serialize.</param>
            <returns>The string representing the given moniker. <see langword="null"/> if serialization failed.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedSceneRendersSerializer">
            <summary>
            Defines management for the serialization of saved scenes.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedSceneRendersSerializer.Version">
            <summary>
            Gets the version of saved scene renders this serializer controls.
            </summary>
            <value>The version of saved scene renders this serializer controls.</value>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedSceneRendersSerializer.CanLoad(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Gets whether there is saved scene render serialized data that this serializer can load from.
            </summary>
            <param name="store">The chunk store containing the data.</param>
            <param name="issueLogger">A logger for issues.</param>
            <returns>
            <see langword="true"/> if data can be loaded using this serializer. <see
            langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedSceneRendersSerializer.Load(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Loads data from the given chunk store.
            </summary>
            <param name="store">The chunk store containing the data.</param>
            <param name="issueLogger">A logger for issues.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedSceneRendersSerializer.Save(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Saves data to the given chunk store.
            </summary>
            <param name="store">The chunk store to contain the data.</param>
            <param name="issueLogger">A logger for issues.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService">
            <summary>
            Provides de/serialization for <see cref="T:SpaceClaim.IMoniker"/>s.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService.#ctor(Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService"/> class.
            </summary>
            <param name="monikerSerializers">
            All <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer"/>s defined by the system.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService.Deserialize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService.Deserialize``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializationService.Serialize(SpaceClaim.IMoniker)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer">
            <summary>
            The base class to support the de/serialization of an <see cref="T:SpaceClaim.IMoniker"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer"/> class.
            </summary>
            <param name="monikerType">The type of moniker this serializer de/serializes.</param>
            <param name="serializedId">The unique identifier for the supported moniker.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.MonikerType">
            <summary>
            Gets the type of <see cref="T:SpaceClaim.IMoniker"/> that can be de/serialized by this class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.SerializedId">
            <summary>
            Gets the unique identifier for monikers serialized by this class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.Deserialize(System.String,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <summary>
            Deserializes an <see cref="T:SpaceClaim.IMoniker"/> from a string.
            </summary>
            <param name="serializedMoniker">The serialized moniker.</param>
            <param name="monikerSerializationService">The moniker serialization service.</param>
            <returns>The deserialized moniker if successful. <see langword="null"/> otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.Serialize(SpaceClaim.IMoniker,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <summary>
            Serializes an <see cref="T:SpaceClaim.IMoniker"/> into a string.
            </summary>
            <param name="moniker">The moniker to serialize.</param>
            <param name="monikerSerializationService">The moniker serialization service.</param>
            <returns>The serialized moniker if successful. <see langword="null"/> otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.DeserializeMonikerData(System.String,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <summary>
            Deserializes moniker data.
            </summary>
            <param name="serializedMoniker">The moniker to deserialize.</param>
            <param name="monikerSerializationService">The moniker serialization service.</param>
            <returns>The deserialized moniker if successful. <see langword="null"/> otherwise.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer.SerializeMonikerData(SpaceClaim.IMoniker,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <summary>
            Serializes moniker data.
            </summary>
            <param name="moniker">The moniker to serialize.</param>
            <param name="monikerSerializationService">The moniker serialization service.</param>
            <returns>The serialized moniker if successful. <see langword="null"/> otherwise.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer">
            <summary>
            A <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.MonikerSerializer"/> for <see cref="T:SpaceClaim.BasicMoniker`1"/> instances.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer.SerializedId">
            <summary>
            Gets the unique identifier for monikers serialized by this class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer.DeserializeMonikerData(System.String,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.OccurrenceMonikerNominalBodySerializer.SerializeMonikerData(SpaceClaim.IMoniker,Ansys.Disco.Physics.Persistence.SavedScenes.IMonikerSerializationService)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedScenes">
            <summary>
            A DTO to persisted saved scenes.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedScenes.Scenes">
            <summary>
            The set of persisted scenes.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedScenes.SceneNumbers">
            <summary>
            The set of scene numbers being tracked.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene">
            <summary>
            Persisted scene data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Animation">
            <summary>
            Animation data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.BodyVisibility">
            <summary>
            Body visibility data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.CameraProjection">
            <summary>
            Camera data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Contour">
            <summary>
            Contour data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Definition">
            <summary>
            Definition data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Deformation">
            <summary>
            Deformation data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.DirectionField">
            <summary>
            Direction Field data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Id">
            <summary>
            Id of the scene.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.IsoSurface">
            <summary>
            Isosurface data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Legend">
            <summary>
            Legend data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Mesh">
            <summary>
            Mesh data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.MinMax">
            <summary>
            Min Max data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Name">
            <summary>
            Name of the scene.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Particles">
            <summary>
            Particle data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Plane">
            <summary>
            Plane data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.ResultVisibility">
            <summary>
            Result visibility data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.SimulationId">
            <summary>
            Simulation id of the scene.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.SpareSettings">
            <summary>
            Spare settings data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Streamlines">
            <summary>
            Streamlines data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.Vectors">
            <summary>
            Vectors data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.FarFieldPlot">
            <summary>
            FarField data.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedScene.NearFieldPlot">
            <summary>
            NearField data.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey">
            <summary>
            Defines persistence for a saved scene render key.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey.DefinedVariationId">
            <summary>
            Gets the id of the defined variation.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey.DesignPointIndex">
            <summary>
            Gets the index of the design point.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey.SceneId">
            <summary>
            Gets the id of the scene.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey.SimulationId">
            <summary>
            Gets the id of the simulation.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKey.StageId">
            <summary>
            Gets the id of the stage.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKeys">
            <summary>
            Defines persistence for a set of saved scene render keys.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.SavedScenes.PersistedSavedSceneRenderKeys.Keys">
            <summary>
            The set of persisted render keys.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersPersister">
            <summary>
            Persister for saved scene renders.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersPersister.IsDirty">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersPersister.Load(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Persistence.DeferredLoadActions,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersPersister.Reset(Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersPersister.Save(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1">
            <summary>
            The V1 serializer of scene renders.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneRenderCatalog,Ansys.Disco.Physics.Repositories.IMonitorsRepository,Ansys.Disco.Core.Environment.IAppGlobalSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1"/> class.
            </summary>
            <param name="savedSceneRenderCatalog">The render archive.</param>
            <param name="monitorsRepository">The monitors repository.</param>
            <param name="globalSettings">The global settings.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1.Version">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1.CanLoad(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1.Load(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedSceneRendersSerializerV1.Save(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedScenesSerializer">
            <summary>
            Defines management for the serialization of saved scenes.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedScenesSerializer.Version">
            <summary>
            Gets the version of saved scenes this serializer controls.
            </summary>
            <value>The version of saved scenes this serializer controls.</value>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedScenesSerializer.CanLoad(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Gets whether there is saved scene serialized data that this serializer can load from.
            </summary>
            <param name="store">The chunk store containing the data.</param>
            <param name="issueLogger">A logger for issues.</param>
            <returns>
            <see langword="true"/> if data can be loaded using this serializer. <see
            langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedScenesSerializer.Load(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Loads data from the given chunk store.
            </summary>
            <param name="store">The chunk store containing the data.</param>
            <param name="issueLogger">A logger for issues.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.ISavedScenesSerializer.Save(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <summary>
            Saves data to the given chunk store.
            </summary>
            <param name="store">The chunk store to contain the data.</param>
            <param name="issueLogger">A logger for issues.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedScenesPersister.IsDirty">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedScenesPersister.Load(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Persistence.DeferredLoadActions,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedScenesPersister.Reset(Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SavedScenes.SavedScenesPersister.Save(Ansys.Disco.Core.Persistence.Chunks.IChunkStore,Ansys.Disco.Core.Issues.IIssueLogger)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.EntityUpdating">
            <summary>
            Implements disco data, project paths, save, resume and reset
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.EntityUpdating.PlaceholderEntities.DeletePlaceholders(Ansys.Disco.Physics.Commands.Helpers.IDataAccess)">
            <summary>
            Deletes any <see cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObject"/> whose <see
            cref="P:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObject.Entity"/> is a known placeholder (e.g. <see
            cref="P:Ansys.Disco.Physics.Persistence.MalformedEntity.Instance"/> or <see
            cref="P:Ansys.Disco.Physics.Persistence.ObsoleteEntity.Instance"/>). Such a <see
            cref="T:Ansys.Disco.Physics.Nominal.PhysicsObject.PhysicsObject"/> is produced when a project file is
            resumed where the file contains one or more persisted entity
            definitions that could not be deserialized back to a valid <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance, perhaps because the entity
            definition was corrupt in some way, or because the associated
            <see cref="M:Ansys.Disco.Physics.Persistence.IRepresent`1.CreateOriginal(System.Action{Ansys.Disco.Core.Issues.Issue})"/>
            method threw an exception, or because the entity type has been
            superseded and is no longer required.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.ObsoleteEntity">
            <summary>
            A do-nothing entity used when an <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance is now deprecated. Using a <see cref="T:Ansys.Disco.Physics.Persistence.ObsoleteEntity"/>
            instance is safer than returning a <see langword="null"/> because the
            consumers of physics entities are generally not prepared to handle <see
            langword="null"/> references.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.ObsoleteEntity.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.ObsoleteEntity"/>
            class.
            </summary>
            <param name="guid">
            The <see cref="T:System.Guid"/> to use to identify this instance.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SurrogateMap.MakeTryGetSurrogateFor">
            <summary>
            Creates a delegate that creates a new surrogate instance for the
            specified original type.
            </summary>
            <returns>
            A <see cref="M:Ansys.Disco.Physics.Persistence.SurrogateMap.TryGetSurrogateFor(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Type})"/> delegate instance.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SurrogateMap.MakeOriginalToSurrogateMap">
            <summary>
            Uses the <see cref="T:Ansys.Disco.Physics.Nominal.Persistence.SerializationSurrogateForAttribute"/> to match
            original types with their surrogates.
            </summary>
            <returns>
            A dictionary mapping original type to surrogate type.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.SurrogateMap.TryGetSurrogateFor(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Type})">
            <summary>
            Map an original type to a new instance of the corresponding
            surrogate.
            </summary>
            <param name="originalType">
            The type that we want to persist using a surrogate.
            </param>
            <param name="originalToSurrogate">
            A map of original to surrogate types.
            </param>
            <returns>
            A new instance of the appropriate surrogate type, or  <see
            langword="null"/> if there is no corresponding surrogate or if an
            exception was thrown while attempting to create a the surrogate
            instance.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.TryGetSurrogateFor">
            <summary>
            A function that returns a new instance of a <see
            cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> suitable for persisting an instance of
            the specified original type, or <see langword="null"/> if no surrogate
            is available.
            </summary>
            <param name="originalType">
            The type to be persisted. This parameter may be <see langword="null"/>,
            in which case the function should return <see langword="null"/>.
            </param>
            <returns>
            Returns <see langword="null"/> if no surrogate is available or the
            supplied object was itself <see langword="null"/>.
            </returns>
            <remarks>
            Functions conforming to this protocol must not throw exceptions.
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.PersistenceIssues">
            <summary>
            Methods to construct user-facing messages for persistence issues.
            </summary>
            <remarks>
            <para>
            I18N: These messages will need to internationalized, but that can wait
            until we've decided how persistence issues will be surfaced to the
            user.
            </para>
            <para>
            REFACTOR: This is only intended to be a temporary location for these
            issue definitions.  Once we understand the requirements better we can
            move the definitions elsewhere.
            </para>
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.IRepresent`1">
            <summary>
            Declares the capability to encode and decode an object of type
            <typeparamref name="TOriginal"/>. in a way compatible with SpaceClaim's
            XML serializer.
            </summary>
            <typeparam name="TOriginal">
            The type of object that this class can persist.
            </typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.IRepresent`1.CreateOriginal(System.Action{Ansys.Disco.Core.Issues.Issue})">
            <summary>
            Creates a new instance of type <typeparamref name="TOriginal"/>
            using the information already stored in this object by a prior
            call to <see cref="M:Ansys.Disco.Physics.Persistence.IRepresent`1.ReadOriginal(`0,System.Action{Ansys.Disco.Core.Issues.Issue})"/>.
            </summary>
            <param name="logIssue">
            A delegate to call to report issues. The delegate may be called as
            many times as required. It is a calling contract violation for this
            parameter to be null.
            </param>
            <returns>
            A new instance of the appropriate type. If a new instance cannot be
            created then information should be written to the supplied log and
            <see langword="null"/> should be returned. It is acceptable for the
            implementation to throw an exception, but writing to the log is the
            preferred approach as this provides the most opportunity for
            meaningful user-facing error messages.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.IRepresent`1.ReadOriginal(`0,System.Action{Ansys.Disco.Core.Issues.Issue})">
            <summary>
            Copies information from an instance of type <typeparamref
            name="TOriginal"/> into this object such that a subsequent call to
            <see cref="M:Ansys.Disco.Physics.Persistence.IRepresent`1.CreateOriginal(System.Action{Ansys.Disco.Core.Issues.Issue})"/> will be able to
            reconstruct the original.
            </summary>
            <param name="original">
            The object to copy information from. It is a calling contract
            violation for this parameter to be null.
            </param>
            <param name="logIssue">
            A delegate to call to report issues. May be called as many times as
            required. It is a calling contract violation for this parameter to
            be null.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.MalformedEntity">
            <summary>
            A do-nothing entity used when it is not possible to deserialize an <see
            cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> instance. Using a <see cref="T:Ansys.Disco.Physics.Persistence.MalformedEntity"/>
            instance is safer than returning a <see langword="null"/> because the
            consumers of physics entities are generally not prepared to handle <see
            langword="null"/> references.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Persistence.MalformedEntity.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Persistence.MalformedEntity"/>
            class.
            </summary>
            <param name="guid">
            The <see cref="T:System.Guid"/> to use to identify this instance.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex">
            <summary>
            Add an Entity type here to persist its count, then override the Entity's CountedTypeIndex property.
            Scroll to the bottom when adding new indices!
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.NoCount">
            <summary>
            Index for an entity type that is not counted
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BearingLoadIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BearingLoadEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BoltPreloadIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.BoltPreloadEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ContactIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ConvectionIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ConvectionEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.DisplacementIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.FlowIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ForceIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.HeatIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.HeatEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.InsulatedIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.InsulatedEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.JointIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.JointEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.MomentIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.MomentEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.PressureIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PressureEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.SupportIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SupportEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.TemperatureIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.WallIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.WallEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.MaterialAssignmentIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.CalculatedResultIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/>
            </summary>
            <remarks>
            This used to be the index for
            the removed CalculatedResultEntity. However,
            now that this is refactored out, we are
            using this for <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/>.
            The <see cref="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ResultInsightIndex"/> one is broken,
            hence we can only use this.
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.PhysicsRegionIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.SimulationIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ContactGroupIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.FidelitySettingIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.FidelitySetting.FidelityAdjustmentSettingEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.AddedMassIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ManualContactGroupIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ResultInsightIndex">
            <summary>
            Index for the removed ResultInsightEntity.
            </summary>
            <remarks>
            This is not used anymore as we have refactored
            ResultInsightEntity out, however, we will still
            need to keep this enum value to fix persistence
            problems.
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.OptimizationOptionIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationOptionEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.DefaultInterfaceIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DefaultInterfaceEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.DefaultWallIndex">
            <summary>
            Index for the removed DefaultWallEntity.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.FluidTemperatureIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidTemperatureEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.PorousIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PorousEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.SymmetryIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SymmetryEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.CircuitPortIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.CircuitPortEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.OptimizationProtectedDepthIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.TopologyOptimization.OptimizationProtectedDepthEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.VelocityIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.AccelerationIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ElectromagneticRegionIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ElectromagneticRegionEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ChartIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ChartDataSeriesIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.SpringIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SpringEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.FluidPressureIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BeamAssignmentIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.MaterialIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BeamIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BoltIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.BoltAssignmentIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.ModePortIndex">
            <summary>
            Index for <see cref="T:Ansys.Disco.Physics.Entities.Conditions.Electromagnetic.ModePortEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Persistence.CountedEntityTypeIndex.IndexCount">
            <summary>
            Final Index, insert new indices IMMEDIATELY above this one
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Extensions.DegreesOfFreedomExtensions.CanBeRepresentedByGlobalDisplacement``2(Ansys.Disco.Physics.ValueObjects.DegreesOfFreedom{``0,``1},Ansys.Disco.Physics.ValueObjects.Triad)">
            <summary>
            Determine if DegreesOfFreedom with given direction triad can be resolved to components in the global direction
            </summary>
            <param name="dof">Degrees of freedom</param>
            <param name="loadDirectionTriad">Load Direction Triad</param>
            <typeparam name="TLinearQuantity">Quantity type of the translational components</typeparam>
            <typeparam name="TRotationalQuantity">Quantity type of the rotational components</typeparam>
            <returns>True if DegreeOfFreedom and triad combination can be represented in the global direction</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Extensions.DrivingDimensionQuantityExtensions.ToNamedSelection(UnitsNet.IQuantity,Ansys.Disco.Core.Units.IUnitsHelper)">
            <summary>
            Converts an <see cref="T:UnitsNet.IQuantity"/> to a double specifically
            converted to use with SpaceClaim's <see cref="T:SpaceClaim.INamedSelection"/>.
            </summary>
            <param name="quantity">
            The <see cref="T:UnitsNet.IQuantity"/> to convert to double accepted by
            <see cref="T:SpaceClaim.INamedSelection"/>.
            </param>
            <param name="unitsHelper">Units helper for SpaceClaim document units</param>
            <returns>
            A double value from <paramref name="quantity"/> accepted by
            <see cref="T:SpaceClaim.INamedSelection"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Extensions.DrivingDimensionQuantityExtensions.ToUnitsNet(System.Double,SpaceClaim.Geometry.DimensionValueType,Ansys.Disco.Core.Units.IUnitsHelper)">
             <summary>
             Converts a <see cref="T:SpaceClaim.INamedSelection"/> value to a UnitsNet value.
            
             There are currently not values in <see cref="T:SpaceClaim.Numeric.IUnits"/> to support
             <see cref="T:UnitsNet.Area"/>, <see cref="T:UnitsNet.Volume"/> and <see cref="T:UnitsNet.Ratio"/>
             </summary>
             <param name="value">
             The <see cref="T:SpaceClaim.INamedSelection"/> value to be converted to
             <see cref="T:UnitsNet.IQuantity"/>.
             </param>
             <param name="dimensionValueType">
             The value type for the <see cref="T:SpaceClaim.INamedSelection"/>.
             </param>
             <param name="unitsHelper">
             Make sure that the value is converted to the correct value
             as it is in settings
             </param>
             <returns>
             An <see cref="T:UnitsNet.IQuantity"/> converted from the
             <see cref="T:SpaceClaim.INamedSelection"/> value.
             </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Extensions.PhysicsRegionExtensions">
            <summary>
            Static extension methods for <see cref="T:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Extensions.PhysicsRegionExtensions.GetDefaultWalls(Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Gets the default walls location set of a fluid physics region
            </summary>
            <param name="physicsRegion">The fluid physics region</param>
            <param name="simulation">The simulation that contains the conditions</param>
            <returns>The location set of the default walls</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter">
            <summary>
            Changes the value of a physics parameter for a given boundary condition.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.DisplacementTranslation(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> translation
            magnitude to new <see cref="T:UnitsNet.Length"/> value.
            </summary>
            <param name="maybeDisplacement">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> to be changed
            </param>
            <param name="maybeMagnitude">
            The new <see cref="T:UnitsNet.Length"/> value to set <paramref name="maybeDisplacement"/>'s
            magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.DisplacementRotation(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> rotation
            magnitude to new <see cref="T:UnitsNet.Angle"/> value.
            </summary>
            <param name="maybeDisplacement">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> to be changed
            </param>
            <param name="maybeMagnitude">
            The new <see cref="T:UnitsNet.Angle"/> value to set <paramref name="maybeDisplacement"/>'s
            magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.InletVelocity(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.SpeedExpression"/>
            magnitude for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> passed in through
            <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> to be changed.
            </param>
            <param name="maybeSpeed">
            The new <see cref="T:UnitsNet.Speed"/> value to set <paramref
            name="maybeFlow"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.InletMassFlow(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.MassFlow"/>
            magnitude for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> passed in through
            <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> to be changed.
            </param>
            <param name="maybeMassFlow">
            The new <see cref="T:UnitsNet.MassFlow"/> value to set <paramref
            name="maybeFlow"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.InletPressure(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.Pressure"/>
            magnitude for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> passed in through
            <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> to be changed.
            </param>
            <param name="maybePressure">
            The new <see cref="T:UnitsNet.Pressure"/> value to set <paramref
            name="maybeFlow"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.OutletPressure(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.Pressure"/>
            magnitude for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> passed in through
            <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> to be changed.
            </param>
            <param name="maybePressure">
            The new <see cref="T:UnitsNet.Pressure"/> value to set <paramref
            name="maybeFlow"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.Temperature(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the temperatue for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/>.
            </summary>
            <param name="maybeFlow">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> to be changed.
            </param>
            <param name="maybeTemperature">
            The new <see cref="T:UnitsNet.Temperature"/> value to set <paramref
            name="maybeFlow"/>'s temperature to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TotalHeat(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat"/>
            property for <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to be changed.
            </param>
            <param name="maybeTotalHeat">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TotalHeat(Ansys.Disco.Physics.Entities.Conditions.HeatEntity,UnitsNet.Power)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat"/>
            property for <paramref name="heatEntity"/>.
            </summary>
            <param name="heatEntity">
            The condition to be changed.
            </param>
            <param name="totalHeat">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.HeatArea(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/>
            property for <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to be changed.
            </param>
            <param name="maybeHeatFlux">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.HeatArea(Ansys.Disco.Physics.Entities.Conditions.HeatEntity,UnitsNet.HeatFlux)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/>
            property for <paramref name="heatEntity"/>.
            </summary>
            <param name="heatEntity">
            The condition to be changed.
            </param>
            <param name="heatFlux">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.HeatVolume(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/>
            property for <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to be changed.
            </param>
            <param name="maybePowerDensity">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.HeatVolume(Ansys.Disco.Physics.Entities.Conditions.HeatEntity,UnitsNet.PowerDensity)">
            <summary>
            Attempts to change the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/>
            property for <paramref name="heatEntity"/>.
            </summary>
            <param name="heatEntity">
            The condition to be changed.
            </param>
            <param name="heatDensity">
            The new value to set to set.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.#ctor(System.Func{SpaceClaim.Commands.ICommand,System.Boolean},System.Func{SpaceClaim.UserInterface.IInteractionWindow},System.Func{System.Guid,Ansys.Disco.Core.DomainCore.IEntity})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter"/> class.
            </summary>
            <param name="executeCommand">
            A method for executing <see cref="T:SpaceClaim.Commands.ICommand"/>s.
            </param>
            <param name="windowProvider">
            Provides the active window for commands.
            </param>
            <param name="getCondition">
            A delegate for getting an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> by its id.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.For(Ansys.Disco.Core.DomainCore.IEntity,System.String,System.Object)">
            <summary>
            Applies <paramref name="value"/> to a <paramref name="condition"/>'s
            property determined using the <paramref
            name="physicsParameterIdentifier"/>.
            </summary>
            <param name="condition">The condition being changed.</param>
            <param name="physicsParameterIdentifier">
            A unique string which maps a condition property to a method for
            changing said property.
            </param>
            <param name="value">
            The value to change the condition property to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.For(System.Guid,System.String,System.Object)">
            <summary>
            Applies <paramref name="value"/> to a condition's property
            determined using the <paramref name="physicsParameterIdentifier"/>.
            </summary>
            <param name="conditionId">
            The id for the  condition being changed.
            </param>
            <param name="physicsParameterIdentifier">
            A unique string which maps a condition property to a method for
            changing said property.
            </param>
            <param name="value">
            The value to change the condition property to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TotalForceMagnitude(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref
            name="maybeForceEntity"/>.
            </summary>
            <param name="maybeForceEntity">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="maybeNewForce">
            The new <see cref="T:UnitsNet.Force"/> value to set <paramref
            name="maybeForceEntity"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TotalForceMagnitude(Ansys.Disco.Physics.Entities.Conditions.ForceEntity,UnitsNet.Force)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref
            name="forceEntity"/>.
            </summary>
            <param name="forceEntity">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="newForce">
            The new <see cref="T:UnitsNet.Force"/> value to set <paramref
            name="forceEntity"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.ForceAreaMagnitude(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForcePerArea"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref name="maybeForce"/>.
            </summary>
            <param name="maybeForce">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="maybePressure">
            The new <see cref="T:UnitsNet.Pressure"/> value to set <paramref
            name="maybePressure"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.ForceAreaMagnitude(Ansys.Disco.Physics.Entities.Conditions.ForceEntity,UnitsNet.Pressure)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForcePerArea"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref name="force"/>.
            </summary>
            <param name="force">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="pressure">
            The new <see cref="T:UnitsNet.Pressure"/> value to set <paramref
            name="pressure"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TorqueMagnitude(Ansys.Disco.Core.DomainCore.IEntity,System.Object)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Torque"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref name="maybeForce"/>.
            </summary>
            <param name="maybeForce">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="maybeTorque">
            The new <see cref="T:UnitsNet.Torque"/> value to set <paramref
            name="maybeTorque"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ChangeParameter.TorqueMagnitude(Ansys.Disco.Physics.Entities.Conditions.ForceEntity,UnitsNet.Torque)">
            <summary>
            Attempts to change the <see
            cref="P:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Torque"/> magnitude for a <see
            cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> passed in through <paramref name="torque"/>.
            </summary>
            <param name="force">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.ForceEntity"/> to be changed.
            </param>
            <param name="torque">
            The new <see cref="T:UnitsNet.Torque"/> value to set <paramref
            name="torque"/>'s magnitude to.
            </param>
            <returns>
            <see langword="true"/> if the command was executed.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsParameters.ParameterValue">
            <summary>
            Gets the value of a physics parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.DisplacementTranslation(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> Translation
            magnitude value for <paramref name="maybeDisplacement"/>.
            </summary>
            <param name="maybeDisplacement">
            The condition to grab the value from.
            </param>
            <param name="length">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.DisplacementRotational(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> Rotation
            magnitude value for <paramref name="maybeDisplacement"/>.
            </summary>
            <param name="maybeDisplacement">
            The condition to grab the value from.
            </param>
            <param name="angle">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.InletMassFlow(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.MassFlow"/>
            magnitude value for <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">The condition to grab the value from.</param>
            <param name="massFlow">The value being returned if available.</param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.InletPressure(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.Pressure"/>
            magnitude value for <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">The condition to grab the value from.</param>
            <param name="pressure">The value being returned if available.</param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.InletVelocity(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.SpeedExpression"/>
            magnitude value for <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">The condition to grab the value from.</param>
            <param name="speed">The value being returned if available.</param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.OutletPressure(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.Pressure"/>
            magnitude value for <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">The condition to grab the value from.</param>
            <param name="pressure">The value being returned if available.</param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.Temperature(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the temperature value for <paramref name="maybeFlow"/>.
            </summary>
            <param name="maybeFlow">The condition to grab the value from.</param>
            <param name="temperature">The value being returned if available.</param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.TotalHeat(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat"/> value for
            <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to grab the value from.
            </param>
            <param name="maybeTotalHeat">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.TotalHeat(Ansys.Disco.Physics.Entities.Conditions.HeatEntity,System.Nullable{UnitsNet.Power}@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat"/> value for
            <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to grab the value from.
            </param>
            <param name="maybeTotalHeat">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.HeatArea(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/> value
            for <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to grab the value from.
            </param>
            <param name="maybeHeatFlux">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.HeatVolume(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitVolume"/> value
            for <paramref name="maybeHeatEntity"/>.
            </summary>
            <param name="maybeHeatEntity">
            The condition to grab the value from.
            </param>
            <param name="maybePowerDensity">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.TotalForceMagnitude(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce"/>
            magnitude value for <paramref name="maybeForceEntity"/>.
            </summary>
            <param name="maybeForceEntity">
            The condition to grab the value from.
            </param>
            <param name="maybeForce">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.TotalForceMagnitude(Ansys.Disco.Physics.Entities.Conditions.ForceEntity,System.Nullable{UnitsNet.Force}@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce"/>
            magnitude value for <paramref name="forceEntity"/>.
            </summary>
            <param name="forceEntity">
            The condition to grab the value from.
            </param>
            <param name="force">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.ForceAreaMagnitude(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForcePerArea"/>
            magnitude value for <paramref name="maybeForce"/>.
            </summary>
            <param name="maybeForce">
            The condition to grab the value from.
            </param>
            <param name="maybePressure">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.TorqueMagnitude(Ansys.Disco.Core.DomainCore.IEntity,UnitsNet.IQuantity@)">
            <summary>
            Tries to get the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Torque"/> magnitude
            value for <paramref name="maybeForce"/>.
            </summary>
            <param name="maybeForce">
            The condition to grab the value from.
            </param>
            <param name="maybeTorque">
            The value being returned if available.
            </param>
            <returns><see langword="true"/> if value is available.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.#ctor(System.Func{System.Guid,Ansys.Disco.Core.DomainCore.IEntity})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.PhysicsParameters.ParameterValue"/> class.
            </summary>
            <param name="getCondition">
            A delegate describing some way of getting an <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/>
            via the <see cref="T:System.Guid"/>.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.For(Ansys.Disco.Core.DomainCore.IEntity,System.String,UnitsNet.IQuantity@)">
            <summary>
            Matches given <paramref name="condition"/> with <paramref
            name="physicsParameterIdentifier"/> to try and get the parameter
            value for the given condition.
            </summary>
            <param name="condition">
            The condition with property value we are trying to get.
            </param>
            <param name="physicsParameterIdentifier">
            The unique string identifier which links the parameter behaviour to
            the condition property.
            </param>
            <param name="value">The value being returned if found.</param>
            <returns>Returns true if a value is found.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.ParameterValue.For(System.Guid,System.String,UnitsNet.IQuantity@)">
            <summary>
            Matches given <paramref name="conditionId"/> with <paramref
            name="physicsParameterIdentifier"/> to try and get the parameter
            value for the given condition.
            </summary>
            <param name="conditionId">
            The condition id with property value we are trying to get.
            </param>
            <param name="physicsParameterIdentifier">
            The unique string identifier which links the parameter behaviour to
            the condition property.
            </param>
            <param name="value">The value being returned if found.</param>
            <returns>Returns true if a value is found.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter">
            <summary>
            Maintains a number of properties that are required for changing a
            physics parameter.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" />
            class. Maintains a number of properties that are required for
            changing a physics parameter.
            </summary>
            <param name="conditionId">
            The <see cref="T:System.Guid" /> identifier for the condition this parameter
            operates on.
            </param>
            <param name="identifier">
            A unique string identifier used to determine the functionality of
            this parameter.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.#ctor(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" />
            class.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being parameterized.
            </param>
            <param name="identifier">
            A unique string identifier used to determine the functionality of
            this parameter.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.ConditionId">
            <summary>
            The <see cref="T:System.Guid" /> identifier for the condition this parameter
            operates on.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.Identifier">
            <summary>
            A unique string identifier used to determine the functionality of
            this parameter.
            </summary>
            <remarks>
            See <see cref="T:Ansys.Disco.Physics.PhysicsParameters.Identifiers" /> for the list of existing identifiers.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.IsParameterFor(System.Guid)">
            <summary>
            Checks if this <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> is associated with
            <paramref name="conditionId" />.
            </summary>
            <param name="conditionId">
            The <see cref="T:System.Guid" /> for a condition to be compared with <see
            cref="P:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter.ConditionId" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="conditionId" /> matches
            this <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" />.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsParameters.Identifiers">
            <summary>
            Big bag of unique string identifiers used to determine the function of a
            <see cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter"/> when get/set.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.TotalHeat">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.TotalHeat"/> property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.HeatArea">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitArea"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.HeatVolume">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.ValueObjects.HeatProperties.HeatPerUnitVolume"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.SolidTemperature">
            <summary>
            Identifier for the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SolidTemperatureEntity"/> magnitude value.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.ConvectionCoefficient">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ConvectionCoefficient"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.ExternalTemperature">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.ValueObjects.ConvectionOptions.ExternalTemperature"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.InletVelocity">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletVelocityOptions.SpeedExpression"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.InletMassFlow">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletMassFlowOptions.MassFlow"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.InletPressure">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.InletPressureOptions.Pressure"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.OutletPressure">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.OutletPressureOptions.Pressure"/>
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.FlowTemperature">
            <summary>
            Identifier for the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FlowEntity"/> temperature values.
            property.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.FluidPressure">
            <summary>
            Identifier for the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.FluidPressureEntity"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.TotalForceMagnitude">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.TotalForce"/>
            magnitude value.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.ForceAreaMagnitude">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.DistributedForceOptions.ForcePerArea"/>
            magnitude value.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.TorqueMagnitude">
            <summary>
            Identifier for the <see cref="P:Ansys.Disco.Physics.Entities.Conditions.TorqueForceOptions.Torque"/>
            magnitude value.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.AddedMass">
            <summary>
            Identifier for the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AddedMassEntity"/> value;
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.StructuralPressure">
            <summary>
            Identifier for the <see cref="T:Ansys.Disco.Physics.Entities.Conditions.PressureEntity"/> magnitude value.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.DisplacementTranslation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Translation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.DisplacementRotation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Rotation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.DisplacementCombined">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.DisplacementEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.DisplacementType.Combined"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.SupportDisplacedTranslation">
            <summary>
            Identifier for a Displaced <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SupportEntity"/> using Translation
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.SupportDisplacedRotation">
            <summary>
            Identifier for a Displaced <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SupportEntity"/> using Rotation
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.VelocityTranslation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.VelocityType.Translation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.VelocityRotation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.VelocityEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.VelocityType.Rotation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.AccelerationTranslation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationType.Translation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.AccelerationRotation">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.AccelerationEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.AccelerationType.Rotation"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.SpringStiffnessLongitudinal">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SpringEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.SpringType.Longitudinal"/>
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.PhysicsParameters.Identifiers.SpringStiffnessTorsional">
            <summary>
            Identifier for a <see cref="T:Ansys.Disco.Physics.Entities.Conditions.SpringEntity"/> using <see cref="F:Ansys.Disco.Physics.Entities.Conditions.SpringType.Torsional"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IEntityRepository.GetEvaluation(System.Guid)">
            <summary>
            Get the evaluation proxy object for an entity
            </summary>
            <param name="id">The entity id</param>
            <returns>The evaluation proxy object</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.INoteLocationReferenceRepository">
            <summary>
            Interface of repository for all note location references.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.INoteLocationReferenceRepository.TryGetLocationReferenceEntity(Ansys.Disco.Physics.ValueObjects.Locations.ILocation,Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity@)">
            <summary>
            Get the <see cref="T:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity"/> for a specified <see
            cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/>, if it already has one.
            </summary>
            <param name="associatedObject">An <see cref="T:Ansys.Disco.Physics.ValueObjects.Locations.ILocation"/> which refers to a SpaceClaim
            object.</param>
            <param name="locationReference">An existing instance of <see
            cref="T:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity"/> or <see langword="null"/>.</param>
            <returns><see langword="true"/> if an <see cref="T:Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity"/> for
            <paramref name="associatedObject"/> exists, <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.INoteRepository">
            <summary>
            Interface for repository for all notes in the application.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.INoteRepository.TryGetNoteForAssociatedEntity(System.Guid,Ansys.Disco.Physics.Entities.Notes.INoteEntity@)">
            <summary>
            Get the note associated with the specified entity.
            </summary>
            <param name="associatedEntityId">The ID of the entity the note is associated with.</param>
            <param name="note">Note associated with specified entity, null if not found.</param>
            <returns>True if there was a note with the specified entity ID.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IParameterStudyRepository.GetForSimulation(System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <summary>
            Attempts to get a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> from the
            repository that has an <see
            cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.AssociatedSimulationId"/> matching
            <paramref name="simulationId"/>.
            </summary>
            <param name="simulationId">
            The simulation that <paramref name="parameterStudy"/> should belong
            to.
            </param>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> being returned if exists.
            </param>
            <returns>
            <see langword="true"/> if the <paramref name="parameterStudy"/>
            exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IParameterStudyRepository.GetForMonitor(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <summary>
            Attempts to get a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> from the
            repository where <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity.OutputParameterColumns"/>
            contains a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity"/> whose
            <see cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.MonitorId"/> matches the Id of
            <paramref name="monitor"/>.
            </summary>
            <param name="monitor">
            The monitor that should be contained within the
            <paramref name="parameterStudy"/>
            </param>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> being returned if exists.
            </param>
            <returns>
            <see langword="true"/> if the <paramref name="parameterStudy"/>
            exists.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IParameterStudyRepository.TryGetMonitorColumn(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity@)">
            <summary>
            Tries to retrieve a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> with <see
            cref="P:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity.MonitorId" /> equal to the id for
            <paramref name="monitorColumn" />.
            </summary>
            <param name="monitor">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity" /> whose <see
            cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> is being retrieved.
            </param>
            <param name="monitorColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> returned if found.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="monitorColumn" /> is not
            <see langword="null" />.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.IMaterialTableRepository">
            <summary>
            Interface for a repository which holds material tables.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Repositories.IMaterialTableRepository.TableStore">
            <summary>
            Table store that holds all tables associated with this repository.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IMaterialTableRepository.CreateMaterialTable(Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo,Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo)">
            <summary>
            Create a material table to be stored in <see cref="P:Ansys.Disco.Physics.Repositories.IMaterialTableRepository.TableStore"/>, and add it to the
            repository.
            </summary>
            <param name="inputColumnInfo">Input column info of the table.</param>
            <param name="outputColumnInfo">Output column info of the table.</param>
            <returns><see cref="T:Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity"/> instance pointing to the table.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository">
            <summary>
            Repository for all note location references.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository.#ctor(Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence,Ansys.Disco.Core.DomainCore.IDomainEvents)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository"/> class.
            </summary>
            <param name="dataAccess">Data access.</param>
            <param name="nominalPersistence">Nominal persistence.</param>
            <param name="domainEvents">Domain events.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository.TryGetLocationReferenceEntity(Ansys.Disco.Physics.ValueObjects.Locations.ILocation,Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Notes.INoteLocationReferenceEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteLocationReferenceRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.NoteRepository">
            <summary>
            Repository for all notes in the application.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteRepository.#ctor(Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence,Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Repositories.INoteLocationReferenceRepository,Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Repositories.NoteRepository"/> class.
            </summary>
            <param name="dataAccess">Data access.</param>
            <param name="nominalPersistence">Nominal persistence.</param>
            <param name="domainEvents">Domain events.</param>
            <param name="noteLocationReferenceRepo">Note location reference repository.</param>
            <param name="scTransaction">SpaceClaim transaction.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteRepository.TryGetNoteForAssociatedEntity(System.Guid,Ansys.Disco.Physics.Entities.Notes.INoteEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Notes.INoteEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.NoteRepository.OnDomainEntityDeleted(Ansys.Disco.Physics.Events.EventTopics.DomainEntityDeleted)">
            <summary>
            Handles deletion of a note given that the entity it is associated
            with has been deleted.
            </summary>
            <param name="deleteEvent">Domain event for deleted entity</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.MaterialTableRepository">
            <summary>
            Repository for tables.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialTableRepository.#ctor(Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence,Ansys.Disco.Core.DomainCore.IDomainEvents,Ansys.Disco.Physics.Tables.ITableStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Repositories.MaterialTableRepository"/> class.
            </summary>
            <param name="dataAccess">Data access.</param>
            <param name="nominalPersistence">Nominal persistence.</param>
            <param name="domainEvents">Domain events.</param>
            <param name="tableStore">Table store that all tables referenced by entities in this
            repository will be stored in.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Repositories.MaterialTableRepository.TableStore">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialTableRepository.CreateMaterialTable(Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo,Ansys.Disco.Physics.Entities.Tables.TableQuantityColumnInfo)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialTableRepository.Remove(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialTableRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Tables.IMaterialTableEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialTableRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository">
            <summary>
            Adds some helper methods specific to <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> in addition to the regular <see
            cref="T:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1"/> methods.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository.RemoveForSimulation(System.Guid)">
            <summary>
            Attempts to remove any <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/>'s with
            matching <paramref name="simulationId"/>.
            </summary>
            <param name="simulationId">
            The id matching a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> to a <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            </param>
            <returns>
            A list of <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> ids that have been
            removed from this repository. Returns an empty list if nothing was
            removed.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository.GetForSimulation(System.Guid)">
            <summary>
            Gets <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/>s with matching <paramref
            name="simulationId"/>.
            </summary>
            <param name="simulationId">
            The id matching a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/> to a <see
            cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            </param>
            <returns>
            A list of <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity"/>s with matching
            <paramref name="simulationId"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository.TryGetPhysicsParametersWithCondition(System.Guid,Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity@)">
            <summary>
            Tries to get a <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> with a <see
            cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> added with <paramref name="conditionId"
            />.
            </summary>
            <param name="conditionId">
            The condition id for the parameter whose <see
            cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> is being returned..
            </param>
            <param name="physicsParameters">
            The <see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" /> which contains a <see
            cref="T:Ansys.Disco.Physics.PhysicsParameters.PhysicsParameter" /> for <paramref name="conditionId" />
            </param>
            <returns>
            <see langword="true" /> if <paramref name="physicsParameters" /> was
            found.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IPhysicsParametersRepository.ConditionParameterized(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <summary>
            Determines if <paramref name="condition" /> has been parameterized
            or not.
            </summary>
            <param name="condition">
            The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition" /> being check if parameterized.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="condition" /> has been
            added as a physics parameter.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Throws exception if <paramref name="condition" /> is <see
            langword="null" />.
            </exception>
            <remarks>
            The argument could be made that methods like these have no place in
            the <see cref="T:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository" />. Maybe a new root
            needs to be introduced to manage each <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"
            /><see cref="T:Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity" />. Or maybe there needs to be
            an associated <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> tagged with each
            suppression command.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.RemoveForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.GetForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.TryGetPhysicsParametersWithCondition(System.Guid,Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.ConditionParameterized(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.PhysicsParameters.PhysicsParametersEntity)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.PhysicsParametersRepository.AllInRepository">
            <summary>
            Wrapper for the <see cref="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.GetAll"/>
            method. Replaces the <see langword="null"/> return value with an
            empty list.
            </summary>
            <returns>
            Items present in repository or an empty list if none exist.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.ISimulationProgressMonitor">
            <summary>
            Interface for progress monitors specifically handling simulation progress
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Repositories.ISimulationProgressMonitor.SimulationId">
            <summary>
            simulation Id associated with the Simulation progress monitor
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.ISimulationProgressMonitor.Initialize(System.Guid)">
            <summary>
            Initializes the progress monitor with simulation
            </summary>
            <param name="simulationId">The unique id of simulation this progress monitor is for.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.ISimulationProgressMonitor.SetInitialState(Ansys.Disco.Core.Progress.ProgressState)">
            <summary>
            Allows the initial state of the monitor to be set
            </summary>
            <param name="state">The state the monitor should be in</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1">
            <summary>
            Generic repository for items of type T
            </summary>
            <typeparam name="T">The type of items contained within this repository</typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.GetEvaluation(System.Guid)">
            <summary>
            Get the evaluation proxy object for an entity
            </summary>
            <param name="id">The entity id</param>
            <returns>The evaluation proxy object</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.GetById(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.GetAll">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.TryGetById(System.Guid,`0@)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.Add(`0,Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.Remove(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AggregateRootRepository`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.GetById(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.GetAll">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.TryGetById(System.Guid,Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.Add(Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.Add(Ansys.Disco.Physics.Entities.Simulations.AssemblyEntity,Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.Remove(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.AssemblyRepository.Clear">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.GetById(System.Guid)">
            <summary>
            Gets the matching item
            </summary>
            <param name="id">The Id of the item to get</param>
            <returns>The found item</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.GetAll">
            <summary>
            Get all items of type T.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/> of entities added to the repository.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.TryGetById(System.Guid,`0@)">
            <summary>
            Gets the matching item
            </summary>
            <param name="id">The Id of the item to get</param>
            <param name="root">The <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> to be returned if the id exists in the repository.</param>
            <returns>False if the <see cref="T:Ansys.Disco.Core.DomainCore.IEntity"/> with Guid <paramref name="id"/> has not been added to the repository</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.Add(`0)">
            <summary>
            Adds the entity to the repository.
            </summary>
            <param name="root">Entity to be added to the repository.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.Add(`0,Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Adds the entity to the repository.
            </summary>
            <param name="root">Entity to be added to the repository.</param>
            <param name="parent">Parent entity that defines the object hierarchy structure withing the document.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.Remove(System.Guid)">
            <summary>
            Removes the entity from the repository.
            </summary>
            <param name="id">Id of the entity to be removed.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IAggregateRootRepository`1.Clear">
            <summary>
            Removes all entities from the repository.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IMonitorsRepository.TryGetInsightsForSimulation(System.Guid,Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity@)">
            <summary>
            Tries to get the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> for the
            specified <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </summary>
            <param name="simulationId">
            The id of the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> we want to get
            the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> for.
            </param>
            <param name="insights">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.InsightsEntity"/> for the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>.
            </param>
            <returns>
            <see langword="true"/> if found. <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IMonitorsRepository.GetResultsParent(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> of the passed in <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/>.
            </summary>
            <param name="monitor">The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/> to get the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> for.</param>
            <returns>The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> containing the <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/></returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IMonitorsRepository.GetResultsParent(System.Guid)">
            <summary>
            Gets the parent <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> of the monitor
            associated with the given monitor Id.
            </summary>
            <param name="monitorId">The <see cref="T:System.Guid"/> to get the
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> for.</param>
            <returns>The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity"/> containing the
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.MonitorEntity"/></returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.IStudyRepository.GetSimulations">
            <summary>
            Gets all simulations.
            </summary>
            <returns>A read-only collection of simulations.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.ParameterStudyRepository.GetForSimulation(System.Guid,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.ParameterStudyRepository.GetForMonitor(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.ParameterStudyRepository.TryGetMonitorColumn(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.StudyRepository.GetSimulations">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MonitorsRepository.TryGetInsightsForSimulation(System.Guid,Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MonitorsRepository.GetResultsParent(Ansys.Disco.Physics.Entities.Monitors.MonitorEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MonitorsRepository.GetResultsParent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MonitorsRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MonitorsRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialProjectRepository.Add(Ansys.Disco.Physics.Entities.Materials.MaterialEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialProjectRepository.Add(Ansys.Disco.Physics.Entities.Materials.MaterialEntity,Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialProjectRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Materials.MaterialEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.MaterialProjectRepository.RaiseRemovedEvent(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Repositories.SimulationRepository">
            <summary>
            This repository is used for accessing and querying <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/> objects.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.#ctor(Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Physics.Commands.Helpers.INominalPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Repositories.SimulationRepository"/> class.
            </summary>
            <param name="dataAccess"></param>
            <param name="database"></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithMaterial(Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity)">
            <summary>
            Retrieves all simulations that have the given <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity"/> assigned to it
            </summary>
            <param name="materialAssignment">The <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialAssignmentEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithMaterial(Ansys.Disco.Physics.Entities.Materials.MaterialEntity)">
            <summary>
            Retrieves all simulations that have used the given <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/>
            </summary>
            <param name="material">The <see cref="T:Ansys.Disco.Physics.Entities.Materials.MaterialEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithBeam(Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity)">
            <summary>
            Retrieves all simulations that have the given <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity"/> assigned to it
            </summary>
            <param name="beamAssignment">The <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamAssignmentEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithBeam(Ansys.Disco.Physics.Entities.Beams.BeamEntity)">
            <summary>
            Retrieves all simulations that have used the given <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamEntity"/>
            </summary>
            <param name="beam">The <see cref="T:Ansys.Disco.Physics.Entities.Beams.BeamEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithBolt(Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity)">
            <summary>
            Retrieves all simulations that have the given <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity"/> assigned to it
            </summary>
            <param name="boltAssignment">The <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltAssignmentEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithBolt(Ansys.Disco.Physics.Entities.Bolts.BoltEntity)">
            <summary>
            Retrieves all simulations that have used the given <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltEntity"/>
            </summary>
            <param name="bolt">The <see cref="T:Ansys.Disco.Physics.Entities.Bolts.BoltEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithCondition(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Retrieves all simulations that have the given <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition"/> applied to it
            </summary>
            <param name="condition">The <see cref="T:Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.GetSimulationsWithPhysicsRegion(Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity)">
            <summary>
            Retrieves all simulations that contain the given <see cref="T:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity"/>
            </summary>
            <param name="physicsRegion">The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity"/> used to filter the returned simulations</param>
            <returns>A collection for found simulations</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.TryGetSimulationWithCondition(Ansys.Disco.Physics.Entities.Conditions.IPhysicsCondition,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity@)">
            <summary>
            Try to get the <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> which has <paramref
            name="condition" /> added.
            </summary>
            <param name="condition">
            The condition whose parent we are interested in.
            </param>
            <param name="simulation">
            The <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity" /> returned if contains <paramref
            name="condition" />.
            </param>
            <returns>
            <see langword="true" /> if <paramref name="simulation" /> is found.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.RaiseAddedEvent(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Empty method as the <see cref="T:Ansys.Disco.Physics.Events.Simulations.SimulationCreated"/> event is raised when the simulation is added to a <see cref="T:Ansys.Disco.Physics.Entities.Simulations.StudyEntity"/>
            </summary>
            <param name="entity">The simulation that has been added</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Repositories.SimulationRepository.RaiseRemovedEvent(System.Guid)">
            <summary>
            Empty method as the <see cref="T:Ansys.Disco.Physics.Events.Simulations.SimulationDeleted"/> event is raised when the simulation is removed from a <see cref="T:Ansys.Disco.Physics.Entities.Simulations.StudyEntity"/>.
            </summary>
            <param name="id">The simulation that has been added</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Results.ResultVariableComparer">
            <summary>
            Comparer class to use in sorting lists of ResultVariables to be in
            the order we would like them to be displayed in the legend dropdown
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultVariableComparer.Compare(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Core.Results.Types.ResultVariable)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Results.ResultVariableDefinitionComparer">
            <summary>
            Comparer class to use in sorting lists of ResultVariables to be in
            the order we would like them to be displayed in the legend dropdown
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultVariableDefinitionComparer.Compare(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultDefaults.GetDefaultResultMetadata(Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Returns the default IResultMetadata depending on <paramref name="physicsType"/>.
            </summary>
            <param name="physicsType"></param>
            <returns></returns>
        </member>
        <member name="F:Ansys.Disco.Physics.Results.ResultDefaults.DefaultNumberOfModes">
            <summary>
            The default number of modes used in Explore and Refine stage for modal analysis.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter">
            <summary>
            Converts ResultMetadata to string and vice versa.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if this type converter can convert from a given type.
            </summary>
            <returns>
            bool - True if this converter can convert from the provided type, false if not.
            </returns>
            <param name="context"> The ITypeDescriptorContext for this call. </param>
            <param name="sourceType"> The Type being queried for support. </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if this type converter can convert to the given type.
            </summary>
            <returns>
            bool - True if this converter can convert to the provided type, false if not.
            </returns>
            <param name="context"> The ITypeDescriptorContext for this call. </param>
            <param name="destinationType"> The Type being queried for support. </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert to a Size from the given object.
            </summary>
            <returns>
            The Size which was constructed.
            </returns>
            <exception cref="T:System.NotSupportedException">
            A NotSupportedException is thrown if the example object is null or is not a valid type
            which can be converted to a Size.
            </exception>
            <param name="context"> The ITypeDescriptorContext for this call. </param>
            <param name="culture"> The requested CultureInfo.  Note that conversion uses "en-US" rather than this parameter. </param>
            <param name="value"> The object to convert to an instance of Size. </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo - Attempt to convert an instance of Size to the given type
            </summary>
            <returns>
            The object which was constructed.
            </returns>
            <exception cref="T:System.NotSupportedException">
            A NotSupportedException is thrown if "value" is null or not an instance of Size,
            or if the destinationType isn't one of the valid destination types.
            </exception>
            <param name="context"> The ITypeDescriptorContext for this call. </param>
            <param name="culture"> The CultureInfo which is respected when converting. </param>
            <param name="value"> The object to convert to an instance of "destinationType". </param>
            <param name="destinationType"> The type to which this will convert the Size instance. </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.ConvertToString(Ansys.Disco.Core.Results.Types.IResultMetadata)">
            <summary>
            Converts a given IResultMetadata instance into a string.
            </summary>
            <param name="metadata">Metadata to convert.</param>
            <returns>String representation of metadata.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultMetadataTypeConverter.Parse(System.String)">
             <summary>
             Parses the source string and converts it to an IResultMetadata instance.
            
             The inverse of ConvertToString().
             </summary>
             <param name="source">String to convert.</param>
             <returns>IResultMetadata.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Results.ResultOptionsAvailability">
            <summary>
            A reference for checking function options for variables
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetDefaultFunctionFor(Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Gets the default result function for the given result variable
            </summary>
            <param name="resultVariable">The result variable</param>
            <returns>The default result function</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.IsVariableWithOptionalFunctions(Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Checks if the variable has optional functions
            </summary>
            <param name="resultVariable">The variable to check</param>
            <returns>True if the variable has optional functions</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetRequiredFunctionForResultVariable(Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Gets the required function for a result variable without optional functions
            </summary>
            <param name="resultVariable">The result variable to query</param>
            <returns>The function for the result variable</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetVectorComponentsForResultVariable(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <summary>
            For a vector result with non-standard vector component options, gets the supported vector components
            </summary>
            <param name="resultVariable">The result variable to query</param>
            <param name="activePhysicsForRegion">The active physics for region</param>
            <param name="stage">The stage.</param>
            <returns>The vector components that the vector result supports</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetFunctionOrDefault(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Results.ResultFunction)">
            <summary>
            Gets a result function that is either required for the variable or compatible with the variable.
            </summary>
            <param name="resultVariable">The result variable to check function options</param>
            <param name="resultFunction">The result function to check if compatible</param>
            <returns>A result function that is either required or compatible with the variable.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetDefaultVectorComponentForResultVariable(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <summary>
            Returns the default vector component given a result variable
            </summary>
            <param name="variable">the current result variable</param>
            <param name="activePhysics">the physics type on the region the variable is being applied</param>
            <param name="stage">the current stage</param>
            <returns>the default result vector component</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Results.ResultOptionsAvailability.GetDefaultVectorComponentIfNotCompatible(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Core.Results.Types.ResultVectorComponent,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <summary>
            Gets the default vector component given a result variable, active phyics type, and current stage
            </summary>
            <param name="resultVariable">Result variable that has components</param>
            <param name="currentVectorComponent">the current component to check for compatibility</param>
            <param name="activePhysicsType">the active physics type for the simulation</param>
            <param name="stage">the stage where result variable is being consumed</param>
            <returns>the vector component that is compatible for the result variable</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Rules.CheckAllConditionsAreSuppressed">
            <summary>
            Validation rule to check if all conditions have been suppressed. If all
            conditions have been suppressed the solver should be disabled.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Rules.CheckAllConditionsAreSuppressed.GetRule">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable">
            <summary>
            Contains visibility information of bodies within a scene.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable.#ctor(System.Collections.Generic.IDictionary{SpaceClaim.InstanceMonikerList,System.Collections.Generic.Dictionary{SpaceClaim.ObjectId,System.Nullable{System.Boolean}}})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable"/> class.
            </summary>
            <param name="visibilityTable">The visibility of bodies within a scene.</param>
            <seealso cref="M:SpaceClaim.NamedView.GetEntityVisibilityTable(SpaceClaim.IPresentation,System.Collections.Generic.IList{SpaceClaim.IHasVisibility})"/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.BodyVisibilityTable.Table">
            <summary>
            Gets the table containing visibility information of bodies within a scene.
            </summary>
            <value>The table containing visibility information of bodies within a scene.</value>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneService">
            <summary>
            The physics Saved Scene service.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics">
            <summary>
            Saved Scene settings, including physics-specific information.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics.BodyVisibility">
            <summary>
            Gets or sets the Body Visibility configuration.
            </summary>
            <value>The Body Visibility configuration.</value>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics.ResultVisibility">
            <summary>
            Gets or sets the Result Visibility configuration.
            </summary>
            <value>The Result Visibility configuration.</value>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneService">
            <summary>
            The implementation of <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneService"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneServiceCore{Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics},Ansys.Disco.Core.DomainCore.IDomainEvents)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneService"/> class.
            </summary>
        </member>
        <member name="E:Ansys.Disco.Physics.SavedScenes.SavedSceneService.ScenesUpdated">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneService.HasUnsavedChanges">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneService.SaveMarker">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneService.Scenes">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.ActivateScene(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.AddScene(Ansys.Disco.Core.SavedScenes.ISavedScene{Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics})">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.AddScenes(System.Collections.Generic.IReadOnlyList{Ansys.Disco.Core.SavedScenes.ISavedScene{Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics}})">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.ClearScenes">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.CloneScene(Ansys.Disco.Core.SavedScenes.ISavedScene{Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics})">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.CreateSceneForCurrentSimulation">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.DeleteScene(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.DeleteScenesForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.DuplicateScenes(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.GetSavedScenesForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.GetScene(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.GetSceneNumbers">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.InitializeSceneNumbers(System.Collections.Generic.IReadOnlyDictionary{System.Guid,System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.OnRestoredToSaveMarker(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.OnSyncedWithSaved">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.RenameScene(System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneService.GetRenderTransaction">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory">
            <summary>
            A factory for <see cref="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics"/> implementations.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneSettingsFactory{Ansys.Disco.Core.SavedScenes.ISavedSceneSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.Build">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings">
            <summary>
            An clean implementation of <see cref="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Animation">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.BodyVisibility">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.CameraProjection">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Contour">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Definition">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Deformation">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.DirectionField">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.IsoSurface">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Legend">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Mesh">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.MinMax">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Particles">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Plane">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.ResultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.SceneColorOverride">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Streamlines">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.FarFieldPlot">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.NearFieldPlot">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.Vectors">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.DisplaysResults">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsFactory.SavedSceneSettings.BatchUpdateTransaction">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsWithPhysicsCopier">
            <summary>
            Copies <see cref="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics"/> implementations.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsWithPhysicsCopier.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneSettingsCopier{Ansys.Disco.Core.SavedScenes.ISavedSceneSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsWithPhysicsCopier"/> class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneSettingsWithPhysicsCopier.Copy(Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics,Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter">
            <summary>
            Provides a physics-supported implementation of <see cref="T:Ansys.Disco.Core.SavedScenes.ISavedSceneDiscoveryAdapter`1"/>.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings">
            <summary>
            The clean implementation of <see cref="T:Ansys.Disco.Physics.SavedScenes.ISavedSceneSettingsWithPhysics"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Animation">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.BodyVisibility">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.CameraProjection">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Contour">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Definition">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Deformation">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.DirectionField">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.IsoSurface">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Legend">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Mesh">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.MinMax">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Particles">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Plane">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.FarFieldPlot">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.NearFieldPlot">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.DisplaysResults">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.ResultVisibility">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.SceneColorOverride">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Streamlines">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.Vectors">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ActiveViewSettings.BatchUpdateTransaction">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneDiscoveryAdapter{Ansys.Disco.Core.SavedScenes.ISavedSceneSettings},Ansys.Disco.Physics.Commands.Helpers.IDataAccess,Ansys.Disco.Physics.Contexts.ISimulationContext,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Physics.Repositories.IStudyRepository,Ansys.Disco.Physics.Repositories.IMonitorsRepository,Ansys.Disco.Physics.Repositories.IParameterStudyRepository,Ansys.Disco.Physics.Repositories.IAggregateRootRepository{Ansys.Disco.Physics.Entities.Simulations.SimulationEntity})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter"/> class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.CurrentSimulationId">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.CurrentStage">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.ResultsAreUpToDate">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.SimulationIds">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.BuildActiveScenePreviewImage">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.BuildActiveViewSettings">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.GetCurrentDefinedVariationForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.GetCurrentDesignPointForSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.SwitchSimulation(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.SavedScenes.SavedSceneWithPhysicsDiscoveryAdapter.SwitchStage(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.ChartLabelUtilities">
            <summary>
            Utilities for generating chart/table labels.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ChartLabelUtilities.GenerateCalculatorLabel(System.Collections.Generic.IReadOnlyCollection{Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition})">
            <summary>
            Produces a label from the given data series definitions for the chart.
            </summary>
            <param name="dataSeriesDefinitions">The list of data series definitions.</param>
            <returns>The combined result string.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.ContactGroupingHelper">
            <summary>
            A utility class that contains mixing logic for contacts to figure out
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ContactGroupingHelper.Group(System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Physics.Entities.Conditions.ContactDetectionGrouping)">
            <summary>
            Groups contacts using several methods
            </summary>
            <param name="individualContactPairs">the contact pairs to be grouped</param>
            <param name="interactionWindowProvider">the window needed for context evaluation</param>
            <param name="grouping">the grouping method</param>
            <returns>the grouped contacts</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ContactGroupingHelper.GroupByBodies(System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},Ansys.Disco.Core.Input.IInteractionWindowProvider,System.Boolean,System.Boolean)">
            <summary>
            Groups contact pairs by bodies
            </summary>
            <param name="individualContactPairs">individual contact pairs</param>
            <param name="interactionWindowProvider">window provider for evaluation context</param>
            <param name="breakIfFail">parameter to interrupt grouping if issues arise</param>
            <param name="onlySinglePairs">parameter to interrupt grouping if contacts are composed of more than one pair</param>
            <returns>the contact pairs grouped by bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.DefaultContactDetectionDistance.Calculate">
            <summary>
            Utility calculating a default distance for contact detection
            </summary>
            <returns>default distance</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.ContactPairComparer">
            <summary>
            Equality comparer for contact pairs that take on the form of a tuple of type <see cref="T:Ansys.Disco.Physics.ValueObjects.LocationSet"/>
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Utilities.ContactPairComparer.Instance">
            <summary>
            Default instance of the <see cref="T:Ansys.Disco.Physics.Utilities.ContactPairComparer"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ContactPairComparer.IsEquivalent(System.Collections.Generic.IList{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},System.Collections.Generic.IList{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}})">
            <summary>
            Determines whether two lists of contact pairs are equivalent, in that they contain the same items in any order
            </summary>
            <param name="pairs1">The first list of contact pairs</param>
            <param name="pairs2">The second list of contact pairs</param>
            <returns>True if both lists contain the same items</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ContactPairComparer.Equals(System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet},System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ContactPairComparer.GetHashCode(System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.DefaultConditionHelper.GravityTypeToDirection(Ansys.Disco.Core.Environment.UserConfigurations.GravityDirectionTypes)">
            <summary>
            Converts a GravityDirectionTypes enum to it's corresponding Direction.
            <param name="directionType">The GravityDirectionTypes value to be converted</param>
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator">
            <summary>
            A utility class that contains mixing logic for contacts to figure out
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.#ctor(System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Conditions.ContactEntity},System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity},System.Collections.Generic.List{Ansys.Disco.Physics.Entities.Conditions.JointEntity},Ansys.Disco.Physics.ValueObjects.LocationSet,System.Collections.Generic.List{System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet}},Ansys.Disco.Physics.Entities.Conditions.ContactGroupEntity)">
            <summary>
            A class managing contact pairs redispatching between contact groups and individual contacts
            </summary>
            <param name="contactPairs">the full set of contact pairs</param>
            <param name="manualContactList">the list of existing manual contacts</param>
            <param name="manualContactGroups">the list of user defined contact groups</param>
            <param name="jointList">the list of existing joints</param>
            <param name="facesToExclude">the faces to be excluded from the calculation</param>
            <param name="optionalContactPairsToConsider">an optional arbitrary list of contact pairs that are considered already used</param>
            <param name="defaultContactGroupEntity">an optional contact entity</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.AllContactMixers">
            <summary>
            All the contact mixers with contact pairs regrouped.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMixers">
            <summary>
            The contact mixers that don't come from Manual group with contact pairs regrouped.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ManualContactMixers">
            <summary>
            The contact mixers that come from Manual group with contact pairs regrouped.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactBehaviors">
            <summary>
            The contact behaviors generated
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage.#ctor(System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Guid},Ansys.Disco.Physics.ValueObjects.LocationSet,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage"/> class.
            </summary>
            <param name="contactPair">The contact pair this will use</param>
            <param name="facesToIgnore">Faces to ignore as they have conditions applied.</param>
            <param name="contactBehaviourId">The guid for the contact behaviour.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage.#ctor(Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage"/> class.
            </summary>
            <param name="locationA">The first location in the contact pair</param>
            <param name="locationB">The second location in the contact pair</param>
            <param name="contactGroupingId">The id for the contact grouping.</param>
            <param name="contactBehaviourId">The id for the contact behaviour</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage.HandleDoubleScopedEntityIntersection(System.Tuple{Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.ValueObjects.LocationSet},System.Guid)">
            <summary>
            Removes the locations from this contact that intersect a manually scoped double contact or joint
            </summary>
            <param name="dualScopedEntityLocations">The user defined contact or joint locations</param>
            <param name="contactBehaviorId">Guid for contact behaviour</param>
            <returns>new contact pair, if required</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.ContactMatchPackage.IsMatch(Ansys.Disco.Physics.Entities.Conditions.ContactEntity)">
            <summary>
            Test if either location completely falls within singleContact location
            </summary>
            <param name="singleContact">The actual contact that exists</param>
            <returns>Boolean result</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.FaceLocationComparer.Equals(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation,Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.AdditionalContactGenerator.FaceLocationComparer.GetHashCode(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.HasCurrentResultForDataSeries(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition)">
            <summary>
            Checks if there are valid results in the current <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity"/> for the given <paramref name="seriesDefinition"/>.
            </summary>
            <param name="simulation">The simulation to check for results.</param>
            <param name="seriesDefinition">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> object for which current result data is needed.</param>
            <returns>True if results exist for the data series, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetCurrentResultDataSeries(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries"/> from the current <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity"/> for the given <paramref name="seriesDefinition"/>.
            </summary>
            <param name="simulation">The simulation to check for results</param>
            <param name="seriesDefinition">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> object for which current result data is needed.</param>
            <returns>Results for the data series.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetAllCurrentResultDataSeries(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <summary>
            Gets the collection of <see cref="T:Ansys.Disco.Physics.Entities.Results.ResultDataSeries"/> from the current <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity"/> for the given <paramref name="chartEntity"/>.
            </summary>
            <param name="simulation">The simulation to check for results.</param>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which current result data is needed.</param>
            <returns>Collection of all available results for the chart entity.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetVariableStringForSParameter(Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition)">
            <summary>
            Gets the S-parameter name string for the given <paramref name="dataSeries"/>.
            </summary>
            <param name="dataSeries">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> object for which the name is needed.</param>
            <returns>String with the name of the S-parameter quantity that the solver understands.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetVariableStringFor2dFarFieldPlot(Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition)">
            <summary>
            Gets the 2D far-field variable string for the given <paramref name="dataSeries"/>.
            </summary>
            <param name="dataSeries">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> object for which the variable name is needed.</param>
            <returns>String with the 2D far-field variable name that the solver understands.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetModifiedDataSeriesStyle(Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification,System.Collections.Generic.ICollection{System.Drawing.Color})">
            <summary>
            Returns a new <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> object with a different primary color than the ones
            in the <paramref name="usedColors"/> collection.
            </summary>
            <param name="style">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> object for which a different primary color is needed.</param>
            <param name="usedColors">The collection of <see cref="T:System.Drawing.Color"/> that are already used by other data series in the chart.</param>
            <returns><see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification"/> object with a different primary color.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetAvailableFrequencyPoints(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,System.Boolean)">
            <summary>
            Gets the collection of frequency sweep points from the current <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity"/> for the active simulation.
            </summary>
            <param name="simulation">The simulation to get frequency sweep points for.</param>
            <param name="ignoreSolvedFrequencies">True if frequencies returned from solver should be ignored.</param>
            <returns>Collection of all available frequency points for the simulation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetCommonResultVariableForChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <summary>
            Gets the common variable for all the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> objects in the given <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/>.
            </summary>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which common variable is needed.</param>
            <returns>Common result variable type (if available), otherwise null.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetCommonResultComponentForChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <summary>
            Gets the common component for all the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> objects in the given <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/>.
            </summary>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which common component is needed.</param>
            <returns>Common result component type (if available), otherwise null.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetCommonResultOrientationForChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <summary>
            Gets the common orientation for all the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> objects in the given <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/>.
            </summary>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which common orientation is needed.</param>
            <returns>Common result orientation type (if available), otherwise null.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.GetCommonResultDbScalingForChart(Ansys.Disco.Physics.Entities.Charts.ChartEntity)">
            <summary>
            Gets the common dB scaling flag for all the <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> objects in the given <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/>.
            </summary>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which common dB scaling flag is needed.</param>
            <returns>Common result dB scaling flag (if available), otherwise null.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.CombineGuids(System.Guid,System.Guid)">
            <summary>
            Combines two GUIDs into a single unique GUID.
            </summary>
            <param name="guid1">The first GUID.</param>
            <param name="guid2">The second GUID.</param>
            <returns>Combined unique GUID.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.CanCreateCharts(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Core.Stages.UserActivities)">
            <summary>
            Determines whether charts can be created, using the given simulation and stage.
            </summary>
            <returns>True if charts can be created.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.UpdateChartsOnFarFieldFrequencyPointsChange(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Iterates over the list of charts for the <paramref name="simulation"/> and purges
            any far-field data series definitions that have selected frequency value not in the
            current frequency points list.
            </summary>
            <param name="simulation">The simulation to clean up charts for.</param>
            <returns>True if any charts were modified.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IChartService.CreateDefaultFrequencyDataSeriesForVariable(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Entities.Charts.ChartEntity,Ansys.Disco.Physics.Entities.Charts.IDataSeriesStyleSpecification,System.Boolean)">
            <summary>
            Creates a default <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> for the given result variable.
            </summary>
            <param name="variable">The result variable type for which the default data series is needed.</param>
            <param name="simulation">The parent simulation of the chart.</param>
            <param name="chartEntity">The <see cref="T:Ansys.Disco.Physics.Entities.Charts.ChartEntity"/> object for which default data series is needed.</param>
            <param name="styleSpec">The style to be used for the data series definition.</param>
            <param name="ignoreSolvedFrequencies">True if frequencies returned from solver should be ignored.</param>
            <returns>A collection of <see cref="T:Ansys.Disco.Physics.Entities.Charts.IDataSeriesDefinition"/> that defines the default for the chart.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.ContactsWarning">
            <summary>
            Warning type for contact detection
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ContactsWarning.None">
            <summary>
            No warnings
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ContactsWarning.IgnoredContacts">
            <summary>
            contacts will be ignored ignored (for topo opt. case)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ContactsWarning.FusedNonBondedContacts">
            <summary>
            treat bonded and sliding contacts as fused
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ContactsWarning.IgnoredBondedContacts">
            <summary>
            bonded contacts are effectively ignored in fused mode
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider">
            <summary>
            Interface definition of Contact setting provider
            </summary>
            <remarks>
            Maps user setting to specific behavior that is only dependent upon simulation (physics type, topp opt setting, etc.)
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider.VoxelGridSetting(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            GetVoxelGridSetting for Apollo solver
            </summary>
            <param name="simulation">Simulation entity</param>
            <returns>true when a multi grid solve is required</returns>
            <remarks>
            true: one voxel grid per part, false: one voxel grid for all parts
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider.GetContactWarning(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            GetContactWarning
            </summary>
            <param name="simulation">Simulation entity</param>
            <returns>warning type (none, ignored, non-bonded as fused)</returns>
            <remarks>
            For fused behavior: Topo option will cause ignored contacts, non-bonded contacts
            will be treats as fused contacts, otherwise, there is no warning
            NB. topo option takes precedence over non-bonded contacts
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider.PushEntityChangesToSolver(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            PushEntityChangesToSolver
            </summary>
            <param name="simulation">Simulation entity</param>
            <returns>true if Apollo solver needs contact data (not needed for "fused" behavior)</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider.ContactSupportInRules(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            ContactSupportInRules
            </summary>
            <param name="simulation">Simulation entity</param>
            <returns>true if contact checks need to be performed in rules (not needed for "fused" behavior)</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IContactDetectionSettingProvider.EnableExploreNonLinearContact">
            <summary>
            EnableExploreNonLinearContact
            </summary>
            <returns>true if non-linear contact enabled in explore</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.ICustomObjectService">
            <summary>
            A service that provides common functionality related to custom objects.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ICustomObjectService.SimulationContainsCustomObjects(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Determines if a simulation contains custom object definitions.
            </summary>
            <param name="simulation">The simulation entity to check</param>
            <returns>True if there are any custom objects related to the given simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IMeshLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.MeshLocation,Ansys.Disco.Physics.ValueObjects.Locations.MeshLocation@)">
            <summary>
            Tries to get mesh survivors if an existing mesh has been processed by some operation that results in changed ID.
            </summary>
            <param name="meshLocation">Current MeshLocation that should be checked for surviving meshes.</param>
            <param name="meshSurvivor">Out variable that will contain the surviving mesh, null otherwise.</param>
            <returns>Returns false if the mesh can no longer be resolved. <paramref name="meshSurvivor"/> contains
            the first surviving mesh or the original mesh if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IImplicitMeshRegionLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.ImplicitMeshRegionLocation,Ansys.Disco.Physics.ValueObjects.Locations.ImplicitMeshRegionLocation@)">
            <summary>
            Tries to get mesh region survivors if an existing mesh region has been processed by some operation that results in changed ID.
            </summary>
            <param name="meshRegionLocation">Current ImplicitMeshRegionLocation that should be checked for surviving mesh region.</param>
            <param name="meshRegionSurvivor">Out variable that will contain the surviving mesh region, null otherwise.</param>
            <returns>Returns false if the mesh region can no longer be resolved. <paramref name="meshRegionSurvivor"/> contains
            the first surviving mesh region or the original mesh region if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IMeshRegionLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.MeshRegionLocation,Ansys.Disco.Physics.ValueObjects.Locations.MeshRegionLocation@)">
            <summary>
            Tries to get mesh region survivors if an existing mesh region has been processed by some operation that results in changed ID.
            </summary>
            <param name="meshRegionLocation">Current MeshRegionLocation that should be checked for surviving mesh region.</param>
            <param name="meshRegionSurvivor">Out variable that will contain the surviving mesh region, null otherwise.</param>
            <returns>Returns false if the mesh region can no longer be resolved. <paramref name="meshRegionSurvivor"/> contains
            the first surviving mesh region or the original mesh region if there are no survivors.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.CalculatorLabelUtilities">
            <summary>
            Utilities for generating calculator labels
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.CalculatorLabelUtilities.GenerateCalculatorLabel(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Results.ResultFunction,Ansys.Disco.Core.Results.Types.ResultComponent,Ansys.Disco.Core.Results.Types.ResultMeshQualityComponent,System.Int32)">
            <summary>
            Produces a label from the given result variable, function, and component
            </summary>
            <param name="resultVariable">The result variable</param>
            <param name="resultFunction">The result function</param>
            <param name="resultComponent">The result component</param>
            <param name="resultMeshQualityComponent">The result mesh quality component</param>
            <param name="modeNumber">The mode number</param>
            <returns>The combined result string</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.CalculatorLabelUtilities.GenerateFunctionComponentLabel(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Results.ResultFunction,Ansys.Disco.Core.Results.Types.ResultComponent)">
            <summary>
            Produces a label from the given result variable, function, and component
            </summary>
            <param name="resultVariable">The result variable</param>
            <param name="resultFunction">The result function</param>
            <param name="resultComponent">The result component</param>
            /// <returns>The combined result string</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.CalculatorLabelUtilities.ConvertFunctionToString(Ansys.Disco.Core.Results.Types.ResultVariable,Ansys.Disco.Physics.Entities.Results.ResultFunction)">
            <summary>
            Produces the shorthand function portion of the label from the given result variable and function
            Returns empty string if function is not optional
            </summary>
            <param name="resultVariable">The result variable</param>
            <param name="resultFunction">The result component</param>
            <returns>The function string</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.IPhysicsRegionService">
            <summary>
            A service to manage creation, deletion and update of physics regions
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.Create(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics)">
            <summary>
            Creates a physics region for the given scope and physics type.
            </summary>
            <param name="simulation">The parent simulation</param>
            <param name="scope">The bodies that this physics region is being setup for</param>
            <param name="physicsType">The physics type for this physics region</param>
            <returns>The created physics region</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.Delete(Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity)">
            <summary>
            Deletes the given physics region.
            </summary>
            <param name="physicsRegion">The physics region to be deleted</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.IsUpdateNeeded(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Checks if an update is needed for the physics regions of a parent simulation based on the
            child entity that is being added/removed.
            </summary>
            <param name="entity">The child entity being added/removed</param>
            <returns>True if an update of the physics regions is needed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.IsUpdateNeeded(Ansys.Disco.Core.DomainCore.IEntity,System.String)">
            <summary>
            Checks if an update is needed for the physics regions of a parent simulation based on the
            child entity and its property that is being modified.
            </summary>
            <param name="entity">The child entity being modified</param>
            <param name="propertyName">The property being modified</param>
            <returns>True if an update of the physics regions is needed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.UpdatePhysicsRegions(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Updates the physics region definitions for the given simulation entity based on conditions,
            materials and interfaces assigned to active bodies in its scope.
            </summary>
            <param name="simulation">The simulation whose physics regions need to be updated</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsRegionService.UpdatePhysicsRegionScope(Ansys.Disco.Physics.Entities.Simulations.PhysicsRegionEntity,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Updates the scope of the physics region with the provided LocationSet.
            </summary>
            <param name="physicsRegion">The physics region whose scope has to be updated</param>
            <param name="scope">The new scope for the physics region</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService">
            <summary>
            Handles the automatic suppression of bodies for physics across different simulations.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService.AutoSuppressInvalidRegionBodies(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Automatically suppresses bodies in the simulation
            that are not in a valid physics region.
            </summary>
            <param name="simulation">The simulation entity</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService.UnSuppressAutoSuppressedRegionBodies(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Un-suppresses the automatically suppressed bodies so that
            domain automation processing can be performed correctly.
            </summary>
            <param name="simulation">THe simulation entity</param>
            <returns>True if auto-suppressed bodies were unsuppressed</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService.GetActiveInvalidBodiesForSimulation(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Provides a list of invalid bodies that have been unsuppressed by the user.
            The result is cached from the previous UnSuppressAutoSuppressedRegionBodies() call.
            </summary>
            <param name="simulation">The simulation entity</param>
            <returns>A LocationSet object containing the active invalid bodies in the simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService.GetInvalidBodiesUnsuppressedByUser(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity)">
            <summary>
            Provides a list of invalid bodies that have been unsuppressed by the user.
            The result recalculated on the fly.
            </summary>
            <param name="simulation">The simulation entity</param>
            <returns>A LocationSet object containing the active invalid bodies in the simulation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsSuppressionService.AdjustActiveInvalidBodiesForUserAction(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Adjusts the tracked list of invalid bodies that have been unsuppressed by the user's actions.
            </summary>
            <param name="simulation">The simulation entity</param>
            <param name="bodiesUnsuppressedByQuickScope">The list of bodies unsuppressed by the quick scope action</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPolygonLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.PolygonLocation,Ansys.Disco.Physics.ValueObjects.Locations.PolygonLocation@)">
            <summary>
            Tries to get nominal planar face survivors if an existing nominal face has been split, etc.
            </summary>
            <param name="polygonLocation">Current PolygonLocation that should be checked for surviving planar faces.</param>
            <param name="polygonSurvivor">Out variable that will contain the surviving planar faces, null otherwise.</param>
            <returns>Returns false if the planar face can no longer be resolved. <paramref name="polygonSurvivor"/> contains
            the first surviving planar face or the original planar face if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPhysicsObjectLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.PhysicsObjectLocation,Ansys.Disco.Physics.ValueObjects.Locations.PhysicsObjectLocation@)">
            <summary>
            Tries to get PhysicsObject survivors if an existing PhysicsObject has been modified.
            </summary>
            <param name="physicsObjectLocation">Current PhysicsObjectLocation that should be checked for surviving physics objects.</param>
            <param name="physicsObjectSurvivor">Out variable that will contain the surviving physics object, null otherwise.</param>
            <returns>Returns false if the physics object can no longer be resolved. <paramref name="physicsObjectSurvivor"/> contains
            the first surviving physics object or the original physics object if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.DoubleParser.IsGroupingValid(System.String,System.Globalization.NumberFormatInfo)">
            <summary>
            Determines whether the indicated string representation of a number uses
            the group separator character appropriately.
            </summary>
            <param name="number">String representation of a number.</param>
            <param name="numberFormatInfo">
            Optional numeric format information used to evaluate validity. If not specified
            or null, the default numeric format information of the current thread is used.
            </param>
            <returns>
            True if the number grouping is valid and otherwise false. This method only
            evaluates the number with respect to number grouping. It doesn't evaluate
            whether the number itself is valid.
            </returns>
            <remarks>
            <para>
            Application numbers may contain group separator characters that facilitate
            entering and interpreting a number (e.g., the commas in 1,000,000).
            The double.TryParse method ignores group separator characters. This
            results in "1,8" being interpreted as 18. It should be regarded as an
            error. However, "1,800" should be interpreted as 1800. In this example,
            the group separator character is a ",". Other cultures may use a different character.
            </para>
            <para>
            Only the first group separator to the left of the decimal (if present) is
            examined. Other group separation characters are ignored. The intent of
            checking the validity is to prevent a typo being misinterpreted
            since for many cultures the decimal and group symbol characters are
            next to each other on a keyboard.
            </para>
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ColoringMode.Modeling">
            <summary>
            Default coloring.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ColoringMode.Results">
            <summary>
            Coloring intended for results, all unsuppressed physics bodies with unsuppressed 
            results are drawn transparent
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ColoringMode.Mesh">
            <summary>
            Coloring intended for mesh only without results, all unsuppressed physics bodies 
            (including those with suppressed results) are drawn transparent
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Utilities.ColoringMode.Transparent">
            <summary>
            Coloring intended for custom rendering, all bodies are transparent. This leaves
            selection and tools enabled while also not drawing bodies.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IBodyLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.BodyLocation,Ansys.Disco.Physics.ValueObjects.Locations.BodyLocation@)">
            <summary>
            Tries to get body survivors if an existing body has been split, etc.
            </summary>
            <param name="bodyLocation">Current BodyLocation that should be checked for surviving bodies.</param>
            <param name="bodySurvivor">Out variable that will contain the surviving body, null otherwise.</param>
            <returns>Returns false if the body can no longer be resolved. <paramref name="bodySurvivor"/> contains
            the first surviving body or the original body if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILineLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.LineLocation,Ansys.Disco.Physics.ValueObjects.Locations.LineLocation@)">
            <summary>
            Tries to get line segment survivors if an existing line has been split, etc.
            </summary>
            <param name="lineLocation">Current LineLocation that should be checked for surviving lines.</param>
            <param name="lineSurvivor">Out variable that will contain the surviving line segment, null otherwise.</param>
            <returns>Returns false if the line can no longer be resolved. <paramref name="lineSurvivor"/> contains
            the first surviving line segment or the original line segment if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILineLocationService.TryGetGlobalAxisAlignedLine(SpaceClaim.Geometry.ITrimmedCurve,SpaceClaim.Geometry.ITrimmedCurve,SpaceClaim.Geometry.Point3D@,SpaceClaim.Geometry.Point3D@)">
            <summary>
            Tries to get a connecting line between two curves that's aligned to one of the global cartesian axes.
            </summary>
            <param name="startCurve"></param>
            <param name="endCurve"></param>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <returns>True if a connecting line could be found.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.IContactFilterService">
            <summary>
            IContactFilterService
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IFaceLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation,Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation@)">
            <summary>
            Tries to get face survivors if an existing face has been split, etc.
            </summary>
            <param name="faceLocation">Current FaceLocation that should be checked for surviving faces.</param>
            <param name="faceSurvivor">Out variable that will contain the surviving face, null otherwise.</param>
            <returns>Returns false if the face can no longer be resolved. <paramref name="faceSurvivor"/> contains
            the first surviving face or the original face if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IFaceLocationService.TryGetNormal(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation,SpaceClaim.Geometry.Direction@)">
            <summary>
            Checks if faceLocation is null and if the resolved face is null.  If they are, returns false
            and Direction.Zero is returned through normal.  If successful, normal will return the normal
            direction.
            </summary>
            <returns>
            False if faceLocation is null or cannot be resolved, true otherwise.  Normal will contain
            either Direction.Zero if failure or a direction on success.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IFaceLocationService.GetFaceMidPoint(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation)">
            <summary>
            Gets the midpoint of the bounding box for the face in the FaceLocation
            </summary>
            <param name="faceLocation">The face location containing the face to get the midpoint of</param>
            <returns>The midpoint of the bounding box of the face</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IFaceLocationService.GetConeHalfAngle(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation)">
            <summary>
            Gets the half angle of the cone if the face is a cone, otherwise returns 0
            </summary>
            <param name="faceLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IFaceLocationService.IsGlobalAxisAligned(Ansys.Disco.Physics.ValueObjects.Locations.FaceLocation)">
            <summary>
            Returns true if the face is aligned to one of the global cartesian axes.
            </summary>
            <param name="faceLocation">Face to check</param>
            <returns>True if aligned to global cartesian axis.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationMappingService.UpdateLocationSetWithReplacements(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Updates the given location set by replacing body/face/edge instances in the given map
            </summary>
            <param name="locationSet">The location set to be updated</param>
            <returns>An updated location set with the replaced bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPlaneLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.PlaneLocation,Ansys.Disco.Physics.ValueObjects.Locations.PlaneLocation@)">
            <summary>
            Tries to get datum survivors if an existing datum has been split, etc.
            </summary>
            <param name="planeLocation">Current PlaneLocation that should be checked for surviving datums.</param>
            <param name="planeSurvivor">Out variable that will contain the surviving datum, null otherwise.</param>
            <returns>Returns false if the datum can no longer be resolved. <paramref name="planeSurvivor"/> contains
            the first surviving datum or the original datum if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.IPointLocationService.TryGetSurvivor(Ansys.Disco.Physics.ValueObjects.Locations.PointLocation,Ansys.Disco.Physics.ValueObjects.Locations.PointLocation@)">
            <summary>
            Tries to get DatumPoint survivors if an existing DatumPoint has been modified.
            </summary>
            <param name="pointLocation">Current PointLocation that should be checked for surviving datum points.</param>
            <param name="pointSurvivor">Out variable that will contain the surviving datum point, null otherwise.</param>
            <returns>Returns false if the datum point can no longer be resolved. <paramref name="pointSurvivor"/> contains
            the first surviving datum point or the original datum point if there are no survivors.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.LocationMapping.UpdateLocationSetWithReplacements(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.LabelUtilities">
            <summary>
            Utilities for generating labels
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.LabelUtilities.GenerateUniqueCopyLabel(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Generates a new label using the copy prefix and ensures it is unique by checking the given existing labels
            </summary>
            <param name="label">The current label to generate a copy label for</param>
            <param name="copyTextPrefix">The copy prefix text</param>
            <param name="existingLabels">The existing labels to check for uniqueness</param>
            <returns>The generated copy label</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.LabelUtilities.GenerateNextCopyLabel(System.String,System.String)">
            <summary>
            Generates the next label using the copy prefix
            </summary>
            <param name="label">The current label to generate a copy label for</param>
            <param name="copyTextPrefix">The copy prefix text</param>
            <returns>The generated copy label</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Utilities.FlowEntityExtensionMethods">
            <summary>
            Extension methods for FlowEntity class.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.FlowEntityExtensionMethods.TryGetFlowTemperature(Ansys.Disco.Physics.Entities.Conditions.FlowEntity,UnitsNet.Temperature@)">
            <summary>
            Try to get temperature assigned to this flow entity.
            </summary>
            <param name="flow">Flow entity</param>
            <param name="temperature">Temperature</param>
            <returns>True if temperature could be obtained from object else false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.ConvertBodiesToFaces(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Utility method to split the bodies in a location set into the faces it contains.
            Note that the returned location set will still have the bodies in addition to the faces.
            </summary>
            <param name="locationSet">The location set to convert</param>
            <returns>The new LocationSet</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.ConvertBodiesToEdges(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Utility method to split the bodies in a location set into the edges it contains.
            Note that the returned location set will still have the bodies in addition to the edges.
            </summary>
            <param name="locationSet">The location set to convert</param>
            <returns>The new LocationSet</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.FindFaceBodies(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Utility method to split find all the parent bodies for location set of faces
            </summary>
            <param name="faceLocationSet">The location set of faces</param>
            <returns>The new LocationSet of bodies</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.GetDirectionFromLinearLocation(Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <summary>
            Checks if location is planar or line and, if line, gets the line direction, if plane
            gets the direction normal to the plane, otherwise returns <see cref="F:SpaceClaim.Geometry.Direction.Zero"/>.
            </summary>
            <param name="location">Location to get direction for.</param>
            <returns>
            Direction for location if planar or line, otherwise <see cref="F:SpaceClaim.Geometry.Direction.Zero"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.GetMidPointFromLinearLocation(Ansys.Disco.Physics.ValueObjects.Locations.ILocation)">
            <summary>
            Checks if location is planar or line and, if face or line segment, gets the face mid point,
            if axis or plane, gets the origin, otherwise returns <see cref="F:SpaceClaim.Geometry.Point3D.UnDefined"/>.
            </summary>
            <param name="location">Location to get direction for.</param>
            <returns>
            Mid point for location if planar or linear line, otherwise <see cref="F:SpaceClaim.Geometry.Point3D.UnDefined"/>
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.TryGetAxisDirectionOrReversedFaceNormal(Ansys.Disco.Physics.ValueObjects.LocationSet,SpaceClaim.Geometry.Direction@)">
            <summary>
            Outputs cylinder axis direction if first face location is cylinder, otherwise outputs reversed face normal.
            </summary>
            <param name="location">Location to get direction for.</param>
            <param name="direction">Output parameter of cylinder axis direction or reversed face normal direction</param>
            <returns>
            True if direction was found.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.GetFaceLocationsCentroid(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Gets centroid of all simulation face locations (faces and facet regions)
            </summary>
            <param name="locationSet">Location to get face centroid for.</param>
            <returns>
            Centroid of all faces.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.GetBeamProfileBodies(Ansys.Disco.Physics.ValueObjects.LocationSet)">
            <summary>
            Filter given location set to bodies that define beam profiles.
            </summary>
            <param name="scope">Location set to filter.</param>
            <returns>Bodies that define beam profiles.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.PlaneIntersectsBodies(Ansys.Disco.Physics.ValueObjects.Locations.PlaneLocation,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ValueObjects.Locations.BodyLocation},System.Boolean)">
            <summary>
            Determines whether the given plane intercepts any of the given bodies.
            </summary>
            <param name="planeLocation">Plane to check.</param>
            <param name="bodyLocations">Bodies to check.</param>
            <param name="includeTouching">Whether to include touching as an intercept.</param>
            <returns>True if the plane intercepts any of the bodies, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.ILocationService.IsPointInsideBodies(SpaceClaim.Geometry.Point3D,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ValueObjects.Locations.BodyLocation})">
            <summary>
            Determines whether the given point is within any of the given bodies.
            </summary>
            <param name="point3D">Point to check.</param>
            <param name="bodyLocations">Bodies to check.</param>
            <returns>True if the point is within any of the bodies, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.TriadExtensionMethods.GetGlobalDirectionFromLocalCoordinates(Ansys.Disco.Physics.ValueObjects.Triad,System.Double,System.Double,System.Double)">
            <summary>
            get global direction local coordinates
            </summary>
            <param name="triad">local coordinate system</param>
            <param name="x">local x component</param>
            <param name="y">local y component</param>
            <param name="z">local z component</param>
            <returns>The converted global Direction</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.FaceExtensionMethods.IsOnSamePlaneAs(SpaceClaim.INominalFace,SpaceClaim.INominalFace)">
            <summary>
            Checks whether other face is on the same plane as this face.
            </summary>
            <param name="thisFace">This face.</param>
            <param name="otherFace">Other face to compare to.</param>
            <returns>True if other face is on the same plane as this face, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Utilities.FaceExtensionMethods.IsEquivalentTo(SpaceClaim.Geometry.IPlane,SpaceClaim.Geometry.IGeometry)">
            <summary>
            Checks whether other plane is equivalent to this plane.
            </summary>
            <param name="thisPlane">This plane.</param>
            <param name="otherGeometry">Other plane.</param>
            <returns>True if other plane is equivalent to this plane, otherwise false.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.PendingChangesAffectPhysics(System.Guid)">
            <summary>
            Checks if the physics of the given simulation is affected by the
            pending session command.
            </summary>
            <param name="simulationId">
            <see cref="T:System.Guid"/> identifier of the simulation being checked.
            </param>
            <returns>
            <see langword="true"/> if the given simulation is identified
            as being altered via the pending changes, otherwise
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.PendingChangesAffectGeometry(System.Guid)">
            <summary>
            Checks if the geometry of the given simulation is affected by the
            pending session command.
            </summary>
            <param name="simulationId">
            <see cref="T:System.Guid"/> identifier of the simulation being checked.
            </param>
            <returns>
            <see langword="true"/> if the given simulation is identified
            as being altered via the pending changes, otherwise
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.PendingChangesAffectParameterStudy(System.Guid)">
            <summary>
            Checks if the parameter study of the given simulation is affected
            by the pending session command.
            </summary>
            <param name="simulationId">
            <see cref="T:System.Guid"/> identifier of the simulation being checked.
            </param>
            <returns>
            <see langword="true"/> if the given simulation is identified
            as being altered via the pending changes, otherwise
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.SimulationsAffectedByPhysicsChanges">
            <summary>
            Checks if the current set of pending physics changes have an effect
            on any simulations and returns a list containing those it does.
            </summary>
            <returns>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            which are affected by pending physics changes.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.SimulationsAffectedByGeometryChanges">
            <summary>
            Checks if the current set of pending geometry changes have an effect
            on any simulations and returns a list containing those it does.
            </summary>
            <returns>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            which are affected by the pending geometry changes.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.ISetupChangedUtility.SimulationsAffectedByParameterStudyChanges">
            <summary>
            Checks if the current set of pending parameter study changes have
            an effect on any simulations and returns a list containing those
            it does.
            </summary>
            <returns>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Ansys.Disco.Physics.Entities.Simulations.SimulationEntity"/>
            which are affected by the pending parameter study changes.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Services.SetupChangedUtility">
            <summary>
            Utility class for checking if the pending SpaceClaim transaction changes
            alter the setup of any given simulation.
            </summary>
            <remarks>
            This class is primarily used when handling before commit changes events
            in <see cref="T:Ansys.Disco.Core.Persistence.ISessionAdapter" />. This allows for cancellation of the
            pending change(s) if they effect the active simulation.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.PendingChangesAffectPhysics(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.PendingChangesAffectGeometry(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.PendingChangesAffectParameterStudy(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.SimulationsAffectedByPhysicsChanges">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.SimulationsAffectedByGeometryChanges">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Services.SetupChangedUtility.SimulationsAffectedByParameterStudyChanges">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.IToComparable">
            <summary>
            Enables an otherwise incomparable object to participate in sorting.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.IToComparable.ToComparable">
            <summary>
            Provides an object that can be used to compare instances of the
            implementing type.
            </summary>
            <returns>
            A object suitable for comparing instances of the implementing type,
            or <see langword="null"/> if the object does not want to
            participate in comparison. The object can be of any type and so the
            consumer must take care to handle the runtime errors that can occur
            when incompatible types are compared.
            </returns>
            <remarks>
            The purpose of this function is allow wrapper types that are not
            themselves directly comparable to participate in sorting by
            returning a proxy object that is sortable.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITable.AddRow(System.Action{System.Data.DataRow},System.Nullable{System.Int32})">
            <summary>
            Create a new <see cref="T:System.Data.DataRow"/> and adds it to <see cref="P:Ansys.Disco.Physics.Tables.ITable.DataTable"/>.
            </summary>
            <param name="action">
            Action which takes the newly created <see cref="T:System.Data.DataRow"/> as a parameter. Can be used
            to set up the new row by setting the values in each column. If this is <see
            langword="null"/> the row will be added without setting the values in each column.
            </param>
            <param name="index">
            Index in <see cref="P:Ansys.Disco.Physics.Tables.ITable.DataTable"/> to insert the row at. If <see langword="null"/> the
            row will be added at the end.
            </param>
            <returns>Newly created <see cref="T:System.Data.DataRow"/>.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITable.IndexOf(System.Data.DataRow)">
            <summary>
            Get the index of a row in <see cref="P:System.Data.DataTable.Rows"/>.
            </summary>
            <param name="dataRow">Row to get index for.</param>
            <returns>The index, or -1 if it does not exist.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITable.IndexOf(Ansys.Disco.Physics.Tables.TableRow)">
            <summary>
            Get the index of a row in <see cref="P:System.Data.DataTable.Rows"/>.
            </summary>
            <param name="tableRow">Row to get index for.</param>
            <returns>The index, or -1 if it does not exist.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TableView">
            <summary>
            A projection of a <see cref="T:System.Data.DataTable"/> contents that is used for
            data staging, sorting, and conversion to string format for export.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TableExporting">
            <summary>
            Exports an <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance in various formats.
            </summary>
            <remarks>
            Note: Column header text is taken directly from the <see
            cref="P:System.Data.DataColumn.Caption"/> which is expected to be localized to the
            current application language. If one is not set, we default to the <see
            cref="P:System.Data.DataColumn.ColumnName"/> property which represents an invariant
            column name when initially building the table.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TableExporting.ToCsv(Ansys.Disco.Physics.Tables.ITable,System.Globalization.CultureInfo,Ansys.Disco.Physics.Units.IUnitSystem,System.Collections.Generic.Dictionary{System.Int32,System.String},System.Boolean)">
            <summary>
            Renders an <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to a single-string in CSV format.
            </summary>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to export. If <see langword="null"/>, the
            exported text will be empty.
            </param>
            <param name="culture">
            The culture settings to use when formatting the export. If
            <paramref name="culture"/> is <see langword="null"/>, <see
            cref="P:System.Globalization.CultureInfo.InvariantCulture"/> will be used (i.e. period for
            the decimal separator and comma for the field separator).
            </param>
            <param name="unitSystem">
            An <see cref="T:Ansys.Disco.Physics.Units.IUnitSystem"/> to determine which unit to use when
            exporting each <see cref="T:UnitsNet.IQuantity"/>. If <see langword="null"/>,
            the exporter will use the default base unit for each quantity type.
            </param>
            <param name="columnUnits">
            Contains the currently selected units for each column from the table view model.
            </param>
            <param name="sortRows">
            When <see langword="true"/>, the table rows will be sorted
            left-to-right. When <see langword="false"/>, the rows will be
            returned in the order provided by the source <see cref="T:Ansys.Disco.Physics.Tables.ITable"/>.
            </param>
            <returns>
            A string encoding the table's contents in CSV format, or an empty
            string if no table was provided.
            </returns>
            <remarks>
            The supplied <paramref name="culture"/> controls:
            <list type="bullet">
            <item>
            The decimal separator used for numbers (period vs comma).
            </item>
            <item>
            The field separator (comma vs semicolon) used for CSV format.
            </item>
            <item>
            The formatting of any <see cref="T:System.IFormattable"/> cell value in the
            table.
            </item>
            </list>
            The line separator always follows the current platform.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TableExporting.ToTsv(Ansys.Disco.Physics.Tables.ITable,System.Globalization.CultureInfo,Ansys.Disco.Physics.Units.IUnitSystem,System.Collections.Generic.Dictionary{System.Int32,System.String},System.Boolean)">
            <summary>
            Renders an <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to a single-string in TSV
            (tab-separated) format.
            </summary>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to export. If <see langword="null"/>, the
            exported text will be empty.
            </param>
            <param name="culture">
            The culture settings to use when formatting the export. If
            <paramref name="culture"/> is <see langword="null"/>, <see
            cref="P:System.Globalization.CultureInfo.InvariantCulture"/> will be used (i.e. period for
            the decimal separator and comma for the field separator).
            </param>
            <param name="unitSystem">
            An <see cref="T:Ansys.Disco.Physics.Units.IUnitSystem"/> to determine which unit to use when
            exporting each <see cref="T:UnitsNet.IQuantity"/>. If <see langword="null"/>,
            the exporter will use the default base unit for each quantity type.
            </param>
            <param name="columnUnits">
            Contains the currently selected units for each column from the table view model.
            </param>
            <param name="sortRows">
            When <see langword="true"/>, the table rows will be sorted
            left-to-right. When <see langword="false"/>, the rows will be
            returned in the order provided by the source <see cref="T:Ansys.Disco.Physics.Tables.ITable"/>.
            </param>
            <returns>
            A string encoding the table's contents in TSV format, or an empty
            string if no table was provided.
            </returns>
            <remarks>
            The supplied <paramref name="culture"/> controls:
            <list type="bullet">
            <item>
            The decimal separator used for numbers (period vs comma).
            </item>
            <item>
            The formatting of any <see cref="T:System.IFormattable"/> cell value in the
            table.
            </item>
            </list>
            For a TSV, the field separator is always a single horizontal tab
            character.
            The line separator always follows the current platform.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TableExporting.ToView(Ansys.Disco.Physics.Tables.ITable,Ansys.Disco.Physics.Units.IUnitSystem,System.Boolean)">
            <summary>
            Creates a <see cref="T:Ansys.Disco.Physics.Tables.TableView"/> from the <see cref="T:Ansys.Disco.Physics.Tables.ITable"/>.
            </summary>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to export. If <see langword="null"/>, the
            exported text will be empty.
            </param>
            <param name="unitSystem">
            An <see cref="T:Ansys.Disco.Physics.Units.IUnitSystem"/> to determine which unit to use when
            exporting each <see cref="T:UnitsNet.IQuantity"/>. If <see langword="null"/>,
            the exporter will use the default base unit for each quantity type.
            </param>
            <param name="sortRows">
            When <see langword="true"/>, the table rows will be sorted
            left-to-right. When <see langword="false"/>, the rows will be
            returned in the order provided by the source <see cref="T:Ansys.Disco.Physics.Tables.ITable"/>.
            </param>
            <returns>
            A <see cref="T:Ansys.Disco.Physics.Tables.TableView"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TableExporting.Sorting.SortRowsLeftToRight(Ansys.Disco.Physics.Tables.TableView)">
            <summary>
            Sorts the rows of a <see cref="T:Ansys.Disco.Physics.Tables.TableView"/> from the leftmost
            column to the right.
            </summary>
            <param name="view">
            The <see cref="T:Ansys.Disco.Physics.Tables.TableView"/> to sort.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TableExporting.Tables.TableToView(Ansys.Disco.Physics.Tables.ITable,Ansys.Disco.Physics.Tables.TableExporting.UnitSystemFunc)">
            <summary>
            Capture the contents of a <see cref="T:System.Data.DataTable"/> in a <see
            cref="T:Ansys.Disco.Physics.Tables.TableView"/> so we can fiddle with the contents without
            affecting the underlying <paramref name="table"/>.
            </summary>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> to copy.
            </param>
            <param name="unitSystem">
            A <see cref="T:Ansys.Disco.Physics.Tables.TableExporting.UnitSystemFunc"/> to provide preferred units for
            presenting the numbers.
            </param>
            <returns>
            A <see cref="T:Ansys.Disco.Physics.Tables.TableView"/> instance that is entirely decoupled
            from the source <paramref name="table"/>.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction">
            <summary>
            Undo action for creating table row(s) - will remove the row(s) when applied.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction"/> class which
            will undo the creation of a single row.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableId">ID of the table to undo a change of.</param>
            <param name="rowIndex">
            Index that the row was added in. When we undo, the row at this index will be removed.
            </param>
            <param name="rowValues">
            The values that are in the newly created row - needed so we can create the redo action
            which will recreate the row with the same values.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Tables.UndoRedo.UndoRedoTableRowData})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction"/> class which
            will undo the creation of multiple rows.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableId">ID of the table to undo a change of.</param>
            <param name="rowData">
            Collection of values for each row, and indexes that each row was added at. When we
            undo, the rows at these indexes will be removed. Values are needed so we can create
            the redo action which will recreate the rows with the same values. Indexes are the
            positions that each row existed at after all were added.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.CreateTableRowsUndoAction.GetRedoAction">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.UndoRedo.RemoveTableRowsUndoAction">
            <summary>
            Undo action for removing table rows - will add the rows back in when applied.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.RemoveTableRowsUndoAction.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Tables.UndoRedo.UndoRedoTableRowData})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tables.UndoRedo.RemoveTableRowsUndoAction"/> class.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableId">ID of the table to undo a change of.</param>
            <param name="rowData">
            Collection of indexes of and values that were held by each row before they were
            removed, so that we can reconstruct the rows with the same contents as before and
            insert them at the correct position when we apply the undo.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.RemoveTableRowsUndoAction.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.RemoveTableRowsUndoAction.GetRedoAction">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.UndoRedo.ModifyTableRowUndoAction">
            <summary>
            Undo action for modifying a table row - will change row back to old values when applied.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.ModifyTableRowUndoAction.#ctor(Ansys.Disco.Physics.Tables.ITableStore,System.Guid,System.Int32,System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tables.UndoRedo.ModifyTableRowUndoAction"/> class.
            </summary>
            <param name="tableStore">Table store containing the table.</param>
            <param name="tableId">ID of the table to undo a change of.</param>
            <param name="rowIndex">
            Index of the row that was changed. When this undo action is applied the contents of the
            row at this index will be changed back to their previous values.
            </param>
            <param name="oldValues">
            The row's values before it was changed, used by the undo action to revert the row to
            its previous state.
            </param>
            <param name="newValues">
            The row's new values after the change, used to construct the redo action which can then
            change the row back to its new state after this undo action is applied.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.ModifyTableRowUndoAction.Apply">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.UndoRedo.ModifyTableRowUndoAction.GetRedoAction">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.UndoRedo.UndoRedoTableRowData">
            <summary>
            Helper used by table undo/redo to save a copy of table row data that has been added to or
            removed from a table.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TableRow">
            <summary>
            This class provides access to a <see cref="P:Ansys.Disco.Physics.Tables.TableRow.DataRow"/> from the
            underlying <see cref="T:System.Data.DataTable"/> while also providing a reference
            back to the parent <see cref="P:Ansys.Disco.Physics.Tables.TableRow.Table"/>.
            </summary>
            <remarks>
            The purpose of this class is to allow us to change the <see
            cref="P:Ansys.Disco.Physics.Tables.Table.Saved"/> property in response to user edits, something that
            would be impossible without capturing a reference to the parent <see
            cref="P:Ansys.Disco.Physics.Tables.TableRow.Table"/> because <see cref="P:Ansys.Disco.Physics.Tables.TableRow.DataRow"/> knows nothing of our <see
            cref="P:Ansys.Disco.Physics.Tables.TableRow.Table"/> class.
            <para>
            As a convenience, the <see cref="M:Ansys.Disco.Physics.Tables.TableRow.Edit(System.Action{System.Data.DataRow})"/> method
            automatically brackets an edit <see cref="T:System.Action"/> with <see
            cref="M:System.Data.DataRow.BeginEdit"/> and <see cref="M:System.Data.DataRow.EndEdit"/> and then
            sets <see cref="P:Ansys.Disco.Physics.Tables.Table.Saved"/> to <see langword="false"/> after the
            action has fired.
            </para>
            </remarks>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TableQuantity">
            <summary>
            A persistence-safe wrapper around <see cref="T:UnitsNet.IQuantity"/>.
            </summary>
            <remarks>
            This type deliberately does *not* implement custom equality. Instances
            of this type are only equal if they are reference equal (i.e. the same
            instance). This type has mutable fields (to support XML serialization)
            and so equality becomes a bit slippery, particularly if we are expected
            to override <see cref="M:System.Object.GetHashCode"/>.
            <para>
            If you want to compare two instance of this type for numerical
            equivalence, call <see cref="M:Ansys.Disco.Physics.Tables.TableQuantity.ToIQuantity"/> and compare the results.
            </para>
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.AddRow(System.Action{System.Data.DataRow},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.Clone(System.Nullable{System.Guid})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.IndexOf(System.Data.DataRow)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.IndexOf(Ansys.Disco.Physics.Tables.TableRow)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.RemoveRow(System.Data.DataRow)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.RemoveRow(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.Table.RemoveAllRows">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Tables.ITableStore.Item(System.Int32)">
            <summary>
            An indexer to find an <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance with the given index.
            </summary>
            <param name="index">The index into the collection.</param>
            <returns>The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance found at the given index, otherwise null.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Tables.ITableStore.Item(Ansys.Disco.Physics.Tables.ITable)">
            <summary>
            An indexer to find an index with the given <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance.
            </summary>
            <param name="table">The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance to look up in the collection.</param>
            <returns>The int index found for the given <paramref name="table"/>, otherwise -1.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Tables.ITableStore.Saved">
            <summary>
            Gets a value indicating whether all of the <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instances
            in the store have been saved.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.AddTable(Ansys.Disco.Physics.Tables.ITable)">
            <summary>
            Add a table to the store.
            </summary>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance to add.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.Clear">
            <summary>
            Removes all <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instances from the store.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.GetTable(System.Guid)">
            <summary>
            Get a table from the store.
            </summary>
            <param name="tableId">
            The id of the table to retrieve.
            </param>
            <returns>
            An <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance.
            </returns>
            <exception cref="T:System.ArgumentException">
            No table was found with the specified id.
            </exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.GetTables">
            <summary>
            Returns the tables in the store.
            </summary>
            <returns>
            An immutable list of the tables in the store at the point the
            method is called.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.RemoveTable(System.Guid)">
            <summary>
            Remove a table from the store.
            </summary>
            <param name="tableId">
            The id of the table to remove.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.ITableStore.TryGetTable(System.Guid,Ansys.Disco.Physics.Tables.ITable@)">
            <summary>
            Gets the <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> associated with the specified
            <paramref name="tableId"/>.
            </summary>
            <param name="tableId">
            The id of the table to find.
            </param>
            <param name="table">
            The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance associated with the id, or <see
            langword="null"/> if no matching table was found.
            </param>
            <returns>
            <see langword="true"/> if the table was found, <see
            langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TablePersister">
            <summary>
            An <see cref="T:Ansys.Disco.Core.Persistence.Chunks.IChunkPersister"/> that will save all <see
            cref="T:Ansys.Disco.Physics.Tables.ITable"/> instances present in the supplied <see
            cref="T:Ansys.Disco.Physics.Tables.ITableStore"/> to an <see cref="T:Ansys.Disco.Core.Persistence.Chunks.IChunkStore"/> and also load
            serialized tables found in an <see cref="T:Ansys.Disco.Core.Persistence.Chunks.IChunkStore"/> back into the
            <see cref="T:Ansys.Disco.Physics.Tables.ITableStore"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TablePersister.RegisterForXmlSerialization(System.Type[])">
            <summary>
            Registers the specified <paramref name="types"/> for XML
            serialization when used as part of a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="types">
            The types to register.
            </param>
            <remarks>
            By default, <see cref="T:System.Data.DataTable"/> will only serialize primitive
            types. In order to permit complex and custom types to be
            serialized, these types must first be registered with the <see
            cref="T:System.AppDomain"/>.
            <para>
            Warning: These registrations are global to the <see
            cref="T:System.AppDomain"/> and so any <see cref="T:System.Data.DataTable"/> created in
            the <see cref="T:System.AppDomain"/> will be able serialize (and
            deserialize) these types.
            </para>
            <para>
            See also: https://docs.microsoft.com/en-gb/dotnet/framework/data/adonet/dataset-datatable-dataview/security-guidance
            </para>
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Tables.TablePersister.Ansys#Disco#Core#Persistence#Chunks#IChunkPersister#IsDirty">
            <summary>
            Returns <see langword="true"/> if there are any unsaved changes.
            </summary>
            <returns>
            <see langword="true"/> if one or more <see cref="T:Ansys.Disco.Physics.Tables.ITable"/>
            instances are reporting that they have unsaved changes, <see
            langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TablePersister.DT1Format">
            <summary>
            A persistence format for <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> that uses the
            standard XML serialization mechanism provided by <see
            cref="T:System.Data.DataTable"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Tables.TablePersister.DT1Format.ChunkNameFormat">
            <summary>
            The format string for creating a DT1 chunk name. The `{0}`
            substitution is expected to receive the <see
            cref="P:Ansys.Disco.Physics.Tables.Table.TableId"/>, but in theory is can be anything
            because we encode the TableId in the serialized XML and
            therefore don't need to parse the filename to extract the
            TableId.
            </summary>
            <remarks>
            WARNING: Do not use more than one `.` in the file name,
            otherwise SpaceClaim will raise strange errors (probably caused
            by confusion over file extension determination).
            </remarks>
        </member>
        <member name="F:Ansys.Disco.Physics.Tables.TablePersister.DT1Format._pattern">
            <summary>
            The pattern used to determine whether a given chunk is a DT1
            format table or not. We don't parse the chunk name beyond a
            yes/no answer.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TablePersister.DT1Format.Metadata">
            <summary>
            These routines use the <see
            cref="P:System.Data.DataTable.ExtendedProperties"/> collection to stash
            additional information about tables. We can use the
            standard XML serialization provided by <see
            cref="T:System.Data.DataTable"/> to store and retrieve this information
            with no additional effort on our part.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Tables.TableStore">
            <summary>
            A simple dictionary-based store of <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instances,
            keyed by <see cref="P:Ansys.Disco.Physics.Tables.ITable.TableId"/>.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tables.TableStore.Item(System.Int32)">
            <summary>
            An indexer to find an <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance with the given index.
            </summary>
            <param name="index">The index into the collection.</param>
            <returns>The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance found at the given index, otherwise null.</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Tables.TableStore.Item(Ansys.Disco.Physics.Tables.ITable)">
            <summary>
            An indexer to find an index with the given <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance.
            </summary>
            <param name="table">The <see cref="T:Ansys.Disco.Physics.Tables.ITable"/> instance to look up in the collection.</param>
            <returns>The int index found for the given <paramref name="table"/>, otherwise -1.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowUpToDate">
            <summary>
            Application service to mark rows in a parameter study up to date.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowUpToDate.MarkRowUpToDate(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation})">
            <summary>
            Marks all <paramref name="rows"/> in
            <paramref name="parameterStudy"/> up to date.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> containing
            </param>
            <param name="rows">The rows to be marked up to date.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowUpToDate.MarkRowUpToDate(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Marks <paramref name="row"/> in <paramref name="parameterStudy"/>
            up to date.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> containing
            </param>
            <param name="row">The row to be marked up to date.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IRowSaga">
            <summary>
            Header interface for unit tests.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IRowSaga.SetCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Wraps the <see cref="T:Ansys.Disco.Physics.Commands.ParameterSweeps.ApplyCurrentRowCommand" /> with code required
            to prevent other parameter study rows from being marked out of date.
            </summary>
            <param name="parameterStudy">
            The parameter study containing to <paramref name="row" />.
            </param>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> we apply the input column
            values to the model.
            </param>
            <remarks>
            This method is very similar to <see
            cref="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IRowSaga.SetRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)" /> and will
            need refactoring to make things more consistent. For the time being,
            this method will have to do to fix bug 438047 before a proper fix is
            put in place.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IRowSaga.SetRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Sets the <paramref name="row" /> for <paramref name="parameterStudy"
            />, applying the input values to the model. Disables responding to
            significant physics changed events while the row is being set to
            prevent <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> table from marking
            itself out of date.
            </summary>
            <param name="parameterStudy">
            The parameter study containing to <paramref name="row" />.
            </param>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> we apply the input column
            values to the model.
            </param>
            <returns>
            <see langword="false" /> if the row was not set or input parameters
            were null.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowOutOfDate">
            <summary>
            Application service to mark rows in a parameter study out of date.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowOutOfDate.MarkRowOutOfDate(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation})">
            <summary>
            Marks all <paramref name="rows"/> in
            <paramref name="parameterStudy"/> out of date.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> containing
            </param>
            <param name="rows">The rows to be marked out of date.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IMarkRowOutOfDate.MarkRowOutOfDate(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Marks <paramref name="row"/> in <paramref name="parameterStudy"/>
            out of date.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> containing
            </param>
            <param name="row">The row to be marked out of date.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.ExecutingAddRowCommand">
            <summary>
            Flag is set to true during addition of a parameter study row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.ExecutingSetRowCommand">
            <summary>
            Flag is set to true during set of current row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.ExecutingSolveCommand">
            <summary>
            Flag is set to true during parameter study solves.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.IsParameterStudyChange">
            <summary>
            Flag set when the parameter study is being changed within the UI.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.IsSwitchingCurrentRow">
            <summary>
            Set a bool flag to be used in condition value changed event handler
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.ChangeCell(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity)">
            <summary>
            Changes the cell value for a cell given by <paramref name="row" />
            and <paramref name="monitorColumn" />.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> is being modified.
            </param>
            <param name="row">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> is to be modified.
            </param>
            <param name="monitorColumn">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> whose <see
            cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.ParameterStudyCell" /> is to be modified.
            </param>
            <param name="designChange">
            The new <see cref="T:Ansys.Disco.Physics.Entities.Monitors.DesignChangeEntity" /> to be referenced by the
            <see cref="T:Ansys.Disco.Physics.ValueObjects.ParameterSweeps.MonitorOutputCell" /> indexed via the <paramref
            name="row" /> and <paramref name="monitorColumn" />.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.TryResolveInput(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn,UnitsNet.IQuantity@)">
            <summary>
            Attempts to resolve the quantity associated with the given <paramref
            name="row" /> and <paramref name="inputColumn" /> in the <paramref
            name="parameterStudy" />.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose input is trying to be
            resolved.
            </param>
            <param name="row">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose input value is being
            fetched.
            </param>
            <param name="inputColumn">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IInputParameterStudyColumn" /> whose input value is being
            fetched.
            </param>
            <param name="quantity">
            When method returns, if successful will contain the <see
            cref="T:UnitsNet.IQuantity" /> value associated with the cell.
            </param>
            <returns>
            <see langword="true" /> if input value successfully resolved.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.TryResolveOutput(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.Entities.Monitors.SolverResults@)">
            <summary>
            Attempts to resolve the list of results associated with the given
            <paramref name="row" /> and <paramref name="monitorColumn" /> in the
            <paramref name="parameterStudy" />.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose results are trying to
            be resolved.
            </param>
            <param name="row">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose results are being fetched.
            </param>
            <param name="monitorColumn">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> whose results are being fetched.
            </param>
            <param name="results">
            <see cref="T:Ansys.Disco.Physics.Entities.Monitors.SolverResults" /> being returned. Can be <see
            langword="null" />.
            </param>
            <returns>
            <see langword="true" /> if results are successfully resolved.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.TryResolveOutput(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,UnitsNet.IQuantity@)">
            <summary>
            Attempts to resolve the list of results associated with the given
            <paramref name="row" /> and <paramref name="monitorColumn" /> in the
            <paramref name="parameterStudy" />.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose results are trying to
            be resolved.
            </param>
            <param name="row">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation" /> whose results are being fetched.
            </param>
            <param name="monitorColumn">
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity" /> whose results are being fetched.
            </param>
            <param name="result">
            <see cref="T:UnitsNet.IQuantity" /> being returned. This value is correct for
            the current stage. Can be <see langword="null" />.
            </param>
            <returns>
            <see langword="true" /> if results are successfully resolved.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.IParameterStudyService.AssociateTestCaseWithDefinedVariation(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,System.Guid)">
            <summary>
            Associates a test case with a defined variation.
            </summary>
            <param name="parameterStudyEntity">The parameter study entity.</param>
            <param name="row">The defined variation row.</param>
            <param name="testCaseId">The test case id.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetRow">
            <summary>
            Classes that implement this interface should be able to set/apply a
            <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation"/> of a <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            Setting a row as current updates the parameter values of the model
            according to the values written to each input cell of the row.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetRow.SetRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Sets/applies the current <paramref name="row"/> for
            <paramref name="parameterStudy"/>.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/> we are setting the current
            row for.
            </param>
            <param name="row">The row being set as current.</param>
            <returns>
            The success/failure state captured while setting a row.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetRow.SetCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Set the current row for <paramref name="parameterStudy"/>.
            </summary>
            <param name="parameterStudy">
            The parameter study whos current row is being set.
            </param>
            <param name="row">The row being set current.</param>
            <returns>
            <see langword="true"/> if the row was set current.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetRow.SetCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Set the current row for active <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity"/>.
            </summary>
            <param name="row">The row being set current.</param>
            <returns>
            <see langword="true"/> if the row was set current.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetStarredRow">
            <summary>
            Application service to mark rows in a parameter study out of date.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ToMoveToPhysicsModule.ParameterSweeps.ISetStarredRow.SetStarredRow(System.Boolean,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <summary>
            Set if a <paramref name="row"/> is starred or not.
            </summary>
            <param name="starred">
            Whether the row is starred or not.
            </param>
            <param name="row">The row to be marked as starred.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeFrequencyNode.Name">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintNode">
            <summary>
            Node used to show optimization constraints in the physics tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintNode.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject,Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeImageConverter,Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Units.IUnitsHelper,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintNode"/> class.
            </summary>
            <param name="eval">the IPhysicsObject associated with optimization option</param>
            <param name="imageConverter">the image converter for the tree</param>
            <param name="grouping">The tree grouping</param>
            <param name="interactionWindowProvider">The interaction window provider</param>
            <param name="unitsHelper">The units helper</param>
            <param name="unitSystemContext">The units sytem context</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintNode.ImageType">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationProtectedDepthNode">
            <summary>
            Node used to show optimization constraints with value input in the physics tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationProtectedDepthNode.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject,Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeImageConverter,Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Units.IUnitsHelper,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationProtectedDepthNode"/> class.
            </summary>
            <param name="eval">the IPhysicsObject associated with optimization option</param>
            <param name="imageConverter">the image converter for the tree</param>
            <param name="grouping">The tree grouping</param>
            <param name="discoPhysics">The simulation physics type</param>
            <param name="interactionWindowProvider">The interaction window provider</param>
            <param name="unitsHelper">The units helper</param>
            <param name="unitSystemContext">The current unit system</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationProtectedDepthNode.ImageType">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintWithValueNode">
            <summary>
            Node used to show optimization constraints with value input in the physics tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintWithValueNode.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject,Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeImageConverter,Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Units.IUnitsHelper,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintWithValueNode"/> class.
            </summary>
            <param name="eval">the IPhysicsObject associated with optimization option</param>
            <param name="imageConverter">the image converter for the tree</param>
            <param name="grouping">The tree grouping</param>
            <param name="discoPhysics">The simulation physics type</param>
            <param name="interactionWindowProvider">The interaction window provider</param>
            <param name="unitsHelper">The units helper</param>
            <param name="unitSystemContext">The current unit system</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationConstraintWithValueNode.ImageType">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationOptionNode">
            <summary>
            Node used to show optimization option with value input in the physics tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationOptionNode.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject,Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeImageConverter,Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Units.IUnitsHelper,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationOptionNode"/> class.
            </summary>
            <param name="eval">the IPhysicsObject associated with optimization option</param>
            <param name="imageConverter">the image converter for the tree</param>
            <param name="grouping">The tree grouping</param>
            <param name="discoPhysics">The simulation physics type</param>
            <param name="interactionWindowProvider">The interaction window provider</param>
            <param name="unitsHelper">The units helper</param>
            <param name="unitSystemContext">The current unit system</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationOptionNode.ImageType">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationNode">
            <summary>
            Node used to show optimization options in the physics tree
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationNode.#ctor(Ansys.Disco.Physics.Nominal.PhysicsObject.IPhysicsObject,Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeImageConverter,Ansys.Disco.Physics.Contracts.StructureTree.ITreeGrouping,Ansys.Disco.Core.Input.IInteractionWindowProvider,Ansys.Disco.Core.Units.IUnitsHelper,Ansys.Disco.Core.Context.ICurrentContext{Ansys.Disco.Physics.Units.IUnitSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationNode"/> class.
            </summary>
            <param name="eval">the IPhysicsObject associated with optimization option</param>
            <param name="imageConverter">the image converter for the tree</param>
            <param name="grouping">The tree grouping</param>
            <param name="interactionWindowProvider">The interaction window provider</param>
            <param name="unitsHelper">The units helper</param>
            <param name="unitSystemContext">The current unit system</param>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeOptimizationNode.ImageType">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.PhysicsTree.PhysicsTreeBaseItem.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.DefaultGroupingThreshold">
            <summary>
            minimum number of items required to form a group <para>value of 0 or 1 groups immediately</para><para>value of -1 or lower never groups</para>
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.UseParentGroupingThresholds">
            <summary>
            whether subgroups will use the same threshold and other rules as the parent group
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.IsGroupingActive">
            <summary>
            shortcut check to see if there are any nonnegative thresholds
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.CountIndirectChildren">
            <summary>
            If true, counts direct non-group children and counts each direct subgroup child as its indirect children, else counts each direct subgroup as 1
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.UseHierarchyOrdering">
            <summary>
            uses the order of the groups in the tree hierarchy to define the order of the nodes
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.IgnoreThresholdAfterFirstSubGroup">
            <summary>
            when true, groups will ignore its threshold and will form immediately if it contains a subgroup and anything else.
            This will NOT happen if the group in question has a negative threshold
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Tree.TreeGrouping.UseDeepGrouping">
            <summary>
            when true, grouping will be applied to the children of every node in the tree instead of just the root node
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.SetThresholdOverride(System.String,System.Int32)">
            <summary>
            sets the default threshold for all groups
            </summary>
            <param name="group">specific group to set the threshold of</param>
            <param name="value">minimum number of items required to form a group <para>value of 0 or 1 groups immediately</para><para>value of -1 or lower never groups</para></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.ClearThresholdOverrides">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.GetGroupingThreshold(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.DefineCodependentSiblingGroups(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Defines a set of sibling groups which are not created unless a certain number of them are present (sibling threshold).
            ex: given groups A, B, and C with a sibling threshold of 2: A will never appear unless B or C is also present.
                given groups A, B, and C with a sibling threshold of 3: A, B, and C must all be present for any of them to appear.
            </summary>
            <param name="siblings"> the list of groups that are codependent </param>
            <param name="siblingThreshold">the minimum number of siblings that must be present in order for them to appear</param>
            <returns>returns false if the list includes groups that are not direct children of the same parent node or the sibling threshold is greater than the number of siblings listed or less than 2</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.UnGroup(System.Collections.Generic.IEnumerable{Ansys.Disco.CoreUI.Tree.Contracts.IStructureTreeBaseItemNode})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.GroupAll(System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},System.Func{System.String,System.Collections.Generic.List{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},Ansys.Disco.Physics.Contracts.StructureTree.IGroupNode})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Tree.TreeGrouping.FillSubGroups(System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.Collections.Generic.List{Ansys.Disco.Physics.Contracts.StructureTree.IGroupedNode},Ansys.Disco.Physics.Contracts.StructureTree.IGroupNode},System.Boolean@)">
            <summary>
            group all nodes passed in into one of the supplied target groups, using the supplied function to build group nodes. Also recursively groups the nodes into subgroups of the target groups.
            </summary>
            <param name="nodes">the nodes to group</param>
            <param name="targetGroups">the specific groups (and their subgroups) in which to place the nodes</param>
            <param name="groupNodeBuilder">function to build the group nodes</param>
            <param name="hasAnySubgroupFormed">out value: returns whether any group successfully formed</param>
            <returns>top level of the grouped result</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.AbsoluteQuantity`1">
            <summary>
            Converts a <see cref="T:UnitsNet.IQuantity"/> to an absolute value.
            </summary>
            <typeparam name="T">
            Any implementation of <see cref="T:UnitsNet.IQuantity"/>.
            </typeparam>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.AbsoluteQuantity`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Units.AbsoluteQuantity`1"/>
            class.
            </summary>
            <param name="quantity">
            The quantity being converted to an absolute value.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.AbsoluteQuantity`1.Quantity">
            <summary>
            The quantity converted to a positive value.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.UnitAbbreviationSubstitutions">
             <summary>
             Disco has different defaults for several UnitsNet unit abbreviations.
             These abbreviation defaults are being changed in this class.
            
             Calling <see cref="M:UnitsNet.UnitAbbreviationsCache.GetDefaultAbbreviation(System.Type,System.Int32,System.IFormatProvider)" /> will return these strings instead.
             </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.UnitSets.SI">
             <summary>
             Unit defaults.s
            
             Make sure that when you add a new unit to this set,
             you also provide a relative unit in the other unit
             sets to avoid the unit systems going out of line.
            
             Set up unit system to re-map the Display units to the International
             System of Units or SI units.
             </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.UnitSets.US">
            <summary>
            Set up unit system to re-map the Display units to the United States
            customary units or US units.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.UnitSystem.SetLengthDisplayUnits(UnitsNet.Units.LengthUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.UnitSystem.SetAngleDisplayUnits(UnitsNet.Units.AngleUnit)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Units.Custom.InverseArea">
            <summary>
            Custom inverse length quantity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.#ctor(System.Double,Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> struct.
            </summary>
            <param name="value">The numeric value to construct this quantity with.</param>
            <param name="unit">The unit representation to construct this quantity with.</param>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Info">
            <inheritdoc cref="P:UnitsNet.IQuantity.QuantityInfo"/>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.BaseDimensions">
            <summary>
                The <see cref="P:Ansys.Disco.Physics.Units.Custom.InverseArea.BaseDimensions" /> of this quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.BaseUnit">
            <summary>
                The base unit of InverseArea, which is InverseMeter. All conversions go via this value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.MaxValue">
            <summary>
            Represents the largest possible value of InverseArea
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.MinValue">
            <summary>
            Represents the smallest possible value of InverseArea
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Units">
            <summary>
            All units of measurement for the InverseArea quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Zero">
            <summary>
            Gets an instance of the quantity with a value of 0 in the base unit InverseMeter
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Value">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Unit">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Type">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.Dimensions">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareCentimeters">
            <summary>
            Get InverseArea in InverseCentimeters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareFeet">
            <summary>
            Get InverseArea in InverseFeet.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareInches">
            <summary>
            Get InverseArea in InverseInches.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareMeters">
            <summary>
            Get InverseArea in InverseMeters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareMicrometers">
            <summary>
            Get InverseArea in InverseMicrometers.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseArea.InverseSquareMillimeters">
            <summary>
            Get InverseArea in InverseMillimeters.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Equality(Ansys.Disco.Physics.Units.Custom.InverseArea,System.Object)">
            <summary>
            Returns true if the values are equal, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Inequality(Ansys.Disco.Physics.Units.Custom.InverseArea,System.Object)">
            <summary>
            Returns true if the values are not equal, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_LessThan(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Returns true if the left value is less than the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_GreaterThan(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Returns true if the left value is greater than the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_LessThanOrEqual(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Returns true if the left value is less than or equal to the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_GreaterThanOrEqual(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Returns true if the left value is greater than or equal to the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_UnaryNegation(Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Negate the value.
            </summary>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Addition(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> from adding two <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Subtraction(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> from subtracting two <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Multiply(System.Double,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> from multiplying value and <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Multiply(Ansys.Disco.Physics.Units.Custom.InverseArea,System.Double)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> from multiplying value and <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Division(Ansys.Disco.Physics.Units.Custom.InverseArea,System.Double)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> from dividing <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> by value.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Division(System.Double,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Calculate <see cref="T:UnitsNet.Area"/> from dividing a value by <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.op_Division(Ansys.Disco.Physics.Units.Custom.InverseArea,Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <summary>
            Get ratio value from dividing <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/> by <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareCentimeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse square centimeters.
            </summary>
            <param name="inverseSquareCentimeters">Inverse square centimeters value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareFeet(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse square feet.
            </summary>
            <param name="inverseSquareFeet">Inverse square feet value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareInches(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse inches.
            </summary>
            <param name="inverseSquareInches">Inverse inches value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareMeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse meters.
            </summary>
            <param name="inverseSquareMeters">Inverse meters value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareMicrometers(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse micrometers.
            </summary>
            <param name="inverseSquareMicrometers">Inverse micrometers value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.FromInverseSquareMillimeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseArea from inverse millimeters.
            </summary>
            <param name="inverseSquareMillimeters">Inverse millimeters value.</param>
            <returns>InverseArea quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.From(UnitsNet.QuantityValue,Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <summary>
            Dynamically convert from value and unit enum <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit" /> to <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseArea" />.
            </summary>
            <param name="value">Value to convert from.</param>
            <param name="fromUnit">Unit to convert from.</param>
            <returns>InverseArea unit value.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ParseUnit(System.String)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <example>
                Area.ParseUnit("m", new CultureInfo("en-US"));
            </example>
            <exception cref="T:System.ArgumentNullException">The value of 'str' cannot be null. </exception>
            <exception cref="T:UnitsNet.UnitsNetException">Error parsing string.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ParseUnit(System.String,System.IFormatProvider)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <param name="provider">Format to use when parsing number and unit. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <returns>The parsed InverseAreaUnit.</returns>
            <example>
                Area.ParseUnit("m", new CultureInfo("en-US"));
            </example>
            <exception cref="T:System.ArgumentNullException">The value of 'str' cannot be null. </exception>
            <exception cref="T:UnitsNet.UnitsNetException">Error parsing string.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.TryParseUnit(System.String,Ansys.Disco.Physics.Units.Custom.InverseAreaUnit@)">
            <inheritdoc cref="M:Ansys.Disco.Physics.Units.Custom.InverseArea.TryParseUnit(System.String,System.IFormatProvider,Ansys.Disco.Physics.Units.Custom.InverseAreaUnit@)"/>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.TryParseUnit(System.String,System.IFormatProvider,Ansys.Disco.Physics.Units.Custom.InverseAreaUnit@)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <param name="provider">Format to use when parsing number and unit. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="unit">The parsed unit if successful.</param>
            <returns>True if successful, otherwise false.</returns>
            <example>
                Area.TryParseUnit("m", new CultureInfo("en-US"));
            </example>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.GetAbbreviation(Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <summary>
                Get unit abbreviation string.
            </summary>
            <param name="unit">Unit to get abbreviation for.</param>
            <returns>Unit abbreviation string.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.GetAbbreviation(Ansys.Disco.Physics.Units.Custom.InverseAreaUnit,System.IFormatProvider)">
            <summary>
                Get unit abbreviation string.
            </summary>
            <param name="unit">Unit to get abbreviation for.</param>
            <returns>Unit abbreviation string.</returns>
            <param name="provider">Format to use for localization. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.As(Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.UnitsNet#IQuantity#As(System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.As(UnitsNet.UnitSystem)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToUnit(Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <summary>
            Converts to a quantity with the given unit representation.
            </summary>
            <param name="unit">The unit to convert to</param>
            <returns>A new quantity with the given unit.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.UnitsNet#IQuantity{Ansys#Disco#Physics#Units#Custom#InverseAreaUnit}#ToUnit(Ansys.Disco.Physics.Units.Custom.InverseAreaUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.UnitsNet#IQuantity#ToUnit(System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.CompareTo(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.CompareTo(Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.Equals(Ansys.Disco.Physics.Units.Custom.InverseArea,System.Double,UnitsNet.ComparisonType)">
            <summary>
                <para>
                    Compare equality to another InverseArea within the given absolute or relative tolerance.
                </para>
                <para>
                    Relative tolerance is defined as the maximum allowable absolute difference between this quantity's value and
                    <paramref name="other"/> as a percentage of this quantity's value. <paramref name="other"/> will be converted into
                    this quantity's unit for comparison. A relative tolerance of 0.01 means the absolute difference must be within +/- 1% of
                    this quantity's value to be considered equal.
                    <example>
                        In this example, the two quantities will be equal if the value of b is within +/- 1% of a (0.02m or 2cm).
                        <code>
                            var a = Area.FromMeters(2.0);
                            var b = Area.FromInches(50.0);
                            a.Equals(b, 0.01, ComparisonType.Relative);
                        </code>
                    </example>
                </para>
                <para>
                    Absolute tolerance is defined as the maximum allowable absolute difference between this quantity's value and
                    <paramref name="other"/> as a fixed number in this quantity's unit. <paramref name="other"/> will be converted into
                    this quantity's unit for comparison.
                    <example>
                        In this example, the two quantities will be equal if the value of b is within 0.01 of a (0.01m or 1cm).
                            <code>
                            var a = Area.FromMeters(2.0);
                            var b = Area.FromInches(50.0);
                            a.Equals(b, 0.01, ComparisonType.Absolute);
                        </code>
                    </example>
                </para>
                <para>
                    Note that it is advised against specifying zero difference, due to the nature
                    of floating point operations and using System.Double internally.
                </para>
            </summary>
            <param name="other">The other quantity to compare to.</param>
            <param name="tolerance">The absolute or relative tolerance value. Must be greater than or equal to 0.</param>
            <param name="comparisonType">The comparison type: either relative or absolute.</param>
            <returns>True if the absolute difference between the two values is not greater than the specified relative or absolute tolerance.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.Equals(Ansys.Disco.Physics.Units.Custom.InverseArea)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString">
            <summary>
                Gets the default string representation of value and unit.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString(System.IFormatProvider)">
            <summary>
                Gets the default string representation of value and unit using the given format provider.
            </summary>
            <returns>String representation.</returns>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString(System.IFormatProvider,System.Int32)">
            <summary>
                Get string representation of value and unit.
            </summary>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="significantDigitsAfterRadix">The number of significant digits after the radix point.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString(System.IFormatProvider,System.String,System.Object[])">
            <summary>
                Get string representation of value and unit.
            </summary>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="format">String format to use. Default:  "{0:0.##} {1} for value and unit abbreviation respectively."</param>
            <param name="args">Arguments for string format. Value and unit are implicitly included as arguments 0 and 1.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString(System.String)">
            <inheritdoc cref="M:UnitsNet.QuantityFormatter.Format``1(UnitsNet.IQuantity{``0},System.String,System.IFormatProvider)"/>
            <summary>
            Gets the string representation of this instance in the specified format string using <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.
            </summary>
            <param name="format">The format string.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseArea.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:UnitsNet.QuantityFormatter.Format``1(UnitsNet.IQuantity{``0},System.String,System.IFormatProvider)"/>
            <summary>
            Gets the string representation of this instance in the specified format string using the specified format provider, or <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.
            </summary>
            <param name="format">The format string.</param>
            <param name="formatProvider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.Undefined">
            <summary>
            Undefined unit
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareCentimeter">
            <summary>
            Inverse square centimeter unit (1/cm²)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareFoot">
            <summary>
            Inverse square foot unit (1/ft²)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareInch">
            <summary>
            Inverse square inch unit (1/in²)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareMeter">
            <summary>
            Inverse square meter unit (1/m²)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareMicrometer">
            <summary>
            Inverse square micrometer unit (1/μm²)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseAreaUnit.InverseSquareMillimeter">
            <summary>
            Inverse square millimeter unit (1/mm²)
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit">
            <summary>
            Units for inverse length
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.Undefined">
            <summary>
            Undefined unit
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseCentimeter">
            <summary>
            Inverse centimeter unit (1/cm)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseFoot">
            <summary>
            Inverse foot unit (1/ft)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseInch">
            <summary>
            Inverse inch unit (1/in)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseMeter">
            <summary>
            Inverse meter unit (1/m)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseMicrometer">
            <summary>
            Inverse micrometer unit (1/μm)
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit.InverseMillimeter">
            <summary>
            Inverse millimeter unit (1/mm)
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.Custom.InverseLength">
            <summary>
            Custom inverse length quantity
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.#ctor(System.Double,Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> struct.
            </summary>
            <param name="value">The numeric value to construct this quantity with.</param>
            <param name="unit">The unit representation to construct this quantity with.</param>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Info">
            <inheritdoc cref="P:UnitsNet.IQuantity.QuantityInfo"/>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.BaseDimensions">
            <summary>
                The <see cref="P:Ansys.Disco.Physics.Units.Custom.InverseLength.BaseDimensions" /> of this quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.BaseUnit">
            <summary>
                The base unit of InverseLength, which is InverseMeter. All conversions go via this value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.MaxValue">
            <summary>
            Represents the largest possible value of InverseLength
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.MinValue">
            <summary>
            Represents the smallest possible value of InverseLength
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Units">
            <summary>
            All units of measurement for the InverseLength quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Zero">
            <summary>
            Gets an instance of the quantity with a value of 0 in the base unit InverseMeter
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Value">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Unit">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.QuantityInfo">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Type">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.Dimensions">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseCentimeters">
            <summary>
            Get InverseLength in InverseCentimeters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseFeet">
            <summary>
            Get InverseLength in InverseFeet.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseInches">
            <summary>
            Get InverseLength in InverseInches.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseMeters">
            <summary>
            Get InverseLength in InverseMeters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseMicrometers">
            <summary>
            Get InverseLength in InverseMicrometers.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Units.Custom.InverseLength.InverseMillimeters">
            <summary>
            Get InverseLength in InverseMillimeters.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Equality(Ansys.Disco.Physics.Units.Custom.InverseLength,System.Object)">
            <summary>
            Returns true if the values are equal, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Inequality(Ansys.Disco.Physics.Units.Custom.InverseLength,System.Object)">
            <summary>
            Returns true if the values are not equal, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_LessThan(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Returns true if the left value is less than the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_GreaterThan(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Returns true if the left value is greater than the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_LessThanOrEqual(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Returns true if the left value is less than or equal to the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_GreaterThanOrEqual(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Returns true if the left value is greater than or equal to the right value, otherwise returns false.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_UnaryNegation(Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Negate the value.
            </summary>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Addition(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> from adding two <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Subtraction(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> from subtracting two <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Multiply(System.Double,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> from multiplying value and <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Multiply(Ansys.Disco.Physics.Units.Custom.InverseLength,System.Double)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> from multiplying value and <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Division(Ansys.Disco.Physics.Units.Custom.InverseLength,System.Double)">
            <summary>
            Calculate <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> from dividing <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> by value.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Division(System.Double,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Calculate <see cref="T:UnitsNet.Length"/> from dividing a value by <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.op_Division(Ansys.Disco.Physics.Units.Custom.InverseLength,Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <summary>
            Get ratio value from dividing <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/> by <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength"/>.
            </summary>
            <param name="left">Value on the left side of the operation.</param>
            <param name="right">Value on the right side of the operation.</param>
            <returns>Result of the operation</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseCentimeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse centimeters.
            </summary>
            <param name="inverseCentimeters">Inverse centimeters value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseFeet(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse feet.
            </summary>
            <param name="inverseFeet">Inverse feet value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseInches(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse inches.
            </summary>
            <param name="inverseInches">Inverse inches value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseMeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse meters.
            </summary>
            <param name="inverseMeters">Inverse meters value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseMicrometers(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse micrometers.
            </summary>
            <param name="inverseMicrometers">Inverse micrometers value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.FromInverseMillimeters(UnitsNet.QuantityValue)">
            <summary>
            Get InverseLength from inverse millimeters.
            </summary>
            <param name="inverseMillimeters">Inverse millimeters value.</param>
            <returns>InverseLength quantity.</returns>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.From(UnitsNet.QuantityValue,Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <summary>
            Dynamically convert from value and unit enum <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLengthUnit" /> to <see cref="T:Ansys.Disco.Physics.Units.Custom.InverseLength" />.
            </summary>
            <param name="value">Value to convert from.</param>
            <param name="fromUnit">Unit to convert from.</param>
            <returns>InverseLength unit value.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ParseUnit(System.String)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <example>
                Length.ParseUnit("m", new CultureInfo("en-US"));
            </example>
            <exception cref="T:System.ArgumentNullException">The value of 'str' cannot be null. </exception>
            <exception cref="T:UnitsNet.UnitsNetException">Error parsing string.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ParseUnit(System.String,System.IFormatProvider)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <param name="provider">Format to use when parsing number and unit. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <returns>The parsed InverseLengthUnit.</returns>
            <example>
                Length.ParseUnit("m", new CultureInfo("en-US"));
            </example>
            <exception cref="T:System.ArgumentNullException">The value of 'str' cannot be null. </exception>
            <exception cref="T:UnitsNet.UnitsNetException">Error parsing string.</exception>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.TryParseUnit(System.String,Ansys.Disco.Physics.Units.Custom.InverseLengthUnit@)">
            <inheritdoc cref="M:Ansys.Disco.Physics.Units.Custom.InverseLength.TryParseUnit(System.String,System.IFormatProvider,Ansys.Disco.Physics.Units.Custom.InverseLengthUnit@)"/>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.TryParseUnit(System.String,System.IFormatProvider,Ansys.Disco.Physics.Units.Custom.InverseLengthUnit@)">
            <summary>
                Parse a unit string.
            </summary>
            <param name="str">String to parse. Typically in the form: {number} {unit}</param>
            <param name="provider">Format to use when parsing number and unit. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="unit">The parsed unit if successful.</param>
            <returns>True if successful, otherwise false.</returns>
            <example>
                Length.TryParseUnit("m", new CultureInfo("en-US"));
            </example>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.GetAbbreviation(Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <summary>
                Get unit abbreviation string.
            </summary>
            <param name="unit">Unit to get abbreviation for.</param>
            <returns>Unit abbreviation string.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.GetAbbreviation(Ansys.Disco.Physics.Units.Custom.InverseLengthUnit,System.IFormatProvider)">
            <summary>
                Get unit abbreviation string.
            </summary>
            <param name="unit">Unit to get abbreviation for.</param>
            <returns>Unit abbreviation string.</returns>
            <param name="provider">Format to use for localization. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.As(Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.UnitsNet#IQuantity#As(System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.As(UnitsNet.UnitSystem)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToUnit(Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <summary>
            Converts to a quantity with the given unit representation.
            </summary>
            <param name="unit">The unit to convert to</param>
            <returns>A new quantity with the given unit.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.UnitsNet#IQuantity{Ansys#Disco#Physics#Units#Custom#InverseLengthUnit}#ToUnit(Ansys.Disco.Physics.Units.Custom.InverseLengthUnit)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.UnitsNet#IQuantity#ToUnit(System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.CompareTo(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.CompareTo(Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.Equals(Ansys.Disco.Physics.Units.Custom.InverseLength,System.Double,UnitsNet.ComparisonType)">
            <summary>
                <para>
                    Compare equality to another InverseLength within the given absolute or relative tolerance.
                </para>
                <para>
                    Relative tolerance is defined as the maximum allowable absolute difference between this quantity's value and
                    <paramref name="other"/> as a percentage of this quantity's value. <paramref name="other"/> will be converted into
                    this quantity's unit for comparison. A relative tolerance of 0.01 means the absolute difference must be within +/- 1% of
                    this quantity's value to be considered equal.
                    <example>
                        In this example, the two quantities will be equal if the value of b is within +/- 1% of a (0.02m or 2cm).
                        <code>
                            var a = Length.FromMeters(2.0);
                            var b = Length.FromInches(50.0);
                            a.Equals(b, 0.01, ComparisonType.Relative);
                        </code>
                    </example>
                </para>
                <para>
                    Absolute tolerance is defined as the maximum allowable absolute difference between this quantity's value and
                    <paramref name="other"/> as a fixed number in this quantity's unit. <paramref name="other"/> will be converted into
                    this quantity's unit for comparison.
                    <example>
                        In this example, the two quantities will be equal if the value of b is within 0.01 of a (0.01m or 1cm).
                            <code>
                            var a = Length.FromMeters(2.0);
                            var b = Length.FromInches(50.0);
                            a.Equals(b, 0.01, ComparisonType.Absolute);
                        </code>
                    </example>
                </para>
                <para>
                    Note that it is advised against specifying zero difference, due to the nature
                    of floating point operations and using System.Double internally.
                </para>
            </summary>
            <param name="other">The other quantity to compare to.</param>
            <param name="tolerance">The absolute or relative tolerance value. Must be greater than or equal to 0.</param>
            <param name="comparisonType">The comparison type: either relative or absolute.</param>
            <returns>True if the absolute difference between the two values is not greater than the specified relative or absolute tolerance.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.Equals(Ansys.Disco.Physics.Units.Custom.InverseLength)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString">
            <summary>
                Gets the default string representation of value and unit.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString(System.IFormatProvider)">
            <summary>
                Gets the default string representation of value and unit using the given format provider.
            </summary>
            <returns>String representation.</returns>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString(System.IFormatProvider,System.Int32)">
            <summary>
                Get string representation of value and unit.
            </summary>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="significantDigitsAfterRadix">The number of significant digits after the radix point.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString(System.IFormatProvider,System.String,System.Object[])">
            <summary>
                Get string representation of value and unit.
            </summary>
            <param name="provider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <param name="format">String format to use. Default:  "{0:0.##} {1} for value and unit abbreviation respectively."</param>
            <param name="args">Arguments for string format. Value and unit are implicitly included as arguments 0 and 1.</param>
            <returns>String representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString(System.String)">
            <inheritdoc cref="M:UnitsNet.QuantityFormatter.Format``1(UnitsNet.IQuantity{``0},System.String,System.IFormatProvider)"/>
            <summary>
            Gets the string representation of this instance in the specified format string using <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.
            </summary>
            <param name="format">The format string.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.Custom.InverseLength.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:UnitsNet.QuantityFormatter.Format``1(UnitsNet.IQuantity{``0},System.String,System.IFormatProvider)"/>
            <summary>
            Gets the string representation of this instance in the specified format string using the specified format provider, or <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.
            </summary>
            <param name="format">The format string.</param>
            <param name="formatProvider">Format to use for localization and number formatting. Defaults to <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> if null.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.Units.UnitDisplayType">
             <summary>
             Flags to indicate usage of units.
            
             This is required a case where the origin of a <see cref="T:UnitsNet.IQuantity"/>
             is based off of the model rather than a physics quantity.
             E.g. a driving dimension rather than a physics condition.
             </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.UnitDisplayType.Simulation">
            <summary>
            Indicate requirement for a unit derived from simulation components.
            E.g. Applied Pressure, Temperature
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Units.UnitDisplayType.Model">
            <summary>
            Indicate requirement for a unit derived from the model.
            E.g. Length or angle of geometry
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.IUnitSystem.SetLengthDisplayUnits(UnitsNet.Units.LengthUnit)">
            <summary>
            Set the length display units and all length derived display units.
            </summary>
            <param name="lengthUnit"></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Units.IUnitSystem.SetAngleDisplayUnits(UnitsNet.Units.AngleUnit)">
            <summary>
            Set the angle display units.
            </summary>
            <param name="angleUnit"></param>
        </member>
        <member name="M:Ansys.Disco.Physics.Monitors.MonitorsTreeBaseItem.TryGetMonitorEntity(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity@)">
            <inheritdoc />
        </member>
        <member name="P:Ansys.Disco.Physics.Monitors.MonitorsTreeBaseItem.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Delta.GeometryDeltaTracker.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.NamedSelection.INamedSelectionService">
            <summary>
            Header interface for <see cref="T:Ansys.Disco.Physics.NamedSelection.NamedSelectionService"/>.
            Being used to mock unit tests.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.GetDimensionType(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <summary>
            Gets the dimension type of <paramref name="namedSelection"/>.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> to grab
            <see cref="T:SpaceClaim.Geometry.DimensionType"/> from.
            </param>
            <returns>
            If successful, returns a <see cref="T:SpaceClaim.Geometry.DimensionType"/>, null otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.GetResult(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <summary>
            Gets the value of <paramref name="namedSelection"/>, including value,
            <see cref="T:SpaceClaim.Geometry.DimensionType"/>, and <see cref="T:SpaceClaim.Geometry.DimensionValueType"/>.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> to grab a value from.
            </param>
            <returns>
            A tuple with the success or failure of method and a
            <see cref="T:Ansys.Disco.Physics.NamedSelection.NamedSelectionResult"/> if the get is successful.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.GetValue(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <summary>
            Gets the value of <paramref name="namedSelection"/>.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> to grab a value from.
            </param>
            <returns>
            If successful returns a value, null otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.GetValueType(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <summary>
            Gets the dimension type of <paramref name="namedSelection"/>.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> to grab
            <see cref="T:SpaceClaim.Geometry.DimensionValueType"/> from.
            </param>
            <returns>
            If successful, returns a <see cref="T:SpaceClaim.Geometry.DimensionValueType"/>, null
            otherwise.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.GetNamedSelection(System.String)">
            <summary>
            Gets the named selection <see cref="T:SpaceClaim.INamedSelection"/>.
            </summary>
            <param name="name"> 
            Named selction name 
            </param>
            <returns>
            The named selection has the same name
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.SetValue(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection,System.Double)">
            <summary>
            Sets the value of <paramref name="namedSelection"/> to <paramref
            name="value"/>.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> being modified.
            </param>
            <param name="value">
            The value to set <paramref name="namedSelection"/> to.
            </param>
            <returns>True if the value was successfully set.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.INamedSelectionService.SetValueAndDefaultTool(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection,System.Double)">
            <summary>
            Sets the value of <paramref name="namedSelection"/> to
            <paramref name="value"/> then sets the tool to default.
            </summary>
            <param name="window">
            The <see cref="T:SpaceClaim.UserInterface.IInteractionWindow"/> the <paramref name=
            "namedSelection"/> is a child of.
            </param>
            <param name="namedSelection">
            The <see cref="T:SpaceClaim.INamedSelection"/> being modified.
            </param>
            <param name="value">
            The value to set <paramref name="namedSelection"/> to.
            </param>
            <returns>True if the value was successfully set.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.NamedSelection.NamedSelectionService">
            <summary>
            Provides access to singletons required to get/set the value of a <see
            cref="T:SpaceClaim.INamedSelection"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.#ctor(SpaceClaim.Facade.Tools.ParameterSweep.INamedSelectionManager,Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction,Ansys.Disco.Core.Context.IOperationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.NamedSelection.NamedSelectionService"/> class.
            </summary>
            <param name="manager">
            The <see cref="T:SpaceClaim.Facade.Tools.ParameterSweep.INamedSelectionManager"/> used to get/set the value
            of a <see cref="T:SpaceClaim.INamedSelection"/>.
            </param>
            <param name="spaceClaimTransaction">
            Getting and setting a <see cref="T:SpaceClaim.INamedSelection"/> value requires
            <paramref name="spaceClaimTransaction"/> to wrap the statement in a
            transaction.
            </param>
            <param name="operationContext">
            The <see cref="T:Ansys.Disco.Core.Context.IOperationContext"/> used to reselect default tool
            after setting <see cref="T:SpaceClaim.INamedSelection"/> value.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.SetValue(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.SetValueAndDefaultTool(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.GetResult(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.GetValue(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.GetDimensionType(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.NamedSelection.NamedSelectionService.GetValueType(SpaceClaim.UserInterface.IInteractionWindow,SpaceClaim.INamedSelection)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedBodies(System.Collections.Generic.IEnumerable{SpaceClaim.INominalBody})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedBodies(System.Collections.Generic.IEnumerable{SpaceClaim.IMesh})">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedBodyMap">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetBodiesInFluid(SpaceClaim.IEvaluation)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedBody(SpaceClaim.INominalBody)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedBody(SpaceClaim.IMesh)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedFace(SpaceClaim.INominalFace)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedFace(SpaceClaim.IPersistentMeshPoint)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.GetFacetedFaces(SpaceClaim.INominalBody)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.FacetedGeometryQueries.TryGetFaceId(SpaceClaim.IPart,SpaceClaim.INominalFace,System.UInt32@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.IFacetedGeometryQueries.GetFacetedFace(SpaceClaim.INominalFace)">
            <summary>
            Retrieves the faceted face for a given nominal face.
            </summary>
            <remarks>Caution: This method is not efficient, internally it interrogates all faces of the parent body. Do not use iteratively.</remarks>
            <param name="nominalFace">A nominal face belonging to the current root part</param>
            <returns>The found faceted face</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.IFacetedGeometryQueries.GetFacetedFace(SpaceClaim.IPersistentMeshPoint)">
            <summary>
            Retrieves the faceted face for a given mesh point/group.
            </summary>
            <remarks>Caution: This method is not efficient, internally it interrogates all faces of the parent body. Do not use iteratively.</remarks>
            <param name="meshPoint">A mesh point/group belonging to the current root part</param>
            <returns>The found faceted face</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.IFacetedGeometryQueries.GetFacetedFaces(SpaceClaim.INominalBody)">
            <summary>
            Retrieves all faceted faces for the given nominal body.
            </summary>
            <remarks>This method efficiently retrieves all faceted faces for given nominal body.</remarks>
            <param name="nominalBody">A nominal body belonging to the current root part</param>
            <returns>The found faceted faces</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Geometry.IFacetedGeometryQueries.TryGetFaceId(SpaceClaim.IPart,SpaceClaim.INominalFace,System.UInt32@)">
            <summary>
            Attempts to retrieve a facet face id for the given nominal face.
            </summary>
            <param name="rootPart">The root part for the current window/document</param>
            <param name="nominalFace">A nominal face belonging to the current root part</param>
            <param name="faceId">The face id used for the mapped faceted face.</param>
            <returns>True if a face id has been found. Otherwise the given geometry may not have been mapped.</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsDefaults">
            <summary>
            Global default properties and settings used for physics objects
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.WorkingTemperature">
            <summary>
            Default working temperature for materials, and boundary condition.
            We assume ambient temperature and manufacturing temperature is 22C unless otherwise provided
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.DefaultCompressibleFlowOperatingPressure">
            <summary>
            Default operating pressure for compressible flows
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.InterfaceTolerance">
            <summary>
            default distance to detect fluid-solid interfaces.  Too large and it detects through thin solids, too small and it doesn't cater from geometry tolerances.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.IsGravitySelfWeightOnByDefault">
            <summary>
            Is the default gravity's self-weight turned on by default.
            We assume the self-weight is turned off (false) unless toggled.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.IsGravityBuoyancyOnByDefault">
            <summary>
            Is the default gravity's buoyancy turned on by default.
            We assume the buoyancy is turned off (false) unless toggled.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.PhysicsDefaults.GravityDirection">
            <summary>
            Is the default gravity's buoyancy turned on by default.
            We assume the buoyancy is turned off (false) unless toggled.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsDefaults.ApplySettings(Ansys.Disco.Core.Environment.IAppUserSettings)">
            <summary>
            Retrieves and applies default values from the user settings
            </summary>
            <param name="userSettings">The user settings</param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsDefaults.Reset">
            <summary>
            Resets all the default settings back to their original values
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Properties.CommandStringResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddChartDataSeriesCommandName">
            <summary>
              Looks up a localized string similar to Add Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddFidelityAdjustmentName">
            <summary>
              Looks up a localized string similar to Add Fidelity Adjustment Name.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddMonitor">
            <summary>
              Looks up a localized string similar to Add monitor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddResultValueCommandName">
            <summary>
              Looks up a localized string similar to Add result value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddResultValuesCommandName">
            <summary>
              Looks up a localized string similar to Add result values.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddScriptGroupCommandName">
            <summary>
              Looks up a localized string similar to Add Script Group.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddScriptParameterCommandName">
            <summary>
              Looks up a localized string similar to Add Script Parameter.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AddToSimulationBodiesCommandName">
            <summary>
              Looks up a localized string similar to Add bodies to the simulation scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyBodyVisibilityCommandName">
            <summary>
              Looks up a localized string similar to Apply body visibility.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyCondition">
            <summary>
              Looks up a localized string similar to Apply {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyCurrentRowCommandName">
            <summary>
              Looks up a localized string similar to Apply Current Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyDesignChangeDefaultCommandName">
            <summary>
              Looks up a localized string similar to Add default design change.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyDesignChangeIncrementCommandName">
            <summary>
              Looks up a localized string similar to Increment design change.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ApplyProtectedDepth">
            <summary>
              Looks up a localized string similar to Set protected depth.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AssignBeamCommandName">
            <summary>
              Looks up a localized string similar to Assigns a Beam.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AssignBoltCommandName">
            <summary>
              Looks up a localized string similar to Assign a Bolt.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.AssignMaterialCommandName">
            <summary>
              Looks up a localized string similar to Assigns a Material.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAccelerationDegreesOfFreedomCommandName">
            <summary>
              Looks up a localized string similar to Change Acceleration Degrees Of Freedom.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAccelerationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set acceleration magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAccelerationReferenceFrameCommandName">
            <summary>
              Looks up a localized string similar to Set acceleration reference frame.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAccelerationTranslationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set acceleration translation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAccelerationTypeCommandName">
            <summary>
              Looks up a localized string similar to Set acceleration type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeActiveFlowTypeCommandName">
            <summary>
              Looks up a localized string similar to Change active flow type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeActivePortCommandName">
            <summary>
              Looks up a localized string similar to Set {0} as active.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAddedMassCommandName">
            <summary>
              Looks up a localized string similar to Change Added Mass.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAdditivePropertiesCommandName">
            <summary>
              Looks up a localized string similar to Change Additive Properties.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAssignedBeamDataCommandName">
            <summary>
              Looks up a localized string similar to Change assigned beam section.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAssignedBoltDataCommandName">
            <summary>
              Looks up a localized string similar to Change assigned bolt.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeAssignedMaterialCommandName">
            <summary>
              Looks up a localized string similar to Replaces the assigned material.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBeamAssignmentScopeCommandName">
            <summary>
              Looks up a localized string similar to Change beam assignment scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBearingLoadAngleCommandName">
            <summary>
              Looks up a localized string similar to Change Bearing Load Angle.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBearingLoadRadialForceCommandName">
            <summary>
              Looks up a localized string similar to Change Bearing Load Radial Force.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBearingLoadThrustForceCommandName">
            <summary>
              Looks up a localized string similar to Change Bearing Load Thrust Force.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltAssignmentScopeCommandName">
            <summary>
              Looks up a localized string similar to Change bolt assignment scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadBoltTorqueMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change bolt torque.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadClampForceMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Clamp Force Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadDiameterCommandName">
            <summary>
              Looks up a localized string similar to Change bolt diameter.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadGripLengthMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Grip Length Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadSpecifyDiameterCommandName">
            <summary>
              Looks up a localized string similar to Change bolt diameter specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadTorqueCoefficientCommandName">
            <summary>
              Looks up a localized string similar to Change bolt torque coefficient.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoltPreloadTypeCommandName">
            <summary>
              Looks up a localized string similar to Set Bolt Preload Type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeBoundaryDistanceCommand">
            <summary>
              Looks up a localized string similar to Change boundary distance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeCalculationType">
            <summary>
              Looks up a localized string similar to Change calculation type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesColorCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series color.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesComponentCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesFrequencyCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series frequency.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesModifierCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series modifier.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesPortCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series port location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDataSeriesVariableCommandName">
            <summary>
              Looks up a localized string similar to Set chart data series variable.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDbScalingCommandName">
            <summary>
              Looks up a localized string similar to Set chart dB scaling.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartDisplayTypeCommandName">
            <summary>
              Looks up a localized string similar to Set chart type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeChartOrientationCommandName">
            <summary>
              Looks up a localized string similar to Set chart orientation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeCompressiveYieldStrengthCommandName">
            <summary>
              Looks up a localized string similar to Change Compressive Yield Strength.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeConstraintType">
            <summary>
              Looks up a localized string similar to Change optimization constraint type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeConstraintValue">
            <summary>
              Looks up a localized string similar to Change optimization constraint value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactAdjustGapOrOverlapCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Gap Or Overlap Adjusting.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactDetectionRadiusFactorCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Detection Radius Factor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactFrictionCoefficientCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Friction Coefficient.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupDetectedPairsName">
            <summary>
              Looks up a localized string similar to Set contact group pairs detected.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupDetectionDistanceFactorHighName">
            <summary>
              Looks up a localized string similar to Set contact group higher bound factor for detection distance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupDetectionDistanceFactorLowName">
            <summary>
              Looks up a localized string similar to Set contact group lower bound factor for detection distance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupDetectionGroupingName">
            <summary>
              Looks up a localized string similar to Set contact group detection grouping type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupFilteredPairsName">
            <summary>
              Looks up a localized string similar to Set contact group filtered pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupPairsName">
            <summary>
              Looks up a localized string similar to Set contact group pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupSuppressedPairsName">
            <summary>
              Looks up a localized string similar to Set contact group suppressed pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactGroupTemplateName">
            <summary>
              Looks up a localized string similar to Set contact group contact options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactIdealizeCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Idealize.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactMakeJustTouchingCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Make Just Touching.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactOffsetCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Offset.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactPairsName">
            <summary>
              Looks up a localized string similar to Set contact pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactSpecifyThermalConductanceCommandName">
            <summary>
              Looks up a localized string similar to Allow specification of thermal conductance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactStiffnessFactorCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Stiffness Factor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactThermalConductanceCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Thermal Conductance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeContactTypeCommandName">
            <summary>
              Looks up a localized string similar to Set Contact Type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeConvectionCoefficientCommandName">
            <summary>
              Looks up a localized string similar to Change Convection Coefficient.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeConvectionExternalTemperatureCommandName">
            <summary>
              Looks up a localized string similar to Change Convection External Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDefaultInterfaceDetectionDistanceFactorHighName">
            <summary>
              Looks up a localized string similar to Set higher bound factor for interface detection distance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDefaultInterfaceSpecifyThermalConductanceName">
            <summary>
              Looks up a localized string similar to Set interface specify thermal conductance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDefaultInterfaceThermalConductanceName">
            <summary>
              Looks up a localized string similar to Set interface thermal conductance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDisplacementDegreesOfFreedomCommandName">
            <summary>
              Looks up a localized string similar to Change Displacement Degrees Of Freedom.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDisplacementRotationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set displacement rotation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDisplacementTranslationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set displacement translation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDisplacementTypeCommandName">
            <summary>
              Looks up a localized string similar to Set displacement type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDistributedForceComponentsCommandName">
            <summary>
              Looks up a localized string similar to Set Distributed Force Components.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeDistributedForceMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set Distributed Force Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectricPassivePortCommandName">
            <summary>
              Looks up a localized string similar to Change Electric Passive Port.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectricPhaseCommandName">
            <summary>
              Looks up a localized string similar to Change Electric Phase.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectricPowerCommandName">
            <summary>
              Looks up a localized string similar to Change Electric Potential Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectricResistanceMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Electric Impedance.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectromagneticConductiveLossesType">
            <summary>
              Looks up a localized string similar to Change Dielectric Losses Option.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeElectromagneticConvergenceTarget">
            <summary>
              Looks up a localized string similar to Change Electromagnetics Convergence Target.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeEndFrequencyCommandName">
            <summary>
              Looks up a localized string similar to Change end frequency.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeEntityIsUsingOriginPointCommandName">
            <summary>
              Looks up a localized string similar to Toggle Entity Origin Point.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowDirectionCommandName">
            <summary>
              Looks up a localized string similar to Change Flow Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowInletMassFlowCommandName">
            <summary>
              Looks up a localized string similar to Set flow inlet massflow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowInletPressureCommandName">
            <summary>
              Looks up a localized string similar to Set flow inlet pressure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowInletRotationalSpeedCommandName">
            <summary>
              Looks up a localized string similar to Set flow inlet rotational speed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowInletSwirlEffectsCommandName">
            <summary>
              Looks up a localized string similar to Set flow inlet swirl effects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowInletVelocityCommandName">
            <summary>
              Looks up a localized string similar to Set flow inlet velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowOptionEntityCommandName">
            <summary>
              Looks up a localized string similar to Change Flow Option.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowOutletMassFlowCommandName">
            <summary>
              Looks up a localized string similar to Set flow outlet massflow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowOutletPressureCommandName">
            <summary>
              Looks up a localized string similar to Set flow outlet pressure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowOutletVelocityCommandName">
            <summary>
              Looks up a localized string similar to Set flow outlet velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Change Flow Specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFlowTemperatureCommandName">
            <summary>
              Looks up a localized string similar to Set flow temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeFluidPressureMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceDirectionCommandName">
            <summary>
              Looks up a localized string similar to Change Force Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceMagnitudeDefinitionCommandName">
            <summary>
              Looks up a localized string similar to Set Force Magnitude Definition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceOptionEntityCommandName">
            <summary>
              Looks up a localized string similar to Change Force Option.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForcePerAreaCommandName">
            <summary>
              Looks up a localized string similar to Change Force Per Area.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Change Force Specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceTorqueCommandName">
            <summary>
              Looks up a localized string similar to Change Torque.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeForceTotalForceCommandName">
            <summary>
              Looks up a localized string similar to Change Total Force.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGoalCriteria">
            <summary>
              Looks up a localized string similar to Change simulation goal criteria.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGoalFlowModel">
            <summary>
              Looks up a localized string similar to Change flow simulation model.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGoalFlowModelConvergenceStop">
            <summary>
              Looks up a localized string similar to Change Goal Flow Model Convergence Stop.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGoalStructuralModel">
            <summary>
              Looks up a localized string similar to Change structural simulation model.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGravityBuoyancyCommandName">
            <summary>
              Looks up a localized string similar to Set gravity buoyancy.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGravityComponentOrMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Gravity Component Or Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGravityComponentsCommandName">
            <summary>
              Looks up a localized string similar to Set Components.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGravitySelfWeightCommandName">
            <summary>
              Looks up a localized string similar to Set gravity self-weight.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeGravityToAlignToGlobalCommandName">
            <summary>
              Looks up a localized string similar to Sets gravity to be assigned to a global CS.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeHeatPerAreaCommandName">
            <summary>
              Looks up a localized string similar to Set heat per area.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeHeatPerVolumeCommandName">
            <summary>
              Looks up a localized string similar to Set heat per volume.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeHeatSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Set Heat Specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeImproveMesh">
            <summary>
              Looks up a localized string similar to Change Improve Mesh.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeIncludeInSimulation">
            <summary>
              Looks up a localized string similar to Change inclusion of new bodies in simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeInitialNumberOfSubsteps">
            <summary>
              Looks up a localized string similar to Change Initial Number Of Substeps.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeInterfaceDetectionGroupingName">
            <summary>
              Looks up a localized string similar to Set interface detection grouping type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointRotationXCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation about X axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointRotationYCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation about Y axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointRotationZCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation about Z axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointTranslationXCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation along X axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointTranslationYCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation along Y axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointTranslationZCommandName">
            <summary>
              Looks up a localized string similar to Toggle Translation along Z axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeJointTypeCommandName">
            <summary>
              Looks up a localized string similar to Set joint type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeLabelCommandName">
            <summary>
              Looks up a localized string similar to Set Label.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeLoadComponentsCommandName">
            <summary>
              Looks up a localized string similar to Set Components.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeLoadMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeLocalFidelityMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change local fidelity value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialAppearancePropertyCommandName">
            <summary>
              Looks up a localized string similar to Change Material Appearance Properties.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialAssignmentManufacturingTemperatureCommandName">
            <summary>
              Looks up a localized string similar to Change Material Assignment Manufacturing Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialAssignmentScopeCommandName">
            <summary>
              Looks up a localized string similar to Change Material Assignment Scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialElectromagneticConductivityCommandName">
            <summary>
              Looks up a localized string similar to Change material electrical conductivity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialElectromagneticLossTangentCommandName">
            <summary>
              Looks up a localized string similar to Change material electrical loss tangent.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialElectromagneticMagneticLossTangentCommandName">
            <summary>
              Looks up a localized string similar to Change material magnetic loss tangent.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialElectromagneticPermeabilityCommandName">
            <summary>
              Looks up a localized string similar to Change material permeability.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialElectromagneticPermittivityCommandName">
            <summary>
              Looks up a localized string similar to Change material permittivity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialNameCommand">
            <summary>
              Looks up a localized string similar to Change material name command.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPhysicalCompressiveUltimateYieldStrengthCommandName">
            <summary>
              Looks up a localized string similar to Change Compressive Ultimate Yield Strength.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPhysicalDensityCommandName">
            <summary>
              Looks up a localized string similar to Change Material Density.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPhysicalMolarMassCommandName">
            <summary>
              Looks up a localized string similar to Change Material Molar Mass.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPhysicalTensileUltimateYieldStrengthCommandName">
            <summary>
              Looks up a localized string similar to Change Tensile Ultimate Yield Strength.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPhysicalViscosityCommandName">
            <summary>
              Looks up a localized string similar to Change Material Viscosity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialPropertiesCommand">
            <summary>
              Looks up a localized string similar to Change material properties command.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialSourceIdCommand">
            <summary>
              Looks up a localized string similar to Change material state source ID..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialStateCommandName">
            <summary>
              Looks up a localized string similar to Set Material State.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialThermalCoefficientOfThermalExpansionCommandName">
            <summary>
              Looks up a localized string similar to Change Thermal Coefficient of Thermal Expansion.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialThermalIsoThermalConductivityCommandName">
            <summary>
              Looks up a localized string similar to Change Material Iso Thermal Conductivity Command.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaterialThermalSpecificHeatCommandName">
            <summary>
              Looks up a localized string similar to Change Material Thermal Specific Heat Command.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaximumNumberOfIterations">
            <summary>
              Looks up a localized string similar to Change Maximum Number Of Iterations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaximumNumberOfSubsteps">
            <summary>
              Looks up a localized string similar to Change Maximum Number Of Substeps.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMaximumSimulationDuration">
            <summary>
              Looks up a localized string similar to Change Maximum Simulation Duration.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMinimumFeatureSize">
            <summary>
              Looks up a localized string similar to Change Minimum Feature Size.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMinimumNumberOfSubsteps">
            <summary>
              Looks up a localized string similar to Change Minimum Number Of Substeps.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMomentCoordinateSystemDisplayTypeName">
            <summary>
              Looks up a localized string similar to Set Moment Coordinate System Display Type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMomentDirectionCommandName">
            <summary>
              Looks up a localized string similar to Change Moment Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMomentGlobalComponentCommandName">
            <summary>
              Looks up a localized string similar to Change Global Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMomentLocalComponentCommandName">
            <summary>
              Looks up a localized string similar to Change Local Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMomentMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorComponentCommandName">
            <summary>
              Looks up a localized string similar to Set monitor component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorContactStressComponentCommandName">
            <summary>
              Looks up a localized string similar to Set monitor contact stress component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorFunctionCommandName">
            <summary>
              Looks up a localized string similar to Set monitor function.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorMeshQualityCommandName">
            <summary>
              Looks up a localized string similar to Change monitor mesh quality.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorMeshStatisticsComponentCommandName">
            <summary>
              Looks up a localized string similar to Set monitor mesh statistics component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorModeNumberCommandName">
            <summary>
              Looks up a localized string similar to Set monitor mode number.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorPrincipalComponentCommandName">
            <summary>
              Looks up a localized string similar to Set monitor principal component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Set monitor specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorTargetQuantity">
            <summary>
              Looks up a localized string similar to Change monitor target quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorTargetsSpecified">
            <summary>
              Looks up a localized string similar to Change monitor target specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorTensorComponentCommandName">
            <summary>
              Looks up a localized string similar to Set monitor tensor component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorUniformityComponentCommandName">
            <summary>
              Looks up a localized string similar to Change monitor uniformity measure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMonitorVariableCommandName">
            <summary>
              Looks up a localized string similar to Set monitor variable.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeMultipleConstraintValues">
            <summary>
              Looks up a localized string similar to Change optimization constraints values.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumberOfFarfieldFrequencyPointsCommandName">
            <summary>
              Looks up a localized string similar to Change Number of Farfield Frequency Points.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumberOfNearfieldFrequencyPointsCommandName">
            <summary>
              Looks up a localized string similar to Change Number of Nearfield Frequency Points.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumberOfSParameterFrequencyPointsCommandName">
            <summary>
              Looks up a localized string similar to Change Number of S-parameter Frequency Points.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumericalConvergenceTarget">
            <summary>
              Looks up a localized string similar to Change Numerical Convergence Target.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumericalConvergenceTargetEnergy">
            <summary>
              Looks up a localized string similar to Change Numerical Convergence Target Energy.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeNumericalConvergenceTargetMonitors">
            <summary>
              Looks up a localized string similar to Change Numerical Convergence Target Monitors.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeOriginCommandName">
            <summary>
              Looks up a localized string similar to Change Origin.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeOriginFromPointCommandName">
            <summary>
              Looks up a localized string similar to Change Origin From Point.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeOverrideDefaultFlowConvergence">
            <summary>
              Looks up a localized string similar to Change Override Default Flow Convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePerfectConductivityThresholdCommandName">
            <summary>
              Looks up a localized string similar to Change Perfect Conductivity Threshold.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePhysicsRegionScopeName">
            <summary>
              Looks up a localized string similar to Changes the physics region scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePhysicsRegionTypeName">
            <summary>
              Looks up a localized string similar to Change the physics region type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePoissonsRatioCommandName">
            <summary>
              Looks up a localized string similar to Change Poisson&apos;s Ratio.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousFrameDefinitionCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Frame Definition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousLossCoefficientsCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Loss Coefficients.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousMediaMaterialPropertiesCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Material Properties.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousPorosityCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Porosity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousSecondaryDirectionCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Secondary Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Change Porous Specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePorousThermalEffectsName">
            <summary>
              Looks up a localized string similar to Change Porous Medium Thermal Effects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangePressureMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeProtectedDepth">
            <summary>
              Looks up a localized string similar to Edit protected depth.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeProtectedDistance">
            <summary>
              Looks up a localized string similar to Change protected distance value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeReduceByPercentFlag">
            <summary>
              Looks up a localized string similar to Change the optimization input type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeScopeCommandName">
            <summary>
              Looks up a localized string similar to Set Scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSetDistancesAutomatically">
            <summary>
              Looks up a localized string similar to Change set distances automatically.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSide1ScopeCommandName">
            <summary>
              Looks up a localized string similar to Set Side1 Scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSide2ScopeCommandName">
            <summary>
              Looks up a localized string similar to Set Side2 Scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSimulationCommandName">
            <summary>
              Looks up a localized string similar to Change Simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSimulationThermalEffectsCommandName">
            <summary>
              Looks up a localized string similar to Change Simulation Thermal Effects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSolutionEndTimeCommandName">
            <summary>
              Looks up a localized string similar to Set solution end time.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpecificationOfSolutionProgression">
            <summary>
              Looks up a localized string similar to Change Specification Of Solution Progression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpecificationOfTimeDependentDurationSetting">
            <summary>
              Looks up a localized string similar to Change Specification Of Time Dependent Duration Setting.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpecifyEndTimeCommandName">
            <summary>
              Looks up a localized string similar to Change specify end time.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringPreloadFreeLengthCommandName">
            <summary>
              Looks up a localized string similar to Set spring preload free length.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringPreloadLoadForceCommandName">
            <summary>
              Looks up a localized string similar to Set spring preload force.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringPreloadRotationCommandName">
            <summary>
              Looks up a localized string similar to Set spring preload rotation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringPreloadTorqueCommandName">
            <summary>
              Looks up a localized string similar to Set spring preload torque.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringPreloadTypeCommandName">
            <summary>
              Looks up a localized string similar to Set spring preload type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringStiffnessCommandName">
            <summary>
              Looks up a localized string similar to Set spring stiffness.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSpringTypeCommandName">
            <summary>
              Looks up a localized string similar to Set spring type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeStartFrequencyCommandName">
            <summary>
              Looks up a localized string similar to Change start frequency.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSupportDegreesOfFreedomComponentCommandName">
            <summary>
              Looks up a localized string similar to Change Degrees Of Freedom Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSupportDegreesOfFreedomMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Degrees Of Freedom Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSupportRotationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set support rotation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSupportTranslationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set support translation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSupportTypeCommandName">
            <summary>
              Looks up a localized string similar to Set Support Type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeSurfaceFrictionCommandName">
            <summary>
              Looks up a localized string similar to Set Surface Friction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTargetEngineeringConvergence">
            <summary>
              Looks up a localized string similar to Change Target Engineering Convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTemperatureMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Change Temperature Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTensileYieldStrengthCommandName">
            <summary>
              Looks up a localized string similar to Change Tensile Yield Strength.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTopologyObjective">
            <summary>
              Looks up a localized string similar to Change optimization objective type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTopologyState">
            <summary>
              Looks up a localized string similar to Change optimization enabled state.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTorqueForceComponentsCommandName">
            <summary>
              Looks up a localized string similar to Set Torque Force Components.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTorqueForceMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set Torque Force Magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeTotalHeatCommandName">
            <summary>
              Looks up a localized string similar to Set total heat.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityDegreesOfFreedomCommandName">
            <summary>
              Looks up a localized string similar to Change Velocity Degrees Of Freedom.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set velocity magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityOverrideRotationAxisOriginCommandName">
            <summary>
              Looks up a localized string similar to Set velocity override rotation axis origin.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityRotationAxisCommandName">
            <summary>
              Looks up a localized string similar to Set velocity rotation axis.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityTranslationMagnitudeCommandName">
            <summary>
              Looks up a localized string similar to Set velocity translation magnitude.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityTypeCommandName">
            <summary>
              Looks up a localized string similar to Set velocity type.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeVelocityUserRotationAxisOriginCommandName">
            <summary>
              Looks up a localized string similar to Set velocity rotation axis origin.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallConvectionCommandName">
            <summary>
              Looks up a localized string similar to Set wall convection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallHeatFlowCommandName">
            <summary>
              Looks up a localized string similar to Change wall heat flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallHeatFluxCommandName">
            <summary>
              Looks up a localized string similar to Change wall heat flux.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallMotionSpecificationCommandName">
            <summary>
              Looks up a localized string similar to Change wall motion.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallRadiationCommandName">
            <summary>
              Looks up a localized string similar to Set wall radiation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallRotationalVelocityCommandName">
            <summary>
              Looks up a localized string similar to Change wall rotational velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallTemperatureCommandName">
            <summary>
              Looks up a localized string similar to Change wall temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallThermalEffectsName">
            <summary>
              Looks up a localized string similar to Change Wall Thermal Effects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallThermalSpecificationdName">
            <summary>
              Looks up a localized string similar to Change wall thermal specification.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallToInsulatedCommandName">
            <summary>
              Looks up a localized string similar to Change wall to insulated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeWallTranslationalVelocityCommandName">
            <summary>
              Looks up a localized string similar to Change wall translational velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ChangeYoungsModulusCommandName">
            <summary>
              Looks up a localized string similar to Change Young&apos;s Modulus.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ClearAllPreviousDesignChangesCommandName">
            <summary>
              Looks up a localized string similar to Clear all previous design changes..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ClearCurrentDesignChangeCommandName">
            <summary>
              Looks up a localized string similar to Clear the current design change..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ClearDefaultMonitorsCommandName">
            <summary>
              Looks up a localized string similar to Clear Default Monitors.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CloneCharts">
            <summary>
              Looks up a localized string similar to Clone charts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CloneMonitor">
            <summary>
              Looks up a localized string similar to Clone monitor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CloneSimulationCommandName">
            <summary>
              Looks up a localized string similar to Clone {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ConvertMeshToCadCommandName">
            <summary>
              Looks up a localized string similar to Convert Mesh to Cad.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ConvertToSubDBodyCommandName">
            <summary>
              Looks up a localized string similar to Convert to SubD Body.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CopyMaterialToProjectCommandName">
            <summary>
              Looks up a localized string similar to Copy Material to Project.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateBeamProfileCommandName">
            <summary>
              Looks up a localized string similar to Create beam profile.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateChartCommandName">
            <summary>
              Looks up a localized string similar to Create Chart.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateDefaultOptimizationOptions">
            <summary>
              Looks up a localized string similar to Create default optimization options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateDefinedVariationCommandName">
            <summary>
              Looks up a localized string similar to Create Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateDrivingDimensionColumnCommandName">
            <summary>
              Looks up a localized string similar to Create Driving Dimension Column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateInsightsEntityCommandName">
            <summary>
              Looks up a localized string similar to Create insights entity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateMeshFromApolloDataCommandName">
            <summary>
              Looks up a localized string similar to CreateMeshFromApolloData.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateMonitorColumnCommandName">
            <summary>
              Looks up a localized string similar to Create Monitor Column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateMonitorCommandName">
            <summary>
              Looks up a localized string similar to Create Monitor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateNoteForEntityCommandName">
            <summary>
              Looks up a localized string similar to Create note for entity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateNoteForLocationCommandName">
            <summary>
              Looks up a localized string similar to Create note for location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateParameterStudyCommandName">
            <summary>
              Looks up a localized string similar to Create Parameter Study.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateParameterStudyRowPermutationCommandName">
            <summary>
              Looks up a localized string similar to Create Defined Variation Permutation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateParameterStudyRowRangeCommandName">
            <summary>
              Looks up a localized string similar to Add Defined Variation Range.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreatePhysicsParameterColumnCommandName">
            <summary>
              Looks up a localized string similar to Create Physics Parameter Column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreatePhysicsParametersCommandName">
            <summary>
              Looks up a localized string similar to Create Physics Parameters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreatePhysicsRegionCommandName">
            <summary>
              Looks up a localized string similar to Creates a PhysicsRegion.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateResultsCommandName">
            <summary>
              Looks up a localized string similar to Create Results.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateSimulationCommandName">
            <summary>
              Looks up a localized string similar to Create Simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateStudyCommandName">
            <summary>
              Looks up a localized string similar to Create Study.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateTableRowCommandName">
            <summary>
              Looks up a localized string similar to Create table row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateTestCasesTableCommandName">
            <summary>
              Looks up a localized string similar to Create Test Case Table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.CreateValidationSimulationCommandName">
            <summary>
              Looks up a localized string similar to Create validation simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteBeamAssignmentsCommandName">
            <summary>
              Looks up a localized string similar to Delete beam assignments: {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteBoltAssignmentsCommandName">
            <summary>
              Looks up a localized string similar to Delete bolt assignments: {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteDefinedVariationCommandName">
            <summary>
              Looks up a localized string similar to Delete Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteDefinedVariationsCommandName">
            <summary>
              Looks up a localized string similar to Delete Defined Variations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeletedItemLabel">
            <summary>
              Looks up a localized string similar to Item.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeletedItemLabelPlural">
            <summary>
              Looks up a localized string similar to Items.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteEntityCommandName">
            <summary>
              Looks up a localized string similar to Delete {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteMonitorCommandName">
            <summary>
              Looks up a localized string similar to Delete Monitor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeletePhysicsParametersCommandName">
            <summary>
              Looks up a localized string similar to Delete Physics Parameters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteSimulationCommandName">
            <summary>
              Looks up a localized string similar to Delete {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteTestCaseCommandName">
            <summary>
              Looks up a localized string similar to Delete Test Case.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DeleteTestCasesCommandName">
            <summary>
              Looks up a localized string similar to Delete Test Cases.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DisableScriptAutoExecutionCommandName">
            <summary>
              Looks up a localized string similar to Disable Script Auto Execution.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DuplicateParameterStudyRowCommandName">
            <summary>
              Looks up a localized string similar to Duplicate Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.DuplicateTestCaseRowCommandName">
            <summary>
              Looks up a localized string similar to Duplicate Test Case.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditCellQuantityCommandName">
            <summary>
              Looks up a localized string similar to Edit Defined Variation Cell Quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditOutputCellCommandName">
            <summary>
              Looks up a localized string similar to Edit Defined Variation Cell Quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditScriptParameterNameCommandName">
            <summary>
              Looks up a localized string similar to Edit Script Parameter Name.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditScriptParameterUnitCommandName">
            <summary>
              Looks up a localized string similar to Edit Script Parameter Unit.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditScriptParameterValueCommandName">
            <summary>
              Looks up a localized string similar to Edit Script Parameter Value.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EditTestCaseCellQuantityCommandName">
            <summary>
              Looks up a localized string similar to Edit Test Case Cell Quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.EnableScriptAutoExecutionCommandName">
            <summary>
              Looks up a localized string similar to Enable Script Auto Execution.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ExtendMaterialAssignmentScopeCommandName">
            <summary>
              Looks up a localized string similar to Extend Material Assignment Scope.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ExtractApolloResultsCommandName">
            <summary>
              Looks up a localized string similar to Add result to geometry.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ExtractApolloResultsFailedConvertToSolid">
            <summary>
              Looks up a localized string similar to Failed to convert faceted body to solid..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ExtractBeamsCommandName">
            <summary>
              Looks up a localized string similar to Extract beams.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ExtractBoltsCommandName">
            <summary>
              Looks up a localized string similar to Extract bolts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.InvalidSolutionEndtimeException">
            <summary>
              Looks up a localized string similar to Bad unit set; cannot parse from enumeration.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MakeMaterialUserDefinedCommandName">
            <summary>
              Looks up a localized string similar to Changes a material to be user defined.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MarkRowOutOfDateCommandName">
            <summary>
              Looks up a localized string similar to Mark Defined Variations Out Of Date.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MarkRowUpToDateCommandName">
            <summary>
              Looks up a localized string similar to Mark Defined Variations Up To Date.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MaterialAppearancePropertyChangedCommandDisplayText">
            <summary>
              Looks up a localized string similar to Change a material appearance property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MaterialAssignmentManufacturingTempChangedCommandDisplayText">
            <summary>
              Looks up a localized string similar to Change Manufacturing Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MaterialDoubleValuePropertyChangedCommandDisplayText">
            <summary>
              Looks up a localized string similar to Change a material property.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MergeBolts">
            <summary>
              Looks up a localized string similar to Merge bolts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ModifyNoteCommandName">
            <summary>
              Looks up a localized string similar to Modify note.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ModifyTableRowCommandName">
            <summary>
              Looks up a localized string similar to Modify table row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.MoveContactGroupPairsName">
            <summary>
              Looks up a localized string similar to Move contact group pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ParameterizePhysicsConditionCommandName">
            <summary>
              Looks up a localized string similar to Parameterize Physics Condition.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ParameterSweepsOutOfDateCommandName">
            <summary>
              Looks up a localized string similar to Mark Defined Variations Out Of Date.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.PhysicsSuppressionCommandName">
            <summary>
              Looks up a localized string similar to Suppress Physics.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.PhysicsUnsuppressionCommandName">
            <summary>
              Looks up a localized string similar to Unsuppress Physics.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RefreshGlobalFidelitySettingsCommandName">
            <summary>
              Looks up a localized string similar to Refresh global fidelity settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveChartDataSeriesCommandName">
            <summary>
              Looks up a localized string similar to Remove Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveCommentCommandName">
            <summary>
              Looks up a localized string similar to Remove comment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveCommentLocationReferenceCommandName">
            <summary>
              Looks up a localized string similar to Remove comment location reference.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveCommentThreadCommandName">
            <summary>
              Looks up a localized string similar to Remove comment thread.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveDrivingDimensionColumnCommandName">
            <summary>
              Looks up a localized string similar to Remove Driving Dimension Column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveNoteCommandName">
            <summary>
              Looks up a localized string similar to Remove note.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveNoteLocationReferenceCommandName">
            <summary>
              Looks up a localized string similar to Remove note location reference.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveParametersForConditionCommandName">
            <summary>
              Looks up a localized string similar to Remove Physics Parameters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemovePhysicsParameterColumnCommandName">
            <summary>
              Looks up a localized string similar to Remove Physics Parameter Column.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemovePhysicsParameterCommandName">
            <summary>
              Looks up a localized string similar to Remove Physics Parameter.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemovePhysicsRegionCommandName">
            <summary>
              Looks up a localized string similar to Remove phyiscs region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveScriptParameterCommandName">
            <summary>
              Looks up a localized string similar to Remove Script Parameter.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveScriptParametersCommandName">
            <summary>
              Looks up a localized string similar to Remove Script Parameters.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RemoveTableRowCommandName">
            <summary>
              Looks up a localized string similar to Remove table row.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RenameParameterStudyRowCommandName">
            <summary>
              Looks up a localized string similar to Rename Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.RenameTestCaseRowCommandName">
            <summary>
              Looks up a localized string similar to Rename Test Case.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ResetPhysicsCommandName">
            <summary>
              Looks up a localized string similar to Reset Physics Command.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ResultsSuppressionCommandName">
            <summary>
              Looks up a localized string similar to Suppress Results.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ReverseDistributedForceDirectionCommandName">
            <summary>
              Looks up a localized string similar to Reverse Load Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ReverseHeatDirectionCommandName">
            <summary>
              Looks up a localized string similar to Reverse heat direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ReverseLoadDirectionCommandName">
            <summary>
              Looks up a localized string similar to Reverse Load Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ReverseTorqueForceDirectionCommandName">
            <summary>
              Looks up a localized string similar to Reverse Load Direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetBeamProfileNameCommandName">
            <summary>
              Looks up a localized string similar to Set beam profile name.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetBoltNameCommandName">
            <summary>
              Looks up a localized string similar to Set bolt name.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetConstantDrivingDimensionCommandName">
            <summary>
              Looks up a localized string similar to Update parameter values.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetConstantParameterCommandName">
            <summary>
              Looks up a localized string similar to Update parameter values.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetDefinedVariationCommandName">
            <summary>
              Looks up a localized string similar to Set Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetGlobalFidelityApproachSettingCommandName">
            <summary>
              Looks up a localized string similar to Set global fidelity approach setting.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetGlobalFidelityCustomMultiplierCommandName">
            <summary>
              Looks up a localized string similar to Set global fidelity custom multiplier.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetGlobalFidelitySizingMethodCommandName">
            <summary>
              Looks up a localized string similar to Set global fidelity sizing method.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetGlobalFidelityUsePredefinedSettingsCommandName">
            <summary>
              Looks up a localized string similar to Set whether Global Fidelity will use Predefined Settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetGlobalFidelityUserDefinedSettingsCommandName">
            <summary>
              Looks up a localized string similar to Set global fidelity user defined settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetNumberOfModesCommandName">
            <summary>
              Looks up a localized string similar to Set the number of frequency modes..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetResultSuppressionCommandName">
            <summary>
              Looks up a localized string similar to Apply result suppression.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetSelectedCaseCommandName">
            <summary>
              Looks up a localized string similar to Set Selected Test Case.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SetStarredDefinedVariation">
            <summary>
              Looks up a localized string similar to Set Starred Defined Variation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SmoothFacetedBodyCommandName">
            <summary>
              Looks up a localized string similar to Smooth faceted body.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SolveExploreCommandName">
            <summary>
              Looks up a localized string similar to Start Solver in Explore Mode.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.SuppressCondition">
            <summary>
              Looks up a localized string similar to Suppress {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleAccelerationDegreesOfFreedomComponentCommandName">
            <summary>
              Looks up a localized string similar to Toggle Acceleration Degrees Of Freedom Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleCompressibleFlowCommandName">
            <summary>
              Looks up a localized string similar to Toggle compressible flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleDisplacementDegreesOfFreedomComponentCommandName">
            <summary>
              Looks up a localized string similar to Toggle Displacement Degrees Of Freedom Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleModalPhysicsOff">
            <summary>
              Looks up a localized string similar to Natural Frequency off.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleModalPhysicsOn">
            <summary>
              Looks up a localized string similar to Natural Frequency on.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleSupportDegreesOfFreedomComponentCommandName">
            <summary>
              Looks up a localized string similar to Toggle Support Degrees Of Freedom Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleThermalEffectsCommandName">
            <summary>
              Looks up a localized string similar to Toggle thermal effects.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.ToggleVelocityDegreesOfFreedomComponentCommandName">
            <summary>
              Looks up a localized string similar to Toggle Velocity Degrees Of Freedom Component.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.UnmergeBolts">
            <summary>
              Looks up a localized string similar to Split bolts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.UnsuppressCondition">
            <summary>
              Looks up a localized string similar to Unsuppress {0}.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.CommandStringResources.UpdateInsightFromCalculatorCommandName">
            <summary>
              Looks up a localized string similar to Update result insight.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.AllConditionsAreSuppressed">
            <summary>
              Looks up a localized string similar to All conditions applied to the simulation are suppressed..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.BeamCodeUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.BeamProfileUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.ChartGainLabelText">
            <summary>
              Looks up a localized string similar to Custom Gain.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.ChartLabelText">
            <summary>
              Looks up a localized string similar to Custom Chart.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultCompressibleFlowOperatingPressureLabel">
            <summary>
              Looks up a localized string similar to Operating Pressure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultConditionLabel">
            <summary>
              Looks up a localized string similar to default.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultConvectionLabel">
            <summary>
              Looks up a localized string similar to Convection (default).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultElectromagneticRegionLabel">
            <summary>
              Looks up a localized string similar to Electromagnetic Region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultExtractedBeamProfileName">
            <summary>
              Looks up a localized string similar to Extracted Beam.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultInitialBodyTempFluidLabel">
            <summary>
              Looks up a localized string similar to Fluid Initial Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultInitialBodyTempLabel">
            <summary>
              Looks up a localized string similar to Initial Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultTemperatureLabel">
            <summary>
              Looks up a localized string similar to Body Temperature (default).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DefaultWallLabel">
            <summary>
              Looks up a localized string similar to Wall (default).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DirectionCannotBeZero">
            <summary>
              Looks up a localized string similar to Direction cannot be zero..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.DiscoveryExportFileFilter">
            <summary>
              Looks up a localized string similar to Discovery Export Files (*.dscodat)|*.dscodat.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.EditedMaterialLabel">
            <summary>
              Looks up a localized string similar to Edited.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.FluentExportFileFilter">
            <summary>
              Looks up a localized string similar to Fluent CAS File (*.cas.h5)|*.cas.h5.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.FrequencySweepText">
            <summary>
              Looks up a localized string similar to FrequencySweep.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.HFSSExportFileFilter">
            <summary>
              Looks up a localized string similar to Electronics Desktop Import File (*.aedti)|*.aedti.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.ImportedMaterialLabel">
            <summary>
              Looks up a localized string similar to Imported.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.InvalidLocationScopeText">
            <summary>
              Looks up a localized string similar to Cannot scope location to an invalid evaluation..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.InvalidMixedLocationScopeText">
            <summary>
              Looks up a localized string similar to Cannot scope location to mixed evaluation types..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialInvalidLocationTooltip">
            <summary>
              Looks up a localized string similar to This material has invalid locations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialMissingLocationTooltip">
            <summary>
              Looks up a localized string similar to This material is missing a location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableDensityColumnLabel">
            <summary>
              Looks up a localized string similar to Density.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableFrequencyColumnLabel">
            <summary>
              Looks up a localized string similar to Frequency.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTablePermittivityColumnLabel">
            <summary>
              Looks up a localized string similar to Permittivity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableSpecificHeatColumnLabel">
            <summary>
              Looks up a localized string similar to Specific Heat.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableTemperatureColumnLabel">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableThermalConductivityColumnLabel">
            <summary>
              Looks up a localized string similar to Thermal Conductivity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MaterialTableYoungsModulusColumnLabel">
            <summary>
              Looks up a localized string similar to Young&apos;s Modulus.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MultipleScriptGroupsDisabledResumeMessage">
            <summary>
              Looks up a localized string similar to Multiple embedded scripts were detected. Discovery supports one embedded script and has disabled all but one..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.MultipleScriptGroupsDisabledResumeTitle">
            <summary>
              Looks up a localized string similar to Multiple Script Groups Disabled.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.NotificationTemperatureError">
            <summary>
              Looks up a localized string similar to Enter a value above zero Kelvin in {0}..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.NotificationTemperatureInfoHigh">
            <summary>
              Looks up a localized string similar to Check the temperature in {0}, it is higher than in most simulations..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.NotificationTemperatureInfoLow">
            <summary>
              Looks up a localized string similar to Check the temperature in {0}, it is lower than in most simulations..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.NotificationTemperatureWarningHigh">
            <summary>
              Looks up a localized string similar to The entered temperature in {0} is hotter than the Sun, are you sure?.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OldDefaultConvectionLabel">
            <summary>
              Looks up a localized string similar to Default Convection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OldDefaultTemperatureLabel">
            <summary>
              Looks up a localized string similar to Default Body Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OldDefaultWallLabel">
            <summary>
              Looks up a localized string similar to Default Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimixationTargetFrequencyLabel">
            <summary>
              Looks up a localized string similar to Target frequency.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationAggressionLabel">
            <summary>
              Looks up a localized string similar to Aggressiveness.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationMaximumThicknessLabel">
            <summary>
              Looks up a localized string similar to Maximum thickness.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationMinimumThicknessLabel">
            <summary>
              Looks up a localized string similar to Minimum thickness.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationOverhangLabel">
            <summary>
              Looks up a localized string similar to Overhang prevention.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationPlateSurfaceLabel">
            <summary>
              Looks up a localized string similar to Table direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationProtectedDepthLabel">
            <summary>
              Looks up a localized string similar to Protected depth.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationPullDirectionBothSidesLabel">
            <summary>
              Looks up a localized string similar to Pull direction (bidirectional).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationPullDirectionLabel">
            <summary>
              Looks up a localized string similar to Pull direction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptimizationVolumeReductionLabel">
            <summary>
              Looks up a localized string similar to Volume reduction.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsLaminar">
            <summary>
              Looks up a localized string similar to Laminar.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsTurbulent_KE_Realizable">
            <summary>
              Looks up a localized string similar to Turbulent k-epsilon realizable.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsTurbulent_KE_Standard">
            <summary>
              Looks up a localized string similar to Turbulent k-epsilon standard.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsTurbulent_KO_SST">
            <summary>
              Looks up a localized string similar to Turbulent k-omega SST.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsTurbulent_KO_Standard">
            <summary>
              Looks up a localized string similar to Turbulent k-omega standard.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.OptionsTurbulent_SpalartAllmaras">
            <summary>
              Looks up a localized string similar to Turbulent Spalart-Allmaras.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.PhysicsRootLabel">
            <summary>
              Looks up a localized string similar to Physics.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.PhysicsRootWithSimulationNameLabel">
            <summary>
              Looks up a localized string similar to Physics ({0}).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.RemoteOriginLabel">
            <summary>
              Looks up a localized string similar to Remote.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationOptionsConductiveLossesBasedOnMaterial">
            <summary>
              Looks up a localized string similar to Based on materials.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationOptionsConductiveLossesPerfectElectric">
            <summary>
              Looks up a localized string similar to Ignored.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationOptionsSpecifyStopEngineering">
            <summary>
              Looks up a localized string similar to Engineering convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationOptionsSpecifyStopMonitors">
            <summary>
              Looks up a localized string similar to Monitored value convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationOptionsSpecifyStopNumerical">
            <summary>
              Looks up a localized string similar to Numerical convergence.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationUpdatedDuringResumeMessage">
            <summary>
              Looks up a localized string similar to Improvements in condition automation have caused one or more simulations to be marked as out-of-date to maintain setup and result continuity. Re-solve to continue working in this release and benefit from new capabilities or open this project in a previous release to view up-to-date results..
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.SimulationUpdatedDuringResumeTitle">
            <summary>
              Looks up a localized string similar to Simulation(s) Updated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.ToggleAutoUpdateAssignment">
            <summary>
              Looks up a localized string similar to Toggle Auto-Update Assignment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.TouchstoneExportFileFilter">
            <summary>
              Looks up a localized string similar to Touchstone 2 Format (*.ts)|*.ts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.UpdateScriptedLocation">
            <summary>
              Looks up a localized string similar to Update Script Location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.Resources.WatermarkString">
            <summary>
              Looks up a localized string similar to &lt;Value&gt;.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.Properties.EntityNameResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Acceleration">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.AccelerationGroupName">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.AccelerationPlural">
            <summary>
              Looks up a localized string similar to Acceleration.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.AddedMass">
            <summary>
              Looks up a localized string similar to Mass.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.AddedMassPlural">
            <summary>
              Looks up a localized string similar to Masses.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BallSupportGroupName">
            <summary>
              Looks up a localized string similar to Ball Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Beam">
            <summary>
              Looks up a localized string similar to Beam.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BeamAssignment">
            <summary>
              Looks up a localized string similar to Beam Assignment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BeamAssignmentGroupName">
            <summary>
              Looks up a localized string similar to Beam Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BeamAssignmentPlural">
            <summary>
              Looks up a localized string similar to Beam Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BeamGroupName">
            <summary>
              Looks up a localized string similar to Beams.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BeamPlural">
            <summary>
              Looks up a localized string similar to Beams.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BearingLoad">
            <summary>
              Looks up a localized string similar to Bearing Load.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BearingLoadGroupName">
            <summary>
              Looks up a localized string similar to Bearing Loads.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BearingLoadPlural">
            <summary>
              Looks up a localized string similar to Bearing Loads.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Bolt">
            <summary>
              Looks up a localized string similar to Bolt.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltAssignment">
            <summary>
              Looks up a localized string similar to Bolt Assignment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltAssignmentGroupName">
            <summary>
              Looks up a localized string similar to Bolt Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltAssignmentPlural">
            <summary>
              Looks up a localized string similar to Bolt Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltGroupName">
            <summary>
              Looks up a localized string similar to Bolts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPlural">
            <summary>
              Looks up a localized string similar to Bolts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPreload">
            <summary>
              Looks up a localized string similar to Bolt Preload.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPreloadGroupName">
            <summary>
              Looks up a localized string similar to Bolt Preloads.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPreloadPlural">
            <summary>
              Looks up a localized string similar to Bolt Preloads.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPreloadTypeAxial">
            <summary>
              Looks up a localized string similar to Axial.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BoltPreloadTypeLength">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.BondedContactGroupName">
            <summary>
              Looks up a localized string similar to Bonded Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CalculatedResult">
            <summary>
              Looks up a localized string similar to Calculated Result.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CalculatedResultPlural">
            <summary>
              Looks up a localized string similar to Calculated Results.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Chart">
            <summary>
              Looks up a localized string similar to Chart.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ChartGroupName">
            <summary>
              Looks up a localized string similar to Charts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ChartPlural">
            <summary>
              Looks up a localized string similar to Charts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CircuitPort">
            <summary>
              Looks up a localized string similar to Circuit Port.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CircuitPortGroupName">
            <summary>
              Looks up a localized string similar to Circuit Ports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CircuitPortPlural">
            <summary>
              Looks up a localized string similar to Circuit Ports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CombinedDisplacementGroupName">
            <summary>
              Looks up a localized string similar to Combined Displacements.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.CommonGroupName">
            <summary>
              Looks up a localized string similar to Common.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ConnectionsGroupName">
            <summary>
              Looks up a localized string similar to Connections.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Contact">
            <summary>
              Looks up a localized string similar to Contact.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactAutomatic">
            <summary>
              Looks up a localized string similar to Contacts (default).
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactBonded">
            <summary>
              Looks up a localized string similar to Bonded.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactFrictionless">
            <summary>
              Looks up a localized string similar to Frictionless.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactGroup">
            <summary>
              Looks up a localized string similar to Contact Group.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactGroupGroupName">
            <summary>
              Looks up a localized string similar to Contact Groups.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactGroupName">
            <summary>
              Looks up a localized string similar to Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactGroupPlural">
            <summary>
              Looks up a localized string similar to Contact Groups.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactPair">
            <summary>
              Looks up a localized string similar to Contact Pair.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactPairPlural">
            <summary>
              Looks up a localized string similar to Contact Pairs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactPlural">
            <summary>
              Looks up a localized string similar to Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactPrevented">
            <summary>
              Looks up a localized string similar to Prevented.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ContactSliding">
            <summary>
              Looks up a localized string similar to Sliding.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Convection">
            <summary>
              Looks up a localized string similar to Convection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ConvectionGroupName">
            <summary>
              Looks up a localized string similar to Convections.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ConvectionPlural">
            <summary>
              Looks up a localized string similar to Convections.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DataSeriesDefinition">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DataSeriesDefinitionGroupName">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DataSeriesDefinitionPlural">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultContactGroupName">
            <summary>
              Looks up a localized string similar to Default Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultFluidInterface">
            <summary>
              Looks up a localized string similar to Default Fluid Interface.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultFluidInterfacePlural">
            <summary>
              Looks up a localized string similar to Default Fluid Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultFluidWall">
            <summary>
              Looks up a localized string similar to Default Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultInterface">
            <summary>
              Looks up a localized string similar to Default Interface.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultInterfaceOptions">
            <summary>
              Looks up a localized string similar to Interface Detection Options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultInterfaceOptionsPlural">
            <summary>
              Looks up a localized string similar to Interface Detection Options.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultInterfacePlural">
            <summary>
              Looks up a localized string similar to Default Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultThermalCondition">
            <summary>
              Looks up a localized string similar to Default Convection Location.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultWall">
            <summary>
              Looks up a localized string similar to Default Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DefaultWallPlural">
            <summary>
              Looks up a localized string similar to Default Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacedSupportGroupName">
            <summary>
              Looks up a localized string similar to Displaced Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Displacement">
            <summary>
              Looks up a localized string similar to Displacement.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacementCombined">
            <summary>
              Looks up a localized string similar to Combined.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacementGroupName">
            <summary>
              Looks up a localized string similar to Displacements.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacementPlural">
            <summary>
              Looks up a localized string similar to Displacements.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacementRotation">
            <summary>
              Looks up a localized string similar to Rotational.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DisplacementTranslation">
            <summary>
              Looks up a localized string similar to Translational.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DualScopedDataSeriesDefinition">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DualScopedDataSeriesDefinitionGroupName">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.DualScopedDataSeriesDefinitionPlural">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ElectromagneticRegion">
            <summary>
              Looks up a localized string similar to Electromagnetic Region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ElectromagneticRegionGroupName">
            <summary>
              Looks up a localized string similar to Electromagnetic Regions.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ElectromagneticRegionPlural">
            <summary>
              Looks up a localized string similar to Electromagnetic Regions.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ElectromagneticsGroupName">
            <summary>
              Looks up a localized string similar to Electromagnetics.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.EntityCopy">
            <summary>
              Looks up a localized string similar to copy.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FactorOfSafetyResultsInsight">
            <summary>
              Looks up a localized string similar to Factor Of Safety.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FactorOfSafetyResultsInsightPlural">
            <summary>
              Looks up a localized string similar to Factor Of Safety.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FidelityAdjustmentGroupName">
            <summary>
              Looks up a localized string similar to Fidelity Adjustments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FidelityAdjustmentSetting">
            <summary>
              Looks up a localized string similar to Fidelity Adjustment Setting.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FidelityAdjustmentSettingPlural">
            <summary>
              Looks up a localized string similar to Fidelity Adjustment Settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FixedJointGroupName">
            <summary>
              Looks up a localized string similar to Fixed Joints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FixedSupportGroupName">
            <summary>
              Looks up a localized string similar to Fixed Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Flow">
            <summary>
              Looks up a localized string similar to Flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowGroupName">
            <summary>
              Looks up a localized string similar to Flows.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowInlet">
            <summary>
              Looks up a localized string similar to Inlet.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowInletGroupName">
            <summary>
              Looks up a localized string similar to Flow Inlets.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowOutlet">
            <summary>
              Looks up a localized string similar to Outlet.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowOutletGroupName">
            <summary>
              Looks up a localized string similar to Flow Outlets.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FlowPlural">
            <summary>
              Looks up a localized string similar to Flows.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidFlowGroupName">
            <summary>
              Looks up a localized string similar to Fluid Flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidFluidInterfacesGroupName">
            <summary>
              Looks up a localized string similar to Fluid-Fluid Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidInterface">
            <summary>
              Looks up a localized string similar to Fluid Interface.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidMaterialGroupName">
            <summary>
              Looks up a localized string similar to Fluid Materials.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidPressure">
            <summary>
              Looks up a localized string similar to Compressible Flow Operating Pressure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidPressurePlural">
            <summary>
              Looks up a localized string similar to Compressible Flow Operating Pressures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidSolidInterfacesGroupName">
            <summary>
              Looks up a localized string similar to Fluid-Solid Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidTemperature">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidTemperaturePlural">
            <summary>
              Looks up a localized string similar to Temperatures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidThermalWall">
            <summary>
              Looks up a localized string similar to Conducting Non-Slip Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FluidWall">
            <summary>
              Looks up a localized string similar to Non-Slip Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Force">
            <summary>
              Looks up a localized string similar to Force.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ForceDistributed">
            <summary>
              Looks up a localized string similar to Distributed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ForceGroupName">
            <summary>
              Looks up a localized string similar to Forces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ForcePlural">
            <summary>
              Looks up a localized string similar to Forces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ForceTorque">
            <summary>
              Looks up a localized string similar to Torque.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FreeSlipWallGroupName">
            <summary>
              Looks up a localized string similar to Free Slip Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.FrequencyModesTreeLabel">
            <summary>
              Looks up a localized string similar to Frequency Modes.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Gravity">
            <summary>
              Looks up a localized string similar to Gravity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.GravityPlural">
            <summary>
              Looks up a localized string similar to Gravities.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Heat">
            <summary>
              Looks up a localized string similar to Heat.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatGeneration">
            <summary>
              Looks up a localized string similar to Heat Generation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatGenerationPlural">
            <summary>
              Looks up a localized string similar to Heat Generations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatGroupName">
            <summary>
              Looks up a localized string similar to Heats.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatPlural">
            <summary>
              Looks up a localized string similar to Heat.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatTransfer">
            <summary>
              Looks up a localized string similar to Heat Transfer.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HeatTransferPlural">
            <summary>
              Looks up a localized string similar to Heat Transfers.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HingedJointGroupName">
            <summary>
              Looks up a localized string similar to Hinged Joints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.HingedSupportGroupName">
            <summary>
              Looks up a localized string similar to Hinged Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Insulated">
            <summary>
              Looks up a localized string similar to Insulated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.InsulatedGroupName">
            <summary>
              Looks up a localized string similar to Insulated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.InsulatedPlural">
            <summary>
              Looks up a localized string similar to Insulated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Joint">
            <summary>
              Looks up a localized string similar to Joint.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointCylindrical">
            <summary>
              Looks up a localized string similar to Cylindrical.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointFixed">
            <summary>
              Looks up a localized string similar to Fixed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointGeneral">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointGroupName">
            <summary>
              Looks up a localized string similar to Joints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointHinged">
            <summary>
              Looks up a localized string similar to Hinged.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointPlanar">
            <summary>
              Looks up a localized string similar to Planar.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointPlural">
            <summary>
              Looks up a localized string similar to Joints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointSlot">
            <summary>
              Looks up a localized string similar to Slot.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointSpherical">
            <summary>
              Looks up a localized string similar to Spherical.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointTranslational">
            <summary>
              Looks up a localized string similar to Translational.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.JointUniversal">
            <summary>
              Looks up a localized string similar to Universal.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ManualContactGroup">
            <summary>
              Looks up a localized string similar to Contact Group.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MassGroupName">
            <summary>
              Looks up a localized string similar to Masses.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MassMonitor">
            <summary>
              Looks up a localized string similar to Mass.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MassMonitorLabel">
            <summary>
              Looks up a localized string similar to Mass.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MassMonitorPlural">
            <summary>
              Looks up a localized string similar to Masses.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Material">
            <summary>
              Looks up a localized string similar to Material.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialAssignment">
            <summary>
              Looks up a localized string similar to Material Assignment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialAssignmentGroupName">
            <summary>
              Looks up a localized string similar to Material Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialAssignmentPlural">
            <summary>
              Looks up a localized string similar to Material Assignments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialGas">
            <summary>
              Looks up a localized string similar to Gas.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialIdealGas">
            <summary>
              Looks up a localized string similar to Ideal Gas.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialLiquid">
            <summary>
              Looks up a localized string similar to Liquid.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialPlural">
            <summary>
              Looks up a localized string similar to Materials.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialSolid">
            <summary>
              Looks up a localized string similar to Solid.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialTable">
            <summary>
              Looks up a localized string similar to Material Table.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MaterialTablePlural">
            <summary>
              Looks up a localized string similar to Material Tables.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ModalSettings">
            <summary>
              Looks up a localized string similar to Modal Settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ModalSettingsPlural">
            <summary>
              Looks up a localized string similar to Modal Settings.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ModePort">
            <summary>
              Looks up a localized string similar to Mode Port.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ModePortGroupName">
            <summary>
              Looks up a localized string similar to Mode Ports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ModePortPlural">
            <summary>
              Looks up a localized string similar to Mode Ports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Moment">
            <summary>
              Looks up a localized string similar to Moment.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MomentGroupName">
            <summary>
              Looks up a localized string similar to Moments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MomentPlural">
            <summary>
              Looks up a localized string similar to Moments.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Monitor">
            <summary>
              Looks up a localized string similar to Monitor.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.MonitorPlural">
            <summary>
              Looks up a localized string similar to Monitors.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.NonThermalInterface">
            <summary>
              Looks up a localized string similar to Non-thermal Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationConstraint">
            <summary>
              Looks up a localized string similar to Optimization Constraint.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationConstraintPlural">
            <summary>
              Looks up a localized string similar to Optimization Constraints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationOption">
            <summary>
              Looks up a localized string similar to Optimization.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationOptionPlural">
            <summary>
              Looks up a localized string similar to Optimizations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationProtectedDepth">
            <summary>
              Looks up a localized string similar to Protected Depth.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationProtectedDepthPlural">
            <summary>
              Looks up a localized string similar to Protected Depths.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.OptimizationProtectedGroupName">
            <summary>
              Looks up a localized string similar to Protected Depths.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PhysicsRegion">
            <summary>
              Looks up a localized string similar to Physics Region.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PhysicsRegionPlural">
            <summary>
              Looks up a localized string similar to Physics Regions.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Porous">
            <summary>
              Looks up a localized string similar to Porous.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PorousGroupName">
            <summary>
              Looks up a localized string similar to Porous.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PorousPlural">
            <summary>
              Looks up a localized string similar to Porous.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Pressure">
            <summary>
              Looks up a localized string similar to Pressure.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PressureDropResultsInsight">
            <summary>
              Looks up a localized string similar to Pressure Drop.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PressureDropResultsInsightPlural">
            <summary>
              Looks up a localized string similar to Pressure Drop.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PressureGroupName">
            <summary>
              Looks up a localized string similar to Pressures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PressurePlural">
            <summary>
              Looks up a localized string similar to Pressures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PreventedContactGroupName">
            <summary>
              Looks up a localized string similar to Prevented Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.PreventedInterfaceGroupName">
            <summary>
              Looks up a localized string similar to Prevented Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.QuantityDataSeriesDefinition">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.QuantityDataSeriesDefinitionGroupName">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.QuantityDataSeriesDefinitionPlural">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.RegionInterface">
            <summary>
              Looks up a localized string similar to Interface.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.RegionInterfacePlural">
            <summary>
              Looks up a localized string similar to Interfaces.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.RotatingWallGroupName">
            <summary>
              Looks up a localized string similar to Rotating Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.RotationDisplacementGroupName">
            <summary>
              Looks up a localized string similar to Rotation Displacements.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ScopedDataSeriesDefinition">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ScopedDataSeriesDefinitionGroupName">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ScopedDataSeriesDefinitionPlural">
            <summary>
              Looks up a localized string similar to Data Series.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Simulation">
            <summary>
              Looks up a localized string similar to Simulation.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationElectromagnetics">
            <summary>
              Looks up a localized string similar to Electromagnetics.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationFluid">
            <summary>
              Looks up a localized string similar to Fluid Flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationFluidThermal">
            <summary>
              Looks up a localized string similar to Thermal Fluid Flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationPlural">
            <summary>
              Looks up a localized string similar to Simulations.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationSolidThermal">
            <summary>
              Looks up a localized string similar to Solid Thermal.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationStructural">
            <summary>
              Looks up a localized string similar to Structural.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SimulationStructuralThermal">
            <summary>
              Looks up a localized string similar to Structural Thermal.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SlidingContactGroupName">
            <summary>
              Looks up a localized string similar to Sliding Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SlidingSupportGroupName">
            <summary>
              Looks up a localized string similar to Sliding Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SolidMaterialGroupName">
            <summary>
              Looks up a localized string similar to Solid Materials.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SolidTemperature">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SolidTemperaturePlural">
            <summary>
              Looks up a localized string similar to Temperatures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SolidThermalGroupName">
            <summary>
              Looks up a localized string similar to Solid Thermal.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SphericalJointGroupName">
            <summary>
              Looks up a localized string similar to Spherical Joints.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Spring">
            <summary>
              Looks up a localized string similar to Spring.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SpringGroupName">
            <summary>
              Looks up a localized string similar to Springs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SpringPlural">
            <summary>
              Looks up a localized string similar to Springs.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.StationaryWallGroupName">
            <summary>
              Looks up a localized string similar to Stationary Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.StructuralGroupName">
            <summary>
              Looks up a localized string similar to Structural.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Study">
            <summary>
              Looks up a localized string similar to Study.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.StudyPlural">
            <summary>
              Looks up a localized string similar to Studies.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Support">
            <summary>
              Looks up a localized string similar to Support.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportBall">
            <summary>
              Looks up a localized string similar to Ball.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportDisplaced">
            <summary>
              Looks up a localized string similar to Displaced.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportFixed">
            <summary>
              Looks up a localized string similar to Fixed.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportGroupName">
            <summary>
              Looks up a localized string similar to Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportHinged">
            <summary>
              Looks up a localized string similar to Hinged.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportPlural">
            <summary>
              Looks up a localized string similar to Supports.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportRoller">
            <summary>
              Looks up a localized string similar to Roller.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SupportSliding">
            <summary>
              Looks up a localized string similar to Sliding.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Symmetry">
            <summary>
              Looks up a localized string similar to Symmetry.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SymmetryGroupName">
            <summary>
              Looks up a localized string similar to Symmetry.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.SymmetryPlural">
            <summary>
              Looks up a localized string similar to Symmetry.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.TemperatureGroupName">
            <summary>
              Looks up a localized string similar to Temperatures.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ThermalInterface">
            <summary>
              Looks up a localized string similar to Thermal-To-Thermal Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.ThermalWall">
            <summary>
              Looks up a localized string similar to Thermal to No Physics Contacts.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.TranslatingWallGroupName">
            <summary>
              Looks up a localized string similar to Translating Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.TranslationDisplacementGroupName">
            <summary>
              Looks up a localized string similar to Translation Displacements.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Velocity">
            <summary>
              Looks up a localized string similar to Velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.VelocityGroupName">
            <summary>
              Looks up a localized string similar to Velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.VelocityPlural">
            <summary>
              Looks up a localized string similar to Velocity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.Wall">
            <summary>
              Looks up a localized string similar to Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallConvection">
            <summary>
              Looks up a localized string similar to Convection.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallExtents">
            <summary>
              Looks up a localized string similar to Extents.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallFreeSlip">
            <summary>
              Looks up a localized string similar to Free-Slip Wall.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallGroupName">
            <summary>
              Looks up a localized string similar to Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallHeatFlow">
            <summary>
              Looks up a localized string similar to Heat Flow.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallHeatFlux">
            <summary>
              Looks up a localized string similar to Heat Flux.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallInsulated">
            <summary>
              Looks up a localized string similar to Insulated.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallNoSlip">
            <summary>
              Looks up a localized string similar to No Slip.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallPlural">
            <summary>
              Looks up a localized string similar to Walls.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallRotating">
            <summary>
              Looks up a localized string similar to Rotating.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallStationary">
            <summary>
              Looks up a localized string similar to Stationary.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallTemperature">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.Properties.EntityNameResources.WallTranslating">
            <summary>
              Looks up a localized string similar to Translating.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.TopologyOptimization.OptimizationObjectiveType">
            <summary>
            Enum used for different topology objectives
            Summary above enum option states the solutions that
            will be created and passed into the optimizer
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.TopologyOptimization.ConstraintType">
            <summary>
            Needed to work on constraints defined in explore module
            but needed in physics module
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.EnumerableRulesBase`1.GetRule">
            <summary>
            GetRule method is blocked for EnumerableRuleBase
            </summary>
            <returns>InvalidOperationException</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.CompatibilityRulesCollection.Add(System.Predicate{Ansys.Disco.Core.DomainCore.IEntity},Ansys.Disco.Physics.Validity.CompatibilityRuleDelegate,Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <summary>
            Add a Compatibility rule to be executed when the given predicate and analysis type matches.
            </summary>
            <param name="predicate">The predicate</param>
            <param name="compatibilityRuleDelegate">The Compatibility rule delegate</param>
            <param name="physics">The physics type for the Compatibility rule</param>
            <param name="stage">The stage for the Compatibility rule</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.CompatibilityRulesCollection.Add(System.Predicate{Ansys.Disco.Core.DomainCore.IEntity},Ansys.Disco.Physics.Validity.CompatibilityRuleDelegate,Ansys.Disco.Physics.Validity.AnalysisType)">
            <summary>
            Add a Compatibility rule to be executed when the given predicate and analysis type matches.
            </summary>
            <param name="predicate">The predicate</param>
            <param name="compatibilityRuleDelegate">The Compatibility rule delegate</param>
            <param name="analysisType">The analysisType for the Compatibility rule</param>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.RulesBase`1.IsDefaultResult(Ansys.Disco.Core.DomainCore.IEntity)">
            <summary>
            Determines whether a given result definition is a default result scoped to the entire physics region (default bodies)
            </summary>
            <param name="resultDefinition">The result definition to test</param>
            <returns>True if the entity is a default result</returns>
        </member>
        <member name="P:Ansys.Disco.Physics.Validity.ValidityState.FullValidityMessage">
            <summary>
            Message with insert labels filled in.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.PreventSolve">
            <summary>
            A condition is such that solve can not continue without it being modified or removed.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.AllowSolveWithWarnings">
            <summary>
            Some aspects of a condition will be ignored or applied differently for the current stage
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.AllowSolve">
            <summary>
            The condition either passes all validity checks, or isn't going to be consumed for this
            the specified stage and will be completely ignored and thus we still permit solving.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.PreventAnalyzeSolve">
            <summary>
            Another Analyze Solve is running so prevent to start a solve.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.AllowSolveWithInformation">
            <summary>
            Some aspects of a condition will be ignored or applied differently for the current stage, but impact is likely to be benign
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.Validity.ValidityStatus.AllowSolveWithErrors">
            <summary>
            Case when Contact Controller is in UpdatePending and we have unconnected bodies
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.AnalysisType.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.AnalysisType.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.Validity.IValidityProvider">
            <summary>
            Interface for the validity provider, that allows validation of physics entities using rules.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.ValidateCurrentSimulation(Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationStatus(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationStatus(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationStatus(Ansys.Disco.Core.DomainCore.IEntity,Ansys.Disco.Physics.Validity.AnalysisType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationNotifications(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Physics.Validity.AnalysisType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationNotifications(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Core.DomainCore.IEntity,Ansys.Disco.Physics.Validity.AnalysisType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.HasValidNotificationErrors(Ansys.Disco.Physics.Entities.Simulations.SimulationEntity,Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.GetValidationTooltip(Ansys.Disco.Core.DomainCore.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.AddRule``1(Ansys.Disco.Physics.Validity.PhysicsValidityRule{``0},Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.AddRule``1(Ansys.Disco.Physics.Validity.EnumerablePhysicsValidityRule{``0},Ansys.Disco.Physics.Entities.Simulations.DiscoPhysics,Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityProvider.AddRuleForNonePhysics``1(Ansys.Disco.Physics.Validity.PhysicsValidityRule{``0},Ansys.Disco.Core.Stages.UserActivities)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Validity.ValidityRulesCollection.Add(System.Predicate{Ansys.Disco.Core.DomainCore.IEntity},Ansys.Disco.Physics.Validity.ValidityRuleDelegate,Ansys.Disco.Physics.Validity.AnalysisType,Ansys.Disco.Core.Diagnostics.InfernoOwner)">
            <summary>
            Add a validity rule to be executed when the given predicate and
            analysis type matches.
            </summary>
            <param name="predicate">
            The predicate.
            </param>
            <param name="validityRuleDelegate">
            The validity rule delegate.
            </param>
            <param name="analysisType">
            The analysisType for the validity rule.
            </param>
            <param name="owner">
            Where to assign execution cost to.
            </param>
        </member>
        <member name="T:Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction">
            <summary>
            Removes the ability to create nested SpaceClaim commands by checking
            if a transaction is in progress before creating a new transaction.
            Command is called without creating a new transaction if another
            transaction is in progress.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction.StartTransaction(SpaceClaim.Commands.ICommand)">
            <summary>
            Checks if we are inside of a SpaceClaim transaction to determine
            if a new transaction should be created or the command should be
            ran outside of a transaction.
            </summary>
            <param name="command">Command to be executed.</param>
            <returns>True if the command completed sucessfully.</returns>
            <remarks>If the command fails internally due to a CommandException, the changes will be rolled back and this method will return false. </remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.ISpaceClaimTransaction.StartTransaction(System.String,SpaceClaim.Task)">
            <summary>
            Checks if we are inside of a SpaceClaim transaction to determine
            if a new transaction should be created or the command should be
            ran outside of a transaction.
            </summary>
            <param name="name">Identifier given to the transaction.</param>
            <param name="task">Task for transaction to complete.</param>
        </member>
        <member name="T:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction"/> class.
            </summary>
            <remarks>Private constructor to fulfill singleton pattern requirements.</remarks>
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction.Instance">
            <summary>
            <see cref="T:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction"/> singleton instance.
            </summary>
            <returns>Returns the singleton instance of <see cref="T:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction"/>.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction.StartTransaction(System.String,SpaceClaim.Task)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.Transactions.SpaceClaimTransaction.StartTransaction(SpaceClaim.Commands.ICommand)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.PhysicsInitializer">
            <summary>
            Initializes and sets up the physics dependencies with the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/>
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsInitializer.Initialize(Microsoft.Practices.Unity.IUnityContainer,Ansys.Disco.Core.Environment.IEnvironmentContext)">
            <summary>
            Register all types
            </summary>
            <param name="container">Unity container</param>
            <param name="environment">The environment context</param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsInitializer.RegisterPersistence(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Carries out additional setup after modules have been initialized
            </summary>
            <param name="container">Unity container</param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsInitializer.RegisterPhysicsParameters(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Registers some classes related to the PhysicsParameters feature.
            </summary>
            <param name="container">
            The unity container from which to grab dependencies.
            </param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsInitializer.RegisterMiscellaneous(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            TODO: Some or all of these should be moved to the PhysicsModule
            Consider moving registration of tree-related types to Disco.Core or Disco.CoreUI
            </summary>
            <param name="container">The unity container</param>
        </member>
        <member name="M:Ansys.Disco.Physics.PhysicsInitializer.ApplyEnvironment(Ansys.Disco.Core.Environment.IEnvironmentContext)">
            <summary>
            Applies various application settings to the physics domain.
            </summary>
            <param name="environment">The application environment context with settings</param>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.IToolOptionBuilder.CreateQuantityComboBox(System.String,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean,System.String,System.String)">
            <summary>
            Creates an <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionNumericComboBoxViewModel"/> to display
            an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel"/>.
            </summary>
            <param name="id">
            Unique string id for the given quantity, used in commands to target
            correct combobox.
            </param>
            <param name="vm">The quantity viewmodel.</param>
            <param name="isDefined">
            If <paramref name="isDefined"/> is false, a watermark will be
            displayed instead of a value.
            </param>
            <param name="tooltipText">Text displayed by the tooltip.</param>
            <param name="guidedHelpKey">
            Debug information for tooltip footer.
            </param>
            <returns>
            A combobox viewmodel with events hooked up to change quantity values.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.IToolOptionBuilder.CreateButton(System.String,System.String,System.Action,System.String,System.String)">
            <summary>
            Provides some parameters when constructing a button viewmodel.
            </summary>
            <param name="id">
            Unique string id , used in command to target correct button.
            </param>
            <param name="imageKey"></param>
            <param name="selectedAction">
            Action performed when the button is selected.
            </param>
            <param name="guidedHelpKey"></param>
            <param name="name"></param>
            <returns>
            A new <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionButtonViewModel"/> with some key properties
            defined including registration of button command.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.IToolOptionBuilder.UpdateControl(Ansys.Toolkit.Wpf.ViewModels.Contracts.Options.IOptionNumericTextBoxViewModel,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean)">
            <summary>
            Updates some <paramref name="vm"/> properties.
            </summary>
            <param name="vm">The viewmodel being modified.</param>
            <param name="qvm">
            <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel"/> that provides updated unit
            abbreviation and value.
            </param>
            <param name="isDefined">
            Sets watermark visibility.
            </param>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel.Defined">
            <summary>
            Choose to display the value to the user, or leave it
            as blank for the user to fill in
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory">
            <summary>
            Classes that implement <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory" /> provide
            methods to create an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" />.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory.Build``1(``0,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel},System.Action{``0},System.Boolean)">
            <summary>
            Create an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" />.
            </summary>
            <param name="quantity">Strongly typed quantity.</param>
            <param name="availableUnits">
            List of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel" /> s available to the quantity and
            its view model.
            </param>
            <param name="quantityChanged">
            Used to update the quantity should any of its property change.
            </param>
            <param name="defined">
            Whether or not the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> is defined.
            </param>
            <typeparam name="TQuantity">
            Strongly typed <see cref="T:UnitsNet.IQuantity" /> enum.
            </typeparam>
            <returns>
            <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> for the given quantity.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory.Build``1(``0,System.Action{``0},System.Boolean,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <summary>
            Create an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> using default unit
            filtering.
            </summary>
            <param name="quantity">Strongly typed quantity.</param>
            <param name="quantityChanged">
            Used to update the quantity should any of its property change.
            </param>
            <param name="defined">
            Whether or not the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> is defined.
            </param>
            <param name="unitDisplayType">model or simulation units</param>
            <typeparam name="TQuantity">
            Strongly typed <see cref="T:UnitsNet.IQuantity" /> enum.
            </typeparam>
            <returns>
            <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> for the given quantity.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory.Build(UnitsNet.IQuantity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel},System.Action{UnitsNet.IQuantity},System.Boolean)">
            <summary>
            Create an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" />.
            </summary>
            <param name="quantity">The underlying quantity.</param>
            <param name="availableUnits">
            List of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel" /> s available to the quantity and
            its view model.
            </param>
            <param name="quantityChanged">
            Used to update the quantity should any of its properties change.
            </param>
            <param name="defined">
            Whether or not the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> is defined.
            </param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> for the given quantity.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModelFactory.Build(UnitsNet.IQuantity,System.Action{UnitsNet.IQuantity},System.Boolean,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <summary>
            Create an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> using default unit
            filtering.
            </summary>
            <param name="quantity">The underlying quantity.</param>
            <param name="quantityChanged">
            Used to update the quantity should any of its properties change.
            </param>
            <param name="defined">
            Whether or not the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> is defined.
            </param>
            <param name="unitDisplayType">Model or simulation units.</param>
            <returns>
            <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel" /> for the given quantity.
            </returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModel`1">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModel.SetQuantityValue(System.Double,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModelFactory">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModelFactory.Build``1(``0,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel},System.Action{``0},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModelFactory.Build``1(``0,System.Action{``0},System.Boolean,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModelFactory.Build(UnitsNet.IQuantity,System.Collections.Generic.IEnumerable{Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel},System.Action{UnitsNet.IQuantity},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityViewModelFactory.Build(UnitsNet.IQuantity,System.Action{UnitsNet.IQuantity},System.Boolean,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.IUnitViewModelListProvider">
            <summary>
            Filters units provided by UnitsNet given the <see cref="T:UnitsNet.QuantityInfo"/> and a list of accepted unit values.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.IUnitViewModelListProvider.PopulateUnits(UnitsNet.QuantityInfo,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <summary>
            Creates a list of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/>s based on the <see cref="T:UnitsNet.QuantityInfo"/> units.
            </summary>
            <param name="info"><see cref="T:UnitsNet.QuantityInfo"/> to determine which units to return.</param>
            <param name="unitDisplayType">Specify default for unit display type</param>
            <returns>List of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/>s based on the <see cref="T:UnitsNet.QuantityInfo"/> unit values.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.IUnitViewModelListProvider.PopulateUnits(UnitsNet.QuantityInfo,System.Collections.Generic.IList{System.String},Ansys.Disco.Physics.Units.UnitDisplayType)">
            <summary>
            Creates a list of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/>s that are filtered given the inclusiveFilterStrings parameter.
            The order of the filter is maintained.
            </summary>
            <param name="info"><see cref="T:UnitsNet.QuantityInfo"/> to determine which units to return.</param>
            <param name="inclusiveFilterStrings">List of units that are inclusively filtered.</param>
            <param name="unitDisplayType">Specify default for unit display type</param>
            <returns>Filtered list of <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/>s based on the inclusiveFilterStrings values.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.IUnitViewModelListProvider.TryGetDisplayUnitViewModel(UnitsNet.QuantityInfo,Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel@,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <summary>
            Given a <see cref="T:UnitsNet.QuantityInfo"/>, build the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/>
            for the display unit.
            </summary>
            <param name="quantityInfo">
            QuantityInfo, i.e. <see cref="P:UnitsNet.Length.Info"/>
            </param>
            <param name="displayUnitViewModel">
            Not <see langword="null"/> if successfully retrieved
            </param>
            <param name="unitDisplayType">
            UnitDisplayType, i.e. Simulation or Model
            </param>
            <returns>Whether or not value has been retrieved</returns>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModelListProvider">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModelListProvider.PopulateUnits(UnitsNet.QuantityInfo,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModelListProvider.PopulateUnits(UnitsNet.QuantityInfo,System.Collections.Generic.IList{System.String},Ansys.Disco.Physics.Units.UnitDisplayType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModelListProvider.TryGetDisplayUnitViewModel(UnitsNet.QuantityInfo,Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel@,Ansys.Disco.Physics.Units.UnitDisplayType)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters">
            <summary>
            Provides static list of strings that should be displayed for the given
            quantity type. Strings must match the UnitsNet enum values.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._accelerationUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Acceleration"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._angleUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Angle"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._coefficientOfThermalExpansionUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.CoefficientOfThermalExpansion"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._densityUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Density"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._dynamicViscosityUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.DynamicViscosity"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._electricPotentialUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.ElectricPotential"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._electricResistanceUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.ElectricResistance"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._forcePerLengthUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.ForcePerLength"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._forceUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Force"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._frequencyUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Frequency"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._heatFluxUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.HeatFlux"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._heatTransferCoefficientUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.HeatTransferCoefficient"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._lengthUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Length"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._massFlowUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.MassFlow"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._massUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Mass"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._powerDensityUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.PowerDensity"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._powerUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Power"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._pressureUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Pressure"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._ratioUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Ratio"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._rotationalSpeedUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.RotationalSpeed"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._rotationalStiffnessUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.RotationalStiffness"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._specificEntropyUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.SpecificEntropy"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._speedUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Speed"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._temperatureDeltaUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.TemperatureDelta"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._temperatureUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Temperature"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._thermalConductivityUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.ThermalConductivity"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._torqueUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Torque"/>.
            </summary>
        </member>
        <member name="F:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters._volumeUnits">
            <summary>
            Units to be displayed for <see cref="T:UnitsNet.Volume"/>.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitFilters.TryGetFilter(UnitsNet.QuantityInfo,System.Collections.Generic.IReadOnlyList{System.String}@)">
            <summary>
            Try to retrieve the filter given a <see cref="T:UnitsNet.QuantityInfo"/>.
            </summary>
            <param name="info">
            <see cref="T:UnitsNet.QuantityInfo"/> that required unit filtering.
            </param>
            <param name="filterList">
            Output list of string containing filtered units.
            </param>
            <returns>
            False if there is not filter entry for the given <see cref="T:UnitsNet.QuantityInfo"/>.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitHelper.ConvertValueToResultQuantity(System.Single,Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Converts a float to its default result quantity (in SI units).
            </summary>
            <param name="value">The float value we would like to convert.</param>
            <param name="resultVariable">The result variable to define unit for this value.</param>
            <returns>The float as an IQuantity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitHelper.GetDefaultUnit(Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Returns the default unit for the given result variable.
            </summary>
            <param name="resultVariable">The result variable to gather a unit for.</param>
            <returns>The default unit if found, otherwise null.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitHelper.ConvertValueToDisplayUnit(Ansys.Disco.Physics.Units.IUnitSystem,System.Single,Ansys.Disco.Core.Results.Types.ResultVariable)">
            <summary>
            Converts a float to its default result quantity (in SI units) to the display unit
            </summary>
            <param name="unitSystem">The unit system to convert to</param>
            <param name="value">The float value we would like to convert.</param>
            <param name="resultVariable">The result variable to define unit for this value.</param>
            <returns>The float as an IQuantity</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel"/> class.
            </summary>
            <param name="unitValue">UnitsNet unit enum.</param>
            <param name="displayUnit">String value to display for the unit, display unit acts as the "default unit".</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.Name">
            <summary>
            Unit enum value converted to string.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.Abbreviation">
            <summary>
            Default unit abbreviation, ex m/s, kN.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.DisplayUnit">
            <summary>
            Unit abbreviation that is to be displayed, default unit for quantity.
            </summary>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.EnumType">
            <summary>
            Unit type.
            </summary>
            <example>typeOf(ForceUnit.Newton), typeOf(LengthUnit.Meter)</example>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.Units.UnitViewModel.EnumObject">
            <summary>
            Unit object.
            </summary>
            <example>ForceUnit.Newton, LengthUnit.Meter</example>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs">
            <summary>
            Argument for a value change on a quantity text box
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs.#ctor(System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs" /> class.
            </summary>
            <param name="value">The value entered.</param>
            <param name="unitAbbreviation">The unit abbreviation entered.</param>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs.UnitAbbreviation">
            <summary>
            String representation of unit at given index.
            </summary>
            <remarks>
            <see cref="P:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs.UnitAbbreviation" /> can be <see langword="null" /> or
            empty.
            </remarks>
        </member>
        <member name="P:Ansys.Disco.Physics.ViewModel.Quantity.QuantityValueChangedArgs.Value">
            <summary>
            The value entered.
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.NumericValueChangedArgs">
            <summary>
            Argument for a value change on a numeric text box
            </summary>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.SelectedItemChangedArgs">
            <summary>
            Argument for a value change on a control that has a selectable items
            </summary>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuilders.CreateQuantityComboBox(System.String,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionNumericComboBoxViewModel"/> to display an <see cref="T:Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel"/>.
            </summary>
            <param name="id">Unique string id for the given quantity, used in commands to target correct combobox.</param>
            <param name="vm">The quantity viewmodel.</param>
            <param name="isDefined">If <paramref name="isDefined"/> is false, a watermark will be displayed instead of a value.</param>
            <param name="tooltipText">Text displayed by the tooltip.</param>
            <param name="guidedHelpKey">Debug information for tooltip footer.</param>
            <param name="watermarkText">Text displayed by the watermark.</param>
            <param name="useSimulationSignificantDigits">override Simulation Significant Digits.</param>
            <returns>A combobox viewmodel with events hooked up to change quantity values.</returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuilders.CreateAbsoluteQuantityComboBox(System.String,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionNumericComboBoxViewModel"/> which
            forces the value to be absolute.
            </summary>
            <param name="uniqueComboBoxId">
            Unique string id for the given quantity, used in commands to target
            correct combobox.
            </param>
            <param name="quantityViewModel">
            The quantity viewmodel which determines how the quantity will be
            handled.
            </param>
            <param name="isDefined">
            If <paramref name="isDefined"/> is <see langword="false"/>, a
            watermark will be displayed instead of a value.
            </param>
            <param name="tooltipText">Text displayed by the tooltip.</param>
            <param name="guidedHelpKey">
            Debug information for tooltip footer.
            </param>
            <returns>
            A <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionNumericComboBoxViewModel"/> with events hooked up
            to change quantity values where the value is absolute.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuilders.CreateToggleTextButton(System.String,System.String,System.Boolean,System.Action,System.String,System.Boolean,System.Nullable{System.Drawing.Color})">
            <summary>
            Creates an <see cref="T:Ansys.Toolkit.Wpf.ViewModels.Options.OptionToggleButtonViewModel"/> with some
            commonly defined properties.
            </summary>
            <param name="id">
            Unique command name to register the <paramref name="toggleAction"/>.
            </param>
            <param name="text">Text displayed in toggle button control.</param>
            <param name="isChecked">
            Sets the initial state of the toggle button, checked or not checked.
            </param>
            <param name="toggleAction">
            Action to be converted to a command and registered with the
            <see cref="T:Ansys.Disco.Core.Commands.ICommandRegistry"/>.
            </param>
            <param name="guidedHelpKey">Guided help tooltip text.</param>
            <param name="enabled">
            When <see langword="false"/>, button cannot be toggled.
            </param>
            <param name="color">image color to display for example for x/y/z coordinates</param>
            <returns>
            A toggle button with some default properties defined.
            </returns>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuildersAdapter.CreateButton(System.String,System.String,System.Action,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuildersAdapter.CreateListBox(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{Ansys.Disco.Physics.ViewModel.SelectedItemChangedArgs},System.String,Ansys.Toolkit.Wpf.ViewModels.Contracts.Options.OptionLayoutOrientation)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuildersAdapter.CreateQuantityComboBox(System.String,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuildersAdapter.UpdateControl(Ansys.Toolkit.Wpf.ViewModels.Contracts.Options.IOptionNumericTextBoxViewModel,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ansys.Disco.Physics.ViewModel.ToolOptionBuildersAdapter.CreateQuantityTextBox(System.String,Ansys.Disco.Physics.ViewModel.Quantity.IQuantityViewModel,System.Boolean,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ansys.Disco.Physics.ViewModel.ValueChangedArgs">
            <summary>
            Argument for a value change on a control
            </summary>
        </member>
        <member name="T:Ansys.Disco.UIModule.ViewModels.Sid.ParameterSweeps.ParametersTable.ConstantParameter">
            <summary>
            Some helper methods being shared across constant parameter commands.
            Acts as a layer between the domain and the commands where business logic
            has been placed.
            </summary>
        </member>
        <member name="M:Ansys.Disco.UIModule.ViewModels.Sid.ParameterSweeps.ParametersTable.ConstantParameter.ApplyCurrentRow(Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity)">
            <summary>
            Applies the values in the current row to the parameters of each
            column.
            </summary>
            <param name="parameterStudy">
            The <see cref="T:Ansys.Disco.Physics.Entities.ParameterSweeps.ParameterStudyEntity" /> whose current row is to be
            applied.
            </param>
            <remarks>
            If <paramref name="parameterStudy" /> is <see langword="null" /> or
            the current row does not exist this function returns silently.
            </remarks>
        </member>
        <member name="M:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor.#ctor(Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity,Ansys.Disco.Physics.Validity.ICompatibilityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor" /> class.
            </summary>
            <param name="insights">
            The <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IInsightsEntity" /> to retrieve results from.
            </param>
            <param name="compatibility">
            Checks whether a <see cref="T:Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity" /> is enabled or not.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="insights" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="compatibility" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor.GetMonitors">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor.HasResults(Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,Ansys.Disco.Core.Context.ResultSourceType)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor.TryGetLatestValue(Ansys.Disco.Physics.Entities.ParameterSweeps.MonitorColumnEntity,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation,UnitsNet.IQuantity@)">
            <inheritdoc />
        </member>
        <member name="M:Ansys.Disco.PhysicsModule.Commands.ParameterSweeps.SolveDefinedVariations.Implementation.Monitor.TryGetLatestValue(Ansys.Disco.Physics.Entities.Monitors.IMonitorEntity,Ansys.Disco.Core.Context.ResultSourceType,UnitsNet.IQuantity@,Ansys.Disco.Physics.Entities.ParameterSweeps.IVariation)">
            <inheritdoc />
        </member>
        <member name="T:Ansys.Disco.Core.SavedScenes.CreateSimulationSavedScenesUndoAction`1">
            <summary>
            This undoes the creation of saved scenes as the result of a simulation being recreated
            through undo/redo. The result is that the created scenes are all deleted.
            </summary>
            <typeparam name="TSavedSceneSettings">The type of the saved scene settings.</typeparam>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.CreateSimulationSavedScenesUndoAction`1.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneServiceCore{`0},System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Core.SavedScenes.CreateSimulationSavedScenesUndoAction`1"/> class.
            </summary>
            <param name="savedSceneService">Saved Scene Service.</param>
            <param name="createdSimulationId">The Id of the simulation being recreated.</param>
            <param name="saveMarker">The save marker this action restores to.</param>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.CreateSimulationSavedScenesUndoAction`1.Apply">
            <summary>
            Applies the Undo Action.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.CreateSimulationSavedScenesUndoAction`1.GetRedoAction">
            <summary>
            Returns the redo action.
            </summary>
            <returns>An IUndoAction that redoes the creation.</returns>
        </member>
        <member name="T:Ansys.Disco.Core.SavedScenes.DeleteSimulationSavedScenesUndoAction`1">
            <summary>
            This undoes the deletion of saved scenes as the result of a simulation being deleted.
            The result is that the deleted scenes are all restored.
            </summary>
            <typeparam name="TSavedSceneSettings">The type of the saved scene settings.</typeparam>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.DeleteSimulationSavedScenesUndoAction`1.#ctor(Ansys.Disco.Core.SavedScenes.ISavedSceneServiceCore{`0},System.Guid,System.Collections.Generic.IReadOnlyList{Ansys.Disco.Core.SavedScenes.ISavedScene{`0}},System.Guid)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ansys.Disco.Core.SavedScenes.DeleteSimulationSavedScenesUndoAction`1"/> class.
            </summary>
            <param name="savedSceneService">Saved Scene Service.</param>
            <param name="simulationId">The simulation being deleted.</param>
            <param name="deletedScenes">Scenes that were deleted.</param>
            <param name="saveMarker">The save marker this action restores to.</param>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.DeleteSimulationSavedScenesUndoAction`1.Apply">
            <summary>
            Applies the Undo Action.
            </summary>
        </member>
        <member name="M:Ansys.Disco.Core.SavedScenes.DeleteSimulationSavedScenesUndoAction`1.GetRedoAction">
            <summary>
            Returns the redo action.
            </summary>
            <returns>An IUndoAction that redoes the deletion.</returns>
        </member>
        <member name="T:Physics.Commands.Simulations.ChangeSimulationCommand">
            <summary>
            command to look after creating a simulation
            </summary>
        </member>
        <member name="P:Physics.Commands.Simulations.ChangeSimulationCommand.Name">
            <inheritdoc />
        </member>
        <member name="M:Physics.Commands.Simulations.ChangeSimulationCommand.Apply">
            <inheritdoc />
        </member>
    </members>
</doc>
